<!-- saved from url=(0016)http://localhost -->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="content-type" content="text/html" charset="UTF-8" />
    <!--<link rel="stylesheet" href="http://61.147.119.252:8088/jqwidgets/styles/jqx.base.css" />-->
    <style>
        /*Rounded Corners*/
/*top-left rounded Corners*/
.jqx-rc-tl
{
    -moz-border-radius-topleft: 3px;
    -webkit-border-top-left-radius: 3px;
    border-top-left-radius: 3px;
}
/*top-right rounded Corners*/
.jqx-rc-tr
{
    -moz-border-radius-topright: 3px;
    -webkit-border-top-right-radius: 3px;
    border-top-right-radius: 3px;
}
/*bottom-left rounded Corners*/
.jqx-rc-bl
{
    -moz-border-radius-bottomleft: 3px;
    -webkit-border-bottom-left-radius: 3px;
    border-bottom-left-radius: 3px;
}
/*bottom-right rounded Corners*/
.jqx-rc-br
{
    -moz-border-radius-bottomright: 3px;
    -webkit-border-bottom-right-radius: 3px;
    border-bottom-right-radius: 3px;
}
/*top rounded Corners*/
.jqx-rc-t
{
    -moz-border-radius-topleft: 3px;
    -webkit-border-top-left-radius: 3px;
    border-top-left-radius: 3px;
    -moz-border-radius-topright: 3px;
    -webkit-border-top-right-radius: 3px;
    border-top-right-radius: 3px;
}
/*bottom rounded Corners*/
.jqx-rc-b
{
    -moz-border-radius-bottomleft: 3px;
    -webkit-border-bottom-left-radius: 3px;
    border-bottom-left-radius: 3px;
    -moz-border-radius-bottomright: 3px;
    -webkit-border-bottom-right-radius: 3px;
    border-bottom-right-radius: 3px;
}
/*right rounded Corners*/
.jqx-rc-r
{
    -moz-border-radius-topright: 3px;
    -webkit-border-top-right-radius: 3px;
    border-top-right-radius: 3px;
    -moz-border-radius-bottomright: 3px;
    -webkit-border-bottom-right-radius: 3px;
    border-bottom-right-radius: 3px;
}
/*left rounded Corners*/
.jqx-rc-l
{
    -moz-border-radius-topleft: 3px;
    -webkit-border-top-left-radius: 3px;
    border-top-left-radius: 3px;
    -moz-border-radius-bottomleft: 3px;
    -webkit-border-bottom-left-radius: 3px;
    border-bottom-left-radius: 3px;
}
/*all rounded Corners*/
.jqx-rc-all
{
    -moz-border-radius: 3px;
    -webkit-border-radius: 3px;
    border-radius: 3px;
}
/*reset rounded corners*/
.jqx-rc-reset
{
    -moz-border-radius: 0px;
    -webkit-border-radius: 0px;
    border-radius: 0px;
}

/*Reset Style*/
.jqx-reset
{
    padding: 0;
    margin: 0;
    border: none;
    background: transparent;
    outline: none;
}

.jqx-position-reset {
    position: static !important; 
}
/*Disable browser selection*/
.jqx-disableselect
{
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -o-user-select: none;
    user-select: none;
    -ms-user-select:none;
    -webkit-touch-callout:none;
}
.jqx-hideborder
{
    border: none !important;
}
.jqx-hidescrollbars
{
    overflow: hidden !important;
}
/*jqxButton, jqxToggleButton, jqxRepeatButton Style*/
.jqx-button{outline: none; border: 1px solid transparent; padding: 3px; text-align: center; vertical-align: central; margin: 0 0 0 0; cursor: default; }
.jqx-buttongroup{}
.jqx-group-button-normal {
    vertical-align: middle;
    text-align: center;
}
/*applied to the link button's anchor element.*/
.jqx-link
{
    text-decoration: none;
    color: #111111;
}

/*shows elements.*/
.jqx-visible
{
    display: block;
}
/*hides elements.*/
.jqx-hidden
{
    display: none;
}
.jqx-widget, .jqx-widget-content, .jqx-widget-header, .jqx-fill-state-normal {
    line-height: 1.231;
}
/*jqxGauge Style*/
.jqx-gauge-label, .jqx-gauge-caption
{
    fill: #333333;
    color: #333333;
    font-size: 11px;
    font-family: Verdana;
}
/*jqxChart Style*/
.jqx-chart-axis-text,
.jqx-chart-label-text, 
.jqx-chart-tooltip-text, 
.jqx-chart-legend-text
{
    fill: #333333;
    color: #333333;
    font-size: 11px;
    font-family: Verdana;
}
.jqx-chart-axis-description
{
    fill: #555555;
    color: #555555;
    font-size: 11px;
    font-family: Verdana;
}
.jqx-chart-title-text
{
    fill: #111111;
    color: #111111;
    font-size: 14px;
    font-weight: bold;
    font-family: Verdana;
}
.jqx-chart-title-description
{
    fill: #111111;
    color: #111111;
    font-size: 12px;
    font-weight: normal;
    font-family: Verdana;
}

/*applied to the Grid's element.*/
.jqx-grid
{
    overflow: hidden;
    border-style: solid;
    border-width: 1px;
}
/*applied to the Pager.*/
.jqx-grid-pager
{
    border: none;
    border-top: 1px solid transparent;
}
/*applied to the Top Pager.*/
.jqx-grid-pager-top
{
    border: none;
    border-bottom: 1px solid transparent;
}
.jqx-grid-pager-number {
    color: inherit;
    padding: 2px 5px;
    text-decoration: none;
    margin: 1px;
    border: 1px solid transparent;
    *color: expression(this.parentNode.currentStyle['color']);     
    outline: none;
}
/*applied to the Grid's bottom-right area between the horizontal and vertical scrollbars.*/
.jqx-grid-bottomright
{
   
}
/*applied to the Grid's header area.*/
.jqx-grid-header 
{
    border-style: solid;
    border-width: 0px 0px 1px 0px;
    overflow: hidden;
    border-color: transparent;
    margin: 0px;
    padding: 0px;
 }
 /*applied to the columns.*/
.jqx-grid-column-header, .jqx-grid-columngroup-header {
    border-style: solid;
    border-width: 0px 1px 0px 0px;
    border-color: transparent;
    white-space: nowrap;
    border-style: solid;
    font-weight: normal;  
    overflow: hidden;
    text-align: left;
    padding: 0px;
    margin: 0px;
 }
.jqx-grid-column-header-rtl, .jqx-grid-columngroup-header-rtl {
    border-width: 0px 0px 0px 1px;
}
.jqx-grid-columngroup-header {
    border-bottom-width: 1px;
    border-left-width: 1px;
}
 /*applied to the column's button.*/
 .jqx-grid-column-menubutton {
    border-style: solid;
    border-width: 0px 0px 0px 1px;
    border-color: transparent;
    background-image: url('images/menubutton.png');
    background-repeat: no-repeat;
    background-position: center;
    cursor: pointer;
 }
.jqx-grid-column-menubutton-rtl {
    border-width: 0px 1px 0px 0px;
}
 /*applied to the column's sort button when the sort order is ascending.*/
 .jqx-grid-column-sortascbutton {
    border: none;
    background-image: url('images/sortascbutton.png');
    background-repeat: no-repeat;
    background-position: center;
    cursor: pointer;
 }
 /*applied to the column's sort button when the sort order is descending.*/
  .jqx-grid-column-sortdescbutton {
    border: none;
    background-image: url('images/sortdescbutton.png');
    background-repeat: no-repeat;
    background-position: center;
    cursor: pointer;
 }
  /*applied to the column's filter button.*/
  .jqx-grid-column-filterbutton
 {
    border: none;
    background-image: url('images/filter.png');
    background-repeat: no-repeat;
    background-position: center;
 }
  /*applied to the column's resize line.*/
 .jqx-grid-column-resizeline {
   border-right: 1px dotted #555; 
 }
 /*applied to the validation popup during cell editing.*/
 .jqx-grid-validation
 {
    background: #df2227;
    color: #fff;
    padding: 4px 8px;
 }
  .jqx-grid-validation-arrow-up
 {
    background-image: url('images/red_arrow_up.png');
    background-repeat: no-repeat;
    background-position: center center;
 }
  .jqx-grid-validation-arrow-down
 {
    background-image: url('images/red_arrow_down.png');
    background-repeat: no-repeat;
    background-position: center center;
 }
  /*applied to the column's resize start line.*/
  .jqx-grid-column-resizestartline {
   border-right: 1px solid #444; 
 }
  /*applied to the sort ascending menu item in the Grid's Context Menu*/
 .jqx-grid-sortasc-icon
 {
    background-image: url('images/sortasc.png');
    background-repeat: no-repeat;
    background-position: left center;
    width: 16px;
    height: 16px;
    float: left;
    margin-left: -4px;
    margin-right: 4px;
 }
  /*applied to the sort ascending menu item in the Grid's Context Menu*/
 .jqx-grid-sortdesc-icon
 {
    background-image: url('images/sortdesc.png');
    background-repeat: no-repeat;
    background-position: left center;
    width: 16px;
    height: 16px;
    float: left;
    margin-left: -4px;
    margin-right: 4px;
 }
  /*applied to the grid menu's sort remove item/*/
 .jqx-grid-sortremove-icon
 {
    background-image: url('images/sortremove.png');
    background-repeat: no-repeat;
    background-position: left center;
    width: 16px;
    height: 16px;
    float: left;
    margin-left: -4px;
    margin-right: 4px;
 }
   /*applied to the grouping column's drag and drop item when the drop operation is allowed.*/
 .jqx-grid-drag-icon
 {
    background-image: url('images/drag.png');
    background-repeat: no-repeat;
    background-position: left center;
    width: 16px;
    height: 16px;
 }
   /*applied to the grouping column's drag and drop item when the drop operation is not allowed.*/
 .jqx-grid-dragcancel-icon
 {
    background-image: url('images/dragcancel.png');
    background-repeat: no-repeat;
    background-position: left center;
    width: 16px;
    height: 16px;
 }
 /*applied to the 'group by' menu item.*/
 .jqx-grid-groupby-icon
 {
    background-repeat: no-repeat;
    background-position: left center;
    width: 16px;
    height: 16px;
    float: left;
    margin-left: -4px;
    margin-right: 4px;
 }
/*applied to the column anchor tags.*/
 .jqx-grid-column-header a:link, .jqx-grid-column-header a:visited
 {
    display: block;
    margin: 4px;
    height: 18px;
    line-height: 18px !important;
    color: inherit;
    outline: 0 none;
    text-decoration: none;
    cursor: pointer;
}
.jqx-grid-toolbar a:link, .jqx-grid-toolbar a:visited {
    margin: 4px;
    height: 18px;
    line-height: 18px !important;
    color: inherit;
    outline: 0 none;
    text-decoration: none;
    cursor: pointer;
}
/*applied to the groups header area.*/
 .jqx-grid-groups-header, .jqx-grid-toolbar {
    border-style: solid;
    border-width: 0px 0px 1px 0px;
    border-color: #aaa;
    white-space: nowrap;
    overflow: hidden;
    text-align: left;
    padding: 0px;
    margin: 0px;
 }
/*applied to a grouping row.*/
 .jqx-grid-groups-row {
    font-weight:bold;
    white-space: nowrap;
    text-align: left;
    padding: 0px;
    top: 50%;
    margin-top: -8px;
 }
 /*applied to the row details.*/
 .jqx-grid-groups-row-details {
    font-weight: normal;
 }
 /*applied to a grouping column.*/
 .jqx-grid-group-column 
 {
    border: 1px solid transparent;
    white-space: nowrap;
    border-style: solid;
    font-weight: normal;  
    overflow: hidden;
    text-align: left;
    padding: 0px;
    margin: 0px;
 }
 /*applied to the lines between the group columns.*/
  .jqx-grid-group-column-line
 {
    background: #aaa;
 }
 /*applied to the drop line indicators displayed in the grouping header.*/
  .jqx-grid-group-drag-line
 {
    background: #80be09;
 }
 /*applied to the anchor tags inside a grouping column.*/
 .jqx-grid-group-column  a:link{
    display: block;
    margin: 4px;
    height: 18px;
    line-height: 18px !important;
    outline: 0 none;
    text-decoration: none;
    cursor: pointer;
    color: inherit;
    *color: expression(this.parentNode.currentStyle['color']);     
}
 .jqx-grid-group-column  a:visited{
    color: inherit;
    display: block;
    margin: 4px;
    height: 18px;
    line-height: 18px !important;
    outline: 0 none;
    text-decoration: none;
    cursor: pointer;
     *color: expression(this.parentNode.currentStyle['color']);    
}
/*applied to a grid cell*/
.jqx-grid-cell {
    border-style: solid;
    border-width: 0px 1px 1px 0px;
    margin-right: 1px;
    margin-bottom: 1px;
    border-color: transparent;  
    background: #fff;
    white-space: nowrap;
    font-weight: normal; 
    font-size: inherit;
    overflow: hidden; 
    position: absolute !important; 
    height: 100%; 
 }
/*applied to a grid cell that is part of a rows group.*/
 .jqx-grid-group-cell{ 
    overflow: hidden; 
    position: absolute !important; 
    height: 100%; 
    background: #fff;
 }
/*applied to the grid cells in the sort column*/
 .jqx-grid-cell-sort {
    background-color: #f0f0f0;
 }

 /*applied to the grid cells in the filter column*/
 .jqx-grid-cell-filter {
    background-color: #e6e6e6;
 }
 /*applied to the grid cells area.*/
.jqx-grid-content {
    border-style: solid;
    border-width: 0px 0px 0px 0px;
    border-color: transparent;
    white-space: nowrap;
    overflow: hidden;
 }
 /*applied to a grid cell that is part of a rows group.*/
.jqx-grid-group-cell, .jqx-grid-empty-cell {
    border-style: solid;
    border-width: 0px 0px 1px 0px;
    white-space: nowrap;
    font-weight: normal;   
 }
.jqx-widget .jqx-grid-cleared-cell, .jqx-grid-cleared-cell {
    border: transparent !important;
}
.jqx-grid-cell-wrap {white-space: normal;}

/*applied to a cell in jqxListView*/
.jqx-cell {
    min-height: 23px;
    padding: 3px;
    margin: 0;
    border-collapse: separate;
    border-spacing: 0px;
    overflow: hidden;
    text-overflow: ellipsis;
    border: 1px solid transparent;
    border-top-width: 0px;
    border-left-width: 0px;
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    white-space: normal;
}
.jqx-left-align {
    text-align: left;
}
.jqx-center-align {
    text-align: center;
}
.jqx-right-align {
    text-align: right;
}

.jqx-grid-table .jqx-grid-cell {
    position: static !important;
}
/*applied to the Grid's Table element.*/
.jqx-grid-table {
    table-layout: fixed;
    margin: 0px;
    padding: 0px;
    border-collapse: collapse;
    border-spacing: 0px;
    -webkit-overflow-scrolling: touch;
    border-bottom: 1px solid transparent;
    outline: none;
}
 /*applied to a grid cell that is part of a details row and grouping is enabled.*/
.jqx-grid-group-details-cell {

 }
 /*applied to a grid cell that is part of a details row.*/
.jqx-grid-details-cell {
    border-width: 0px 1px 0px 0px;
 }
  /*applied to a grid cell. Represents the alternating cell background.*/
.jqx-grid-cell-alt {
    background: #f9f9f9;  
 }
/*applied to a sorted and alternating grid cell*/
.jqx-grid-cell-sort-alt {
    background-color: #e5e5e5;
 }/*applied to a sorted and alternating grid cell*/
.jqx-grid-cell-filter-alt {
    background-color: #f0f0f0;
 }
  /*applied to a pinned grid cell.*/
.jqx-grid-cell-pinned {
    background-color: #e5e5e5;
 }
 /*applied to a pinned grid cell. Represents the alternating cell background.*/
.jqx-grid-cell-pinned-alt {
    background-color: #e5e5e5;
 }
 /*applied to a selected grid cell.*/
 .jqx-grid-cell-selected {
    border-left: 0px solid transparent;
 }
 .jqx-grid-cell-rtl {
    border-width: 0px 0px 1px 1px;
 }

  /*applied to the selection area.*/
 .jqx-grid-selectionarea {
    border: 1px solid transparent;
    opacity: 0.5;
    filter: alpha(opacity=50);
 }
 /*applied to a hovered grid cell.*/
 .jqx-grid-cell-hover {
    border-color: transparent;
 }
  /*applied to a grid cell when the grid is empty.*/
 .jqx-grid-empty-cell{ overflow: visible; border-bottom: none;}

 /*applied to the Grid when its loading the data.*/
 .jqx-grid-load
{
    padding-right: 0px;
    background-image: url(images/loader.gif);
    background-position: 50% 50%;
    background-repeat: no-repeat;  
    z-index: 9999;
}
/*applied to a group's collapse button.*/
.jqx-grid-group-collapse
{
    padding-right: 0px;
    background-image: url(images/icon-right.png);
    background-position: 50% 50%;
    background-repeat: no-repeat;
    cursor: pointer;
}
.jqx-grid-group-collapse-rtl
{
    padding-right: 0px;
    background-image: url(images/icon-left.png);
    background-position: 50% 50%;
    background-repeat: no-repeat;
    cursor: pointer;
}
/*applied to a group's expand button.*/
.jqx-grid-group-expand, .jqx-grid-group-expand-rtl
{
    padding-right: 0px;
    background-image: url(images/icon-down.png);
    background-position: 50% 50%;
    background-repeat: no-repeat;
    cursor: pointer;
}
/*jqxProgresBar Style*/
.jqx-progressbar
{
    overflow: hidden;
    outline: none;
    border: 1px solid transparent;
    height: 2em;
}
/*applied to the progressbar's value element*/
.jqx-progressbar-value
{
    outline: none;
    border: 0px solid transparent;
    height: 100%;
}
/*applied to the progress bar's vertical value element- when the widget's orientation is 'vertical'*/
.jqx-progressbar-value-vertical
{
    outline: none;
    border: 0px solid transparent;
    height: 100%;
    background: transparent;
}
/*applied to the progressbar's text element*/
.jqx-progressbar-text
{
    font-size: 10px;
    border: none;
}
/*applied to the progress bar when the widget is in disabled state*/
.jqx-progressbar-disabled
{
    outline: none;
    border: 1px solid transparent; 
    height: 2em;
}

/*jqxMenu Style*/
.jqx-menu
{
    border: 1px solid transparent;
    float: none;
    margin: 0px;
    height: 100%;
    padding: 0px;
    overflow: hidden;
    text-align: left;
}
.jqx-menu-dropdown-column
{
    float: left;
}
/*applied to the menu when it is horizontal. Sets the menu's background*/
.jqx-menu-horizontal
{
    margin: 0px;
    padding: 0px;
    overflow: hidden;
    text-align: center;
}
/*applied to the menu when it is vertical. Sets the menu's background*/
.jqx-menu-vertical
{
    text-align: left;
}
/*applied to the sub menu. Sets the sub menu's background*/
.jqx-menu-dropdown
{
    left: 100%;
    margin: 0px;
    padding: 0px;
    right: 0;
    overflow: hidden;
    display: none;
    float: none;
    width: 150px;
    border-style: solid;
    border-width: 1px;
    text-align: left;
    padding: 2px;
}
/*applied to the sub menu's ul elements.*/
.jqx-menu-dropdown ul
{
    left: 100%;
    margin: 0px;
    padding: 0px;
    right: 0;
    overflow: hidden;
    border: none;
}
/*applied to the menu's ul elements.*/
.jqx-menu ul
{
    left: 100%;
    margin: 0px;
    padding: 2px;
    right: 0;
    overflow: hidden;
    background-color: transparent;
    border: none;
}
/*applied to the menu's li elements.*/
.jqx-menu li, .jqx-menu-dropdown li
{
    line-height: 1.3 !important;
}
/*applied to the top level menu items.*/
.jqx-menu-item-top
{
    border: 1px solid transparent;
    text-indent: 0;
    list-style: none;
    padding: 4px 8px 4px 8px;
    left: 100%;
    overflow: hidden;
    color: inherit;
    right: 0;
    margin: 0px 1px 0px 1px;
    cursor: pointer;
}
/*applied to the sub menu items.*/
.jqx-menu-item
{
    text-indent: 0;
    list-style: none;
    padding: 4px 8px 4px 8px;
    margin: 1px 1px 1px 1px;
    float: none;
    overflow: hidden;
    left: 100%;
    color: inherit;
    right: 0;
    text-align: left;
    cursor: pointer;
    *color: expression(this.parentNode.currentStyle['color']);     
}
/*applied to a sub menu item when the mouse is over the item.*/
.jqx-menu-item-hover
{
    color: inherit;
    right: 0;
    list-style: none;
    margin: 1px 1px 1px 1px;
    left: 100%;
    padding: 4px 8px 4px 8px;
    text-align: left;
    cursor: pointer;
    *color: expression(this.parentNode.currentStyle['color']);     
}
/*applied to a top-level menu item when the mouse is over it.*/
.jqx-menu-item-top-hover
{
    color: inherit;
    right: 0;
    list-style: none;
    margin: 0px 1px 0px 1px;
    left: 100%;
    padding: 4px 8px 4px 8px;
    top: 50%;
    cursor: pointer;
    *color: expression(this.parentNode.currentStyle['color']);     
}
/*applied to a sub menu item when its sub menu is opened.*/
.jqx-menu-item-selected
{
    right: 0;
    list-style: none;
    margin: 1px 1px 1px 1px;
    left: 100%;
    padding: 4px 8px 4px 8px;
    text-align: left;
    cursor: pointer;
    *color: expression(this.parentNode.currentStyle['color']);     
}
/*applied to a disabled sub menu item.*/
.jqx-menu-item-disabled
{

}
/*applied to a top-level menu item when its sub menu is opened.*/
.jqx-menu-item-top-selected
{
    right: 0;
    list-style: none;
    margin: 0px 1px 0px 1px;
    left: 100%;
    padding: 4px 8px 4px 8px;
    cursor: pointer;
}
/*applied to the menu separator items.*/
.jqx-menu-item-separator
{
    text-indent: 0;
    background-color: #ddd;
    border: none;
    list-style: none;
    height: 1px;
    line-height:0 !important;
    padding: 0px;
    margin: 1px 2px 1px 2px;
    float: none;
    overflow: hidden;
    left: 100%;
    color: inherit;
    right: 0;
    font-size: 1px;
}
/*applied to a sub menu item when it has sub menu items. Displays right arrow icon.*/
.jqx-menu-item-arrow-right
{
    padding-right: 0px;
    margin-right: -8px;
    width: 17px;
    height: 15px;
    background-image: url(images/icon-right.png);
    background-position: 100% 50%;
    background-repeat: no-repeat;
}
/*applied to a sub menu item when it has sub menu items. Displays down arrow icon.*/
.jqx-menu-item-arrow-down
{
    padding-right: 0px;
    margin-right: -8px;
    width: 17px;
    height: 15px;
    background-image: url(images/icon-down.png);
    background-position: 100% 50%;
    background-repeat: no-repeat;
}
/*applied to a sub menu item when it has sub menu items. Displays up arrow icon.*/
.jqx-menu-item-arrow-up
{
    padding-right: 0px;
    margin-right: -8px;
    width: 17px;
    height: 15px;
    background-image: url(images/icon-up.png);
    background-position: 100% 50%;
    background-repeat: no-repeat;
}
/*applied to a sub menu item when it has sub menu items. Displays left arrow icon.*/
.jqx-menu-item-arrow-left
{
    padding-right: 0px;
    padding-left: 5px;
    width: 17px;
    height: 15px;
    background-image: url(images/icon-left.png);
    background-position: 0 50%;
    background-repeat: no-repeat;
}
/*applied to a sub menu item when it has sub menu items and its sub menu is opened. Displays right arrow icon.*/
.jqx-menu-item-arrow-right-selected
{
    padding-right: 0px;
    margin-right: -8px;
    width: 17px;
    height: 15px;
    background-image: url(images/icon-right.png);
    background-position: 100% 50%;
    background-repeat: no-repeat;
}
/*applied to a sub menu item when it has sub menu items and its sub menu is opened. Displays down arrow icon.*/
.jqx-menu-item-arrow-down-selected
{
    padding-right: 0px;
    margin-right: -8px;
    width: 17px;
    height: 15px;
    background-image: url(images/icon-down.png);
    background-position: 100% 50%;
    background-repeat: no-repeat;
}
/*applied to a sub menu item when it has sub menu items and its sub menu is opened. Displays up arrow icon.*/
.jqx-menu-item-arrow-up-selected
{
    padding-right: 0px;
    margin-right: -8px;
    width: 17px;
    height: 15px;
    background-image: url(images/icon-up.png);
    background-position: 100% 50%;
    background-repeat: no-repeat;
}
/*applied to a sub menu item when it has sub menu items and its sub menu is opened. Displays left arrow icon.*/
.jqx-menu-item-arrow-left-selected
{
    padding-right: 0px;
    padding-left: 5px;
    width: 17px;
    height: 15px;
    background-image: url(images/icon-left.png);
    background-position: 0 50%;
    background-repeat: no-repeat;
}
/*applied to a top-level menu item when it has sub menu items. Displays right arrow icon.*/
.jqx-menu-item-arrow-top-right
{
    padding-right: 0px;
    margin-right: -8px;
    width: 17px;
    height: 15px;
    background-image: url(images/icon-right.png);
    background-position: 100% 50%;
    background-repeat: no-repeat;
}
/*applied to a top-level menu item when it has sub menu items. Displays left arrow icon.*/
.jqx-menu-item-arrow-top-left
{
    padding-right: 0px;
    padding-left: 5px;
    width: 17px;
    height: 15px;
    background-image: url(images/icon-left.png);
    background-position: 0 50%;
    background-repeat: no-repeat;
}
/*applied to the anchor elements of a sub menu item.*/
.jqx-menu-item a:link, .jqx-menu-item a:visited
{
    border: none;
    background-color: transparent;
    outline: none;
    color: inherit;
    text-decoration: none;
    *color: expression(this.parentNode.currentStyle['color']);     
}
/*applied to the anchor elements of a sub menu item.*/
.jqx-menu-item a:hover
{
    text-decoration: none;
    color: inherit;
    outline: none;
    background-color: transparent;
    *color: expression(this.parentNode.currentStyle['color']);     
}

/*applied to the anchor elements of a top-level menu item.*/
.jqx-menu-item-top a:link
{
    border: none;
    background-color: transparent;
    outline: none;
    color: inherit;
    text-decoration: none;
    *color: expression(this.parentNode.currentStyle['color']);     
}
/*applied to the anchor elements of a top-level menu item.*/
.jqx-menu-item-top a:visited
{
    border: none;
    background-color: transparent;
    outline: none;
    color: inherit;
    text-decoration: none;
    *color: expression(this.parentNode.currentStyle['color']);     
}
/*applied to the anchor elements of a top-level menu item.*/
.jqx-menu-item-top a:hover
{
    text-decoration: none;
    color: inherit;
    outline: none;
    background-color: transparent;
    border: none;
    *color: expression(this.parentNode.currentStyle['color']);     
}
/*applied to the menu widget when it is disabled.*/
.jqx-menu-disabled
{
    cursor: default;
}
/*applied to the anchor elements of all disabled menu items.*/
.jqx-menu-disabled a:link
{
    cursor: default;
    text-decoration: none;
}
.jqx-menu-disabled a:visited
{
    cursor: default;
    text-decoration: none;
}
.jqx-menu-disabled a:hover
{
    cursor: default;
}
.jqx-menu-dropdown
{
    right: -1px;
}

/*jqxtree Style*/
.jqx-tree
{
    left: 100%;
    right: 0;
    float: none;
    margin: 0px;
    border-style: solid;
    border-width: 1px;
    padding: 0px;
    overflow: hidden;
    text-align: left;
    outline: none;
    white-space: nowrap;
    line-height: 14px !important;
}
/*applied to the jqxTree root UL element.*/
.jqx-tree-dropdown-root
{
    left: 100%;
    padding: 0px 5px 0px 5px;
    right: 0;
    display: block;
    float: none;
    background-color: transparent;
    border-style: solid;
    border-width: 0px;
    border-color: #fff;
    text-align: left;
    outline: none;
    white-space: nowrap;
    margin: 0px;
}
.jqx-tree-dropdown-root-rtl {
    padding: 0px 5px 0px 0px;
    text-align: right;
    float: right;
    margin: 0px;
}

/*applied to the jqxTree UL elements.*/
.jqx-tree-dropdown
{
    left: 100%;
    margin: 0px;
    padding: 0px 0px 0px 10px;
    right: 0;
     display: block;
    float: none;
    background-color: transparent;
    border-style: solid;
    border-width: 0px;
    border-color: transparent;
    text-align: left;
    outline: none;
}
.jqx-tree-dropdown-rtl {
   padding: 0px 0px 0px 0px;
   text-align: right;
}

/*applied to a tree item.*/
.jqx-tree-item
{
    text-indent: 0;
    list-style: none;
    padding: 3px;
    margin: 0px;
    float: none;
    overflow: hidden;
    left: 100%;
    right: 0;
    text-align: left;
    cursor: default;
    text-decoration: none;
}
/*applied to the jqxTree LI elements.*/
.jqx-tree-item-li
{
    text-indent: 0;
    background-color: transparent;
    border: 0px solid transparent;
    list-style: none;
    left: 100%; 
    right: 0;
    text-align: left;
    outline: none;
    margin: 0px;
    margin-top: 1px;
    padding: 0px;
}
/*applied to the last LI elements in an UL element.*/
.jqx-tree-item-u-last
{
    margin: 0px 0px 0px 0px;
}
/*applied to a tree item when the mouse is over the item.*/
.jqx-tree-item-hover
{
    color: inherit;
    right: 0;
    padding: 3px;
    margin: 0px;
    list-style: none;
    left: 100%;
    cursor: pointer;
    text-decoration: none;
}
/*applied to a tree item when the item is selected.*/
.jqx-tree-item-selected
{
    color: inherit;
    right: 0;
    padding: 3px;
    margin: 0px;
    list-style: none;
    left: 100%;
    cursor: pointer;
    text-decoration: none;
}
.jqx-tree-item-rtl {
    text-align: right;
}
.jqx-tree-item-li-rtl {
    text-align: right;
}
/*applied to the anchor element of a tree item.*/
.jqx-tree-item a:link, .jqx-tree-item a:visited
{
    text-indent: 0;
    background-color: transparent;
    border: 0px solid transparent;
    list-style: none;
    padding: 0px;
    margin: 0px;
    float: none;
    overflow: hidden;
    left: 100%;
    color: inherit;
    right: 0;
    text-align: left;
    cursor: pointer;
    text-decoration: none;
    outline: none;
}
.jqx-tree-item-selected, .jqx-tree-item-hover a:hover
{
    color: inherit;
}
.jqx-tree-item-selected, .jqx-tree-item-hover a:visited
{
    color: inherit;
}

/*applied to a tree item when the item is disabled.*/
.jqx-tree-item-disabled
{

}
/*applied to a tree item when it has sub items and is collapsed. Displays an arrow icon next to the item.*/
.jqx-tree-item-arrow-collapse, .jqx-tree-item-arrow-collapse-hover
{
    padding-right: 0px;
    width: 17px;
    height: 17px;
    background-image: url(images/icon-right.png);
    background-position: 100% 50%;
    background-repeat: no-repeat;
    cursor: pointer;
}
.jqx-tree-item-arrow-collapse-rtl, .jqx-tree-item-arrow-collapse-hover-rtl {
    background-image: url(images/icon-left.png);
}

/*applied to a tree item when it has sub items and is expanded. Displays an arrow icon next to the item.*/
.jqx-tree-item-arrow-expand, .jqx-tree-item-arrow-expand-hover
{
    padding-right: 0px;
    width: 17px;
    height: 17px;
    background-image: url(images/icon-down.png);
    background-position: 100% 50%;
    background-repeat: no-repeat;
    cursor: pointer;
}
/*applied to the tree when it is disabled.*/
.jqx-tree-disabled
{
    cursor: default;
}
/*applied to the anchor elements in a tree when it is disabled.*/
.jqx-tree-disabled a:link
{
    cursor: default;
    text-decoration: none;
}
.jqx-tree-disabled a:visited
{
    cursor: default;
    text-decoration: none;
}
.jqx-tree-disabled a:hover
{
    cursor: default;
}


/*jqxTabs*/
.jqx-tabs
{
    outline: none;
    margin: 0 0 0 0;
    padding: 0px;
    overflow: hidden;
    background: transparent;
    border: 1px solid transparent;
}
/*applied to the tab close button.*/
.jqx-tabs-close-button
{
    outline: none;
    background-image: url(images/close.png);
    cursor: pointer;
    margin: 0 0 0 0;
    padding: 0 0 0 0;
    position: relative;
    left: 5px;
}
/*applied to the tab close button when the tab is selected.*/
.jqx-tabs-close-button-selected
{
    outline: none;
    background-image: url(images/close.png);
    cursor: pointer;
    margin: 0 0 0 0;
    padding: 0 0 0 0;
}
/*applied to the tab close button when the mouse is over the tab.*/
.jqx-tabs-close-button-hover
{
    outline: none;
    background-image: url(images/close.png);
    cursor: pointer;
    margin: 0 0 0 0;
    padding: 0 0 0 0;
}
/*applied to the tab's left scroll arrow.*/
.jqx-tabs-arrow-left
{
    outline: none;
    position: relative;
    z-index: 15;
    float: left;
    cursor: pointer;
    margin: 0 0 0 0;
    padding: 0 0 0 0;
    background-image: url('images/icon-left.png');
    background-repeat: no-repeat;
    background-position: center;
}
/*applied to the tab's right scroll arrow.*/
.jqx-tabs-arrow-right
{
    outline: none;
    position: relative;
    z-index: 15;
    background-image: url('images/icon-right.png');
    background-repeat: no-repeat;
    background-position: center;
    float: left;
    cursor: pointer;
    margin: 0 0 0 0;
    padding: 0 0 0 0;
}
.jqx-tabs-arrow-background
{
    background: #eeeeee;
}
/*applied to the tab's title.*/
.jqx-tabs-title
{
    outline: none;
    display: block;
    cursor: pointer;
    white-space: nowrap;
    left: 100%;
    right: 0;
    text-indent: 0px;
    list-style: none;
    border: 1px solid transparent;
    margin: 0px 2px 0px 0px;
    overflow: hidden;
    z-index: 1;
    padding-left: 13px;
    padding-right: 13px;
    padding-bottom: 5px;
    padding-top: 5px;
    background: transparent;
    height: auto;
    position: relative; 
}
.jqx-tabs-title-bottom
{
}
.jqx-tabs-title a:link
{
    color: inherit;
    *color: expression(this.parentNode.currentStyle['color']);    
    text-decoration: none;
}
.jqx-tabs-title a:hover
{
    color: inherit;
    *color: expression(this.parentNode.currentStyle['color']);
    text-decoration: none;
}
.jqx-tabs-title a:active
{
    color: inherit;
    *color: expression(this.parentNode.currentStyle['color']);
    text-decoration: none;
}
.jqx-tabs-title a:visited
{
    color: inherit;
    *color: expression(this.parentNode.currentStyle['color']);
    text-decoration: none;
}
/*applied to the tab's title when the tab is selected and the jqxTab's position property is set to 'top' .*/
.jqx-tabs-title-selected-top
{
    z-index: 99;
    outline: none;
    border-top: 1px solid transparent;
    border-left: 1px solid transparent;
    border-right: 1px solid transparent;
    border-bottom: 1px solid #fff;
    background-color: #fff;
    padding-bottom: 7px;
}
/*applied to the tab's title when the tab is selected and the jqxTab's position property is set to 'bottom' .*/
.jqx-tabs-title-selected-bottom
{
    outline: none;
    border-top: 1px solid #fff;
    border-left: 1px solid transparent;
    border-right: 1px solid transparent;
    border-bottom: 1px solid transparent;
    padding-top: 7px;
    padding-bottom: 5px;
    margin-top: -2px;
    background-color: #fff;
}
/*applied to the tab's title when the tab is hovered and the jqxTab's position property is set to 'top' .*/
.jqx-tabs-title-hover-top
{
    outline: none;
    border: 1px solid transparent;    
    padding-bottom: 5px;
}
/*applied to the tab's title when the tab is hovered and the jqxTab's position property is set to 'bottom' .*/
.jqx-tabs-title-hover-bottom
{
    outline: none;
    border: 1px solid transparent;
    padding-top: 5px;
}
/*applied to the tab's title when the tab is disabled.*/
.jqx-tabs-title-disable
{
 
}
/*applied to the tab's header.*/
.jqx-tabs-header
{
    padding-left: 0px;
    padding-right: 0px;
    padding-top: 3px;
    padding-bottom: 1px;
    margin: 0px;
    border-top: 0px solid transparent;
    border-left: 0px solid transparent;
    border-right: 0px solid transparent;
    border-bottom: 1px solid #aaa;
    background: #eeeeee;
}
/*applied to the tab's header when the position is bottom.*/
.jqx-tabs-header-bottom
{
    padding-top: 1px;
    padding-bottom: 3px;
    border-top: 0px solid #aaa;
    border-left: 0px solid transparent;
    border-right: 0px solid transparent;
    border-bottom: 1px solid transparent;
}
/*applied to the tab's header when the tab is collapsed.*/
.jqx-tabs-header-collapsed
{
    border: 1px solid #aaa;
}
/*applied to the tab's header when the position is bottom and tab is collapsed.*/
.jqx-tabs-header-collapsed-bottom
{
    border: 1px solid #aaa;
}
.jqx-tabs-collapsed
{
    border: 0px solid transparent;
}
.jqx-tabs-collapsed-bottom
{
    border: 0px solid transparent;
}
/*applied to the tab's selection tracker container element.*/
.jqx-tabs-selection-tracker-container
{
    outline: none;
    position: relative;
    text-indent: 0px;
    margin: 0 0 0 0;
    padding: 0 0 0 0;
    width: 100%;
    background: transparent;
    height: 0px;
}
/*applied to the tab's selection tracker when the jqxTab's position property is set to 'top'.*/
.jqx-tabs-selection-tracker-top
{
    border-top: 1px solid transparent;
    border-left: 1px solid transparent;
    border-right: 1px solid transparent;
    padding-bottom: 2px;
    background-color: #fff;
    outline: none;
    position: absolute;
    z-index: 10;
}
/*applied to the tab's selection tracker when the jqxTab's position property is set to 'bottom'.*/
.jqx-tabs-selection-tracker-bottom
{
    border-left: 1px solid transparent;
    border-right: 1px solid transparent;
    border-bottom: 1px solid transparent;
    background-color: #fff;
    outline: none;
    position: absolute;
    z-index: 10;
    margin-top: -1px;
    padding-bottom: 2px;
}
/*applied to the tab's content element which represents a DIV element.*/
.jqx-tabs-content
{
    outline: none;
    border-bottom: 0px solid transparent;
    border-left: 0px solid transparent;
    border-right: 0px solid transparent;
    border-top: 0px solid transparent;
    text-align: left;
    clear: both;
}
.jqx-tabs-content-element
{
    height: 100%;
    overflow: auto;
}

/*jqxCheckBox*/
.jqx-checkbox
{
    text-align: left;
    border: none;
    outline: none;
    margin: 0 0 0 0;
    white-space: nowrap;
    text-overflow: ellipsis;
}
/*applied to the check box.*/
.jqx-checkbox-default
{
    text-align: left;
    float: left;
    padding: 0px;
    border: 1px solid transparent;
    outline: none;
    margin: 0px 3px 0px 3px;
}
/*applied to the check box when the mouse cursor is over it.*/
.jqx-checkbox-hover
{
    cursor: pointer;
    float: left;
    padding: 0px;
    border: 1px solid transparent;
    outline: none;
    margin: 0px 3px 0px 3px;
}
/*applied to the widget when it is disabled.*/
.jqx-checkbox-disabled
{
    cursor: default;
    background: transparent;
    padding: 0px;
    border: none;
    outline: none;
    margin: 0px 0px 0px 0px;
}
/*applied to the check box when the widget is disabled.*/
.jqx-checkbox-disabled-box
{
    float: left;
    padding: 0px;
    border: 1px solid transparent;
    outline: none;
    margin: 0px 3px 0px 3px;
}
/*applied to the check box when it is checked. Displays a check icon.*/
.jqx-checkbox-check-checked
{
    float: left;
    background: transparent url(images/check_black.png) center center no-repeat;
    padding: 0px;
    border: none;
    outline: none;
    margin: 0 0 0 0;
}
/*applied to the check box when the widget is disabled. Displays a disabled check icon.*/
.jqx-checkbox-check-disabled
{
    float: left;
    background: transparent url(images/check_disabled.png) center center no-repeat;
    padding: 0px;
    border: none;
    outline: none;
    margin: 0 0 0 0;
}
/*applied to the check box when its state is indeterminate.*/
.jqx-checkbox-check-indeterminate
{
    float: left;
    background: transparent url(images/check_indeterminate_black.png) center center no-repeat;
    padding: 0px;
    border: none;
    outline: none;
    margin: 0 0 0 0;
}
/*applied to the check box when its state is indeterminate and it is disabled.*/
.jqx-checkbox-check-indeterminate-disabled
{
    float: left;
    background: transparent url(images/check_indeterminate_disabled.png) center center no-repeat;
    padding: 0px;
    border: none;
    outline: none;
    margin: 0 0 0 0;
}
/*applied to the check box when its in rtl mode.*/
.jqx-checkbox-rtl {
    float: right;
}
/*jqxRadioButton*/
.jqx-radiobutton
{
    text-overflow: ellipsis;
    border: none;
    outline: none;
    margin: 0 0 0 0;
    white-space: nowrap;
}
/*applied to the radio button.*/
.jqx-radiobutton-default
{
    cursor: pointer;
    float: left;
    background: transparent url(images/roundbg_classic_normal.png) left center scroll repeat-x;
    padding: 0px;
    border: 1px solid transparent;
    outline: none;
    margin: 1px 3px 0px 3px;
    -moz-border-radius: 100%;
    -webkit-border-radius: 100%;
    border-radius: 100%;
}
/*applied to the radio button when the mouse is over it.*/
.jqx-radiobutton-hover
{
    cursor: pointer;
    float: left;
    background: transparent;
    padding: 0px;
    border: 1px solid transparent;
    outline: none;
    margin: 1px 3px 0px 3px;
    -moz-border-radius: 100%;
    -webkit-border-radius: 100%;
    border-radius: 100%;
}
/*applied to the radio button when it is disabled.*/
.jqx-radiobutton-disabled
{
    cursor: default;
}
/*applied to the radio button's radio icon when it is disabled.*/
.jqx-radiobutton-disabled-box
{
}
/*applied to the radio button when it is checked.*/
.jqx-radiobutton-check-checked
{
    float: left;
    background: transparent url(images/roundbg_check_black.png) left top no-repeat;
    padding: 0px;
    border: 1px solid transparent;
    outline: none;
    margin: 0 0 0 0;
    -moz-border-radius: 100%;
    -webkit-border-radius: 100%;
    border-radius: 100%;
    width: 7px; 
    height: 7px;
    margin-left: 2px;
    margin-top: 2px;
}
/*applied to the radio button when it is checked and disabled.*/
.jqx-radiobutton-check-disabled
{
}
/*applied to the radio button when it is in indeterminate state.*/
.jqx-radiobutton-check-indeterminate
{
    float: left;
    background: transparent url(images/roundbg_check_indeterminate.png) left top no-repeat;
    padding: 0px;
    border: none;
    outline: none;
    margin: 0 0 0 0;
    -moz-border-radius: 100%;
    -webkit-border-radius: 100%;
    border-radius: 100%; 
    width: 6px; 
    height: 6px;
    margin-left: 2px;
    margin-top: 2px;  
}
/*applied to the radio button when it is in indeterminate state and disabled.*/
.jqx-radiobutton-check-indeterminate-disabled
{
}
/*applied to the radio button when its in rtl mode.*/
.jqx-radiobutton-rtl {
    float: right;
}

/*jqxRating*/
.jqx-rating
{
    margin: 0px;
    padding: 0px;
    outline: none;
    overflow: hidden;
}
.jqx-rating-image
{
    border-width: 0px;
}
.jqx-rating-image-default
{
    margin: 0px;
    padding: 0px;
    outline: none;    
    background-color: transparent;
    background-repeat: no-repeat;
    cursor: pointer;
    background-image: url(images/star.png);
    overflow: hidden;
}
/*applied to the rating when it is hovered.*/
.jqx-rating-image-hover
{
    background-color: transparent;
    padding: 0px;
    background-repeat: no-repeat;
    cursor: pointer;
    background-image: url(images/star_hover.png);
    overflow: hidden;
}
/*applied to the rating when it is disabled.*/
.jqx-rating-image-backward
{
    background-color: transparent;
    padding: 0px;
    background-repeat: no-repeat;
    cursor: pointer;
    background-image: url(images/star_disabled.png);
    overflow: hidden;
}
/*jqxCalendar Style*/
.jqx-calendar
{
    border: 1px solid transparent;
    -webkit-appearance: none;
    overflow: hidden;
    outline: none;
    padding: 0px;
    margin: 0 0 0 0;
    cursor: default;
    border-collapse: separate;
}
.jqx-calendar td {
    padding-top: 0px;
    padding-bottom: 0px;
    border-collapse: separate;
    border-spacing: 1px;
}
.jqx-calendar table {
    margin: 0px;
    padding: 0px;
    border-collapse: separate;
    border-spacing: 1px;
}
/*applied to the calendar's row header. This header displays the week numbers.*/
.jqx-calendar-row-header
{
    outline: none;
    border: 0px solid #f2f2f2;
    padding: 0;
    margin: 0 0 0 0;
    cursor: default;
}
/*applied to the calendar's column. This header displays the day names.*/
.jqx-calendar-column-header
{
    outline: none;
    text-align: right;
    padding: 3px;
    border-top: none;
    border-bottom: 1px solid transparent;
    border-left: none;
    border-right: none;
    margin: 0 0 0 0;
    cursor: default;
}
/*applied to the calendar's top-left header. This header is displayed before the day names and above the week numbers.*/
.jqx-calendar-top-left-header
{
    outline: none;
    border: 0px solid #f2f2f2;
    margin: 0 0 0 0;
    cursor: default;
}
/*applied to the calendar's navigation buttons.*/
.jqx-calendar-title-navigation
{
    cursor: pointer;
    background-color: transparent; 
    margin: 0; 
    padding: 0; 
    border: none; 
    width: 25px;
    height: 25px;
}
/*applied to the month table*/
.jqx-calendar-month
{
    margin: 0; padding: 0;
    border: none;
    width: 100%; 
}
/*applied to the calendar's title content.*/
.jqx-calendar-title-content
{
    cursor: pointer;
}
/*applied to the calendar's navigation title.*/
.jqx-calendar-title-header
{
    border-left: none;
    border-top: none;
    border-right: none;
    border-bottom-width: 1px;
    border-bottom-style: solid;
    margin: 0 0 0 0;
}
.jqx-calendar-title-header td {
    padding-left: 0px;
    padding-right: 0px;
}
/*applied to the calendar's navigation title when the calendar is disabled.*/
.jqx-calendar-title-header-disabled
{   
    border-bottom-width: 1px;
    border-bottom-style:solid; 
    margin: 0 0 0 0;    
    border-left: 0px solid transparent;
    border-right: 0px solid transparent;
    border-top: 0px solid transparent;    
    
}
/*applied to a calendar cell.*/
.jqx-calendar-cell
{
    border: 1px solid transparent;
    margin: 0px;
    outline: none;
    text-align: center;
    padding: 1px;
    cursor: pointer;
    background-color: transparent;
}
.jqx-calendar-cell td
{
    padding: 0;
    margin: 0;
}
/*applied to a calendar cell in decade and year views.*/
.jqx-calendar-cell-decade, .jqx-calendar-cell-year {
   text-align: center;
 }

.jqx-calendar .jqx-fill-state-normal
{
    background: transparent;
    border: 1px solid transparent;
}

/*applied to a calendar cell when the cell is hidden. A cell can be hidden when the showOtherMonthDays property is false and the calendar hides the cells with dates from the other months*/
.jqx-calendar-cell-hidden
{
    margin: 0 0 0 0;
    visibility: hidden;
    cursor: default;
}
/*applied to a calendar cell when the cell's date is a weekend date.*/
.jqx-calendar-cell-weekend
{
    color: #898989;
    margin: 0 0 0 0;
    cursor: pointer;
}
/*applied to a calendar cell when the cell's date is a special date(holiday, vacation, birthay. See the SpecialDates demo).*/
.jqx-calendar-cell-specialDate
{
    color: #FF0000 !important;
    background-color: transparent;
    border: 1px solid #FFFFFF;
    margin: 0 0 0 0;
    cursor: pointer;
}
/*applied to a calendar cell when the cell's date is the today date.*/
.jqx-calendar-cell-today
{
    color: #898989;
    background-color: #ffffdb;
    border: 1px solid #fdc066;
    margin: 0 0 0 0;
    cursor: pointer;
}
/*applied to a calendar cell when the cell is hovered.*/
.jqx-calendar-cell-hover
{
    margin: 0 0 0 0;
    cursor: pointer;
}
/*applied to a calendar cell when the cell is selected.*/
.jqx-calendar-cell-selected
{
    margin: 0 0 0 0;
    cursor: pointer;
}
/*applied to a calendar cell when the cell's date represents a date from the previous or next month.*/
.jqx-calendar-cell-othermonth
{
    color: #898989;
    margin: 0 0 0 0;
    cursor: pointer;
}
/*applied to a calendar cell when the calendar is disabled.*/
.jqx-calendar-cell-disabled
{
    color: #ccc;
}
/*applied to a calendar cell when the cell is from the row header that displays the week numbers.*/
.jqx-calendar-row-cell
{
    outline: none;
    text-align: center;
    border: 1px solid transparent;
    margin: 0 0 0 0;
    cursor: default;
}
/*applied to a calendar cell when the cell is from the row header that displays the week numbers and the calendar is disabled.*/
.jqx-calendar-row-cell-disabled
{

}
.jqx-calendar-footer
{
    margin: 5px;
    color: inherit;
    font-size: 13px;
}

.jqx-calendar-title-container
{
    overflow: hidden;
}
/*applied to a calendar cell when the cell is from the column header that displays the day names.*/
.jqx-calendar-column-cell
{
    overflow: hidden;
    text-align: center;
    outline: none;
    font-weight: normal;
    padding: 1px;
    border: 1px solid transparent;
    margin: 0 0 0 0;
    cursor: default;
}
/*applied to a calendar cell when the cell is from the column header that displays the day names and the calendar is disabled.*/
.jqx-calendar-column-cell-disabled
{

}
/*applied to the calendar's cell area element.*/
.jqx-calendar-view
{
    -webkit-appearance: none;
    outline: none;
    padding: 0px;
    border: 0px solid #FFFFFF;
    margin: 0 0 0 0;
    cursor: default;
}

/*jqxExpander and jqxNavigationBar Style*/
.jqx-expander
{
}
/*applied to the Expander's header and content*/
.jqx-expander-header, .jqx-expander-content
{
    border-left-width: 1px;
    border-right-width: 1px;
    border-left-style: solid;
    border-right-style: solid;
    padding-top: 5px;
    padding-bottom: 5px;
    outline: 0;
}
/*applid to the content of the expander header.*/
.jqx-expander-header-content
{
    padding-left: 3px;
}
/*applid to the content of the expander header.*/
.jqx-expander-header-content-rtl
{
    padding-right: 3px;
}
 .jqx-expander-content{padding-top: 0px;padding-bottom:0px; overflow: auto; outline: 0;}
/*applied to the Expander's header and its content when it is on the top of the header*/
.jqx-expander-header, .jqx-expander-content-top
{
    border-top-width: 1px;
    border-top-style: solid;
}
/*applied to the Expander's header and its content when it is on the bottom of the header*/
.jqx-expander-header, .jqx-expander-content-bottom
{
    border-bottom-width: 1px;
    border-bottom-style: solid;
}
/*applied to the Expander's header*/
.jqx-expander-header
{
    cursor: pointer;
    overflow: hidden;
}
/*applied to the Expander's header when the expander is disabled or the toggleMode is "none"*/
.jqx-expander-header-disabled
{
    cursor: default;
}
/*applied to the Expander's arrow*/
.jqx-expander-arrow
{
    width: 17px;
    height: 17px;
    position: relative;
}
/*applied to the Expander's content if it is empty*/
.jqx-expander-content-empty
{
    border-width: 0px;
    padding: 0px;
}

/*applied to jqxNavigationBar. The NavigationBar internally uses jqxExpander's classes and inherits all header and content style settings from the Expander.*/
.jqx-navigationbar
{
    border: none;
    margin: 0px;
    -webkit-appearance: none;
    outline: none;
}
/*jqxPanel Style*/
.jqx-panel
{
    border: 1px solid transparent;
    -webkit-appearance: none;
    outline: none;
    padding: 0px;
    margin: 0px;
    cursor: default;
    overflow: hidden;
}
/*applied to the Panel's element displayed when the horizontal and vertical scrollbars are visible and the element is positioned below the vertical scrollbar and on the right
of the horizontal scrollbar.*/
.jqx-panel-bottomright
{
  
}
/*applied to the DropDownButton's Popup.*/
.jqx-dropdownbutton-popup {
   -webkit-appearance: none;
    outline: none;
    border: 1px solid transparent;
 }

.jqx-listbox
{
    -webkit-appearance: none;
    outline: none;
    border: 1px solid transparent;
    padding: 0px;
    margin: 0px;
    cursor: default;
    overflow: hidden;
}
/*applied to the ListBox's element displayed when the horizontal and vertical scrollbars are visible and the element is positioned below the vertical scrollbar and on the right
of the horizontal scrollbar.*/
.jqx-listbox-bottomright
{

}
/*applied to the ListBox's groups.*/
.jqx-listitem-state-group
{
    white-space: nowrap;
    padding: 4px 2px 4px 2px;
    background: transparent;
    font-weight: bold;
    text-align: left;
    outline: none;
    overflow: hidden;
    vertical-align: middle;
    cursor: default;
}
/*applied to a list item in default state.*/
.jqx-listitem-state-normal
{
    white-space: nowrap;
    padding: 3px;
    margin: 1px;
    border: 1px solid transparent;
    outline: none;
    visibility: inherit;
    display: inherit;
    text-align: left;
    overflow: hidden;
    position: absolute;
    left: 0;
    top: 0;
    cursor: default;
}
/*applied to a list item in hovered state.*/
.jqx-listitem-state-hover
{
    white-space: nowrap;
    background: transparent;
    padding: 3px 3px 2px 3px;
    margin: 1px;
    border: 1px solid transparent;
}
/*applied to a list item when the item is selected.*/
.jqx-listitem-state-selected
{
    white-space: nowrap;
    padding: 3px 3px 2px 3px;
    margin: 1px;
    border: 1px solid transparent;
}
.jqx-listbox-feedback
{
    height: 1px;
    border-top: 1px dashed #000;
}
.jqx-listitem-element
{
  -ms-touch-action: none;
  border: none; 
  width:100%; 
  height: 100%; 
  align:left; 
  valign:top; 
  position: absolute;
}

/*jqxComboBox Style*/
/*applied to the jqxComboBox's content which displays the text.*/
.jqx-combobox-content
{
    padding: 0px;
    overflow: hidden;
    padding-left: 0px;
    padding-top: 0px;
    padding-bottom: 0px;
    padding-right: 0px;
    margin: 0px;
    text-align: left;
    vertical-align: middle;
    white-space: nowrap;
    -webkit-appearance: none;
    outline: none;
    border: none;
    -moz-border-radius-topleft: 3px;
    -webkit-border-top-left-radius: 3px;
    border-top-left-radius: 3px;
    -moz-border-radius-bottomleft: 3px;
    -webkit-border-bottom-left-radius: 3px;
    border-bottom-left-radius: 3px;
    border-right: 1px solid transparent; 
    -moz-background-clip: padding; background-clip: padding-box; -webkit-background-clip: padding-box;    
}
.jqx-combobox-content-rtl {
    border: none;
    -moz-border-radius-topleft: 0px;
    -webkit-border-top-left-radius: 0px;
    border-top-left-radius: 0px;
    -moz-border-radius-bottomleft: 0px;
    -webkit-border-bottom-left-radius: 0px;
    border-bottom-left-radius: 0px;
     -moz-border-radius-topleft: 3px;
    -webkit-border-top-left-radius: 0px;
    border-top-right-radius: 3px;
    -moz-border-radius-bottomright: 3px;
    -webkit-border-bottom-right-radius: 0px;
    border-bottom-right-radius: 3px;
    border-right: none;
    border-left: 1px solid transparent; 
    -moz-background-clip: padding; background-clip: padding-box; -webkit-background-clip: padding-box;  
}
/*applied to the ComboBox's input field.*/
.jqx-combobox-input
{
    -webkit-appearance: none;
    -webkit-border-radius: 0px;
    padding: 0 0 0 0;
    outline: none;
    border: 0px solid #aaaaaa;
    -moz-background-clip: padding; background-clip: padding-box; -webkit-background-clip: padding-box;
}
.jqx-combobox-input::-ms-clear {
    display: none;
}
/*applied to the ComboBox's content when the widget is disabled.*/
.jqx-combobox-content-disabled
{
    color: #AAA;
}
/*applied to the ComboBox's arrow button.*/
.jqx-combobox-arrow-normal
{
    -webkit-appearance: none;
    outline: none;
    overflow: hidden;
    margin: 0 0 0 0;
    border: none;
    cursor: pointer;
}
/*applied to the ComboBox's arrow button when the mouse is over the button.*/
.jqx-combobox-arrow-hover
{
    -webkit-appearance: none;
    outline: none;
    overflow: hidden;
    margin: 0 0 0 0;
}
/*applied to the ComboBox's arrow button when the ComboBox's popup is opened.*/
.jqx-combobox-arrow-selected
{
    -webkit-appearance: none;
    outline: none;
    overflow: hidden;
    margin: 0 0 0 0;
}
/*applied to the ComboBox in normal state.*/
.jqx-combobox-state-normal
{
    -webkit-appearance: none;
    outline: none;
    border: 1px solid transparent;
    overflow: hidden;
    margin: 0 0 0 0;
}
/*applied to the ComboBox when the mouse is over the widget.*/
.jqx-combobox-state-hover
{
    overflow: hidden;
    border: 1px solid transparent;
    margin: 0 0 0 0;
}
/*applied to the ComboBox when the popup ListBox is shown.*/
.jqx-combobox-state-selected
{
    overflow: hidden;
    border: 1px solid transparent;
    margin: 0 0 0 0;
}
/*applied to the ComboBox when the widget is focused.*/
.jqx-combobox-state-focus
{
    border: 1px solid transparent;
}
.jqx-combobox-multi-item {
    padding: 1px 3px;
    margin: 2px;
    white-space: nowrap;
    border-style: solid;
    font-weight: normal;  
    overflow: hidden;
    text-align: left;

}
.jqx-combobox-multi-item a:link, .jqx-combobox-multi-item a:visited  {
    color: inherit;
    display: block;
    outline: 0 none;
    text-decoration: none;
    cursor: pointer;
    *color: expression(this.parentNode.currentStyle['color']);    
}
/*applied to the ComboBox when the widget is disabled.*/
.jqx-combobox-state-disabled
{
    white-space: nowrap;
    margin: 0px;
    color: #AAA;
}
/*jqxSelect Style*/
.jqx-select {
    overflow: hidden;
    padding-left: 3px;
    padding-top: 0px;
    padding-bottom: 0px;
    margin: 0px;
    -webkit-appearance: none;
    outline: 0 none;
}
.jqx-select-content {
    cursor: pointer;
    text-overflow: ellipsis;
}
.jqx-select-container {
    padding: 0;
}
.jqx-select-item
{
    padding: 3px;
    margin: 1px;
    white-space: normal !important; 
    cursor: default;
}
/*jqxDropDownList Style*/
/*applied to the dropdownlist's content element which displays the selected item's text or html.*/
.jqx-dropdownlist-content
{
    padding: 0px;
    overflow: hidden;
    padding-left: 3px;
    padding-top: 0px;
    padding-bottom: 0px;
    margin: 0px;
    text-align: left;
    vertical-align: middle;
    white-space: nowrap;
    -webkit-appearance: none;
    outline: 0 none;
    border: none;
}
.jqx-dropdownlist-content-rtl {
    padding-left: 0px;
    padding-right: 3px;
}

/*applied to the dropdownlist's content element which displays the selected item's text or html and the widget is disabled. */
.jqx-dropdownlist-content-disabled
{
}
/*applied to the dropdownlist in default state.*/
.jqx-dropdownlist-state-normal
{
    -webkit-appearance: none;
    outline: none;
    border: 1px solid transparent;
    overflow: hidden;
    margin: 0 0 0 0;
    cursor: pointer;
}
/*applied to the dropdownlist in hovered state.*/
.jqx-dropdownlist-state-hover
{
    overflow: hidden;
    border: 1px solid transparent;
    margin: 0 0 0 0;
    cursor: pointer;
}
/*applied to the dropdownlist in selected state.*/
.jqx-dropdownlist-state-selected
{ 
    overflow: hidden;
    background-color: transparent;
    border: 1px solid transparent;
    margin: 0 0 0 0;
    cursor: pointer;
}
/*applied to the dropdownlist in focused state.*/
.jqx-dropdownlist-state-focus
{
    border: 1px solid #909090;
}
/*applied to the dropdownlist in disabled state.*/
.jqx-dropdownlist-state-disabled
{

}
/*jqxScrollBar Style*/
.jqx-scrollbar
{
    background: transparent;
    margin: 0;
    padding: 0;
    border: none;
}
/*applied to the scrollbar in default state.*/
.jqx-scrollbar-state-normal
{
    background: #efefef;
    margin: 0px;
    padding: 0px;
    border: 1px solid transparent;
}
/*applied to the scrollbar buttons in default state.*/
.jqx-scrollbar-button-state-normal
{
    margin: 0px;
    padding: 0px;
    border: 1px solid transparent; 
}
/*applied to the scrollbar buttons in hovered state.*/
.jqx-scrollbar-button-state-hover
{
    margin: 0px;
    padding: 0px;
    border: 1px solid transparent;
}
/*applied to the scrollbar buttons in pressed state.*/
.jqx-scrollbar-button-state-pressed
{
    margin: 0px;
    padding: 0px;
    border: 1px solid transparent;
}
/*applied to the horizontal scrollbar thumb in default state.*/
.jqx-scrollbar-thumb-state-normal-horizontal
{
    margin: 0px;
    padding: 0px;
    background: transparent;
    border: 1px solid transparent;
}
/*applied to the horizontal scrollbar thumb in hovered state.*/
.jqx-scrollbar-thumb-state-hover-horizontal
{
    margin: 0px;
    padding: 0px;   
    border: 1px solid transparent;
}
/*applied to the horizontal scrollbar thumb in default state.*/
.jqx-scrollbar-thumb-state-pressed-horizontal
{
    margin: 0px;
    padding: 0px;
    border: 1px solid transparent;
}
/*applied to the vertical scrollbar thumb in default state.*/
.jqx-scrollbar-thumb-state-normal
{
    margin: 0px;
    padding: 0px;
    border: 1px solid transparent;
}
/*applied to the vertical scrollbar thumb in default state.*/
.jqx-scrollbar-thumb-state-hover
{
    margin: 0px;
    padding: 0px;
    background: transparent;
    border: 1px solid transparent;
}
/*applied to the vertical scrollbar thumb in default state.*/
.jqx-scrollbar-thumb-state-pressed
{
    margin: 0px;
    padding: 0px;
    background: #d1d1d1;
    border: 1px solid #909090;
}

/* jqxWindow */
.jqx-window
{
    position: absolute;
    overflow: hidden;
    border: 1px solid transparent;
}
/*applied to the jqxWindow when it’s disabled*/
.jqx-window-disabled
{
}
/*applied to the window’s header*/
.jqx-window-header
{
    outline: none;
    border-width: 0px;
    border-bottom: 1px solid transparent; 
    overflow: hidden;
    padding: 5px;
    height: auto;
    white-space: nowrap;
    overflow: hidden;  
}
/*applied to the window’s header when the window is disabled*/
.jqx-window-header-disabled
{

}
/*applied to the window’s content*/
.jqx-window-content
{
    outline: none;
    overflow: auto;
    text-align: left;
    background-color: transparent;
    padding: 5px;
    -webkit-background-clip: padding-box; background-clip: padding-box;
}
/*applied to the window’s content when the window is disabled*/
.jqx-window-content-disabled
{
    outline: none;
    overflow: auto;
    text-align: left;
    padding: 5px;
}
/*applied to the window’s close button*/
.jqx-window-close-button
{
    cursor: pointer;
    background-image: url(images/close.png);
    background-repeat: no-repeat;    
}
/*applied to the window's collapse button*/
.jqx-window-collapse-button
{
    background-image: url(images/icon-up.png);
    cursor: pointer;
}
/*applied to the window's collapse button when the window is collapsed*/
.jqx-window-collapse-button-collapsed
{
    cursor: pointer;
    background-image: url(images/icon-down.png);
}
/*setting styles of the modal window’s background*/
.jqx-window-modal
{
   background-color: Black;
}
.jqx-window-close-button-hover
{
}
.jqx-docking
{
    overflow: hidden;
}
.jqx-docking-panel
{
    margin: 0px;
    padding: 0px;
    min-height: 100px;
}
.jqx-docking-drop-indicator
{
    border-style: dashed;
    border-width: 1px;
    margin: 0px;
}
.jqx-docking-window
{
    margin: 0px;
}

/* jxSlider */
/* applied to jqxSlider widget */
.jqx-slider
{
    outline: none;
    clear: both;
}
/*applied to the ticks which can be in the top/bottom/both sides of the jqxSlider*/
.jqx-slider-tick
{
    border-left: 1px solid transparent;
    z-index: 9; 
}
/*applied to the ticks when the slider is in horizontal mode*/
.jqx-slider-tick-horizontal
{
    width: 1px;
    border-left: none;
    margin-top: 1px;
}
/*applied to the ticks when the slider is in vertical mode*/
.jqx-slider-tick-vertical
{
    height: 1px;
    border-top: none;
}
/*applied to the ticks container*/
.jqx-slider-tickscontainer
{
    z-index: 10;
    position: relative;
    margin-top: 0px;
    margin-bottom: 0px;
    z-index: 9;
}
/*applied to the jqxSlider thumb used for changing/indicating current value*/
.jqx-slider-slider
{
    cursor: pointer;
    width: 16px;
    height: 16px;
    z-index: 15;
    position: absolute;
    left: 0px;
    top: 0px;
    -moz-border-radius: 100%;
    -webkit-border-radius: 100%;
    border-radius: 100%;   
}
.jqx-slider-button
{
    -moz-border-radius: 100%;
    -webkit-border-radius: 100%;
    border-radius: 100%;    
}
/*applied to the slider's thumb when the slider is in horizontal mode*/
.jqx-slider-slider-horizontal
{   
    background-image: url(images/slider_horizontal_classic.png);
    background-repeat: no-repeat;
    margin-top: -5px;
    -moz-border-radius: 7px;
    -webkit-border-radius: 7px;
    border-radius: 7px;    
    border: 1px solid transparent;
}
/*applied to the slider's thumb when the slider is in vertical mode*/
.jqx-slider-slider-vertical
{
    margin-left: -5px;
    background-image: url(images/slider_vertical_classic.png);
    background-repeat: no-repeat;
    -moz-border-radius: 7px;
    -webkit-border-radius: 7px;
    border-radius: 7px;
    border: 1px solid transparent;
 }
/*applied to the track where is located the thumb*/
.jqx-slider-track
{
    height: 8px;
    float:left;
    position: relative;
    z-index: 20;
}
/*used in horizontal slider*/
.jqx-slider-track-horizontal
{
    height: 8px;
    margin-top: 2px;
}
/*used in vertical slider*/
.jqx-slider-track-vertical
{
    width: 8px;
}
/*applied to the div which is between the thumbs in a range slider or from beginning of the track to the current thumb position in the default slider*/
.jqx-slider-rangebar
{
 
}

/* jqxSplitter */
.jqx-splitter
{
    overflow: hidden;
    border: 1px solid transparent;
    position: relative;
}
/* Split bar's class when the jqxSplitter is with horizontal orientation */
.jqx-splitter-splitbar-vertical
{
    border: 1px solid transparent;
    border-top-width: 0px;
    border-bottom-width: 0px;
    cursor: e-resize;
    cursor: col-resize;
    position: absolute;
}
/* Split bar's mouse over state */
.jqx-splitter-splitbar-hover
{
    background-color: transparent;
}
/* Split bar's class when the jqxSplitter is with horizontal orientation. */
.jqx-splitter-splitbar-horizontal
{
    position: absolute;
    border: 1px solid transparent;
    border-left-width: 0px;
    border-right-width: 0px;   
    cursor: n-resize;
    cursor: row-resize;
}
/* This class is applied to the splitter when it's dragged to it's max left/right boundary */
.jqx-splitter-splitbar-invalid
{
   background: #FF0000 !important;
}
/* This class is added to split bar's collapse button when the splitter is with vectical orientation. */
.jqx-splitter-collapse-button-horizontal
{
    cursor: pointer;
    width: 45px;
    height: 5px;
}
/* This class is added to split bar's collapse button when the splitter is with horizontal orientation. */
.jqx-splitter-collapse-button-vertical
{
    cursor: pointer;
    width: 5px;
    height: 45px;
}
/* This class is added when the user disable the splitter. */
.jqx-splitter-splitbar-collapsed
{
    cursor: default;
}
/* Applied to the jqxSplitter panels. */
.jqx-splitter-panel
{
    border: none;
    outline: none;   
    position: absolute;
    overflow: hidden;
}
/* This class is added to a nested splitter.*/
.jqx-splitter-nested, .jqx-splitter-panel-nested
{
    border: none;
    overflow: hidden;
}
.jqx-draggable
{
    
}
.jqx-draggable-dragging
{
    border: 0px solid black;
}
.jqx-draggable-disabled
{
    cursor: default;
}
.jqx-validator-hint
{
    height: 18px;
    width: auto;
    display: inline-block;
    cursor: pointer;
    padding-left: 5px;
    padding-right: 5px;
    font-family: Verdana;
    font-size: 13px;
    border: 1px solid #6E0000;
    background-color: #942724;
    color: #fff;
    z-index: 99999;
    white-space: nowrap;
}
.jqx-validator-hint-arrow
{
    z-index: 99999;
    height: 9px;
    width: 9px;
    padding: 0px;
    margin: 0px;
    background-color: transparent;
    background-image: url(images/multi-arrow.gif);
}
.jqx-validator-error-label {
   color: #dd4b39;
   vertical-align:top;
   text-align: left;
   display: block;
   cursor: default;
   line-height: 17px;
 }
.jqx-validator-error-element {
   border-color: #dd4b39 !important;
}

.jqx-switchbutton
{
    overflow: hidden;
    -moz-border-radius: 5px; 
    -webkit-border-radius: 5px; 
    border-radius: 5px;
    border: 1px solid #ccc;
}
.jqx-switchbutton-thumb
{
    display: inline-block;
    cursor: pointer;
    border: 1px solid #ccc;
}
.jqx-switchbutton-label
{
    font-size: 15px;
    font-family: Sans-Serif;
    text-align: center;
    text-transform: uppercase;
    font-weight: bold;
}
.jqx-switchbutton-wrapper
{
}
.jqx-switchbutton-label-on
{
    
}
.jqx-switchbutton-label-off
{
    
}

/*left, right, up and down arrow icons.*/
.jqx-left-arrow
{
    background: transparent;
    background-image: url('left.png');
    cursor: pointer;
}
.jqx-right-arrow
{
    background: transparent;
    background-image: url('right.png');
    cursor: pointer;
}

.jqx-icon-arrow-up
{
    background-image: url('images/icon-up.png');
    background-repeat: no-repeat;
    background-position: center;
}
.jqx-icon-arrow-down
{
    background-image: url('images/icon-down.png');
    background-repeat: no-repeat;
    background-position: center;
}
.jqx-icon-arrow-left
{
    background-image: url('images/icon-left.png');
    background-repeat: no-repeat;
    background-position: center;
}
.jqx-icon-arrow-right
{
    background-image: url('images/icon-right.png');
    background-repeat: no-repeat;
    background-position: center;
}
.jqx-icon-arrow-first
{
    background-image: url('images/icon-first.png');
    background-repeat: no-repeat;
    background-position: center;
}
.jqx-icon-arrow-last
{
    background-image: url('images/icon-last.png');
    background-repeat: no-repeat;
    background-position: center;
}
.jqx-icon-arrow-up-hover
{
    background-image: url('images/icon-up.png');
    background-repeat: no-repeat;
    background-position: center;
}
.jqx-icon-arrow-down-hover
{
    background-image: url('images/icon-down.png');
    background-repeat: no-repeat;
    background-position: center;
}
.jqx-icon-arrow-left-hover
{
    background-image: url('images/icon-left.png');
    background-repeat: no-repeat;
    background-position: center;
}
.jqx-icon-arrow-right-hover
{
    background-image: url('images/icon-right.png');
    background-repeat: no-repeat;
    background-position: center;
}

.jqx-icon-arrow-up-selected
{
    background-image: url('images/icon-up.png');
    background-repeat: no-repeat;
    background-position: center;
}
.jqx-icon-arrow-down-selected
{
    background-image: url('images/icon-down.png');
    background-repeat: no-repeat;
    background-position: center;
}
.jqx-icon-arrow-left-selected
{
    background-image: url('images/icon-left.png');
    background-repeat: no-repeat;
    background-position: center;
}
.jqx-icon-arrow-right-selected
{
    background-image: url('images/icon-right.png');
    background-repeat: no-repeat;
    background-position: center;
}
.jqx-icon-close
{
    cursor: pointer;
    background-image: url(images/close.png);
    background-repeat: no-repeat;
    background-position: center;
}
.jqx-icon-close-hover
{
    cursor: pointer;
    background-image: url(images/close.png);
    background-repeat: no-repeat;
    background-position: center;
}
.jqx-icon-search
{
    cursor: pointer;
    background-image: url(images/search.png);
    background-repeat: no-repeat;
    background-position: center;
    background-size: 16px;
    width: 16px;
    height: 16px;
}
.jqx-icon-plus
{
    cursor: pointer;
    background-image: url(images/plus.png);
    background-repeat: no-repeat;
    background-position: center;
    background-size: 16px;
    width: 16px;
    height: 16px;
}
/* jqxScrollView */
.jqx-scrollview-button
{
    width: 10px;
    height: 10px;
    border-radius: 10px;
    -moz-border-radius: 10px;
    -webkit-border-radius: 10px;
    display: inline-block;
    margin: 2px;
    cursor: pointer;
    background-color: #aaaeaf;
}
.jqx-scrollview
{
    background-color: #000;
}
/*applied to Inputs*/
.jqx-input{-webkit-user-modify:inherit; -moz-user-modify: inherit;  overflow: hidden; background-color: inherit; border-color: #c7c7c7;}
.jqx-input-group {overflow: hidden;}
.jqx-input-group-addon {border: 1px solid transparent; position: relative; -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; padding: 2px 8px !important; float: left; white-space: nowrap; vertical-align: middle; }
.jqx-input-group-addon:first-child {
  border-right-width: 0px;
  border-bottom-right-radius: 0 !important;
  border-top-right-radius: 0 !important;
}
.jqx-input-group-addon:last-child {
  border-left-width: 0px;
  border-bottom-left-radius: 0 !important;
  border-top-left-radius: 0 !important;
}
.jqx-input-group-addon:not(:last-child):not(:first-child) {
  border-bottom-left-radius: 0 !important;
  border-top-left-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
  border-top-right-radius: 0 !important;
  border-left-width: 0px;
}
.jqx-input-group .jqx-input {
    padding: 2px 1px !important;
    border-left-width: 1px !important;
    border-right-width: 1px !important;
}
/*applied to all widgets*/
.jqx-widget{-ms-touch-action: none; zoom: 1; color: #000000; -moz-background-clip: padding; background-clip: padding-box; -webkit-text-size-adjust: none; -ms-text-size-adjust: none; -webkit-appearance: none; -webkit-background-clip: padding-box; direction: ltr; -webkit-tap-highlight-color: rgba(0,0,0,0); font-family: Verdana,Arial,sans-serif; font-style: normal; font-size: 13px;}

.jqx-item{-ms-touch-action: none; color: inherit; border: 1px solid transparent; background: transparent; -webkit-text-size-adjust: none;}

/*applied to containers to set a background and border color. Tabs, NavigationBar, Calendar content.*/
.jqx-widget-content {-ms-touch-action: none; -moz-background-clip: padding; -webkit-text-size-adjust: none; background-clip: padding-box; -webkit-background-clip: padding-box; -webkit-tap-highlight-color: rgba(0,0,0,0); font-family: Verdana,Arial,sans-serif; font-style: normal; font-size: 13px; border-color: #c7c7c7; background: #fff; }
/*applied to header areas. Tabs, Menu, Window, Calendar.*/
.jqx-widget-header {-ms-touch-action: none;-moz-background-clip: padding; -webkit-text-size-adjust: none; background-clip: padding-box; -webkit-background-clip: padding-box; -webkit-tap-highlight-color: rgba(0,0,0,0); border-color: #c5c5c5; background: #e8e8e8; }

.jqx-fill-state-normal{-ms-touch-action: none;font-family: Verdana,Arial,sans-serif; font-style: normal; font-size: 13px; border-color:#aaa; background: #efefef; }
.jqx-fill-state-hover {border-color:#999;  background: #e8e8e8;}
.jqx-fill-state-pressed{border-color:#999; background: #d1d1d1;}
.jqx-fill-state-focus {border-color: #555; }
.jqx-fill-state-disabled {cursor: default; color: #000; opacity: .55; filter:Alpha(Opacity=45);}

.jqx-widget .jqx-grid-cell, .jqx-widget .jqx-grid-column-header, .jqx-widget .jqx-grid-group-cell {border-color: #aaa;}
.jqx-widget .jqx-grid-column-menubutton, .jqx-widget .jqx-grid-column-sortascbutton, .jqx-widget .jqx-grid-column-sortdescbutton, .jqx-widget .jqx-grid-column-filterbutton
{
   background-color: transparent;
   border-color: #aaa;
}
.jqx-grid-column-header a:link, .jqx-grid-column-header a:visited
{
   *color: expression(this.parentNode.currentStyle['color']);    
}
.jqx-grid-bottomright, .jqx-panel-bottomright, .jqx-listbox-bottomright
{
   background-color: #e5e5e5;
}

.jqx-tabs-title-selected-top
{
    border-color: #aaa;
    border-bottom: 1px solid #fff;
    background-color: #fff;
}
/*applied to the tab's title when the tab is selected and the jqxTab's position property is set to 'bottom' .*/
.jqx-tabs-title-selected-bottom
{
    border-color: #aaa;
    border-top: 1px solid #fff;
    background-color: #fff;
}
/*applied to the tab's selection tracker when the jqxTab's position property is set to 'top'.*/
.jqx-tabs-selection-tracker-top
{
   border-color: #aaa;
   border-bottom: 1px solid #fff;
}
/*applied to the tab's selection tracker when the jqxTab's position property is set to 'bottom'.*/
.jqx-tabs-selection-tracker-bottom
{
   border-color: #aaa;
   border-top: 1px solid #fff;
}
/*jqxMaskedInput and jqxNumberInput Styles*/
.jqx-input
{
    -webkit-appearance: none;
    padding: 0 0 0 0;
    outline: none;
    border-width: 1px;
    border-style: solid; 
    -moz-background-clip: padding; background-clip: padding-box; -webkit-background-clip: padding-box;
}
input[type=text].jqx-input, input[type=password].jqx-input {
    min-height: 16px;
    min-width: 16px;
    margin: 0px;
    border-width: 1px;
    border-style: solid;
    font-size: 13px;
    padding: 0px;
}
.jqx-input::-ms-reveal {
    display: none;
}
.jqx-input::-ms-clear {
    display: none;
}
.jqx-input-content::-ms-clear {
    display: none;
}
.jqx-input::-ms-value {
    margin: 0px;
    padding: 0px;
    min-height: 13px;
    line-height: 13px;
}

/*applied to the input when the validation fails.*/
.jqx-input-invalid
{
    border-color: #dd4b39 !important;
}
/*applied to the input's content.*/
.jqx-input-content
{
    -webkit-appearance: none;
    padding: 1px;
    resize: none;
    outline: none;
    outline-width: 0px;
    -webkit-user-modify:inherit; -moz-user-modify:inherit;
    -moz-background-clip: padding; background-clip: padding-box; -webkit-background-clip: padding-box;
}
/*applied to the input when it is disabled.*/
.jqx-input-disabled
{
    -webkit-appearance: none;
    resize: none;
    outline: none;
    outline-width: 0px;
}

/*applied to the jqxDateTimeInput's button header.*/
.jqx-input-button-header
{
    cursor: pointer;
    -webkit-appearance: none;
    height: 3px;
    padding: 0px;
    outline: none;
    border-width: 1px;
    border-style: solid;
}
/*applied to the element which is in the middle of the jqxDateTimeInput's button header.*/
.jqx-input-button-innerHeader
{
    cursor: pointer;
    -webkit-appearance: none;
    height: 3px;
    width: 3px;
    padding: 0px;
    outline: none;
    border: 0px solid #fff;
}
/*applied to the jqxDateTimeInput's button content.*/
.jqx-input-button-content
{
    font-style: normal;
    text-align: center;
    vertical-align: middle;
    cursor: pointer;
    -webkit-appearance: none;
    padding: 0px;
    outline: none;
    border-width: 1px;
    border-style: solid;
    border-top-width: 0px;    
    font-size: 10px;
}
.jqx-menu-popup {
   
}
.jqx-menu-vertical
{
    background-color: #efefef;
}
.jqx-color-picker
{
 
}
.jqx-color-picker-panel
{
}
.jqx-color-picker-map
{
    border: 1px solid #A0A0A0;
    background-color: transparent;
    background-image: url('images/colorpicker/map-saturation.png');
    background-repeat: no-repeat;
    background-position: left top;
    overflow: hidden;
}
.jqx-color-picker-map-hue
{
    border: 1px solid #A0A0A0;
    background-color: transparent;
    background-image: url('images/colorpicker/map-hue.png');
    background-repeat: no-repeat;
    background-position: left top;
    overflow: hidden;
}
.jqx-color-picker-map-overlay
{ 
    background-color: transparent;
    background-image: url('images/colorpicker/map-saturation-overlay.png');
    background-repeat: no-repeat;
    background-position: left top;
}
.jqx-color-picker-bar
{
    border: 1px solid #A0A0A0;
    background-color: transparent;
    background-image: url('images/colorpicker/bar-saturation.png');
    background-repeat: no-repeat;
    background-position: left top;
}
.jqx-color-picker-bar-hue
{
    border: 1px solid #A0A0A0;
    background-color: transparent;
    background-image: url('images/colorpicker/bar-hue.png');
    background-repeat: no-repeat;
    background-position: left top;
}
.jqx-color-picker-preview
{
    border: 1px solid #A0A0A0;
}
.jqx-color-picker-pointer
{
    background-image: url('images/crosshair.png');
    background-repeat: no-repeat;
    height: 16px;
    width: 16px;
}
.jqx-color-picker-pointer-alt
{
    background-image: url('images/crosshair-white.png');
    background-repeat: no-repeat;
    height: 16px;
    width: 16px;
}
.jqx-color-picker-bar-pointer
{
    background-image: url('images/pointer.png');
    background-repeat: no-repeat;
    height: 15px;
    margin-left: 6px;
    background-position: right top;
}
.jqx-icon
{
    width: 16px;
    height: 16px;
    margin: 0 auto;
    position: relative;
    top: 50%; 
    margin-top: -8px;
}
.jqx-input-icon
{
    width: 13px;
    height: 13px;
    margin: 0 auto;
}
.jqx-scrollbar-thumb-state-normal-touch
{
    border-color:#c3c3c3;  background: #c3c3c3;
}
.jqx-touch, .jqx-touch .jqx-fill-state-normal, .jqx-touch .jqx-widget-content, .jqx-touch .jqx-widget-header, .jqx-touch a:link{}
.jqx-scrollbar .jqx-icon-arrow-up{width: 100%; height: 100%;}
.jqx-scrollbar .jqx-icon-arrow-down{width: 100%; height: 100%;}
.jqx-scrollbar .jqx-icon-arrow-left{width: 100%; height: 100%;}
.jqx-scrollbar .jqx-icon-arrow-right{width: 100%; height: 100%;}
/*jqx-listmenu*/
.jqx-listmenu-widget
{
    border-width: 1px;
    border-style: solid;
}
ol.jqx-listmenu, ul.jqx-listmenu
{
    margin: 0;
    padding: 0;
    border: 0;
    outline: 0;
    font-size: 100%;
    vertical-align: baseline;
    line-height: 1;
     counter-reset: section;
}
.jqx-listmenu li 
{
   margin-left: 0px;
   list-style: none;
   line-height: 1;
}
.jqx-listmenu
{
    width: 100%;
}
.jqx-listmenu-header
{
    padding: 15px;
}
.jqx-listmenu-item 
{
    cursor: pointer;
    padding: 15px;
    float: none;
    overflow: hidden;
    text-align: left;
    position: relative;
}

.jqx-listmenu-separator
{
    padding: 10px;
    counter-reset: section;
}
.jqx-listmenu-header-label
{
    margin-left: 30px;
}
.jqx-listmenu-arrow-right
{
    width: 16px;
    height: 16px;
    position: absolute;
    top: 50%;
    margin-top: -7px;
    right: 7px;
}
.jqx-listmenu-arrow-rtl {
    right: 0px;
    left: 7px;
}
.jqx-listmenu-arrow-right-pressed
{
    width: 16px;
    height: 16px;
}
.jqx-listmenu-header .jqx-button
{
    -moz-border-radius: 10px;
    -webkit-border-radius: 10px;
    -o-border-radius: 10px;
    border-radius: 10px;
    padding: 6px 10px;
}
.jqx-listmenu-filter-input
{
    -moz-border-radius: 3px;
    -webkit-border-radius: 3px;
    border-radius: 3px;
    border: 1px solid;
    outline: none;    
    width: 97%;   
    padding: 3px; 
    padding-left: 10px;
    padding-right: 10px;
    border-color: #c7c7c7;
    background-color: #fff;
    font-size: 20px;
    min-height: 25px !important;
    height: 25px;
}
.jqx-listmenu-filter
{
    text-align: center;
    padding: 4px;
}
ol li .jqx-listmenu-item-label:before
{
  content: counter(section) ". ";
  counter-increment: section;
}
.jqx-listmenu div
{
   clear: both; 
}
.jqx-listmenu-auto-separator
{
}
.jqx-listmenu-item-readonly
{   
    cursor: default;
}
.jqx-tooltip
{
    position: absolute;
    width: auto;
    height: auto;
}
.jqx-tooltip-main
{
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    filter: inherit;
    border-style: solid;
    border-width: 1px;
}
.jqx-tooltip-text
{
    padding: 5px 8px;
    overflow: hidden;
    filter: inherit;
}
.jqx-tooltip, .jqx-tooltip-text, .jqx-tooltip-main {
    -moz-border-radius: 5px;
    -webkit-border-radius: 5px;
    border-radius: 5px;
    -moz-background-clip: padding; background-clip: padding-box; -webkit-background-clip: padding-box;   
}
.jqx-tooltip-arrow
{
    position: absolute;
    width: 0px;
    height: 0px;
    display: block;
    border-style: solid;
    margin: -6px 0 0 -7px;
    background: transparent !important;
    filter: inherit;
}
.jqx-tooltip-arrow-t-b
{
    border-left-color: transparent !important;
    border-right-color: transparent !important;
}
.jqx-tooltip-arrow-l-r
{
    border-top-color: transparent !important;
    border-bottom-color: transparent !important;
}
/*Sets the text-alignment to right.*/
.jqx-rtl{text-align: right !important;}
.jqx-shadow{
    -webkit-box-shadow: 0 2px 3px rgba(0,0,0,.15)!important;
    -moz-box-shadow   : 0 2px 3px rgba(0,0,0,.15)!important;
    -o-box-shadow     : 0 2px 3px rgba(0,0,0,.15)!important;
    box-shadow        : 0 2px 3px rgba(0,0,0,.15)!important;
}
.jqx-noshadow {
    -webkit-box-shadow: none !important;
    -moz-box-shadow   : none !important;
    -o-box-shadow     : none !important;
    box-shadow        : none !important;
}
.jqx-passwordinput-password-icon, .jqx-passwordinput-password-icon-rtl
{
    background-image: url(images/icon-showpassword.png) !important;
    background-repeat: no-repeat !important;
    width: 12px;
    height: 9px;
}
.jqx-passwordinput-password-icon-ltr
{
    background-position: right !important;
}
.jqx-passwordinput-password-icon-rtl
{
    background-position: left !important;
}
.jqx-passwordinput-password-strength-inicator
{
    width: 20%;
    height: 5px;
    margin-top: 5px;
}
/*top rounded Corners*/
.jqx-rc-t-expanded
{
    -moz-border-radius-topleft: 0px !important;
    -webkit-border-top-left-radius: 0px !important;
    border-top-left-radius: 0px !important;
    -moz-border-radius-topright: 0px !important;
    -webkit-border-top-right-radius: 0px !important;
    border-top-right-radius: 0px !important;
}
/*bottom rounded Corners*/
.jqx-rc-b-expanded
{
    -moz-border-radius-bottomleft: 0px !important;
    -webkit-border-bottom-left-radius: 0px !important;
    border-bottom-left-radius: 0px !important;
    -moz-border-radius-bottomright: 0px !important;
    -webkit-border-bottom-right-radius: 0px !important;
    border-bottom-right-radius: 0px !important;
}
.jqx-treemap-rectangle {
    font-size: 13px;
    font-weight: normal;
    border: 1px solid #555;
    color: #222;
    text-shadow: 0px 0px 0px;
    overflow: hidden;
    text-overflow: ellipsis;
}
.jqx-treemap-label {
    text-overflow: ellipsis;
    overflow: hidden;
}
.jqx-treemap-rectangle-parent {
    color: #222;
    font-size: 15px;
    font-family: Verdana;
    font-weight: bold;
}
.jqx-treemap-legend-label {
    color: #fff;
}
.jqx-treemap-legend {
    width: 350px;
    background-color: rgba(0, 0, 0, 0.1);
    z-index: 41;
    overflow: hidden;
}
.jqx-treemap-legend-table {
    table-layout: fixed;
    width: 100%;
}
.jqx-treemap-legend-color {
    height: 3px;
}
.jqx-treemap-legend-values {
    height: 12px;
    width: 100%;
}
.jqx-treemap-legend-value {
    font-size: 9px;
    position: absolute;
    color: #fff;
}
.jqx-treemap-rectangle-hover {
    -webkit-box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.5);
    -moz-box-shadow:    0px 0px 5px rgba(0, 0, 0, 0.5);
    box-shadow:         0px 0px 5px rgba(0, 0, 0, 0.5);
    z-index: 40;
}
/*jqxRangeSelector*/
.jqx-rangeselector
{
    margin: 50px;
}
.jqx-rangeselector-content
{
    position: absolute;
}
.jqx-rangeselector-ticks-container, .jqx-rangeselector-slider
{
    width: 100%;
    height: 100%;
}
.jqx-rangeselector-ticks-container
{
    background-color: transparent;
    position: relative;
}
.jqx-rangeselector-slider
{
    opacity: 0.3;
    background-color: Aqua;
    border-left: 1px solid Black;
    border-right: 1px solid Black;
}
.jqx-rangeselector-ticks
{
    background-color: Black;
    height: 100%;
    width: 1px;
    position: absolute;
}
.jqx-rangeselector-labels
{
    width: auto;
    height: auto;
    position: absolute;
}
.jqx-rangeselector-markers
{
    width: auto;
    height: 20px;
    background-color: Gray;
    position: absolute;
    padding: 5px;
}
.jqx-rangeselector-marker-arrow
{
    position: absolute;
    width: 0px;
    height: 0px;
    display: block;
    border-style: solid;
    margin: -6px 0 0 -7px;
    background-color: transparent !important;
    filter: inherit;
    border-top-width: 5px;
    border-bottom-width: 5px;
    border-right-color: transparent !important;
    border-bottom-color: transparent !important;
    border-left-color: transparent !important;
    border-top-color: Gray;
    background-clip: border-box;
    background-repeat: repeat;
}
.jqx-rangeselector-markers-alert
{
    background-color: Red;
    border-color: Red;
    color: White;
}
.jqx-rangeselector-marker-left-arrow
{
    border-right-width: 0px;
    border-left-width: 5px;
}
.jqx-rangeselector-marker-right-arrow
{
    border-right-width: 5px;
    border-left-width: 0px;
}
.jqx-rangeselector-markers-value
{
    width: 100%;
    height: 100%;
}
.jqx-filter-editor-group {
    white-space: nowrap!important;
	color: #db3412!important;
}
.jqx-filter-editor-column {
	white-space: nowrap!important;
	color: #1086d4!important;
}
.jqx-filter-editor-condition {
	white-space: nowrap!important;
	color: #6fb111!important;
}
.jqx-filter-editor-value {
	white-space: nowrap!important;
	color: Gray!important;
}

    </style>
    <!--<link rel="stylesheet" href="http://61.147.119.252:8088/jqwidgets/styles/jqx.energyblue.css" />-->
    <style>
        .jqx-widget-content-energyblue{border-color: #a4bed4;}
.jqx-fill-state-normal-energyblue, .jqx-widget-header-energyblue{border-color:#a4bed4; background-color:#e0e9f5}
.jqx-fill-state-hover-energyblue{border-color:#a4bed4;  background-color:#cfdde9}
.jqx-fill-state-pressed-energyblue{border-color:#5e8cb3; background-color:#cfdde9}
.jqx-fill-state-focus-energyblue { border-color: #477396; }
.jqx-scrollbar-state-normal-energyblue, .jqx-grid-bottomright-energyblue, .jqx-panel-bottomright-energyblue, .jqx-listbox-bottomright-energyblue{background-color:#e0e9f5}
.jqx-widget-energyblue .jqx-grid-column-header-energyblue, .jqx-grid-cell-energyblue, .jqx-widget-energyblue .jqx-grid-cell-energyblue, .jqx-widget-energyblue .jqx-grid-group-cell-energyblue, .jqx-grid-group-cell-energyblue{border-color:#a4bed4}
.jqx-tabs-title-selected-bottom-energyblue, .jqx-tabs-selection-tracker-bottom-energyblue, .jqx-tabs-title-selected-top-energyblue, .jqx-tabs-selection-tracker-top-energyblue{border-color:#a4bed4; border-bottom:1px solid #fff; background:#fff}
.jqx-grid-cell-sort-alt-energyblue, .jqx-grid-cell-filter-alt-energyblue, .jqx-grid-cell-pinned-energyblue, .jqx-grid-cell-alt-energyblue, .jqx-grid-cell-sort-energyblue{ background-color:#e7eef8}
.jqx-grid-cell-selected-energyblue{ background-color:#cfdde9 !important;  color:#2b465e !important;}
.jqx-grid-cell-hover-energyblue{ background-color:#cfdde9 !important;}
.jqx-menu-vertical-energyblue{background: #e0e9f5;}
    </style>
    <!--<script type="text/javascript" src="http://61.147.119.252:8088/Scripts/json2.js"></script>-->
    <script>
        /*
    json2.js
    2011-10-19

    Public Domain.

    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.

    See http://www.JSON.org/js.html


    This code should be minified before deployment.
    See http://javascript.crockford.com/jsmin.html

    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO
    NOT CONTROL.


    This file creates a global JSON object containing two methods: stringify
    and parse.

        JSON.stringify(value, replacer, space)
            value       any JavaScript value, usually an object or array.

            replacer    an optional parameter that determines how object
                        values are stringified for objects. It can be a
                        function or an array of strings.

            space       an optional parameter that specifies the indentation
                        of nested structures. If it is omitted, the text will
                        be packed without extra whitespace. If it is a number,
                        it will specify the number of spaces to indent at each
                        level. If it is a string (such as '\t' or '&nbsp;'),
                        it contains the characters used to indent at each level.

            This method produces a JSON text from a JavaScript value.

            When an object value is found, if the object contains a toJSON
            method, its toJSON method will be called and the result will be
            stringified. A toJSON method does not serialize: it returns the
            value represented by the name/value pair that should be serialized,
            or undefined if nothing should be serialized. The toJSON method
            will be passed the key associated with the value, and this will be
            bound to the value

            For example, this would serialize Dates as ISO strings.

                Date.prototype.toJSON = function (key) {
                    function f(n) {
                        // Format integers to have at least two digits.
                        return n < 10 ? '0' + n : n;
                    }

                    return this.getUTCFullYear()   + '-' +
                         f(this.getUTCMonth() + 1) + '-' +
                         f(this.getUTCDate())      + 'T' +
                         f(this.getUTCHours())     + ':' +
                         f(this.getUTCMinutes())   + ':' +
                         f(this.getUTCSeconds())   + 'Z';
                };

            You can provide an optional replacer method. It will be passed the
            key and value of each member, with this bound to the containing
            object. The value that is returned from your method will be
            serialized. If your method returns undefined, then the member will
            be excluded from the serialization.

            If the replacer parameter is an array of strings, then it will be
            used to select the members to be serialized. It filters the results
            such that only members with keys listed in the replacer array are
            stringified.

            Values that do not have JSON representations, such as undefined or
            functions, will not be serialized. Such values in objects will be
            dropped; in arrays they will be replaced with null. You can use
            a replacer function to replace those with JSON values.
            JSON.stringify(undefined) returns undefined.

            The optional space parameter produces a stringification of the
            value that is filled with line breaks and indentation to make it
            easier to read.

            If the space parameter is a non-empty string, then that string will
            be used for indentation. If the space parameter is a number, then
            the indentation will be that many spaces.

            Example:

            text = JSON.stringify(['e', {pluribus: 'unum'}]);
            // text is '["e",{"pluribus":"unum"}]'


            text = JSON.stringify(['e', {pluribus: 'unum'}], null, '\t');
            // text is '[\n\t"e",\n\t{\n\t\t"pluribus": "unum"\n\t}\n]'

            text = JSON.stringify([new Date()], function (key, value) {
                return this[key] instanceof Date ?
                    'Date(' + this[key] + ')' : value;
            });
            // text is '["Date(---current time---)"]'


        JSON.parse(text, reviver)
            This method parses a JSON text to produce an object or array.
            It can throw a SyntaxError exception.

            The optional reviver parameter is a function that can filter and
            transform the results. It receives each of the keys and values,
            and its return value is used instead of the original value.
            If it returns what it received, then the structure is not modified.
            If it returns undefined then the member is deleted.

            Example:

            // Parse the text. Values that look like ISO date strings will
            // be converted to Date objects.

            myData = JSON.parse(text, function (key, value) {
                var a;
                if (typeof value === 'string') {
                    a =
/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)Z$/.exec(value);
                    if (a) {
                        return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],
                            +a[5], +a[6]));
                    }
                }
                return value;
            });

            myData = JSON.parse('["Date(09/09/2001)"]', function (key, value) {
                var d;
                if (typeof value === 'string' &&
                        value.slice(0, 5) === 'Date(' &&
                        value.slice(-1) === ')') {
                    d = new Date(value.slice(5, -1));
                    if (d) {
                        return d;
                    }
                }
                return value;
            });


    This is a reference implementation. You are free to copy, modify, or
    redistribute.
*/

        /*jslint evil: true, regexp: true */

        /*members "", "\b", "\t", "\n", "\f", "\r", "\"", JSON, "\\", apply,
            call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,
            getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,
            lastIndex, length, parse, prototype, push, replace, slice, stringify,
            test, toJSON, toString, valueOf
        */


        // Create a JSON object only if one does not already exist. We create the
        // methods in a closure to avoid creating global variables.

        var JSON;
        if (!JSON) {
            JSON = {};
        }

        (function () {
            'use strict';

            function f(n) {
                // Format integers to have at least two digits.
                return n < 10 ? '0' + n : n;
            }

            if (typeof Date.prototype.toJSON !== 'function') {

                Date.prototype.toJSON = function (key) {

                    return isFinite(this.valueOf())
                        ? this.getUTCFullYear() + '-' +
                            f(this.getUTCMonth() + 1) + '-' +
                            f(this.getUTCDate()) + 'T' +
                            f(this.getUTCHours()) + ':' +
                            f(this.getUTCMinutes()) + ':' +
                            f(this.getUTCSeconds()) + 'Z'
                        : null;
                };

                String.prototype.toJSON =
                    Number.prototype.toJSON =
                    Boolean.prototype.toJSON = function (key) {
                        return this.valueOf();
                    };
            }

            var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
                escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
                gap,
                indent,
                meta = {    // table of character substitutions
                    '\b': '\\b',
                    '\t': '\\t',
                    '\n': '\\n',
                    '\f': '\\f',
                    '\r': '\\r',
                    '"': '\\"',
                    '\\': '\\\\'
                },
                rep;


            function quote(string) {

                // If the string contains no control characters, no quote characters, and no
                // backslash characters, then we can safely slap some quotes around it.
                // Otherwise we must also replace the offending characters with safe escape
                // sequences.

                escapable.lastIndex = 0;
                return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
                    var c = meta[a];
                    return typeof c === 'string'
                        ? c
                        : '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
                }) + '"' : '"' + string + '"';
            }


            function str(key, holder) {

                // Produce a string from holder[key].

                var i,          // The loop counter.
                    k,          // The member key.
                    v,          // The member value.
                    length,
                    mind = gap,
                    partial,
                    value = holder[key];

                // If the value has a toJSON method, call it to obtain a replacement value.

                if (value && typeof value === 'object' &&
                        typeof value.toJSON === 'function') {
                    value = value.toJSON(key);
                }

                // If we were called with a replacer function, then call the replacer to
                // obtain a replacement value.

                if (typeof rep === 'function') {
                    value = rep.call(holder, key, value);
                }

                // What happens next depends on the value's type.

                switch (typeof value) {
                    case 'string':
                        return quote(value);

                    case 'number':

                        // JSON numbers must be finite. Encode non-finite numbers as null.

                        return isFinite(value) ? String(value) : 'null';

                    case 'boolean':
                    case 'null':

                        // If the value is a boolean or null, convert it to a string. Note:
                        // typeof null does not produce 'null'. The case is included here in
                        // the remote chance that this gets fixed someday.

                        return String(value);

                        // If the type is 'object', we might be dealing with an object or an array or
                        // null.

                    case 'object':

                        // Due to a specification blunder in ECMAScript, typeof null is 'object',
                        // so watch out for that case.

                        if (!value) {
                            return 'null';
                        }

                        // Make an array to hold the partial results of stringifying this object value.

                        gap += indent;
                        partial = [];

                        // Is the value an array?

                        if (Object.prototype.toString.apply(value) === '[object Array]') {

                            // The value is an array. Stringify every element. Use null as a placeholder
                            // for non-JSON values.

                            length = value.length;
                            for (i = 0; i < length; i += 1) {
                                partial[i] = str(i, value) || 'null';
                            }

                            // Join all of the elements together, separated with commas, and wrap them in
                            // brackets.

                            v = partial.length === 0
                                ? '[]'
                                : gap
                                ? '[\n' + gap + partial.join(',\n' + gap) + '\n' + mind + ']'
                                : '[' + partial.join(',') + ']';
                            gap = mind;
                            return v;
                        }

                        // If the replacer is an array, use it to select the members to be stringified.

                        if (rep && typeof rep === 'object') {
                            length = rep.length;
                            for (i = 0; i < length; i += 1) {
                                if (typeof rep[i] === 'string') {
                                    k = rep[i];
                                    v = str(k, value);
                                    if (v) {
                                        partial.push(quote(k) + (gap ? ': ' : ':') + v);
                                    }
                                }
                            }
                        } else {

                            // Otherwise, iterate through all of the keys in the object.

                            for (k in value) {
                                if (Object.prototype.hasOwnProperty.call(value, k)) {
                                    v = str(k, value);
                                    if (v) {
                                        partial.push(quote(k) + (gap ? ': ' : ':') + v);
                                    }
                                }
                            }
                        }

                        // Join all of the member texts together, separated with commas,
                        // and wrap them in braces.

                        v = partial.length === 0
                            ? '{}'
                            : gap
                            ? '{\n' + gap + partial.join(',\n' + gap) + '\n' + mind + '}'
                            : '{' + partial.join(',') + '}';
                        gap = mind;
                        return v;
                }
            }

            // If the JSON object does not yet have a stringify method, give it one.

            if (typeof JSON.stringify !== 'function') {
                JSON.stringify = function (value, replacer, space) {

                    // The stringify method takes a value and an optional replacer, and an optional
                    // space parameter, and returns a JSON text. The replacer can be a function
                    // that can replace values, or an array of strings that will select the keys.
                    // A default replacer method can be provided. Use of the space parameter can
                    // produce text that is more easily readable.

                    var i;
                    gap = '';
                    indent = '';

                    // If the space parameter is a number, make an indent string containing that
                    // many spaces.

                    if (typeof space === 'number') {
                        for (i = 0; i < space; i += 1) {
                            indent += ' ';
                        }

                        // If the space parameter is a string, it will be used as the indent string.

                    } else if (typeof space === 'string') {
                        indent = space;
                    }

                    // If there is a replacer, it must be a function or an array.
                    // Otherwise, throw an error.

                    rep = replacer;
                    if (replacer && typeof replacer !== 'function' &&
                            (typeof replacer !== 'object' ||
                            typeof replacer.length !== 'number')) {
                        throw new Error('JSON.stringify');
                    }

                    // Make a fake root object containing our value under the key of ''.
                    // Return the result of stringifying the value.

                    return str('', { '': value });
                };
            }


            // If the JSON object does not yet have a parse method, give it one.

            if (typeof JSON.parse !== 'function') {
                JSON.parse = function (text, reviver) {

                    // The parse method takes a text and an optional reviver function, and returns
                    // a JavaScript value if the text is a valid JSON text.

                    var j;

                    function walk(holder, key) {

                        // The walk method is used to recursively walk the resulting structure so
                        // that modifications can be made.

                        var k, v, value = holder[key];
                        if (value && typeof value === 'object') {
                            for (k in value) {
                                if (Object.prototype.hasOwnProperty.call(value, k)) {
                                    v = walk(value, k);
                                    if (v !== undefined) {
                                        value[k] = v;
                                    } else {
                                        delete value[k];
                                    }
                                }
                            }
                        }
                        return reviver.call(holder, key, value);
                    }


                    // Parsing happens in four stages. In the first stage, we replace certain
                    // Unicode characters with escape sequences. JavaScript handles many characters
                    // incorrectly, either silently deleting them, or treating them as line endings.

                    text = String(text);
                    cx.lastIndex = 0;
                    if (cx.test(text)) {
                        text = text.replace(cx, function (a) {
                            return '\\u' +
                                ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
                        });
                    }

                    // In the second stage, we run the text against regular expressions that look
                    // for non-JSON patterns. We are especially concerned with '()' and 'new'
                    // because they can cause invocation, and '=' because it can cause mutation.
                    // But just to be safe, we want to reject all unexpected forms.

                    // We split the second stage into 4 regexp operations in order to work around
                    // crippling inefficiencies in IE's and Safari's regexp engines. First we
                    // replace the JSON backslash pairs with '@' (a non-JSON character). Second, we
                    // replace all simple value tokens with ']' characters. Third, we delete all
                    // open brackets that follow a colon or comma or that begin the text. Finally,
                    // we look to see that the remaining characters are only whitespace or ']' or
                    // ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.

                    if (/^[\],:{}\s]*$/
                            .test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@')
                                .replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']')
                                .replace(/(?:^|:|,)(?:\s*\[)+/g, ''))) {

                        // In the third stage we use the eval function to compile the text into a
                        // JavaScript structure. The '{' operator is subject to a syntactic ambiguity
                        // in JavaScript: it can begin a block or an object literal. We wrap the text
                        // in parens to eliminate the ambiguity.

                        j = eval('(' + text + ')');

                        // In the optional fourth stage, we recursively walk the new structure, passing
                        // each name/value pair to a reviver function for possible transformation.

                        return typeof reviver === 'function'
                            ? walk({ '': j }, '')
                            : j;
                    }

                    // If the text is not JSON parseable, then a SyntaxError is thrown.

                    throw new SyntaxError('JSON.parse');
                };
            }
        }());

    </script>
    <!--<script type="text/javascript" src="http://61.147.119.252:8088/Scripts/jquery-1.8.2.min.js"></script>-->
    <script>
        /*! jQuery v1.8.2 jquery.com | jquery.org/license */
        (function (a, b) { function G(a) { var b = F[a] = {}; return p.each(a.split(s), function (a, c) { b[c] = !0 }), b } function J(a, c, d) { if (d === b && a.nodeType === 1) { var e = "data-" + c.replace(I, "-$1").toLowerCase(); d = a.getAttribute(e); if (typeof d == "string") { try { d = d === "true" ? !0 : d === "false" ? !1 : d === "null" ? null : +d + "" === d ? +d : H.test(d) ? p.parseJSON(d) : d } catch (f) { } p.data(a, c, d) } else d = b } return d } function K(a) { var b; for (b in a) { if (b === "data" && p.isEmptyObject(a[b])) continue; if (b !== "toJSON") return !1 } return !0 } function ba() { return !1 } function bb() { return !0 } function bh(a) { return !a || !a.parentNode || a.parentNode.nodeType === 11 } function bi(a, b) { do a = a[b]; while (a && a.nodeType !== 1); return a } function bj(a, b, c) { b = b || 0; if (p.isFunction(b)) return p.grep(a, function (a, d) { var e = !!b.call(a, d, a); return e === c }); if (b.nodeType) return p.grep(a, function (a, d) { return a === b === c }); if (typeof b == "string") { var d = p.grep(a, function (a) { return a.nodeType === 1 }); if (be.test(b)) return p.filter(b, d, !c); b = p.filter(b, d) } return p.grep(a, function (a, d) { return p.inArray(a, b) >= 0 === c }) } function bk(a) { var b = bl.split("|"), c = a.createDocumentFragment(); if (c.createElement) while (b.length) c.createElement(b.pop()); return c } function bC(a, b) { return a.getElementsByTagName(b)[0] || a.appendChild(a.ownerDocument.createElement(b)) } function bD(a, b) { if (b.nodeType !== 1 || !p.hasData(a)) return; var c, d, e, f = p._data(a), g = p._data(b, f), h = f.events; if (h) { delete g.handle, g.events = {}; for (c in h) for (d = 0, e = h[c].length; d < e; d++) p.event.add(b, c, h[c][d]) } g.data && (g.data = p.extend({}, g.data)) } function bE(a, b) { var c; if (b.nodeType !== 1) return; b.clearAttributes && b.clearAttributes(), b.mergeAttributes && b.mergeAttributes(a), c = b.nodeName.toLowerCase(), c === "object" ? (b.parentNode && (b.outerHTML = a.outerHTML), p.support.html5Clone && a.innerHTML && !p.trim(b.innerHTML) && (b.innerHTML = a.innerHTML)) : c === "input" && bv.test(a.type) ? (b.defaultChecked = b.checked = a.checked, b.value !== a.value && (b.value = a.value)) : c === "option" ? b.selected = a.defaultSelected : c === "input" || c === "textarea" ? b.defaultValue = a.defaultValue : c === "script" && b.text !== a.text && (b.text = a.text), b.removeAttribute(p.expando) } function bF(a) { return typeof a.getElementsByTagName != "undefined" ? a.getElementsByTagName("*") : typeof a.querySelectorAll != "undefined" ? a.querySelectorAll("*") : [] } function bG(a) { bv.test(a.type) && (a.defaultChecked = a.checked) } function bY(a, b) { if (b in a) return b; var c = b.charAt(0).toUpperCase() + b.slice(1), d = b, e = bW.length; while (e--) { b = bW[e] + c; if (b in a) return b } return d } function bZ(a, b) { return a = b || a, p.css(a, "display") === "none" || !p.contains(a.ownerDocument, a) } function b$(a, b) { var c, d, e = [], f = 0, g = a.length; for (; f < g; f++) { c = a[f]; if (!c.style) continue; e[f] = p._data(c, "olddisplay"), b ? (!e[f] && c.style.display === "none" && (c.style.display = ""), c.style.display === "" && bZ(c) && (e[f] = p._data(c, "olddisplay", cc(c.nodeName)))) : (d = bH(c, "display"), !e[f] && d !== "none" && p._data(c, "olddisplay", d)) } for (f = 0; f < g; f++) { c = a[f]; if (!c.style) continue; if (!b || c.style.display === "none" || c.style.display === "") c.style.display = b ? e[f] || "" : "none" } return a } function b_(a, b, c) { var d = bP.exec(b); return d ? Math.max(0, d[1] - (c || 0)) + (d[2] || "px") : b } function ca(a, b, c, d) { var e = c === (d ? "border" : "content") ? 4 : b === "width" ? 1 : 0, f = 0; for (; e < 4; e += 2) c === "margin" && (f += p.css(a, c + bV[e], !0)), d ? (c === "content" && (f -= parseFloat(bH(a, "padding" + bV[e])) || 0), c !== "margin" && (f -= parseFloat(bH(a, "border" + bV[e] + "Width")) || 0)) : (f += parseFloat(bH(a, "padding" + bV[e])) || 0, c !== "padding" && (f += parseFloat(bH(a, "border" + bV[e] + "Width")) || 0)); return f } function cb(a, b, c) { var d = b === "width" ? a.offsetWidth : a.offsetHeight, e = !0, f = p.support.boxSizing && p.css(a, "boxSizing") === "border-box"; if (d <= 0 || d == null) { d = bH(a, b); if (d < 0 || d == null) d = a.style[b]; if (bQ.test(d)) return d; e = f && (p.support.boxSizingReliable || d === a.style[b]), d = parseFloat(d) || 0 } return d + ca(a, b, c || (f ? "border" : "content"), e) + "px" } function cc(a) { if (bS[a]) return bS[a]; var b = p("<" + a + ">").appendTo(e.body), c = b.css("display"); b.remove(); if (c === "none" || c === "") { bI = e.body.appendChild(bI || p.extend(e.createElement("iframe"), { frameBorder: 0, width: 0, height: 0 })); if (!bJ || !bI.createElement) bJ = (bI.contentWindow || bI.contentDocument).document, bJ.write("<!doctype html><html><body>"), bJ.close(); b = bJ.body.appendChild(bJ.createElement(a)), c = bH(b, "display"), e.body.removeChild(bI) } return bS[a] = c, c } function ci(a, b, c, d) { var e; if (p.isArray(b)) p.each(b, function (b, e) { c || ce.test(a) ? d(a, e) : ci(a + "[" + (typeof e == "object" ? b : "") + "]", e, c, d) }); else if (!c && p.type(b) === "object") for (e in b) ci(a + "[" + e + "]", b[e], c, d); else d(a, b) } function cz(a) { return function (b, c) { typeof b != "string" && (c = b, b = "*"); var d, e, f, g = b.toLowerCase().split(s), h = 0, i = g.length; if (p.isFunction(c)) for (; h < i; h++) d = g[h], f = /^\+/.test(d), f && (d = d.substr(1) || "*"), e = a[d] = a[d] || [], e[f ? "unshift" : "push"](c) } } function cA(a, c, d, e, f, g) { f = f || c.dataTypes[0], g = g || {}, g[f] = !0; var h, i = a[f], j = 0, k = i ? i.length : 0, l = a === cv; for (; j < k && (l || !h) ; j++) h = i[j](c, d, e), typeof h == "string" && (!l || g[h] ? h = b : (c.dataTypes.unshift(h), h = cA(a, c, d, e, h, g))); return (l || !h) && !g["*"] && (h = cA(a, c, d, e, "*", g)), h } function cB(a, c) { var d, e, f = p.ajaxSettings.flatOptions || {}; for (d in c) c[d] !== b && ((f[d] ? a : e || (e = {}))[d] = c[d]); e && p.extend(!0, a, e) } function cC(a, c, d) { var e, f, g, h, i = a.contents, j = a.dataTypes, k = a.responseFields; for (f in k) f in d && (c[k[f]] = d[f]); while (j[0] === "*") j.shift(), e === b && (e = a.mimeType || c.getResponseHeader("content-type")); if (e) for (f in i) if (i[f] && i[f].test(e)) { j.unshift(f); break } if (j[0] in d) g = j[0]; else { for (f in d) { if (!j[0] || a.converters[f + " " + j[0]]) { g = f; break } h || (h = f) } g = g || h } if (g) return g !== j[0] && j.unshift(g), d[g] } function cD(a, b) { var c, d, e, f, g = a.dataTypes.slice(), h = g[0], i = {}, j = 0; a.dataFilter && (b = a.dataFilter(b, a.dataType)); if (g[1]) for (c in a.converters) i[c.toLowerCase()] = a.converters[c]; for (; e = g[++j];) if (e !== "*") { if (h !== "*" && h !== e) { c = i[h + " " + e] || i["* " + e]; if (!c) for (d in i) { f = d.split(" "); if (f[1] === e) { c = i[h + " " + f[0]] || i["* " + f[0]]; if (c) { c === !0 ? c = i[d] : i[d] !== !0 && (e = f[0], g.splice(j--, 0, e)); break } } } if (c !== !0) if (c && a["throws"]) b = c(b); else try { b = c(b) } catch (k) { return { state: "parsererror", error: c ? k : "No conversion from " + h + " to " + e } } } h = e } return { state: "success", data: b } } function cL() { try { return new a.XMLHttpRequest } catch (b) { } } function cM() { try { return new a.ActiveXObject("Microsoft.XMLHTTP") } catch (b) { } } function cU() { return setTimeout(function () { cN = b }, 0), cN = p.now() } function cV(a, b) { p.each(b, function (b, c) { var d = (cT[b] || []).concat(cT["*"]), e = 0, f = d.length; for (; e < f; e++) if (d[e].call(a, b, c)) return }) } function cW(a, b, c) { var d, e = 0, f = 0, g = cS.length, h = p.Deferred().always(function () { delete i.elem }), i = function () { var b = cN || cU(), c = Math.max(0, j.startTime + j.duration - b), d = 1 - (c / j.duration || 0), e = 0, f = j.tweens.length; for (; e < f; e++) j.tweens[e].run(d); return h.notifyWith(a, [j, d, c]), d < 1 && f ? c : (h.resolveWith(a, [j]), !1) }, j = h.promise({ elem: a, props: p.extend({}, b), opts: p.extend(!0, { specialEasing: {} }, c), originalProperties: b, originalOptions: c, startTime: cN || cU(), duration: c.duration, tweens: [], createTween: function (b, c, d) { var e = p.Tween(a, j.opts, b, c, j.opts.specialEasing[b] || j.opts.easing); return j.tweens.push(e), e }, stop: function (b) { var c = 0, d = b ? j.tweens.length : 0; for (; c < d; c++) j.tweens[c].run(1); return b ? h.resolveWith(a, [j, b]) : h.rejectWith(a, [j, b]), this } }), k = j.props; cX(k, j.opts.specialEasing); for (; e < g; e++) { d = cS[e].call(j, a, k, j.opts); if (d) return d } return cV(j, k), p.isFunction(j.opts.start) && j.opts.start.call(a, j), p.fx.timer(p.extend(i, { anim: j, queue: j.opts.queue, elem: a })), j.progress(j.opts.progress).done(j.opts.done, j.opts.complete).fail(j.opts.fail).always(j.opts.always) } function cX(a, b) { var c, d, e, f, g; for (c in a) { d = p.camelCase(c), e = b[d], f = a[c], p.isArray(f) && (e = f[1], f = a[c] = f[0]), c !== d && (a[d] = f, delete a[c]), g = p.cssHooks[d]; if (g && "expand" in g) { f = g.expand(f), delete a[d]; for (c in f) c in a || (a[c] = f[c], b[c] = e) } else b[d] = e } } function cY(a, b, c) { var d, e, f, g, h, i, j, k, l = this, m = a.style, n = {}, o = [], q = a.nodeType && bZ(a); c.queue || (j = p._queueHooks(a, "fx"), j.unqueued == null && (j.unqueued = 0, k = j.empty.fire, j.empty.fire = function () { j.unqueued || k() }), j.unqueued++, l.always(function () { l.always(function () { j.unqueued--, p.queue(a, "fx").length || j.empty.fire() }) })), a.nodeType === 1 && ("height" in b || "width" in b) && (c.overflow = [m.overflow, m.overflowX, m.overflowY], p.css(a, "display") === "inline" && p.css(a, "float") === "none" && (!p.support.inlineBlockNeedsLayout || cc(a.nodeName) === "inline" ? m.display = "inline-block" : m.zoom = 1)), c.overflow && (m.overflow = "hidden", p.support.shrinkWrapBlocks || l.done(function () { m.overflow = c.overflow[0], m.overflowX = c.overflow[1], m.overflowY = c.overflow[2] })); for (d in b) { f = b[d]; if (cP.exec(f)) { delete b[d]; if (f === (q ? "hide" : "show")) continue; o.push(d) } } g = o.length; if (g) { h = p._data(a, "fxshow") || p._data(a, "fxshow", {}), q ? p(a).show() : l.done(function () { p(a).hide() }), l.done(function () { var b; p.removeData(a, "fxshow", !0); for (b in n) p.style(a, b, n[b]) }); for (d = 0; d < g; d++) e = o[d], i = l.createTween(e, q ? h[e] : 0), n[e] = h[e] || p.style(a, e), e in h || (h[e] = i.start, q && (i.end = i.start, i.start = e === "width" || e === "height" ? 1 : 0)) } } function cZ(a, b, c, d, e) { return new cZ.prototype.init(a, b, c, d, e) } function c$(a, b) { var c, d = { height: a }, e = 0; b = b ? 1 : 0; for (; e < 4; e += 2 - b) c = bV[e], d["margin" + c] = d["padding" + c] = a; return b && (d.opacity = d.width = a), d } function da(a) { return p.isWindow(a) ? a : a.nodeType === 9 ? a.defaultView || a.parentWindow : !1 } var c, d, e = a.document, f = a.location, g = a.navigator, h = a.jQuery, i = a.$, j = Array.prototype.push, k = Array.prototype.slice, l = Array.prototype.indexOf, m = Object.prototype.toString, n = Object.prototype.hasOwnProperty, o = String.prototype.trim, p = function (a, b) { return new p.fn.init(a, b, c) }, q = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source, r = /\S/, s = /\s+/, t = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, u = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/, v = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, w = /^[\],:{}\s]*$/, x = /(?:^|:|,)(?:\s*\[)+/g, y = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g, z = /"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g, A = /^-ms-/, B = /-([\da-z])/gi, C = function (a, b) { return (b + "").toUpperCase() }, D = function () { e.addEventListener ? (e.removeEventListener("DOMContentLoaded", D, !1), p.ready()) : e.readyState === "complete" && (e.detachEvent("onreadystatechange", D), p.ready()) }, E = {}; p.fn = p.prototype = { constructor: p, init: function (a, c, d) { var f, g, h, i; if (!a) return this; if (a.nodeType) return this.context = this[0] = a, this.length = 1, this; if (typeof a == "string") { a.charAt(0) === "<" && a.charAt(a.length - 1) === ">" && a.length >= 3 ? f = [null, a, null] : f = u.exec(a); if (f && (f[1] || !c)) { if (f[1]) return c = c instanceof p ? c[0] : c, i = c && c.nodeType ? c.ownerDocument || c : e, a = p.parseHTML(f[1], i, !0), v.test(f[1]) && p.isPlainObject(c) && this.attr.call(a, c, !0), p.merge(this, a); g = e.getElementById(f[2]); if (g && g.parentNode) { if (g.id !== f[2]) return d.find(a); this.length = 1, this[0] = g } return this.context = e, this.selector = a, this } return !c || c.jquery ? (c || d).find(a) : this.constructor(c).find(a) } return p.isFunction(a) ? d.ready(a) : (a.selector !== b && (this.selector = a.selector, this.context = a.context), p.makeArray(a, this)) }, selector: "", jquery: "1.8.2", length: 0, size: function () { return this.length }, toArray: function () { return k.call(this) }, get: function (a) { return a == null ? this.toArray() : a < 0 ? this[this.length + a] : this[a] }, pushStack: function (a, b, c) { var d = p.merge(this.constructor(), a); return d.prevObject = this, d.context = this.context, b === "find" ? d.selector = this.selector + (this.selector ? " " : "") + c : b && (d.selector = this.selector + "." + b + "(" + c + ")"), d }, each: function (a, b) { return p.each(this, a, b) }, ready: function (a) { return p.ready.promise().done(a), this }, eq: function (a) { return a = +a, a === -1 ? this.slice(a) : this.slice(a, a + 1) }, first: function () { return this.eq(0) }, last: function () { return this.eq(-1) }, slice: function () { return this.pushStack(k.apply(this, arguments), "slice", k.call(arguments).join(",")) }, map: function (a) { return this.pushStack(p.map(this, function (b, c) { return a.call(b, c, b) })) }, end: function () { return this.prevObject || this.constructor(null) }, push: j, sort: [].sort, splice: [].splice }, p.fn.init.prototype = p.fn, p.extend = p.fn.extend = function () { var a, c, d, e, f, g, h = arguments[0] || {}, i = 1, j = arguments.length, k = !1; typeof h == "boolean" && (k = h, h = arguments[1] || {}, i = 2), typeof h != "object" && !p.isFunction(h) && (h = {}), j === i && (h = this, --i); for (; i < j; i++) if ((a = arguments[i]) != null) for (c in a) { d = h[c], e = a[c]; if (h === e) continue; k && e && (p.isPlainObject(e) || (f = p.isArray(e))) ? (f ? (f = !1, g = d && p.isArray(d) ? d : []) : g = d && p.isPlainObject(d) ? d : {}, h[c] = p.extend(k, g, e)) : e !== b && (h[c] = e) } return h }, p.extend({ noConflict: function (b) { return a.$ === p && (a.$ = i), b && a.jQuery === p && (a.jQuery = h), p }, isReady: !1, readyWait: 1, holdReady: function (a) { a ? p.readyWait++ : p.ready(!0) }, ready: function (a) { if (a === !0 ? --p.readyWait : p.isReady) return; if (!e.body) return setTimeout(p.ready, 1); p.isReady = !0; if (a !== !0 && --p.readyWait > 0) return; d.resolveWith(e, [p]), p.fn.trigger && p(e).trigger("ready").off("ready") }, isFunction: function (a) { return p.type(a) === "function" }, isArray: Array.isArray || function (a) { return p.type(a) === "array" }, isWindow: function (a) { return a != null && a == a.window }, isNumeric: function (a) { return !isNaN(parseFloat(a)) && isFinite(a) }, type: function (a) { return a == null ? String(a) : E[m.call(a)] || "object" }, isPlainObject: function (a) { if (!a || p.type(a) !== "object" || a.nodeType || p.isWindow(a)) return !1; try { if (a.constructor && !n.call(a, "constructor") && !n.call(a.constructor.prototype, "isPrototypeOf")) return !1 } catch (c) { return !1 } var d; for (d in a); return d === b || n.call(a, d) }, isEmptyObject: function (a) { var b; for (b in a) return !1; return !0 }, error: function (a) { throw new Error(a) }, parseHTML: function (a, b, c) { var d; return !a || typeof a != "string" ? null : (typeof b == "boolean" && (c = b, b = 0), b = b || e, (d = v.exec(a)) ? [b.createElement(d[1])] : (d = p.buildFragment([a], b, c ? null : []), p.merge([], (d.cacheable ? p.clone(d.fragment) : d.fragment).childNodes))) }, parseJSON: function (b) { if (!b || typeof b != "string") return null; b = p.trim(b); if (a.JSON && a.JSON.parse) return a.JSON.parse(b); if (w.test(b.replace(y, "@").replace(z, "]").replace(x, ""))) return (new Function("return " + b))(); p.error("Invalid JSON: " + b) }, parseXML: function (c) { var d, e; if (!c || typeof c != "string") return null; try { a.DOMParser ? (e = new DOMParser, d = e.parseFromString(c, "text/xml")) : (d = new ActiveXObject("Microsoft.XMLDOM"), d.async = "false", d.loadXML(c)) } catch (f) { d = b } return (!d || !d.documentElement || d.getElementsByTagName("parsererror").length) && p.error("Invalid XML: " + c), d }, noop: function () { }, globalEval: function (b) { b && r.test(b) && (a.execScript || function (b) { a.eval.call(a, b) })(b) }, camelCase: function (a) { return a.replace(A, "ms-").replace(B, C) }, nodeName: function (a, b) { return a.nodeName && a.nodeName.toLowerCase() === b.toLowerCase() }, each: function (a, c, d) { var e, f = 0, g = a.length, h = g === b || p.isFunction(a); if (d) { if (h) { for (e in a) if (c.apply(a[e], d) === !1) break } else for (; f < g;) if (c.apply(a[f++], d) === !1) break } else if (h) { for (e in a) if (c.call(a[e], e, a[e]) === !1) break } else for (; f < g;) if (c.call(a[f], f, a[f++]) === !1) break; return a }, trim: o && !o.call("﻿ ") ? function (a) { return a == null ? "" : o.call(a) } : function (a) { return a == null ? "" : (a + "").replace(t, "") }, makeArray: function (a, b) { var c, d = b || []; return a != null && (c = p.type(a), a.length == null || c === "string" || c === "function" || c === "regexp" || p.isWindow(a) ? j.call(d, a) : p.merge(d, a)), d }, inArray: function (a, b, c) { var d; if (b) { if (l) return l.call(b, a, c); d = b.length, c = c ? c < 0 ? Math.max(0, d + c) : c : 0; for (; c < d; c++) if (c in b && b[c] === a) return c } return -1 }, merge: function (a, c) { var d = c.length, e = a.length, f = 0; if (typeof d == "number") for (; f < d; f++) a[e++] = c[f]; else while (c[f] !== b) a[e++] = c[f++]; return a.length = e, a }, grep: function (a, b, c) { var d, e = [], f = 0, g = a.length; c = !!c; for (; f < g; f++) d = !!b(a[f], f), c !== d && e.push(a[f]); return e }, map: function (a, c, d) { var e, f, g = [], h = 0, i = a.length, j = a instanceof p || i !== b && typeof i == "number" && (i > 0 && a[0] && a[i - 1] || i === 0 || p.isArray(a)); if (j) for (; h < i; h++) e = c(a[h], h, d), e != null && (g[g.length] = e); else for (f in a) e = c(a[f], f, d), e != null && (g[g.length] = e); return g.concat.apply([], g) }, guid: 1, proxy: function (a, c) { var d, e, f; return typeof c == "string" && (d = a[c], c = a, a = d), p.isFunction(a) ? (e = k.call(arguments, 2), f = function () { return a.apply(c, e.concat(k.call(arguments))) }, f.guid = a.guid = a.guid || p.guid++, f) : b }, access: function (a, c, d, e, f, g, h) { var i, j = d == null, k = 0, l = a.length; if (d && typeof d == "object") { for (k in d) p.access(a, c, k, d[k], 1, g, e); f = 1 } else if (e !== b) { i = h === b && p.isFunction(e), j && (i ? (i = c, c = function (a, b, c) { return i.call(p(a), c) }) : (c.call(a, e), c = null)); if (c) for (; k < l; k++) c(a[k], d, i ? e.call(a[k], k, c(a[k], d)) : e, h); f = 1 } return f ? a : j ? c.call(a) : l ? c(a[0], d) : g }, now: function () { return (new Date).getTime() } }), p.ready.promise = function (b) { if (!d) { d = p.Deferred(); if (e.readyState === "complete") setTimeout(p.ready, 1); else if (e.addEventListener) e.addEventListener("DOMContentLoaded", D, !1), a.addEventListener("load", p.ready, !1); else { e.attachEvent("onreadystatechange", D), a.attachEvent("onload", p.ready); var c = !1; try { c = a.frameElement == null && e.documentElement } catch (f) { } c && c.doScroll && function g() { if (!p.isReady) { try { c.doScroll("left") } catch (a) { return setTimeout(g, 50) } p.ready() } }() } } return d.promise(b) }, p.each("Boolean Number String Function Array Date RegExp Object".split(" "), function (a, b) { E["[object " + b + "]"] = b.toLowerCase() }), c = p(e); var F = {}; p.Callbacks = function (a) { a = typeof a == "string" ? F[a] || G(a) : p.extend({}, a); var c, d, e, f, g, h, i = [], j = !a.once && [], k = function (b) { c = a.memory && b, d = !0, h = f || 0, f = 0, g = i.length, e = !0; for (; i && h < g; h++) if (i[h].apply(b[0], b[1]) === !1 && a.stopOnFalse) { c = !1; break } e = !1, i && (j ? j.length && k(j.shift()) : c ? i = [] : l.disable()) }, l = { add: function () { if (i) { var b = i.length; (function d(b) { p.each(b, function (b, c) { var e = p.type(c); e === "function" && (!a.unique || !l.has(c)) ? i.push(c) : c && c.length && e !== "string" && d(c) }) })(arguments), e ? g = i.length : c && (f = b, k(c)) } return this }, remove: function () { return i && p.each(arguments, function (a, b) { var c; while ((c = p.inArray(b, i, c)) > -1) i.splice(c, 1), e && (c <= g && g--, c <= h && h--) }), this }, has: function (a) { return p.inArray(a, i) > -1 }, empty: function () { return i = [], this }, disable: function () { return i = j = c = b, this }, disabled: function () { return !i }, lock: function () { return j = b, c || l.disable(), this }, locked: function () { return !j }, fireWith: function (a, b) { return b = b || [], b = [a, b.slice ? b.slice() : b], i && (!d || j) && (e ? j.push(b) : k(b)), this }, fire: function () { return l.fireWith(this, arguments), this }, fired: function () { return !!d } }; return l }, p.extend({ Deferred: function (a) { var b = [["resolve", "done", p.Callbacks("once memory"), "resolved"], ["reject", "fail", p.Callbacks("once memory"), "rejected"], ["notify", "progress", p.Callbacks("memory")]], c = "pending", d = { state: function () { return c }, always: function () { return e.done(arguments).fail(arguments), this }, then: function () { var a = arguments; return p.Deferred(function (c) { p.each(b, function (b, d) { var f = d[0], g = a[b]; e[d[1]](p.isFunction(g) ? function () { var a = g.apply(this, arguments); a && p.isFunction(a.promise) ? a.promise().done(c.resolve).fail(c.reject).progress(c.notify) : c[f + "With"](this === e ? c : this, [a]) } : c[f]) }), a = null }).promise() }, promise: function (a) { return a != null ? p.extend(a, d) : d } }, e = {}; return d.pipe = d.then, p.each(b, function (a, f) { var g = f[2], h = f[3]; d[f[1]] = g.add, h && g.add(function () { c = h }, b[a ^ 1][2].disable, b[2][2].lock), e[f[0]] = g.fire, e[f[0] + "With"] = g.fireWith }), d.promise(e), a && a.call(e, e), e }, when: function (a) { var b = 0, c = k.call(arguments), d = c.length, e = d !== 1 || a && p.isFunction(a.promise) ? d : 0, f = e === 1 ? a : p.Deferred(), g = function (a, b, c) { return function (d) { b[a] = this, c[a] = arguments.length > 1 ? k.call(arguments) : d, c === h ? f.notifyWith(b, c) : --e || f.resolveWith(b, c) } }, h, i, j; if (d > 1) { h = new Array(d), i = new Array(d), j = new Array(d); for (; b < d; b++) c[b] && p.isFunction(c[b].promise) ? c[b].promise().done(g(b, j, c)).fail(f.reject).progress(g(b, i, h)) : --e } return e || f.resolveWith(j, c), f.promise() } }), p.support = function () { var b, c, d, f, g, h, i, j, k, l, m, n = e.createElement("div"); n.setAttribute("className", "t"), n.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", c = n.getElementsByTagName("*"), d = n.getElementsByTagName("a")[0], d.style.cssText = "top:1px;float:left;opacity:.5"; if (!c || !c.length) return {}; f = e.createElement("select"), g = f.appendChild(e.createElement("option")), h = n.getElementsByTagName("input")[0], b = { leadingWhitespace: n.firstChild.nodeType === 3, tbody: !n.getElementsByTagName("tbody").length, htmlSerialize: !!n.getElementsByTagName("link").length, style: /top/.test(d.getAttribute("style")), hrefNormalized: d.getAttribute("href") === "/a", opacity: /^0.5/.test(d.style.opacity), cssFloat: !!d.style.cssFloat, checkOn: h.value === "on", optSelected: g.selected, getSetAttribute: n.className !== "t", enctype: !!e.createElement("form").enctype, html5Clone: e.createElement("nav").cloneNode(!0).outerHTML !== "<:nav></:nav>", boxModel: e.compatMode === "CSS1Compat", submitBubbles: !0, changeBubbles: !0, focusinBubbles: !1, deleteExpando: !0, noCloneEvent: !0, inlineBlockNeedsLayout: !1, shrinkWrapBlocks: !1, reliableMarginRight: !0, boxSizingReliable: !0, pixelPosition: !1 }, h.checked = !0, b.noCloneChecked = h.cloneNode(!0).checked, f.disabled = !0, b.optDisabled = !g.disabled; try { delete n.test } catch (o) { b.deleteExpando = !1 } !n.addEventListener && n.attachEvent && n.fireEvent && (n.attachEvent("onclick", m = function () { b.noCloneEvent = !1 }), n.cloneNode(!0).fireEvent("onclick"), n.detachEvent("onclick", m)), h = e.createElement("input"), h.value = "t", h.setAttribute("type", "radio"), b.radioValue = h.value === "t", h.setAttribute("checked", "checked"), h.setAttribute("name", "t"), n.appendChild(h), i = e.createDocumentFragment(), i.appendChild(n.lastChild), b.checkClone = i.cloneNode(!0).cloneNode(!0).lastChild.checked, b.appendChecked = h.checked, i.removeChild(h), i.appendChild(n); if (n.attachEvent) for (k in { submit: !0, change: !0, focusin: !0 }) j = "on" + k, l = j in n, l || (n.setAttribute(j, "return;"), l = typeof n[j] == "function"), b[k + "Bubbles"] = l; return p(function () { var c, d, f, g, h = "padding:0;margin:0;border:0;display:block;overflow:hidden;", i = e.getElementsByTagName("body")[0]; if (!i) return; c = e.createElement("div"), c.style.cssText = "visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px", i.insertBefore(c, i.firstChild), d = e.createElement("div"), c.appendChild(d), d.innerHTML = "<table><tr><td></td><td>t</td></tr></table>", f = d.getElementsByTagName("td"), f[0].style.cssText = "padding:0;margin:0;border:0;display:none", l = f[0].offsetHeight === 0, f[0].style.display = "", f[1].style.display = "none", b.reliableHiddenOffsets = l && f[0].offsetHeight === 0, d.innerHTML = "", d.style.cssText = "box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;", b.boxSizing = d.offsetWidth === 4, b.doesNotIncludeMarginInBodyOffset = i.offsetTop !== 1, a.getComputedStyle && (b.pixelPosition = (a.getComputedStyle(d, null) || {}).top !== "1%", b.boxSizingReliable = (a.getComputedStyle(d, null) || { width: "4px" }).width === "4px", g = e.createElement("div"), g.style.cssText = d.style.cssText = h, g.style.marginRight = g.style.width = "0", d.style.width = "1px", d.appendChild(g), b.reliableMarginRight = !parseFloat((a.getComputedStyle(g, null) || {}).marginRight)), typeof d.style.zoom != "undefined" && (d.innerHTML = "", d.style.cssText = h + "width:1px;padding:1px;display:inline;zoom:1", b.inlineBlockNeedsLayout = d.offsetWidth === 3, d.style.display = "block", d.style.overflow = "visible", d.innerHTML = "<div></div>", d.firstChild.style.width = "5px", b.shrinkWrapBlocks = d.offsetWidth !== 3, c.style.zoom = 1), i.removeChild(c), c = d = f = g = null }), i.removeChild(n), c = d = f = g = h = i = n = null, b }(); var H = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/, I = /([A-Z])/g; p.extend({ cache: {}, deletedIds: [], uuid: 0, expando: "jQuery" + (p.fn.jquery + Math.random()).replace(/\D/g, ""), noData: { embed: !0, object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000", applet: !0 }, hasData: function (a) { return a = a.nodeType ? p.cache[a[p.expando]] : a[p.expando], !!a && !K(a) }, data: function (a, c, d, e) { if (!p.acceptData(a)) return; var f, g, h = p.expando, i = typeof c == "string", j = a.nodeType, k = j ? p.cache : a, l = j ? a[h] : a[h] && h; if ((!l || !k[l] || !e && !k[l].data) && i && d === b) return; l || (j ? a[h] = l = p.deletedIds.pop() || p.guid++ : l = h), k[l] || (k[l] = {}, j || (k[l].toJSON = p.noop)); if (typeof c == "object" || typeof c == "function") e ? k[l] = p.extend(k[l], c) : k[l].data = p.extend(k[l].data, c); return f = k[l], e || (f.data || (f.data = {}), f = f.data), d !== b && (f[p.camelCase(c)] = d), i ? (g = f[c], g == null && (g = f[p.camelCase(c)])) : g = f, g }, removeData: function (a, b, c) { if (!p.acceptData(a)) return; var d, e, f, g = a.nodeType, h = g ? p.cache : a, i = g ? a[p.expando] : p.expando; if (!h[i]) return; if (b) { d = c ? h[i] : h[i].data; if (d) { p.isArray(b) || (b in d ? b = [b] : (b = p.camelCase(b), b in d ? b = [b] : b = b.split(" "))); for (e = 0, f = b.length; e < f; e++) delete d[b[e]]; if (!(c ? K : p.isEmptyObject)(d)) return } } if (!c) { delete h[i].data; if (!K(h[i])) return } g ? p.cleanData([a], !0) : p.support.deleteExpando || h != h.window ? delete h[i] : h[i] = null }, _data: function (a, b, c) { return p.data(a, b, c, !0) }, acceptData: function (a) { var b = a.nodeName && p.noData[a.nodeName.toLowerCase()]; return !b || b !== !0 && a.getAttribute("classid") === b } }), p.fn.extend({ data: function (a, c) { var d, e, f, g, h, i = this[0], j = 0, k = null; if (a === b) { if (this.length) { k = p.data(i); if (i.nodeType === 1 && !p._data(i, "parsedAttrs")) { f = i.attributes; for (h = f.length; j < h; j++) g = f[j].name, g.indexOf("data-") || (g = p.camelCase(g.substring(5)), J(i, g, k[g])); p._data(i, "parsedAttrs", !0) } } return k } return typeof a == "object" ? this.each(function () { p.data(this, a) }) : (d = a.split(".", 2), d[1] = d[1] ? "." + d[1] : "", e = d[1] + "!", p.access(this, function (c) { if (c === b) return k = this.triggerHandler("getData" + e, [d[0]]), k === b && i && (k = p.data(i, a), k = J(i, a, k)), k === b && d[1] ? this.data(d[0]) : k; d[1] = c, this.each(function () { var b = p(this); b.triggerHandler("setData" + e, d), p.data(this, a, c), b.triggerHandler("changeData" + e, d) }) }, null, c, arguments.length > 1, null, !1)) }, removeData: function (a) { return this.each(function () { p.removeData(this, a) }) } }), p.extend({ queue: function (a, b, c) { var d; if (a) return b = (b || "fx") + "queue", d = p._data(a, b), c && (!d || p.isArray(c) ? d = p._data(a, b, p.makeArray(c)) : d.push(c)), d || [] }, dequeue: function (a, b) { b = b || "fx"; var c = p.queue(a, b), d = c.length, e = c.shift(), f = p._queueHooks(a, b), g = function () { p.dequeue(a, b) }; e === "inprogress" && (e = c.shift(), d--), e && (b === "fx" && c.unshift("inprogress"), delete f.stop, e.call(a, g, f)), !d && f && f.empty.fire() }, _queueHooks: function (a, b) { var c = b + "queueHooks"; return p._data(a, c) || p._data(a, c, { empty: p.Callbacks("once memory").add(function () { p.removeData(a, b + "queue", !0), p.removeData(a, c, !0) }) }) } }), p.fn.extend({ queue: function (a, c) { var d = 2; return typeof a != "string" && (c = a, a = "fx", d--), arguments.length < d ? p.queue(this[0], a) : c === b ? this : this.each(function () { var b = p.queue(this, a, c); p._queueHooks(this, a), a === "fx" && b[0] !== "inprogress" && p.dequeue(this, a) }) }, dequeue: function (a) { return this.each(function () { p.dequeue(this, a) }) }, delay: function (a, b) { return a = p.fx ? p.fx.speeds[a] || a : a, b = b || "fx", this.queue(b, function (b, c) { var d = setTimeout(b, a); c.stop = function () { clearTimeout(d) } }) }, clearQueue: function (a) { return this.queue(a || "fx", []) }, promise: function (a, c) { var d, e = 1, f = p.Deferred(), g = this, h = this.length, i = function () { --e || f.resolveWith(g, [g]) }; typeof a != "string" && (c = a, a = b), a = a || "fx"; while (h--) d = p._data(g[h], a + "queueHooks"), d && d.empty && (e++, d.empty.add(i)); return i(), f.promise(c) } }); var L, M, N, O = /[\t\r\n]/g, P = /\r/g, Q = /^(?:button|input)$/i, R = /^(?:button|input|object|select|textarea)$/i, S = /^a(?:rea|)$/i, T = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i, U = p.support.getSetAttribute; p.fn.extend({ attr: function (a, b) { return p.access(this, p.attr, a, b, arguments.length > 1) }, removeAttr: function (a) { return this.each(function () { p.removeAttr(this, a) }) }, prop: function (a, b) { return p.access(this, p.prop, a, b, arguments.length > 1) }, removeProp: function (a) { return a = p.propFix[a] || a, this.each(function () { try { this[a] = b, delete this[a] } catch (c) { } }) }, addClass: function (a) { var b, c, d, e, f, g, h; if (p.isFunction(a)) return this.each(function (b) { p(this).addClass(a.call(this, b, this.className)) }); if (a && typeof a == "string") { b = a.split(s); for (c = 0, d = this.length; c < d; c++) { e = this[c]; if (e.nodeType === 1) if (!e.className && b.length === 1) e.className = a; else { f = " " + e.className + " "; for (g = 0, h = b.length; g < h; g++) f.indexOf(" " + b[g] + " ") < 0 && (f += b[g] + " "); e.className = p.trim(f) } } } return this }, removeClass: function (a) { var c, d, e, f, g, h, i; if (p.isFunction(a)) return this.each(function (b) { p(this).removeClass(a.call(this, b, this.className)) }); if (a && typeof a == "string" || a === b) { c = (a || "").split(s); for (h = 0, i = this.length; h < i; h++) { e = this[h]; if (e.nodeType === 1 && e.className) { d = (" " + e.className + " ").replace(O, " "); for (f = 0, g = c.length; f < g; f++) while (d.indexOf(" " + c[f] + " ") >= 0) d = d.replace(" " + c[f] + " ", " "); e.className = a ? p.trim(d) : "" } } } return this }, toggleClass: function (a, b) { var c = typeof a, d = typeof b == "boolean"; return p.isFunction(a) ? this.each(function (c) { p(this).toggleClass(a.call(this, c, this.className, b), b) }) : this.each(function () { if (c === "string") { var e, f = 0, g = p(this), h = b, i = a.split(s); while (e = i[f++]) h = d ? h : !g.hasClass(e), g[h ? "addClass" : "removeClass"](e) } else if (c === "undefined" || c === "boolean") this.className && p._data(this, "__className__", this.className), this.className = this.className || a === !1 ? "" : p._data(this, "__className__") || "" }) }, hasClass: function (a) { var b = " " + a + " ", c = 0, d = this.length; for (; c < d; c++) if (this[c].nodeType === 1 && (" " + this[c].className + " ").replace(O, " ").indexOf(b) >= 0) return !0; return !1 }, val: function (a) { var c, d, e, f = this[0]; if (!arguments.length) { if (f) return c = p.valHooks[f.type] || p.valHooks[f.nodeName.toLowerCase()], c && "get" in c && (d = c.get(f, "value")) !== b ? d : (d = f.value, typeof d == "string" ? d.replace(P, "") : d == null ? "" : d); return } return e = p.isFunction(a), this.each(function (d) { var f, g = p(this); if (this.nodeType !== 1) return; e ? f = a.call(this, d, g.val()) : f = a, f == null ? f = "" : typeof f == "number" ? f += "" : p.isArray(f) && (f = p.map(f, function (a) { return a == null ? "" : a + "" })), c = p.valHooks[this.type] || p.valHooks[this.nodeName.toLowerCase()]; if (!c || !("set" in c) || c.set(this, f, "value") === b) this.value = f }) } }), p.extend({ valHooks: { option: { get: function (a) { var b = a.attributes.value; return !b || b.specified ? a.value : a.text } }, select: { get: function (a) { var b, c, d, e, f = a.selectedIndex, g = [], h = a.options, i = a.type === "select-one"; if (f < 0) return null; c = i ? f : 0, d = i ? f + 1 : h.length; for (; c < d; c++) { e = h[c]; if (e.selected && (p.support.optDisabled ? !e.disabled : e.getAttribute("disabled") === null) && (!e.parentNode.disabled || !p.nodeName(e.parentNode, "optgroup"))) { b = p(e).val(); if (i) return b; g.push(b) } } return i && !g.length && h.length ? p(h[f]).val() : g }, set: function (a, b) { var c = p.makeArray(b); return p(a).find("option").each(function () { this.selected = p.inArray(p(this).val(), c) >= 0 }), c.length || (a.selectedIndex = -1), c } } }, attrFn: {}, attr: function (a, c, d, e) { var f, g, h, i = a.nodeType; if (!a || i === 3 || i === 8 || i === 2) return; if (e && p.isFunction(p.fn[c])) return p(a)[c](d); if (typeof a.getAttribute == "undefined") return p.prop(a, c, d); h = i !== 1 || !p.isXMLDoc(a), h && (c = c.toLowerCase(), g = p.attrHooks[c] || (T.test(c) ? M : L)); if (d !== b) { if (d === null) { p.removeAttr(a, c); return } return g && "set" in g && h && (f = g.set(a, d, c)) !== b ? f : (a.setAttribute(c, d + ""), d) } return g && "get" in g && h && (f = g.get(a, c)) !== null ? f : (f = a.getAttribute(c), f === null ? b : f) }, removeAttr: function (a, b) { var c, d, e, f, g = 0; if (b && a.nodeType === 1) { d = b.split(s); for (; g < d.length; g++) e = d[g], e && (c = p.propFix[e] || e, f = T.test(e), f || p.attr(a, e, ""), a.removeAttribute(U ? e : c), f && c in a && (a[c] = !1)) } }, attrHooks: { type: { set: function (a, b) { if (Q.test(a.nodeName) && a.parentNode) p.error("type property can't be changed"); else if (!p.support.radioValue && b === "radio" && p.nodeName(a, "input")) { var c = a.value; return a.setAttribute("type", b), c && (a.value = c), b } } }, value: { get: function (a, b) { return L && p.nodeName(a, "button") ? L.get(a, b) : b in a ? a.value : null }, set: function (a, b, c) { if (L && p.nodeName(a, "button")) return L.set(a, b, c); a.value = b } } }, propFix: { tabindex: "tabIndex", readonly: "readOnly", "for": "htmlFor", "class": "className", maxlength: "maxLength", cellspacing: "cellSpacing", cellpadding: "cellPadding", rowspan: "rowSpan", colspan: "colSpan", usemap: "useMap", frameborder: "frameBorder", contenteditable: "contentEditable" }, prop: function (a, c, d) { var e, f, g, h = a.nodeType; if (!a || h === 3 || h === 8 || h === 2) return; return g = h !== 1 || !p.isXMLDoc(a), g && (c = p.propFix[c] || c, f = p.propHooks[c]), d !== b ? f && "set" in f && (e = f.set(a, d, c)) !== b ? e : a[c] = d : f && "get" in f && (e = f.get(a, c)) !== null ? e : a[c] }, propHooks: { tabIndex: { get: function (a) { var c = a.getAttributeNode("tabindex"); return c && c.specified ? parseInt(c.value, 10) : R.test(a.nodeName) || S.test(a.nodeName) && a.href ? 0 : b } } } }), M = { get: function (a, c) { var d, e = p.prop(a, c); return e === !0 || typeof e != "boolean" && (d = a.getAttributeNode(c)) && d.nodeValue !== !1 ? c.toLowerCase() : b }, set: function (a, b, c) { var d; return b === !1 ? p.removeAttr(a, c) : (d = p.propFix[c] || c, d in a && (a[d] = !0), a.setAttribute(c, c.toLowerCase())), c } }, U || (N = { name: !0, id: !0, coords: !0 }, L = p.valHooks.button = { get: function (a, c) { var d; return d = a.getAttributeNode(c), d && (N[c] ? d.value !== "" : d.specified) ? d.value : b }, set: function (a, b, c) { var d = a.getAttributeNode(c); return d || (d = e.createAttribute(c), a.setAttributeNode(d)), d.value = b + "" } }, p.each(["width", "height"], function (a, b) { p.attrHooks[b] = p.extend(p.attrHooks[b], { set: function (a, c) { if (c === "") return a.setAttribute(b, "auto"), c } }) }), p.attrHooks.contenteditable = { get: L.get, set: function (a, b, c) { b === "" && (b = "false"), L.set(a, b, c) } }), p.support.hrefNormalized || p.each(["href", "src", "width", "height"], function (a, c) { p.attrHooks[c] = p.extend(p.attrHooks[c], { get: function (a) { var d = a.getAttribute(c, 2); return d === null ? b : d } }) }), p.support.style || (p.attrHooks.style = { get: function (a) { return a.style.cssText.toLowerCase() || b }, set: function (a, b) { return a.style.cssText = b + "" } }), p.support.optSelected || (p.propHooks.selected = p.extend(p.propHooks.selected, { get: function (a) { var b = a.parentNode; return b && (b.selectedIndex, b.parentNode && b.parentNode.selectedIndex), null } })), p.support.enctype || (p.propFix.enctype = "encoding"), p.support.checkOn || p.each(["radio", "checkbox"], function () { p.valHooks[this] = { get: function (a) { return a.getAttribute("value") === null ? "on" : a.value } } }), p.each(["radio", "checkbox"], function () { p.valHooks[this] = p.extend(p.valHooks[this], { set: function (a, b) { if (p.isArray(b)) return a.checked = p.inArray(p(a).val(), b) >= 0 } }) }); var V = /^(?:textarea|input|select)$/i, W = /^([^\.]*|)(?:\.(.+)|)$/, X = /(?:^|\s)hover(\.\S+|)\b/, Y = /^key/, Z = /^(?:mouse|contextmenu)|click/, $ = /^(?:focusinfocus|focusoutblur)$/, _ = function (a) { return p.event.special.hover ? a : a.replace(X, "mouseenter$1 mouseleave$1") }; p.event = { add: function (a, c, d, e, f) { var g, h, i, j, k, l, m, n, o, q, r; if (a.nodeType === 3 || a.nodeType === 8 || !c || !d || !(g = p._data(a))) return; d.handler && (o = d, d = o.handler, f = o.selector), d.guid || (d.guid = p.guid++), i = g.events, i || (g.events = i = {}), h = g.handle, h || (g.handle = h = function (a) { return typeof p != "undefined" && (!a || p.event.triggered !== a.type) ? p.event.dispatch.apply(h.elem, arguments) : b }, h.elem = a), c = p.trim(_(c)).split(" "); for (j = 0; j < c.length; j++) { k = W.exec(c[j]) || [], l = k[1], m = (k[2] || "").split(".").sort(), r = p.event.special[l] || {}, l = (f ? r.delegateType : r.bindType) || l, r = p.event.special[l] || {}, n = p.extend({ type: l, origType: k[1], data: e, handler: d, guid: d.guid, selector: f, needsContext: f && p.expr.match.needsContext.test(f), namespace: m.join(".") }, o), q = i[l]; if (!q) { q = i[l] = [], q.delegateCount = 0; if (!r.setup || r.setup.call(a, e, m, h) === !1) a.addEventListener ? a.addEventListener(l, h, !1) : a.attachEvent && a.attachEvent("on" + l, h) } r.add && (r.add.call(a, n), n.handler.guid || (n.handler.guid = d.guid)), f ? q.splice(q.delegateCount++, 0, n) : q.push(n), p.event.global[l] = !0 } a = null }, global: {}, remove: function (a, b, c, d, e) { var f, g, h, i, j, k, l, m, n, o, q, r = p.hasData(a) && p._data(a); if (!r || !(m = r.events)) return; b = p.trim(_(b || "")).split(" "); for (f = 0; f < b.length; f++) { g = W.exec(b[f]) || [], h = i = g[1], j = g[2]; if (!h) { for (h in m) p.event.remove(a, h + b[f], c, d, !0); continue } n = p.event.special[h] || {}, h = (d ? n.delegateType : n.bindType) || h, o = m[h] || [], k = o.length, j = j ? new RegExp("(^|\\.)" + j.split(".").sort().join("\\.(?:.*\\.|)") + "(\\.|$)") : null; for (l = 0; l < o.length; l++) q = o[l], (e || i === q.origType) && (!c || c.guid === q.guid) && (!j || j.test(q.namespace)) && (!d || d === q.selector || d === "**" && q.selector) && (o.splice(l--, 1), q.selector && o.delegateCount--, n.remove && n.remove.call(a, q)); o.length === 0 && k !== o.length && ((!n.teardown || n.teardown.call(a, j, r.handle) === !1) && p.removeEvent(a, h, r.handle), delete m[h]) } p.isEmptyObject(m) && (delete r.handle, p.removeData(a, "events", !0)) }, customEvent: { getData: !0, setData: !0, changeData: !0 }, trigger: function (c, d, f, g) { if (!f || f.nodeType !== 3 && f.nodeType !== 8) { var h, i, j, k, l, m, n, o, q, r, s = c.type || c, t = []; if ($.test(s + p.event.triggered)) return; s.indexOf("!") >= 0 && (s = s.slice(0, -1), i = !0), s.indexOf(".") >= 0 && (t = s.split("."), s = t.shift(), t.sort()); if ((!f || p.event.customEvent[s]) && !p.event.global[s]) return; c = typeof c == "object" ? c[p.expando] ? c : new p.Event(s, c) : new p.Event(s), c.type = s, c.isTrigger = !0, c.exclusive = i, c.namespace = t.join("."), c.namespace_re = c.namespace ? new RegExp("(^|\\.)" + t.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, m = s.indexOf(":") < 0 ? "on" + s : ""; if (!f) { h = p.cache; for (j in h) h[j].events && h[j].events[s] && p.event.trigger(c, d, h[j].handle.elem, !0); return } c.result = b, c.target || (c.target = f), d = d != null ? p.makeArray(d) : [], d.unshift(c), n = p.event.special[s] || {}; if (n.trigger && n.trigger.apply(f, d) === !1) return; q = [[f, n.bindType || s]]; if (!g && !n.noBubble && !p.isWindow(f)) { r = n.delegateType || s, k = $.test(r + s) ? f : f.parentNode; for (l = f; k; k = k.parentNode) q.push([k, r]), l = k; l === (f.ownerDocument || e) && q.push([l.defaultView || l.parentWindow || a, r]) } for (j = 0; j < q.length && !c.isPropagationStopped() ; j++) k = q[j][0], c.type = q[j][1], o = (p._data(k, "events") || {})[c.type] && p._data(k, "handle"), o && o.apply(k, d), o = m && k[m], o && p.acceptData(k) && o.apply && o.apply(k, d) === !1 && c.preventDefault(); return c.type = s, !g && !c.isDefaultPrevented() && (!n._default || n._default.apply(f.ownerDocument, d) === !1) && (s !== "click" || !p.nodeName(f, "a")) && p.acceptData(f) && m && f[s] && (s !== "focus" && s !== "blur" || c.target.offsetWidth !== 0) && !p.isWindow(f) && (l = f[m], l && (f[m] = null), p.event.triggered = s, f[s](), p.event.triggered = b, l && (f[m] = l)), c.result } return }, dispatch: function (c) { c = p.event.fix(c || a.event); var d, e, f, g, h, i, j, l, m, n, o = (p._data(this, "events") || {})[c.type] || [], q = o.delegateCount, r = k.call(arguments), s = !c.exclusive && !c.namespace, t = p.event.special[c.type] || {}, u = []; r[0] = c, c.delegateTarget = this; if (t.preDispatch && t.preDispatch.call(this, c) === !1) return; if (q && (!c.button || c.type !== "click")) for (f = c.target; f != this; f = f.parentNode || this) if (f.disabled !== !0 || c.type !== "click") { h = {}, j = []; for (d = 0; d < q; d++) l = o[d], m = l.selector, h[m] === b && (h[m] = l.needsContext ? p(m, this).index(f) >= 0 : p.find(m, this, null, [f]).length), h[m] && j.push(l); j.length && u.push({ elem: f, matches: j }) } o.length > q && u.push({ elem: this, matches: o.slice(q) }); for (d = 0; d < u.length && !c.isPropagationStopped() ; d++) { i = u[d], c.currentTarget = i.elem; for (e = 0; e < i.matches.length && !c.isImmediatePropagationStopped() ; e++) { l = i.matches[e]; if (s || !c.namespace && !l.namespace || c.namespace_re && c.namespace_re.test(l.namespace)) c.data = l.data, c.handleObj = l, g = ((p.event.special[l.origType] || {}).handle || l.handler).apply(i.elem, r), g !== b && (c.result = g, g === !1 && (c.preventDefault(), c.stopPropagation())) } } return t.postDispatch && t.postDispatch.call(this, c), c.result }, props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "), fixHooks: {}, keyHooks: { props: "char charCode key keyCode".split(" "), filter: function (a, b) { return a.which == null && (a.which = b.charCode != null ? b.charCode : b.keyCode), a } }, mouseHooks: { props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "), filter: function (a, c) { var d, f, g, h = c.button, i = c.fromElement; return a.pageX == null && c.clientX != null && (d = a.target.ownerDocument || e, f = d.documentElement, g = d.body, a.pageX = c.clientX + (f && f.scrollLeft || g && g.scrollLeft || 0) - (f && f.clientLeft || g && g.clientLeft || 0), a.pageY = c.clientY + (f && f.scrollTop || g && g.scrollTop || 0) - (f && f.clientTop || g && g.clientTop || 0)), !a.relatedTarget && i && (a.relatedTarget = i === a.target ? c.toElement : i), !a.which && h !== b && (a.which = h & 1 ? 1 : h & 2 ? 3 : h & 4 ? 2 : 0), a } }, fix: function (a) { if (a[p.expando]) return a; var b, c, d = a, f = p.event.fixHooks[a.type] || {}, g = f.props ? this.props.concat(f.props) : this.props; a = p.Event(d); for (b = g.length; b;) c = g[--b], a[c] = d[c]; return a.target || (a.target = d.srcElement || e), a.target.nodeType === 3 && (a.target = a.target.parentNode), a.metaKey = !!a.metaKey, f.filter ? f.filter(a, d) : a }, special: { load: { noBubble: !0 }, focus: { delegateType: "focusin" }, blur: { delegateType: "focusout" }, beforeunload: { setup: function (a, b, c) { p.isWindow(this) && (this.onbeforeunload = c) }, teardown: function (a, b) { this.onbeforeunload === b && (this.onbeforeunload = null) } } }, simulate: function (a, b, c, d) { var e = p.extend(new p.Event, c, { type: a, isSimulated: !0, originalEvent: {} }); d ? p.event.trigger(e, null, b) : p.event.dispatch.call(b, e), e.isDefaultPrevented() && c.preventDefault() } }, p.event.handle = p.event.dispatch, p.removeEvent = e.removeEventListener ? function (a, b, c) { a.removeEventListener && a.removeEventListener(b, c, !1) } : function (a, b, c) { var d = "on" + b; a.detachEvent && (typeof a[d] == "undefined" && (a[d] = null), a.detachEvent(d, c)) }, p.Event = function (a, b) { if (this instanceof p.Event) a && a.type ? (this.originalEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || a.returnValue === !1 || a.getPreventDefault && a.getPreventDefault() ? bb : ba) : this.type = a, b && p.extend(this, b), this.timeStamp = a && a.timeStamp || p.now(), this[p.expando] = !0; else return new p.Event(a, b) }, p.Event.prototype = { preventDefault: function () { this.isDefaultPrevented = bb; var a = this.originalEvent; if (!a) return; a.preventDefault ? a.preventDefault() : a.returnValue = !1 }, stopPropagation: function () { this.isPropagationStopped = bb; var a = this.originalEvent; if (!a) return; a.stopPropagation && a.stopPropagation(), a.cancelBubble = !0 }, stopImmediatePropagation: function () { this.isImmediatePropagationStopped = bb, this.stopPropagation() }, isDefaultPrevented: ba, isPropagationStopped: ba, isImmediatePropagationStopped: ba }, p.each({ mouseenter: "mouseover", mouseleave: "mouseout" }, function (a, b) { p.event.special[a] = { delegateType: b, bindType: b, handle: function (a) { var c, d = this, e = a.relatedTarget, f = a.handleObj, g = f.selector; if (!e || e !== d && !p.contains(d, e)) a.type = f.origType, c = f.handler.apply(this, arguments), a.type = b; return c } } }), p.support.submitBubbles || (p.event.special.submit = { setup: function () { if (p.nodeName(this, "form")) return !1; p.event.add(this, "click._submit keypress._submit", function (a) { var c = a.target, d = p.nodeName(c, "input") || p.nodeName(c, "button") ? c.form : b; d && !p._data(d, "_submit_attached") && (p.event.add(d, "submit._submit", function (a) { a._submit_bubble = !0 }), p._data(d, "_submit_attached", !0)) }) }, postDispatch: function (a) { a._submit_bubble && (delete a._submit_bubble, this.parentNode && !a.isTrigger && p.event.simulate("submit", this.parentNode, a, !0)) }, teardown: function () { if (p.nodeName(this, "form")) return !1; p.event.remove(this, "._submit") } }), p.support.changeBubbles || (p.event.special.change = { setup: function () { if (V.test(this.nodeName)) { if (this.type === "checkbox" || this.type === "radio") p.event.add(this, "propertychange._change", function (a) { a.originalEvent.propertyName === "checked" && (this._just_changed = !0) }), p.event.add(this, "click._change", function (a) { this._just_changed && !a.isTrigger && (this._just_changed = !1), p.event.simulate("change", this, a, !0) }); return !1 } p.event.add(this, "beforeactivate._change", function (a) { var b = a.target; V.test(b.nodeName) && !p._data(b, "_change_attached") && (p.event.add(b, "change._change", function (a) { this.parentNode && !a.isSimulated && !a.isTrigger && p.event.simulate("change", this.parentNode, a, !0) }), p._data(b, "_change_attached", !0)) }) }, handle: function (a) { var b = a.target; if (this !== b || a.isSimulated || a.isTrigger || b.type !== "radio" && b.type !== "checkbox") return a.handleObj.handler.apply(this, arguments) }, teardown: function () { return p.event.remove(this, "._change"), !V.test(this.nodeName) } }), p.support.focusinBubbles || p.each({ focus: "focusin", blur: "focusout" }, function (a, b) { var c = 0, d = function (a) { p.event.simulate(b, a.target, p.event.fix(a), !0) }; p.event.special[b] = { setup: function () { c++ === 0 && e.addEventListener(a, d, !0) }, teardown: function () { --c === 0 && e.removeEventListener(a, d, !0) } } }), p.fn.extend({ on: function (a, c, d, e, f) { var g, h; if (typeof a == "object") { typeof c != "string" && (d = d || c, c = b); for (h in a) this.on(h, c, d, a[h], f); return this } d == null && e == null ? (e = c, d = c = b) : e == null && (typeof c == "string" ? (e = d, d = b) : (e = d, d = c, c = b)); if (e === !1) e = ba; else if (!e) return this; return f === 1 && (g = e, e = function (a) { return p().off(a), g.apply(this, arguments) }, e.guid = g.guid || (g.guid = p.guid++)), this.each(function () { p.event.add(this, a, e, d, c) }) }, one: function (a, b, c, d) { return this.on(a, b, c, d, 1) }, off: function (a, c, d) { var e, f; if (a && a.preventDefault && a.handleObj) return e = a.handleObj, p(a.delegateTarget).off(e.namespace ? e.origType + "." + e.namespace : e.origType, e.selector, e.handler), this; if (typeof a == "object") { for (f in a) this.off(f, c, a[f]); return this } if (c === !1 || typeof c == "function") d = c, c = b; return d === !1 && (d = ba), this.each(function () { p.event.remove(this, a, d, c) }) }, bind: function (a, b, c) { return this.on(a, null, b, c) }, unbind: function (a, b) { return this.off(a, null, b) }, live: function (a, b, c) { return p(this.context).on(a, this.selector, b, c), this }, die: function (a, b) { return p(this.context).off(a, this.selector || "**", b), this }, delegate: function (a, b, c, d) { return this.on(b, a, c, d) }, undelegate: function (a, b, c) { return arguments.length === 1 ? this.off(a, "**") : this.off(b, a || "**", c) }, trigger: function (a, b) { return this.each(function () { p.event.trigger(a, b, this) }) }, triggerHandler: function (a, b) { if (this[0]) return p.event.trigger(a, b, this[0], !0) }, toggle: function (a) { var b = arguments, c = a.guid || p.guid++, d = 0, e = function (c) { var e = (p._data(this, "lastToggle" + a.guid) || 0) % d; return p._data(this, "lastToggle" + a.guid, e + 1), c.preventDefault(), b[e].apply(this, arguments) || !1 }; e.guid = c; while (d < b.length) b[d++].guid = c; return this.click(e) }, hover: function (a, b) { return this.mouseenter(a).mouseleave(b || a) } }), p.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function (a, b) { p.fn[b] = function (a, c) { return c == null && (c = a, a = null), arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b) }, Y.test(b) && (p.event.fixHooks[b] = p.event.keyHooks), Z.test(b) && (p.event.fixHooks[b] = p.event.mouseHooks) }), function (a, b) { function bc(a, b, c, d) { c = c || [], b = b || r; var e, f, i, j, k = b.nodeType; if (!a || typeof a != "string") return c; if (k !== 1 && k !== 9) return []; i = g(b); if (!i && !d) if (e = P.exec(a)) if (j = e[1]) { if (k === 9) { f = b.getElementById(j); if (!f || !f.parentNode) return c; if (f.id === j) return c.push(f), c } else if (b.ownerDocument && (f = b.ownerDocument.getElementById(j)) && h(b, f) && f.id === j) return c.push(f), c } else { if (e[2]) return w.apply(c, x.call(b.getElementsByTagName(a), 0)), c; if ((j = e[3]) && _ && b.getElementsByClassName) return w.apply(c, x.call(b.getElementsByClassName(j), 0)), c } return bp(a.replace(L, "$1"), b, c, d, i) } function bd(a) { return function (b) { var c = b.nodeName.toLowerCase(); return c === "input" && b.type === a } } function be(a) { return function (b) { var c = b.nodeName.toLowerCase(); return (c === "input" || c === "button") && b.type === a } } function bf(a) { return z(function (b) { return b = +b, z(function (c, d) { var e, f = a([], c.length, b), g = f.length; while (g--) c[e = f[g]] && (c[e] = !(d[e] = c[e])) }) }) } function bg(a, b, c) { if (a === b) return c; var d = a.nextSibling; while (d) { if (d === b) return -1; d = d.nextSibling } return 1 } function bh(a, b) { var c, d, f, g, h, i, j, k = C[o][a]; if (k) return b ? 0 : k.slice(0); h = a, i = [], j = e.preFilter; while (h) { if (!c || (d = M.exec(h))) d && (h = h.slice(d[0].length)), i.push(f = []); c = !1; if (d = N.exec(h)) f.push(c = new q(d.shift())), h = h.slice(c.length), c.type = d[0].replace(L, " "); for (g in e.filter) (d = W[g].exec(h)) && (!j[g] || (d = j[g](d, r, !0))) && (f.push(c = new q(d.shift())), h = h.slice(c.length), c.type = g, c.matches = d); if (!c) break } return b ? h.length : h ? bc.error(a) : C(a, i).slice(0) } function bi(a, b, d) { var e = b.dir, f = d && b.dir === "parentNode", g = u++; return b.first ? function (b, c, d) { while (b = b[e]) if (f || b.nodeType === 1) return a(b, c, d) } : function (b, d, h) { if (!h) { var i, j = t + " " + g + " ", k = j + c; while (b = b[e]) if (f || b.nodeType === 1) { if ((i = b[o]) === k) return b.sizset; if (typeof i == "string" && i.indexOf(j) === 0) { if (b.sizset) return b } else { b[o] = k; if (a(b, d, h)) return b.sizset = !0, b; b.sizset = !1 } } } else while (b = b[e]) if (f || b.nodeType === 1) if (a(b, d, h)) return b } } function bj(a) { return a.length > 1 ? function (b, c, d) { var e = a.length; while (e--) if (!a[e](b, c, d)) return !1; return !0 } : a[0] } function bk(a, b, c, d, e) { var f, g = [], h = 0, i = a.length, j = b != null; for (; h < i; h++) if (f = a[h]) if (!c || c(f, d, e)) g.push(f), j && b.push(h); return g } function bl(a, b, c, d, e, f) { return d && !d[o] && (d = bl(d)), e && !e[o] && (e = bl(e, f)), z(function (f, g, h, i) { if (f && e) return; var j, k, l, m = [], n = [], o = g.length, p = f || bo(b || "*", h.nodeType ? [h] : h, [], f), q = a && (f || !b) ? bk(p, m, a, h, i) : p, r = c ? e || (f ? a : o || d) ? [] : g : q; c && c(q, r, h, i); if (d) { l = bk(r, n), d(l, [], h, i), j = l.length; while (j--) if (k = l[j]) r[n[j]] = !(q[n[j]] = k) } if (f) { j = a && r.length; while (j--) if (k = r[j]) f[m[j]] = !(g[m[j]] = k) } else r = bk(r === g ? r.splice(o, r.length) : r), e ? e(null, g, r, i) : w.apply(g, r) }) } function bm(a) { var b, c, d, f = a.length, g = e.relative[a[0].type], h = g || e.relative[" "], i = g ? 1 : 0, j = bi(function (a) { return a === b }, h, !0), k = bi(function (a) { return y.call(b, a) > -1 }, h, !0), m = [function (a, c, d) { return !g && (d || c !== l) || ((b = c).nodeType ? j(a, c, d) : k(a, c, d)) }]; for (; i < f; i++) if (c = e.relative[a[i].type]) m = [bi(bj(m), c)]; else { c = e.filter[a[i].type].apply(null, a[i].matches); if (c[o]) { d = ++i; for (; d < f; d++) if (e.relative[a[d].type]) break; return bl(i > 1 && bj(m), i > 1 && a.slice(0, i - 1).join("").replace(L, "$1"), c, i < d && bm(a.slice(i, d)), d < f && bm(a = a.slice(d)), d < f && a.join("")) } m.push(c) } return bj(m) } function bn(a, b) { var d = b.length > 0, f = a.length > 0, g = function (h, i, j, k, m) { var n, o, p, q = [], s = 0, u = "0", x = h && [], y = m != null, z = l, A = h || f && e.find.TAG("*", m && i.parentNode || i), B = t += z == null ? 1 : Math.E; y && (l = i !== r && i, c = g.el); for (; (n = A[u]) != null; u++) { if (f && n) { for (o = 0; p = a[o]; o++) if (p(n, i, j)) { k.push(n); break } y && (t = B, c = ++g.el) } d && ((n = !p && n) && s--, h && x.push(n)) } s += u; if (d && u !== s) { for (o = 0; p = b[o]; o++) p(x, q, i, j); if (h) { if (s > 0) while (u--) !x[u] && !q[u] && (q[u] = v.call(k)); q = bk(q) } w.apply(k, q), y && !h && q.length > 0 && s + b.length > 1 && bc.uniqueSort(k) } return y && (t = B, l = z), x }; return g.el = 0, d ? z(g) : g } function bo(a, b, c, d) { var e = 0, f = b.length; for (; e < f; e++) bc(a, b[e], c, d); return c } function bp(a, b, c, d, f) { var g, h, j, k, l, m = bh(a), n = m.length; if (!d && m.length === 1) { h = m[0] = m[0].slice(0); if (h.length > 2 && (j = h[0]).type === "ID" && b.nodeType === 9 && !f && e.relative[h[1].type]) { b = e.find.ID(j.matches[0].replace(V, ""), b, f)[0]; if (!b) return c; a = a.slice(h.shift().length) } for (g = W.POS.test(a) ? -1 : h.length - 1; g >= 0; g--) { j = h[g]; if (e.relative[k = j.type]) break; if (l = e.find[k]) if (d = l(j.matches[0].replace(V, ""), R.test(h[0].type) && b.parentNode || b, f)) { h.splice(g, 1), a = d.length && h.join(""); if (!a) return w.apply(c, x.call(d, 0)), c; break } } } return i(a, m)(d, b, f, c, R.test(a)), c } function bq() { } var c, d, e, f, g, h, i, j, k, l, m = !0, n = "undefined", o = ("sizcache" + Math.random()).replace(".", ""), q = String, r = a.document, s = r.documentElement, t = 0, u = 0, v = [].pop, w = [].push, x = [].slice, y = [].indexOf || function (a) { var b = 0, c = this.length; for (; b < c; b++) if (this[b] === a) return b; return -1 }, z = function (a, b) { return a[o] = b == null || b, a }, A = function () { var a = {}, b = []; return z(function (c, d) { return b.push(c) > e.cacheLength && delete a[b.shift()], a[c] = d }, a) }, B = A(), C = A(), D = A(), E = "[\\x20\\t\\r\\n\\f]", F = "(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+", G = F.replace("w", "w#"), H = "([*^$|!~]?=)", I = "\\[" + E + "*(" + F + ")" + E + "*(?:" + H + E + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + G + ")|)|)" + E + "*\\]", J = ":(" + F + ")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:" + I + ")|[^:]|\\\\.)*|.*))\\)|)", K = ":(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + E + "*((?:-\\d)?\\d*)" + E + "*\\)|)(?=[^-]|$)", L = new RegExp("^" + E + "+|((?:^|[^\\\\])(?:\\\\.)*)" + E + "+$", "g"), M = new RegExp("^" + E + "*," + E + "*"), N = new RegExp("^" + E + "*([\\x20\\t\\r\\n\\f>+~])" + E + "*"), O = new RegExp(J), P = /^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/, Q = /^:not/, R = /[\x20\t\r\n\f]*[+~]/, S = /:not\($/, T = /h\d/i, U = /input|select|textarea|button/i, V = /\\(?!\\)/g, W = { ID: new RegExp("^#(" + F + ")"), CLASS: new RegExp("^\\.(" + F + ")"), NAME: new RegExp("^\\[name=['\"]?(" + F + ")['\"]?\\]"), TAG: new RegExp("^(" + F.replace("w", "w*") + ")"), ATTR: new RegExp("^" + I), PSEUDO: new RegExp("^" + J), POS: new RegExp(K, "i"), CHILD: new RegExp("^:(only|nth|first|last)-child(?:\\(" + E + "*(even|odd|(([+-]|)(\\d*)n|)" + E + "*(?:([+-]|)" + E + "*(\\d+)|))" + E + "*\\)|)", "i"), needsContext: new RegExp("^" + E + "*[>+~]|" + K, "i") }, X = function (a) { var b = r.createElement("div"); try { return a(b) } catch (c) { return !1 } finally { b = null } }, Y = X(function (a) { return a.appendChild(r.createComment("")), !a.getElementsByTagName("*").length }), Z = X(function (a) { return a.innerHTML = "<a href='#'></a>", a.firstChild && typeof a.firstChild.getAttribute !== n && a.firstChild.getAttribute("href") === "#" }), $ = X(function (a) { a.innerHTML = "<select></select>"; var b = typeof a.lastChild.getAttribute("multiple"); return b !== "boolean" && b !== "string" }), _ = X(function (a) { return a.innerHTML = "<div class='hidden e'></div><div class='hidden'></div>", !a.getElementsByClassName || !a.getElementsByClassName("e").length ? !1 : (a.lastChild.className = "e", a.getElementsByClassName("e").length === 2) }), ba = X(function (a) { a.id = o + 0, a.innerHTML = "<a name='" + o + "'></a><div name='" + o + "'></div>", s.insertBefore(a, s.firstChild); var b = r.getElementsByName && r.getElementsByName(o).length === 2 + r.getElementsByName(o + 0).length; return d = !r.getElementById(o), s.removeChild(a), b }); try { x.call(s.childNodes, 0)[0].nodeType } catch (bb) { x = function (a) { var b, c = []; for (; b = this[a]; a++) c.push(b); return c } } bc.matches = function (a, b) { return bc(a, null, null, b) }, bc.matchesSelector = function (a, b) { return bc(b, null, null, [a]).length > 0 }, f = bc.getText = function (a) { var b, c = "", d = 0, e = a.nodeType; if (e) { if (e === 1 || e === 9 || e === 11) { if (typeof a.textContent == "string") return a.textContent; for (a = a.firstChild; a; a = a.nextSibling) c += f(a) } else if (e === 3 || e === 4) return a.nodeValue } else for (; b = a[d]; d++) c += f(b); return c }, g = bc.isXML = function (a) { var b = a && (a.ownerDocument || a).documentElement; return b ? b.nodeName !== "HTML" : !1 }, h = bc.contains = s.contains ? function (a, b) { var c = a.nodeType === 9 ? a.documentElement : a, d = b && b.parentNode; return a === d || !!(d && d.nodeType === 1 && c.contains && c.contains(d)) } : s.compareDocumentPosition ? function (a, b) { return b && !!(a.compareDocumentPosition(b) & 16) } : function (a, b) { while (b = b.parentNode) if (b === a) return !0; return !1 }, bc.attr = function (a, b) { var c, d = g(a); return d || (b = b.toLowerCase()), (c = e.attrHandle[b]) ? c(a) : d || $ ? a.getAttribute(b) : (c = a.getAttributeNode(b), c ? typeof a[b] == "boolean" ? a[b] ? b : null : c.specified ? c.value : null : null) }, e = bc.selectors = { cacheLength: 50, createPseudo: z, match: W, attrHandle: Z ? {} : { href: function (a) { return a.getAttribute("href", 2) }, type: function (a) { return a.getAttribute("type") } }, find: { ID: d ? function (a, b, c) { if (typeof b.getElementById !== n && !c) { var d = b.getElementById(a); return d && d.parentNode ? [d] : [] } } : function (a, c, d) { if (typeof c.getElementById !== n && !d) { var e = c.getElementById(a); return e ? e.id === a || typeof e.getAttributeNode !== n && e.getAttributeNode("id").value === a ? [e] : b : [] } }, TAG: Y ? function (a, b) { if (typeof b.getElementsByTagName !== n) return b.getElementsByTagName(a) } : function (a, b) { var c = b.getElementsByTagName(a); if (a === "*") { var d, e = [], f = 0; for (; d = c[f]; f++) d.nodeType === 1 && e.push(d); return e } return c }, NAME: ba && function (a, b) { if (typeof b.getElementsByName !== n) return b.getElementsByName(name) }, CLASS: _ && function (a, b, c) { if (typeof b.getElementsByClassName !== n && !c) return b.getElementsByClassName(a) } }, relative: { ">": { dir: "parentNode", first: !0 }, " ": { dir: "parentNode" }, "+": { dir: "previousSibling", first: !0 }, "~": { dir: "previousSibling" } }, preFilter: { ATTR: function (a) { return a[1] = a[1].replace(V, ""), a[3] = (a[4] || a[5] || "").replace(V, ""), a[2] === "~=" && (a[3] = " " + a[3] + " "), a.slice(0, 4) }, CHILD: function (a) { return a[1] = a[1].toLowerCase(), a[1] === "nth" ? (a[2] || bc.error(a[0]), a[3] = +(a[3] ? a[4] + (a[5] || 1) : 2 * (a[2] === "even" || a[2] === "odd")), a[4] = +(a[6] + a[7] || a[2] === "odd")) : a[2] && bc.error(a[0]), a }, PSEUDO: function (a) { var b, c; if (W.CHILD.test(a[0])) return null; if (a[3]) a[2] = a[3]; else if (b = a[4]) O.test(b) && (c = bh(b, !0)) && (c = b.indexOf(")", b.length - c) - b.length) && (b = b.slice(0, c), a[0] = a[0].slice(0, c)), a[2] = b; return a.slice(0, 3) } }, filter: { ID: d ? function (a) { return a = a.replace(V, ""), function (b) { return b.getAttribute("id") === a } } : function (a) { return a = a.replace(V, ""), function (b) { var c = typeof b.getAttributeNode !== n && b.getAttributeNode("id"); return c && c.value === a } }, TAG: function (a) { return a === "*" ? function () { return !0 } : (a = a.replace(V, "").toLowerCase(), function (b) { return b.nodeName && b.nodeName.toLowerCase() === a }) }, CLASS: function (a) { var b = B[o][a]; return b || (b = B(a, new RegExp("(^|" + E + ")" + a + "(" + E + "|$)"))), function (a) { return b.test(a.className || typeof a.getAttribute !== n && a.getAttribute("class") || "") } }, ATTR: function (a, b, c) { return function (d, e) { var f = bc.attr(d, a); return f == null ? b === "!=" : b ? (f += "", b === "=" ? f === c : b === "!=" ? f !== c : b === "^=" ? c && f.indexOf(c) === 0 : b === "*=" ? c && f.indexOf(c) > -1 : b === "$=" ? c && f.substr(f.length - c.length) === c : b === "~=" ? (" " + f + " ").indexOf(c) > -1 : b === "|=" ? f === c || f.substr(0, c.length + 1) === c + "-" : !1) : !0 } }, CHILD: function (a, b, c, d) { return a === "nth" ? function (a) { var b, e, f = a.parentNode; if (c === 1 && d === 0) return !0; if (f) { e = 0; for (b = f.firstChild; b; b = b.nextSibling) if (b.nodeType === 1) { e++; if (a === b) break } } return e -= d, e === c || e % c === 0 && e / c >= 0 } : function (b) { var c = b; switch (a) { case "only": case "first": while (c = c.previousSibling) if (c.nodeType === 1) return !1; if (a === "first") return !0; c = b; case "last": while (c = c.nextSibling) if (c.nodeType === 1) return !1; return !0 } } }, PSEUDO: function (a, b) { var c, d = e.pseudos[a] || e.setFilters[a.toLowerCase()] || bc.error("unsupported pseudo: " + a); return d[o] ? d(b) : d.length > 1 ? (c = [a, a, "", b], e.setFilters.hasOwnProperty(a.toLowerCase()) ? z(function (a, c) { var e, f = d(a, b), g = f.length; while (g--) e = y.call(a, f[g]), a[e] = !(c[e] = f[g]) }) : function (a) { return d(a, 0, c) }) : d } }, pseudos: { not: z(function (a) { var b = [], c = [], d = i(a.replace(L, "$1")); return d[o] ? z(function (a, b, c, e) { var f, g = d(a, null, e, []), h = a.length; while (h--) if (f = g[h]) a[h] = !(b[h] = f) }) : function (a, e, f) { return b[0] = a, d(b, null, f, c), !c.pop() } }), has: z(function (a) { return function (b) { return bc(a, b).length > 0 } }), contains: z(function (a) { return function (b) { return (b.textContent || b.innerText || f(b)).indexOf(a) > -1 } }), enabled: function (a) { return a.disabled === !1 }, disabled: function (a) { return a.disabled === !0 }, checked: function (a) { var b = a.nodeName.toLowerCase(); return b === "input" && !!a.checked || b === "option" && !!a.selected }, selected: function (a) { return a.parentNode && a.parentNode.selectedIndex, a.selected === !0 }, parent: function (a) { return !e.pseudos.empty(a) }, empty: function (a) { var b; a = a.firstChild; while (a) { if (a.nodeName > "@" || (b = a.nodeType) === 3 || b === 4) return !1; a = a.nextSibling } return !0 }, header: function (a) { return T.test(a.nodeName) }, text: function (a) { var b, c; return a.nodeName.toLowerCase() === "input" && (b = a.type) === "text" && ((c = a.getAttribute("type")) == null || c.toLowerCase() === b) }, radio: bd("radio"), checkbox: bd("checkbox"), file: bd("file"), password: bd("password"), image: bd("image"), submit: be("submit"), reset: be("reset"), button: function (a) { var b = a.nodeName.toLowerCase(); return b === "input" && a.type === "button" || b === "button" }, input: function (a) { return U.test(a.nodeName) }, focus: function (a) { var b = a.ownerDocument; return a === b.activeElement && (!b.hasFocus || b.hasFocus()) && (!!a.type || !!a.href) }, active: function (a) { return a === a.ownerDocument.activeElement }, first: bf(function (a, b, c) { return [0] }), last: bf(function (a, b, c) { return [b - 1] }), eq: bf(function (a, b, c) { return [c < 0 ? c + b : c] }), even: bf(function (a, b, c) { for (var d = 0; d < b; d += 2) a.push(d); return a }), odd: bf(function (a, b, c) { for (var d = 1; d < b; d += 2) a.push(d); return a }), lt: bf(function (a, b, c) { for (var d = c < 0 ? c + b : c; --d >= 0;) a.push(d); return a }), gt: bf(function (a, b, c) { for (var d = c < 0 ? c + b : c; ++d < b;) a.push(d); return a }) } }, j = s.compareDocumentPosition ? function (a, b) { return a === b ? (k = !0, 0) : (!a.compareDocumentPosition || !b.compareDocumentPosition ? a.compareDocumentPosition : a.compareDocumentPosition(b) & 4) ? -1 : 1 } : function (a, b) { if (a === b) return k = !0, 0; if (a.sourceIndex && b.sourceIndex) return a.sourceIndex - b.sourceIndex; var c, d, e = [], f = [], g = a.parentNode, h = b.parentNode, i = g; if (g === h) return bg(a, b); if (!g) return -1; if (!h) return 1; while (i) e.unshift(i), i = i.parentNode; i = h; while (i) f.unshift(i), i = i.parentNode; c = e.length, d = f.length; for (var j = 0; j < c && j < d; j++) if (e[j] !== f[j]) return bg(e[j], f[j]); return j === c ? bg(a, f[j], -1) : bg(e[j], b, 1) }, [0, 0].sort(j), m = !k, bc.uniqueSort = function (a) { var b, c = 1; k = m, a.sort(j); if (k) for (; b = a[c]; c++) b === a[c - 1] && a.splice(c--, 1); return a }, bc.error = function (a) { throw new Error("Syntax error, unrecognized expression: " + a) }, i = bc.compile = function (a, b) { var c, d = [], e = [], f = D[o][a]; if (!f) { b || (b = bh(a)), c = b.length; while (c--) f = bm(b[c]), f[o] ? d.push(f) : e.push(f); f = D(a, bn(e, d)) } return f }, r.querySelectorAll && function () { var a, b = bp, c = /'|\\/g, d = /\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g, e = [":focus"], f = [":active", ":focus"], h = s.matchesSelector || s.mozMatchesSelector || s.webkitMatchesSelector || s.oMatchesSelector || s.msMatchesSelector; X(function (a) { a.innerHTML = "<select><option selected=''></option></select>", a.querySelectorAll("[selected]").length || e.push("\\[" + E + "*(?:checked|disabled|ismap|multiple|readonly|selected|value)"), a.querySelectorAll(":checked").length || e.push(":checked") }), X(function (a) { a.innerHTML = "<p test=''></p>", a.querySelectorAll("[test^='']").length && e.push("[*^$]=" + E + "*(?:\"\"|'')"), a.innerHTML = "<input type='hidden'/>", a.querySelectorAll(":enabled").length || e.push(":enabled", ":disabled") }), e = new RegExp(e.join("|")), bp = function (a, d, f, g, h) { if (!g && !h && (!e || !e.test(a))) { var i, j, k = !0, l = o, m = d, n = d.nodeType === 9 && a; if (d.nodeType === 1 && d.nodeName.toLowerCase() !== "object") { i = bh(a), (k = d.getAttribute("id")) ? l = k.replace(c, "\\$&") : d.setAttribute("id", l), l = "[id='" + l + "'] ", j = i.length; while (j--) i[j] = l + i[j].join(""); m = R.test(a) && d.parentNode || d, n = i.join(",") } if (n) try { return w.apply(f, x.call(m.querySelectorAll(n), 0)), f } catch (p) { } finally { k || d.removeAttribute("id") } } return b(a, d, f, g, h) }, h && (X(function (b) { a = h.call(b, "div"); try { h.call(b, "[test!='']:sizzle"), f.push("!=", J) } catch (c) { } }), f = new RegExp(f.join("|")), bc.matchesSelector = function (b, c) { c = c.replace(d, "='$1']"); if (!g(b) && !f.test(c) && (!e || !e.test(c))) try { var i = h.call(b, c); if (i || a || b.document && b.document.nodeType !== 11) return i } catch (j) { } return bc(c, null, null, [b]).length > 0 }) }(), e.pseudos.nth = e.pseudos.eq, e.filters = bq.prototype = e.pseudos, e.setFilters = new bq, bc.attr = p.attr, p.find = bc, p.expr = bc.selectors, p.expr[":"] = p.expr.pseudos, p.unique = bc.uniqueSort, p.text = bc.getText, p.isXMLDoc = bc.isXML, p.contains = bc.contains }(a); var bc = /Until$/, bd = /^(?:parents|prev(?:Until|All))/, be = /^.[^:#\[\.,]*$/, bf = p.expr.match.needsContext, bg = { children: !0, contents: !0, next: !0, prev: !0 }; p.fn.extend({ find: function (a) { var b, c, d, e, f, g, h = this; if (typeof a != "string") return p(a).filter(function () { for (b = 0, c = h.length; b < c; b++) if (p.contains(h[b], this)) return !0 }); g = this.pushStack("", "find", a); for (b = 0, c = this.length; b < c; b++) { d = g.length, p.find(a, this[b], g); if (b > 0) for (e = d; e < g.length; e++) for (f = 0; f < d; f++) if (g[f] === g[e]) { g.splice(e--, 1); break } } return g }, has: function (a) { var b, c = p(a, this), d = c.length; return this.filter(function () { for (b = 0; b < d; b++) if (p.contains(this, c[b])) return !0 }) }, not: function (a) { return this.pushStack(bj(this, a, !1), "not", a) }, filter: function (a) { return this.pushStack(bj(this, a, !0), "filter", a) }, is: function (a) { return !!a && (typeof a == "string" ? bf.test(a) ? p(a, this.context).index(this[0]) >= 0 : p.filter(a, this).length > 0 : this.filter(a).length > 0) }, closest: function (a, b) { var c, d = 0, e = this.length, f = [], g = bf.test(a) || typeof a != "string" ? p(a, b || this.context) : 0; for (; d < e; d++) { c = this[d]; while (c && c.ownerDocument && c !== b && c.nodeType !== 11) { if (g ? g.index(c) > -1 : p.find.matchesSelector(c, a)) { f.push(c); break } c = c.parentNode } } return f = f.length > 1 ? p.unique(f) : f, this.pushStack(f, "closest", a) }, index: function (a) { return a ? typeof a == "string" ? p.inArray(this[0], p(a)) : p.inArray(a.jquery ? a[0] : a, this) : this[0] && this[0].parentNode ? this.prevAll().length : -1 }, add: function (a, b) { var c = typeof a == "string" ? p(a, b) : p.makeArray(a && a.nodeType ? [a] : a), d = p.merge(this.get(), c); return this.pushStack(bh(c[0]) || bh(d[0]) ? d : p.unique(d)) }, addBack: function (a) { return this.add(a == null ? this.prevObject : this.prevObject.filter(a)) } }), p.fn.andSelf = p.fn.addBack, p.each({ parent: function (a) { var b = a.parentNode; return b && b.nodeType !== 11 ? b : null }, parents: function (a) { return p.dir(a, "parentNode") }, parentsUntil: function (a, b, c) { return p.dir(a, "parentNode", c) }, next: function (a) { return bi(a, "nextSibling") }, prev: function (a) { return bi(a, "previousSibling") }, nextAll: function (a) { return p.dir(a, "nextSibling") }, prevAll: function (a) { return p.dir(a, "previousSibling") }, nextUntil: function (a, b, c) { return p.dir(a, "nextSibling", c) }, prevUntil: function (a, b, c) { return p.dir(a, "previousSibling", c) }, siblings: function (a) { return p.sibling((a.parentNode || {}).firstChild, a) }, children: function (a) { return p.sibling(a.firstChild) }, contents: function (a) { return p.nodeName(a, "iframe") ? a.contentDocument || a.contentWindow.document : p.merge([], a.childNodes) } }, function (a, b) { p.fn[a] = function (c, d) { var e = p.map(this, b, c); return bc.test(a) || (d = c), d && typeof d == "string" && (e = p.filter(d, e)), e = this.length > 1 && !bg[a] ? p.unique(e) : e, this.length > 1 && bd.test(a) && (e = e.reverse()), this.pushStack(e, a, k.call(arguments).join(",")) } }), p.extend({ filter: function (a, b, c) { return c && (a = ":not(" + a + ")"), b.length === 1 ? p.find.matchesSelector(b[0], a) ? [b[0]] : [] : p.find.matches(a, b) }, dir: function (a, c, d) { var e = [], f = a[c]; while (f && f.nodeType !== 9 && (d === b || f.nodeType !== 1 || !p(f).is(d))) f.nodeType === 1 && e.push(f), f = f[c]; return e }, sibling: function (a, b) { var c = []; for (; a; a = a.nextSibling) a.nodeType === 1 && a !== b && c.push(a); return c } }); var bl = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video", bm = / jQuery\d+="(?:null|\d+)"/g, bn = /^\s+/, bo = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi, bp = /<([\w:]+)/, bq = /<tbody/i, br = /<|&#?\w+;/, bs = /<(?:script|style|link)/i, bt = /<(?:script|object|embed|option|style)/i, bu = new RegExp("<(?:" + bl + ")[\\s/>]", "i"), bv = /^(?:checkbox|radio)$/, bw = /checked\s*(?:[^=]|=\s*.checked.)/i, bx = /\/(java|ecma)script/i, by = /^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g, bz = { option: [1, "<select multiple='multiple'>", "</select>"], legend: [1, "<fieldset>", "</fieldset>"], thead: [1, "<table>", "</table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], area: [1, "<map>", "</map>"], _default: [0, "", ""] }, bA = bk(e), bB = bA.appendChild(e.createElement("div")); bz.optgroup = bz.option, bz.tbody = bz.tfoot = bz.colgroup = bz.caption = bz.thead, bz.th = bz.td, p.support.htmlSerialize || (bz._default = [1, "X<div>", "</div>"]), p.fn.extend({ text: function (a) { return p.access(this, function (a) { return a === b ? p.text(this) : this.empty().append((this[0] && this[0].ownerDocument || e).createTextNode(a)) }, null, a, arguments.length) }, wrapAll: function (a) { if (p.isFunction(a)) return this.each(function (b) { p(this).wrapAll(a.call(this, b)) }); if (this[0]) { var b = p(a, this[0].ownerDocument).eq(0).clone(!0); this[0].parentNode && b.insertBefore(this[0]), b.map(function () { var a = this; while (a.firstChild && a.firstChild.nodeType === 1) a = a.firstChild; return a }).append(this) } return this }, wrapInner: function (a) { return p.isFunction(a) ? this.each(function (b) { p(this).wrapInner(a.call(this, b)) }) : this.each(function () { var b = p(this), c = b.contents(); c.length ? c.wrapAll(a) : b.append(a) }) }, wrap: function (a) { var b = p.isFunction(a); return this.each(function (c) { p(this).wrapAll(b ? a.call(this, c) : a) }) }, unwrap: function () { return this.parent().each(function () { p.nodeName(this, "body") || p(this).replaceWith(this.childNodes) }).end() }, append: function () { return this.domManip(arguments, !0, function (a) { (this.nodeType === 1 || this.nodeType === 11) && this.appendChild(a) }) }, prepend: function () { return this.domManip(arguments, !0, function (a) { (this.nodeType === 1 || this.nodeType === 11) && this.insertBefore(a, this.firstChild) }) }, before: function () { if (!bh(this[0])) return this.domManip(arguments, !1, function (a) { this.parentNode.insertBefore(a, this) }); if (arguments.length) { var a = p.clean(arguments); return this.pushStack(p.merge(a, this), "before", this.selector) } }, after: function () { if (!bh(this[0])) return this.domManip(arguments, !1, function (a) { this.parentNode.insertBefore(a, this.nextSibling) }); if (arguments.length) { var a = p.clean(arguments); return this.pushStack(p.merge(this, a), "after", this.selector) } }, remove: function (a, b) { var c, d = 0; for (; (c = this[d]) != null; d++) if (!a || p.filter(a, [c]).length) !b && c.nodeType === 1 && (p.cleanData(c.getElementsByTagName("*")), p.cleanData([c])), c.parentNode && c.parentNode.removeChild(c); return this }, empty: function () { var a, b = 0; for (; (a = this[b]) != null; b++) { a.nodeType === 1 && p.cleanData(a.getElementsByTagName("*")); while (a.firstChild) a.removeChild(a.firstChild) } return this }, clone: function (a, b) { return a = a == null ? !1 : a, b = b == null ? a : b, this.map(function () { return p.clone(this, a, b) }) }, html: function (a) { return p.access(this, function (a) { var c = this[0] || {}, d = 0, e = this.length; if (a === b) return c.nodeType === 1 ? c.innerHTML.replace(bm, "") : b; if (typeof a == "string" && !bs.test(a) && (p.support.htmlSerialize || !bu.test(a)) && (p.support.leadingWhitespace || !bn.test(a)) && !bz[(bp.exec(a) || ["", ""])[1].toLowerCase()]) { a = a.replace(bo, "<$1></$2>"); try { for (; d < e; d++) c = this[d] || {}, c.nodeType === 1 && (p.cleanData(c.getElementsByTagName("*")), c.innerHTML = a); c = 0 } catch (f) { } } c && this.empty().append(a) }, null, a, arguments.length) }, replaceWith: function (a) { return bh(this[0]) ? this.length ? this.pushStack(p(p.isFunction(a) ? a() : a), "replaceWith", a) : this : p.isFunction(a) ? this.each(function (b) { var c = p(this), d = c.html(); c.replaceWith(a.call(this, b, d)) }) : (typeof a != "string" && (a = p(a).detach()), this.each(function () { var b = this.nextSibling, c = this.parentNode; p(this).remove(), b ? p(b).before(a) : p(c).append(a) })) }, detach: function (a) { return this.remove(a, !0) }, domManip: function (a, c, d) { a = [].concat.apply([], a); var e, f, g, h, i = 0, j = a[0], k = [], l = this.length; if (!p.support.checkClone && l > 1 && typeof j == "string" && bw.test(j)) return this.each(function () { p(this).domManip(a, c, d) }); if (p.isFunction(j)) return this.each(function (e) { var f = p(this); a[0] = j.call(this, e, c ? f.html() : b), f.domManip(a, c, d) }); if (this[0]) { e = p.buildFragment(a, this, k), g = e.fragment, f = g.firstChild, g.childNodes.length === 1 && (g = f); if (f) { c = c && p.nodeName(f, "tr"); for (h = e.cacheable || l - 1; i < l; i++) d.call(c && p.nodeName(this[i], "table") ? bC(this[i], "tbody") : this[i], i === h ? g : p.clone(g, !0, !0)) } g = f = null, k.length && p.each(k, function (a, b) { b.src ? p.ajax ? p.ajax({ url: b.src, type: "GET", dataType: "script", async: !1, global: !1, "throws": !0 }) : p.error("no ajax") : p.globalEval((b.text || b.textContent || b.innerHTML || "").replace(by, "")), b.parentNode && b.parentNode.removeChild(b) }) } return this } }), p.buildFragment = function (a, c, d) { var f, g, h, i = a[0]; return c = c || e, c = !c.nodeType && c[0] || c, c = c.ownerDocument || c, a.length === 1 && typeof i == "string" && i.length < 512 && c === e && i.charAt(0) === "<" && !bt.test(i) && (p.support.checkClone || !bw.test(i)) && (p.support.html5Clone || !bu.test(i)) && (g = !0, f = p.fragments[i], h = f !== b), f || (f = c.createDocumentFragment(), p.clean(a, c, f, d), g && (p.fragments[i] = h && f)), { fragment: f, cacheable: g } }, p.fragments = {}, p.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function (a, b) { p.fn[a] = function (c) { var d, e = 0, f = [], g = p(c), h = g.length, i = this.length === 1 && this[0].parentNode; if ((i == null || i && i.nodeType === 11 && i.childNodes.length === 1) && h === 1) return g[b](this[0]), this; for (; e < h; e++) d = (e > 0 ? this.clone(!0) : this).get(), p(g[e])[b](d), f = f.concat(d); return this.pushStack(f, a, g.selector) } }), p.extend({ clone: function (a, b, c) { var d, e, f, g; p.support.html5Clone || p.isXMLDoc(a) || !bu.test("<" + a.nodeName + ">") ? g = a.cloneNode(!0) : (bB.innerHTML = a.outerHTML, bB.removeChild(g = bB.firstChild)); if ((!p.support.noCloneEvent || !p.support.noCloneChecked) && (a.nodeType === 1 || a.nodeType === 11) && !p.isXMLDoc(a)) { bE(a, g), d = bF(a), e = bF(g); for (f = 0; d[f]; ++f) e[f] && bE(d[f], e[f]) } if (b) { bD(a, g); if (c) { d = bF(a), e = bF(g); for (f = 0; d[f]; ++f) bD(d[f], e[f]) } } return d = e = null, g }, clean: function (a, b, c, d) { var f, g, h, i, j, k, l, m, n, o, q, r, s = b === e && bA, t = []; if (!b || typeof b.createDocumentFragment == "undefined") b = e; for (f = 0; (h = a[f]) != null; f++) { typeof h == "number" && (h += ""); if (!h) continue; if (typeof h == "string") if (!br.test(h)) h = b.createTextNode(h); else { s = s || bk(b), l = b.createElement("div"), s.appendChild(l), h = h.replace(bo, "<$1></$2>"), i = (bp.exec(h) || ["", ""])[1].toLowerCase(), j = bz[i] || bz._default, k = j[0], l.innerHTML = j[1] + h + j[2]; while (k--) l = l.lastChild; if (!p.support.tbody) { m = bq.test(h), n = i === "table" && !m ? l.firstChild && l.firstChild.childNodes : j[1] === "<table>" && !m ? l.childNodes : []; for (g = n.length - 1; g >= 0; --g) p.nodeName(n[g], "tbody") && !n[g].childNodes.length && n[g].parentNode.removeChild(n[g]) } !p.support.leadingWhitespace && bn.test(h) && l.insertBefore(b.createTextNode(bn.exec(h)[0]), l.firstChild), h = l.childNodes, l.parentNode.removeChild(l) } h.nodeType ? t.push(h) : p.merge(t, h) } l && (h = l = s = null); if (!p.support.appendChecked) for (f = 0; (h = t[f]) != null; f++) p.nodeName(h, "input") ? bG(h) : typeof h.getElementsByTagName != "undefined" && p.grep(h.getElementsByTagName("input"), bG); if (c) { q = function (a) { if (!a.type || bx.test(a.type)) return d ? d.push(a.parentNode ? a.parentNode.removeChild(a) : a) : c.appendChild(a) }; for (f = 0; (h = t[f]) != null; f++) if (!p.nodeName(h, "script") || !q(h)) c.appendChild(h), typeof h.getElementsByTagName != "undefined" && (r = p.grep(p.merge([], h.getElementsByTagName("script")), q), t.splice.apply(t, [f + 1, 0].concat(r)), f += r.length) } return t }, cleanData: function (a, b) { var c, d, e, f, g = 0, h = p.expando, i = p.cache, j = p.support.deleteExpando, k = p.event.special; for (; (e = a[g]) != null; g++) if (b || p.acceptData(e)) { d = e[h], c = d && i[d]; if (c) { if (c.events) for (f in c.events) k[f] ? p.event.remove(e, f) : p.removeEvent(e, f, c.handle); i[d] && (delete i[d], j ? delete e[h] : e.removeAttribute ? e.removeAttribute(h) : e[h] = null, p.deletedIds.push(d)) } } } }), function () { var a, b; p.uaMatch = function (a) { a = a.toLowerCase(); var b = /(chrome)[ \/]([\w.]+)/.exec(a) || /(webkit)[ \/]([\w.]+)/.exec(a) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(a) || /(msie) ([\w.]+)/.exec(a) || a.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(a) || []; return { browser: b[1] || "", version: b[2] || "0" } }, a = p.uaMatch(g.userAgent), b = {}, a.browser && (b[a.browser] = !0, b.version = a.version), b.chrome ? b.webkit = !0 : b.webkit && (b.safari = !0), p.browser = b, p.sub = function () { function a(b, c) { return new a.fn.init(b, c) } p.extend(!0, a, this), a.superclass = this, a.fn = a.prototype = this(), a.fn.constructor = a, a.sub = this.sub, a.fn.init = function c(c, d) { return d && d instanceof p && !(d instanceof a) && (d = a(d)), p.fn.init.call(this, c, d, b) }, a.fn.init.prototype = a.fn; var b = a(e); return a } }(); var bH, bI, bJ, bK = /alpha\([^)]*\)/i, bL = /opacity=([^)]*)/, bM = /^(top|right|bottom|left)$/, bN = /^(none|table(?!-c[ea]).+)/, bO = /^margin/, bP = new RegExp("^(" + q + ")(.*)$", "i"), bQ = new RegExp("^(" + q + ")(?!px)[a-z%]+$", "i"), bR = new RegExp("^([-+])=(" + q + ")", "i"), bS = {}, bT = { position: "absolute", visibility: "hidden", display: "block" }, bU = { letterSpacing: 0, fontWeight: 400 }, bV = ["Top", "Right", "Bottom", "Left"], bW = ["Webkit", "O", "Moz", "ms"], bX = p.fn.toggle; p.fn.extend({ css: function (a, c) { return p.access(this, function (a, c, d) { return d !== b ? p.style(a, c, d) : p.css(a, c) }, a, c, arguments.length > 1) }, show: function () { return b$(this, !0) }, hide: function () { return b$(this) }, toggle: function (a, b) { var c = typeof a == "boolean"; return p.isFunction(a) && p.isFunction(b) ? bX.apply(this, arguments) : this.each(function () { (c ? a : bZ(this)) ? p(this).show() : p(this).hide() }) } }), p.extend({ cssHooks: { opacity: { get: function (a, b) { if (b) { var c = bH(a, "opacity"); return c === "" ? "1" : c } } } }, cssNumber: { fillOpacity: !0, fontWeight: !0, lineHeight: !0, opacity: !0, orphans: !0, widows: !0, zIndex: !0, zoom: !0 }, cssProps: { "float": p.support.cssFloat ? "cssFloat" : "styleFloat" }, style: function (a, c, d, e) { if (!a || a.nodeType === 3 || a.nodeType === 8 || !a.style) return; var f, g, h, i = p.camelCase(c), j = a.style; c = p.cssProps[i] || (p.cssProps[i] = bY(j, i)), h = p.cssHooks[c] || p.cssHooks[i]; if (d === b) return h && "get" in h && (f = h.get(a, !1, e)) !== b ? f : j[c]; g = typeof d, g === "string" && (f = bR.exec(d)) && (d = (f[1] + 1) * f[2] + parseFloat(p.css(a, c)), g = "number"); if (d == null || g === "number" && isNaN(d)) return; g === "number" && !p.cssNumber[i] && (d += "px"); if (!h || !("set" in h) || (d = h.set(a, d, e)) !== b) try { j[c] = d } catch (k) { } }, css: function (a, c, d, e) { var f, g, h, i = p.camelCase(c); return c = p.cssProps[i] || (p.cssProps[i] = bY(a.style, i)), h = p.cssHooks[c] || p.cssHooks[i], h && "get" in h && (f = h.get(a, !0, e)), f === b && (f = bH(a, c)), f === "normal" && c in bU && (f = bU[c]), d || e !== b ? (g = parseFloat(f), d || p.isNumeric(g) ? g || 0 : f) : f }, swap: function (a, b, c) { var d, e, f = {}; for (e in b) f[e] = a.style[e], a.style[e] = b[e]; d = c.call(a); for (e in b) a.style[e] = f[e]; return d } }), a.getComputedStyle ? bH = function (b, c) { var d, e, f, g, h = a.getComputedStyle(b, null), i = b.style; return h && (d = h[c], d === "" && !p.contains(b.ownerDocument, b) && (d = p.style(b, c)), bQ.test(d) && bO.test(c) && (e = i.width, f = i.minWidth, g = i.maxWidth, i.minWidth = i.maxWidth = i.width = d, d = h.width, i.width = e, i.minWidth = f, i.maxWidth = g)), d } : e.documentElement.currentStyle && (bH = function (a, b) { var c, d, e = a.currentStyle && a.currentStyle[b], f = a.style; return e == null && f && f[b] && (e = f[b]), bQ.test(e) && !bM.test(b) && (c = f.left, d = a.runtimeStyle && a.runtimeStyle.left, d && (a.runtimeStyle.left = a.currentStyle.left), f.left = b === "fontSize" ? "1em" : e, e = f.pixelLeft + "px", f.left = c, d && (a.runtimeStyle.left = d)), e === "" ? "auto" : e }), p.each(["height", "width"], function (a, b) { p.cssHooks[b] = { get: function (a, c, d) { if (c) return a.offsetWidth === 0 && bN.test(bH(a, "display")) ? p.swap(a, bT, function () { return cb(a, b, d) }) : cb(a, b, d) }, set: function (a, c, d) { return b_(a, c, d ? ca(a, b, d, p.support.boxSizing && p.css(a, "boxSizing") === "border-box") : 0) } } }), p.support.opacity || (p.cssHooks.opacity = { get: function (a, b) { return bL.test((b && a.currentStyle ? a.currentStyle.filter : a.style.filter) || "") ? .01 * parseFloat(RegExp.$1) + "" : b ? "1" : "" }, set: function (a, b) { var c = a.style, d = a.currentStyle, e = p.isNumeric(b) ? "alpha(opacity=" + b * 100 + ")" : "", f = d && d.filter || c.filter || ""; c.zoom = 1; if (b >= 1 && p.trim(f.replace(bK, "")) === "" && c.removeAttribute) { c.removeAttribute("filter"); if (d && !d.filter) return } c.filter = bK.test(f) ? f.replace(bK, e) : f + " " + e } }), p(function () { p.support.reliableMarginRight || (p.cssHooks.marginRight = { get: function (a, b) { return p.swap(a, { display: "inline-block" }, function () { if (b) return bH(a, "marginRight") }) } }), !p.support.pixelPosition && p.fn.position && p.each(["top", "left"], function (a, b) { p.cssHooks[b] = { get: function (a, c) { if (c) { var d = bH(a, b); return bQ.test(d) ? p(a).position()[b] + "px" : d } } } }) }), p.expr && p.expr.filters && (p.expr.filters.hidden = function (a) { return a.offsetWidth === 0 && a.offsetHeight === 0 || !p.support.reliableHiddenOffsets && (a.style && a.style.display || bH(a, "display")) === "none" }, p.expr.filters.visible = function (a) { return !p.expr.filters.hidden(a) }), p.each({ margin: "", padding: "", border: "Width" }, function (a, b) { p.cssHooks[a + b] = { expand: function (c) { var d, e = typeof c == "string" ? c.split(" ") : [c], f = {}; for (d = 0; d < 4; d++) f[a + bV[d] + b] = e[d] || e[d - 2] || e[0]; return f } }, bO.test(a) || (p.cssHooks[a + b].set = b_) }); var cd = /%20/g, ce = /\[\]$/, cf = /\r?\n/g, cg = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i, ch = /^(?:select|textarea)/i; p.fn.extend({ serialize: function () { return p.param(this.serializeArray()) }, serializeArray: function () { return this.map(function () { return this.elements ? p.makeArray(this.elements) : this }).filter(function () { return this.name && !this.disabled && (this.checked || ch.test(this.nodeName) || cg.test(this.type)) }).map(function (a, b) { var c = p(this).val(); return c == null ? null : p.isArray(c) ? p.map(c, function (a, c) { return { name: b.name, value: a.replace(cf, "\r\n") } }) : { name: b.name, value: c.replace(cf, "\r\n") } }).get() } }), p.param = function (a, c) { var d, e = [], f = function (a, b) { b = p.isFunction(b) ? b() : b == null ? "" : b, e[e.length] = encodeURIComponent(a) + "=" + encodeURIComponent(b) }; c === b && (c = p.ajaxSettings && p.ajaxSettings.traditional); if (p.isArray(a) || a.jquery && !p.isPlainObject(a)) p.each(a, function () { f(this.name, this.value) }); else for (d in a) ci(d, a[d], c, f); return e.join("&").replace(cd, "+") }; var cj, ck, cl = /#.*$/, cm = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, cn = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/, co = /^(?:GET|HEAD)$/, cp = /^\/\//, cq = /\?/, cr = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, cs = /([?&])_=[^&]*/, ct = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/, cu = p.fn.load, cv = {}, cw = {}, cx = ["*/"] + ["*"]; try { ck = f.href } catch (cy) { ck = e.createElement("a"), ck.href = "", ck = ck.href } cj = ct.exec(ck.toLowerCase()) || [], p.fn.load = function (a, c, d) { if (typeof a != "string" && cu) return cu.apply(this, arguments); if (!this.length) return this; var e, f, g, h = this, i = a.indexOf(" "); return i >= 0 && (e = a.slice(i, a.length), a = a.slice(0, i)), p.isFunction(c) ? (d = c, c = b) : c && typeof c == "object" && (f = "POST"), p.ajax({ url: a, type: f, dataType: "html", data: c, complete: function (a, b) { d && h.each(d, g || [a.responseText, b, a]) } }).done(function (a) { g = arguments, h.html(e ? p("<div>").append(a.replace(cr, "")).find(e) : a) }), this }, p.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function (a, b) { p.fn[b] = function (a) { return this.on(b, a) } }), p.each(["get", "post"], function (a, c) { p[c] = function (a, d, e, f) { return p.isFunction(d) && (f = f || e, e = d, d = b), p.ajax({ type: c, url: a, data: d, success: e, dataType: f }) } }), p.extend({ getScript: function (a, c) { return p.get(a, b, c, "script") }, getJSON: function (a, b, c) { return p.get(a, b, c, "json") }, ajaxSetup: function (a, b) { return b ? cB(a, p.ajaxSettings) : (b = a, a = p.ajaxSettings), cB(a, b), a }, ajaxSettings: { url: ck, isLocal: cn.test(cj[1]), global: !0, type: "GET", contentType: "application/x-www-form-urlencoded; charset=UTF-8", processData: !0, async: !0, accepts: { xml: "application/xml, text/xml", html: "text/html", text: "text/plain", json: "application/json, text/javascript", "*": cx }, contents: { xml: /xml/, html: /html/, json: /json/ }, responseFields: { xml: "responseXML", text: "responseText" }, converters: { "* text": a.String, "text html": !0, "text json": p.parseJSON, "text xml": p.parseXML }, flatOptions: { context: !0, url: !0 } }, ajaxPrefilter: cz(cv), ajaxTransport: cz(cw), ajax: function (a, c) { function y(a, c, f, i) { var k, s, t, u, w, y = c; if (v === 2) return; v = 2, h && clearTimeout(h), g = b, e = i || "", x.readyState = a > 0 ? 4 : 0, f && (u = cC(l, x, f)); if (a >= 200 && a < 300 || a === 304) l.ifModified && (w = x.getResponseHeader("Last-Modified"), w && (p.lastModified[d] = w), w = x.getResponseHeader("Etag"), w && (p.etag[d] = w)), a === 304 ? (y = "notmodified", k = !0) : (k = cD(l, u), y = k.state, s = k.data, t = k.error, k = !t); else { t = y; if (!y || a) y = "error", a < 0 && (a = 0) } x.status = a, x.statusText = (c || y) + "", k ? o.resolveWith(m, [s, y, x]) : o.rejectWith(m, [x, y, t]), x.statusCode(r), r = b, j && n.trigger("ajax" + (k ? "Success" : "Error"), [x, l, k ? s : t]), q.fireWith(m, [x, y]), j && (n.trigger("ajaxComplete", [x, l]), --p.active || p.event.trigger("ajaxStop")) } typeof a == "object" && (c = a, a = b), c = c || {}; var d, e, f, g, h, i, j, k, l = p.ajaxSetup({}, c), m = l.context || l, n = m !== l && (m.nodeType || m instanceof p) ? p(m) : p.event, o = p.Deferred(), q = p.Callbacks("once memory"), r = l.statusCode || {}, t = {}, u = {}, v = 0, w = "canceled", x = { readyState: 0, setRequestHeader: function (a, b) { if (!v) { var c = a.toLowerCase(); a = u[c] = u[c] || a, t[a] = b } return this }, getAllResponseHeaders: function () { return v === 2 ? e : null }, getResponseHeader: function (a) { var c; if (v === 2) { if (!f) { f = {}; while (c = cm.exec(e)) f[c[1].toLowerCase()] = c[2] } c = f[a.toLowerCase()] } return c === b ? null : c }, overrideMimeType: function (a) { return v || (l.mimeType = a), this }, abort: function (a) { return a = a || w, g && g.abort(a), y(0, a), this } }; o.promise(x), x.success = x.done, x.error = x.fail, x.complete = q.add, x.statusCode = function (a) { if (a) { var b; if (v < 2) for (b in a) r[b] = [r[b], a[b]]; else b = a[x.status], x.always(b) } return this }, l.url = ((a || l.url) + "").replace(cl, "").replace(cp, cj[1] + "//"), l.dataTypes = p.trim(l.dataType || "*").toLowerCase().split(s), l.crossDomain == null && (i = ct.exec(l.url.toLowerCase()) || !1, l.crossDomain = i && i.join(":") + (i[3] ? "" : i[1] === "http:" ? 80 : 443) !== cj.join(":") + (cj[3] ? "" : cj[1] === "http:" ? 80 : 443)), l.data && l.processData && typeof l.data != "string" && (l.data = p.param(l.data, l.traditional)), cA(cv, l, c, x); if (v === 2) return x; j = l.global, l.type = l.type.toUpperCase(), l.hasContent = !co.test(l.type), j && p.active++ === 0 && p.event.trigger("ajaxStart"); if (!l.hasContent) { l.data && (l.url += (cq.test(l.url) ? "&" : "?") + l.data, delete l.data), d = l.url; if (l.cache === !1) { var z = p.now(), A = l.url.replace(cs, "$1_=" + z); l.url = A + (A === l.url ? (cq.test(l.url) ? "&" : "?") + "_=" + z : "") } } (l.data && l.hasContent && l.contentType !== !1 || c.contentType) && x.setRequestHeader("Content-Type", l.contentType), l.ifModified && (d = d || l.url, p.lastModified[d] && x.setRequestHeader("If-Modified-Since", p.lastModified[d]), p.etag[d] && x.setRequestHeader("If-None-Match", p.etag[d])), x.setRequestHeader("Accept", l.dataTypes[0] && l.accepts[l.dataTypes[0]] ? l.accepts[l.dataTypes[0]] + (l.dataTypes[0] !== "*" ? ", " + cx + "; q=0.01" : "") : l.accepts["*"]); for (k in l.headers) x.setRequestHeader(k, l.headers[k]); if (!l.beforeSend || l.beforeSend.call(m, x, l) !== !1 && v !== 2) { w = "abort"; for (k in { success: 1, error: 1, complete: 1 }) x[k](l[k]); g = cA(cw, l, c, x); if (!g) y(-1, "No Transport"); else { x.readyState = 1, j && n.trigger("ajaxSend", [x, l]), l.async && l.timeout > 0 && (h = setTimeout(function () { x.abort("timeout") }, l.timeout)); try { v = 1, g.send(t, y) } catch (B) { if (v < 2) y(-1, B); else throw B } } return x } return x.abort() }, active: 0, lastModified: {}, etag: {} }); var cE = [], cF = /\?/, cG = /(=)\?(?=&|$)|\?\?/, cH = p.now(); p.ajaxSetup({ jsonp: "callback", jsonpCallback: function () { var a = cE.pop() || p.expando + "_" + cH++; return this[a] = !0, a } }), p.ajaxPrefilter("json jsonp", function (c, d, e) { var f, g, h, i = c.data, j = c.url, k = c.jsonp !== !1, l = k && cG.test(j), m = k && !l && typeof i == "string" && !(c.contentType || "").indexOf("application/x-www-form-urlencoded") && cG.test(i); if (c.dataTypes[0] === "jsonp" || l || m) return f = c.jsonpCallback = p.isFunction(c.jsonpCallback) ? c.jsonpCallback() : c.jsonpCallback, g = a[f], l ? c.url = j.replace(cG, "$1" + f) : m ? c.data = i.replace(cG, "$1" + f) : k && (c.url += (cF.test(j) ? "&" : "?") + c.jsonp + "=" + f), c.converters["script json"] = function () { return h || p.error(f + " was not called"), h[0] }, c.dataTypes[0] = "json", a[f] = function () { h = arguments }, e.always(function () { a[f] = g, c[f] && (c.jsonpCallback = d.jsonpCallback, cE.push(f)), h && p.isFunction(g) && g(h[0]), h = g = b }), "script" }), p.ajaxSetup({ accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" }, contents: { script: /javascript|ecmascript/ }, converters: { "text script": function (a) { return p.globalEval(a), a } } }), p.ajaxPrefilter("script", function (a) { a.cache === b && (a.cache = !1), a.crossDomain && (a.type = "GET", a.global = !1) }), p.ajaxTransport("script", function (a) { if (a.crossDomain) { var c, d = e.head || e.getElementsByTagName("head")[0] || e.documentElement; return { send: function (f, g) { c = e.createElement("script"), c.async = "async", a.scriptCharset && (c.charset = a.scriptCharset), c.src = a.url, c.onload = c.onreadystatechange = function (a, e) { if (e || !c.readyState || /loaded|complete/.test(c.readyState)) c.onload = c.onreadystatechange = null, d && c.parentNode && d.removeChild(c), c = b, e || g(200, "success") }, d.insertBefore(c, d.firstChild) }, abort: function () { c && c.onload(0, 1) } } } }); var cI, cJ = a.ActiveXObject ? function () { for (var a in cI) cI[a](0, 1) } : !1, cK = 0; p.ajaxSettings.xhr = a.ActiveXObject ? function () { return !this.isLocal && cL() || cM() } : cL, function (a) { p.extend(p.support, { ajax: !!a, cors: !!a && "withCredentials" in a }) }(p.ajaxSettings.xhr()), p.support.ajax && p.ajaxTransport(function (c) { if (!c.crossDomain || p.support.cors) { var d; return { send: function (e, f) { var g, h, i = c.xhr(); c.username ? i.open(c.type, c.url, c.async, c.username, c.password) : i.open(c.type, c.url, c.async); if (c.xhrFields) for (h in c.xhrFields) i[h] = c.xhrFields[h]; c.mimeType && i.overrideMimeType && i.overrideMimeType(c.mimeType), !c.crossDomain && !e["X-Requested-With"] && (e["X-Requested-With"] = "XMLHttpRequest"); try { for (h in e) i.setRequestHeader(h, e[h]) } catch (j) { } i.send(c.hasContent && c.data || null), d = function (a, e) { var h, j, k, l, m; try { if (d && (e || i.readyState === 4)) { d = b, g && (i.onreadystatechange = p.noop, cJ && delete cI[g]); if (e) i.readyState !== 4 && i.abort(); else { h = i.status, k = i.getAllResponseHeaders(), l = {}, m = i.responseXML, m && m.documentElement && (l.xml = m); try { l.text = i.responseText } catch (a) { } try { j = i.statusText } catch (n) { j = "" } !h && c.isLocal && !c.crossDomain ? h = l.text ? 200 : 404 : h === 1223 && (h = 204) } } } catch (o) { e || f(-1, o) } l && f(h, j, l, k) }, c.async ? i.readyState === 4 ? setTimeout(d, 0) : (g = ++cK, cJ && (cI || (cI = {}, p(a).unload(cJ)), cI[g] = d), i.onreadystatechange = d) : d() }, abort: function () { d && d(0, 1) } } } }); var cN, cO, cP = /^(?:toggle|show|hide)$/, cQ = new RegExp("^(?:([-+])=|)(" + q + ")([a-z%]*)$", "i"), cR = /queueHooks$/, cS = [cY], cT = { "*": [function (a, b) { var c, d, e = this.createTween(a, b), f = cQ.exec(b), g = e.cur(), h = +g || 0, i = 1, j = 20; if (f) { c = +f[2], d = f[3] || (p.cssNumber[a] ? "" : "px"); if (d !== "px" && h) { h = p.css(e.elem, a, !0) || c || 1; do i = i || ".5", h = h / i, p.style(e.elem, a, h + d); while (i !== (i = e.cur() / g) && i !== 1 && --j) } e.unit = d, e.start = h, e.end = f[1] ? h + (f[1] + 1) * c : c } return e }] }; p.Animation = p.extend(cW, { tweener: function (a, b) { p.isFunction(a) ? (b = a, a = ["*"]) : a = a.split(" "); var c, d = 0, e = a.length; for (; d < e; d++) c = a[d], cT[c] = cT[c] || [], cT[c].unshift(b) }, prefilter: function (a, b) { b ? cS.unshift(a) : cS.push(a) } }), p.Tween = cZ, cZ.prototype = { constructor: cZ, init: function (a, b, c, d, e, f) { this.elem = a, this.prop = c, this.easing = e || "swing", this.options = b, this.start = this.now = this.cur(), this.end = d, this.unit = f || (p.cssNumber[c] ? "" : "px") }, cur: function () { var a = cZ.propHooks[this.prop]; return a && a.get ? a.get(this) : cZ.propHooks._default.get(this) }, run: function (a) { var b, c = cZ.propHooks[this.prop]; return this.options.duration ? this.pos = b = p.easing[this.easing](a, this.options.duration * a, 0, 1, this.options.duration) : this.pos = b = a, this.now = (this.end - this.start) * b + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), c && c.set ? c.set(this) : cZ.propHooks._default.set(this), this } }, cZ.prototype.init.prototype = cZ.prototype, cZ.propHooks = { _default: { get: function (a) { var b; return a.elem[a.prop] == null || !!a.elem.style && a.elem.style[a.prop] != null ? (b = p.css(a.elem, a.prop, !1, ""), !b || b === "auto" ? 0 : b) : a.elem[a.prop] }, set: function (a) { p.fx.step[a.prop] ? p.fx.step[a.prop](a) : a.elem.style && (a.elem.style[p.cssProps[a.prop]] != null || p.cssHooks[a.prop]) ? p.style(a.elem, a.prop, a.now + a.unit) : a.elem[a.prop] = a.now } } }, cZ.propHooks.scrollTop = cZ.propHooks.scrollLeft = { set: function (a) { a.elem.nodeType && a.elem.parentNode && (a.elem[a.prop] = a.now) } }, p.each(["toggle", "show", "hide"], function (a, b) { var c = p.fn[b]; p.fn[b] = function (d, e, f) { return d == null || typeof d == "boolean" || !a && p.isFunction(d) && p.isFunction(e) ? c.apply(this, arguments) : this.animate(c$(b, !0), d, e, f) } }), p.fn.extend({ fadeTo: function (a, b, c, d) { return this.filter(bZ).css("opacity", 0).show().end().animate({ opacity: b }, a, c, d) }, animate: function (a, b, c, d) { var e = p.isEmptyObject(a), f = p.speed(b, c, d), g = function () { var b = cW(this, p.extend({}, a), f); e && b.stop(!0) }; return e || f.queue === !1 ? this.each(g) : this.queue(f.queue, g) }, stop: function (a, c, d) { var e = function (a) { var b = a.stop; delete a.stop, b(d) }; return typeof a != "string" && (d = c, c = a, a = b), c && a !== !1 && this.queue(a || "fx", []), this.each(function () { var b = !0, c = a != null && a + "queueHooks", f = p.timers, g = p._data(this); if (c) g[c] && g[c].stop && e(g[c]); else for (c in g) g[c] && g[c].stop && cR.test(c) && e(g[c]); for (c = f.length; c--;) f[c].elem === this && (a == null || f[c].queue === a) && (f[c].anim.stop(d), b = !1, f.splice(c, 1)); (b || !d) && p.dequeue(this, a) }) } }), p.each({ slideDown: c$("show"), slideUp: c$("hide"), slideToggle: c$("toggle"), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle" } }, function (a, b) { p.fn[a] = function (a, c, d) { return this.animate(b, a, c, d) } }), p.speed = function (a, b, c) { var d = a && typeof a == "object" ? p.extend({}, a) : { complete: c || !c && b || p.isFunction(a) && a, duration: a, easing: c && b || b && !p.isFunction(b) && b }; d.duration = p.fx.off ? 0 : typeof d.duration == "number" ? d.duration : d.duration in p.fx.speeds ? p.fx.speeds[d.duration] : p.fx.speeds._default; if (d.queue == null || d.queue === !0) d.queue = "fx"; return d.old = d.complete, d.complete = function () { p.isFunction(d.old) && d.old.call(this), d.queue && p.dequeue(this, d.queue) }, d }, p.easing = { linear: function (a) { return a }, swing: function (a) { return .5 - Math.cos(a * Math.PI) / 2 } }, p.timers = [], p.fx = cZ.prototype.init, p.fx.tick = function () { var a, b = p.timers, c = 0; for (; c < b.length; c++) a = b[c], !a() && b[c] === a && b.splice(c--, 1); b.length || p.fx.stop() }, p.fx.timer = function (a) { a() && p.timers.push(a) && !cO && (cO = setInterval(p.fx.tick, p.fx.interval)) }, p.fx.interval = 13, p.fx.stop = function () { clearInterval(cO), cO = null }, p.fx.speeds = { slow: 600, fast: 200, _default: 400 }, p.fx.step = {}, p.expr && p.expr.filters && (p.expr.filters.animated = function (a) { return p.grep(p.timers, function (b) { return a === b.elem }).length }); var c_ = /^(?:body|html)$/i; p.fn.offset = function (a) { if (arguments.length) return a === b ? this : this.each(function (b) { p.offset.setOffset(this, a, b) }); var c, d, e, f, g, h, i, j = { top: 0, left: 0 }, k = this[0], l = k && k.ownerDocument; if (!l) return; return (d = l.body) === k ? p.offset.bodyOffset(k) : (c = l.documentElement, p.contains(c, k) ? (typeof k.getBoundingClientRect != "undefined" && (j = k.getBoundingClientRect()), e = da(l), f = c.clientTop || d.clientTop || 0, g = c.clientLeft || d.clientLeft || 0, h = e.pageYOffset || c.scrollTop, i = e.pageXOffset || c.scrollLeft, { top: j.top + h - f, left: j.left + i - g }) : j) }, p.offset = { bodyOffset: function (a) { var b = a.offsetTop, c = a.offsetLeft; return p.support.doesNotIncludeMarginInBodyOffset && (b += parseFloat(p.css(a, "marginTop")) || 0, c += parseFloat(p.css(a, "marginLeft")) || 0), { top: b, left: c } }, setOffset: function (a, b, c) { var d = p.css(a, "position"); d === "static" && (a.style.position = "relative"); var e = p(a), f = e.offset(), g = p.css(a, "top"), h = p.css(a, "left"), i = (d === "absolute" || d === "fixed") && p.inArray("auto", [g, h]) > -1, j = {}, k = {}, l, m; i ? (k = e.position(), l = k.top, m = k.left) : (l = parseFloat(g) || 0, m = parseFloat(h) || 0), p.isFunction(b) && (b = b.call(a, c, f)), b.top != null && (j.top = b.top - f.top + l), b.left != null && (j.left = b.left - f.left + m), "using" in b ? b.using.call(a, j) : e.css(j) } }, p.fn.extend({ position: function () { if (!this[0]) return; var a = this[0], b = this.offsetParent(), c = this.offset(), d = c_.test(b[0].nodeName) ? { top: 0, left: 0 } : b.offset(); return c.top -= parseFloat(p.css(a, "marginTop")) || 0, c.left -= parseFloat(p.css(a, "marginLeft")) || 0, d.top += parseFloat(p.css(b[0], "borderTopWidth")) || 0, d.left += parseFloat(p.css(b[0], "borderLeftWidth")) || 0, { top: c.top - d.top, left: c.left - d.left } }, offsetParent: function () { return this.map(function () { var a = this.offsetParent || e.body; while (a && !c_.test(a.nodeName) && p.css(a, "position") === "static") a = a.offsetParent; return a || e.body }) } }), p.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function (a, c) { var d = /Y/.test(c); p.fn[a] = function (e) { return p.access(this, function (a, e, f) { var g = da(a); if (f === b) return g ? c in g ? g[c] : g.document.documentElement[e] : a[e]; g ? g.scrollTo(d ? p(g).scrollLeft() : f, d ? f : p(g).scrollTop()) : a[e] = f }, a, e, arguments.length, null) } }), p.each({ Height: "height", Width: "width" }, function (a, c) { p.each({ padding: "inner" + a, content: c, "": "outer" + a }, function (d, e) { p.fn[e] = function (e, f) { var g = arguments.length && (d || typeof e != "boolean"), h = d || (e === !0 || f === !0 ? "margin" : "border"); return p.access(this, function (c, d, e) { var f; return p.isWindow(c) ? c.document.documentElement["client" + a] : c.nodeType === 9 ? (f = c.documentElement, Math.max(c.body["scroll" + a], f["scroll" + a], c.body["offset" + a], f["offset" + a], f["client" + a])) : e === b ? p.css(c, d, e, h) : p.style(c, d, e, h) }, c, g ? e : b, g, null) } }) }), a.jQuery = a.$ = p, typeof define == "function" && define.amd && define.amd.jQuery && define("jquery", [], function () { return p }) })(window);
    </script>
    <!--<script type="text/javascript" src="http://61.147.119.252:8088/Scripts/jquery-ui-1.8.24.min.js"></script>-->
    <script>
        /*! jQuery UI - v1.8.24 - 2012-09-28
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.draggable.js, jquery.ui.droppable.js, jquery.ui.resizable.js, jquery.ui.selectable.js, jquery.ui.sortable.js, jquery.effects.core.js, jquery.effects.blind.js, jquery.effects.bounce.js, jquery.effects.clip.js, jquery.effects.drop.js, jquery.effects.explode.js, jquery.effects.fade.js, jquery.effects.fold.js, jquery.effects.highlight.js, jquery.effects.pulsate.js, jquery.effects.scale.js, jquery.effects.shake.js, jquery.effects.slide.js, jquery.effects.transfer.js, jquery.ui.accordion.js, jquery.ui.autocomplete.js, jquery.ui.button.js, jquery.ui.datepicker.js, jquery.ui.dialog.js, jquery.ui.position.js, jquery.ui.progressbar.js, jquery.ui.slider.js, jquery.ui.tabs.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT */
        (function (a, b) { function c(b, c) { var e = b.nodeName.toLowerCase(); if ("area" === e) { var f = b.parentNode, g = f.name, h; return !b.href || !g || f.nodeName.toLowerCase() !== "map" ? !1 : (h = a("img[usemap=#" + g + "]")[0], !!h && d(h)) } return (/input|select|textarea|button|object/.test(e) ? !b.disabled : "a" == e ? b.href || c : c) && d(b) } function d(b) { return !a(b).parents().andSelf().filter(function () { return a.curCSS(this, "visibility") === "hidden" || a.expr.filters.hidden(this) }).length } a.ui = a.ui || {}; if (a.ui.version) return; a.extend(a.ui, { version: "1.8.24", keyCode: { ALT: 18, BACKSPACE: 8, CAPS_LOCK: 20, COMMA: 188, COMMAND: 91, COMMAND_LEFT: 91, COMMAND_RIGHT: 93, CONTROL: 17, DELETE: 46, DOWN: 40, END: 35, ENTER: 13, ESCAPE: 27, HOME: 36, INSERT: 45, LEFT: 37, MENU: 93, NUMPAD_ADD: 107, NUMPAD_DECIMAL: 110, NUMPAD_DIVIDE: 111, NUMPAD_ENTER: 108, NUMPAD_MULTIPLY: 106, NUMPAD_SUBTRACT: 109, PAGE_DOWN: 34, PAGE_UP: 33, PERIOD: 190, RIGHT: 39, SHIFT: 16, SPACE: 32, TAB: 9, UP: 38, WINDOWS: 91 } }), a.fn.extend({ propAttr: a.fn.prop || a.fn.attr, _focus: a.fn.focus, focus: function (b, c) { return typeof b == "number" ? this.each(function () { var d = this; setTimeout(function () { a(d).focus(), c && c.call(d) }, b) }) : this._focus.apply(this, arguments) }, scrollParent: function () { var b; return a.browser.msie && /(static|relative)/.test(this.css("position")) || /absolute/.test(this.css("position")) ? b = this.parents().filter(function () { return /(relative|absolute|fixed)/.test(a.curCSS(this, "position", 1)) && /(auto|scroll)/.test(a.curCSS(this, "overflow", 1) + a.curCSS(this, "overflow-y", 1) + a.curCSS(this, "overflow-x", 1)) }).eq(0) : b = this.parents().filter(function () { return /(auto|scroll)/.test(a.curCSS(this, "overflow", 1) + a.curCSS(this, "overflow-y", 1) + a.curCSS(this, "overflow-x", 1)) }).eq(0), /fixed/.test(this.css("position")) || !b.length ? a(document) : b }, zIndex: function (c) { if (c !== b) return this.css("zIndex", c); if (this.length) { var d = a(this[0]), e, f; while (d.length && d[0] !== document) { e = d.css("position"); if (e === "absolute" || e === "relative" || e === "fixed") { f = parseInt(d.css("zIndex"), 10); if (!isNaN(f) && f !== 0) return f } d = d.parent() } } return 0 }, disableSelection: function () { return this.bind((a.support.selectstart ? "selectstart" : "mousedown") + ".ui-disableSelection", function (a) { a.preventDefault() }) }, enableSelection: function () { return this.unbind(".ui-disableSelection") } }), a("<a>").outerWidth(1).jquery || a.each(["Width", "Height"], function (c, d) { function h(b, c, d, f) { return a.each(e, function () { c -= parseFloat(a.curCSS(b, "padding" + this, !0)) || 0, d && (c -= parseFloat(a.curCSS(b, "border" + this + "Width", !0)) || 0), f && (c -= parseFloat(a.curCSS(b, "margin" + this, !0)) || 0) }), c } var e = d === "Width" ? ["Left", "Right"] : ["Top", "Bottom"], f = d.toLowerCase(), g = { innerWidth: a.fn.innerWidth, innerHeight: a.fn.innerHeight, outerWidth: a.fn.outerWidth, outerHeight: a.fn.outerHeight }; a.fn["inner" + d] = function (c) { return c === b ? g["inner" + d].call(this) : this.each(function () { a(this).css(f, h(this, c) + "px") }) }, a.fn["outer" + d] = function (b, c) { return typeof b != "number" ? g["outer" + d].call(this, b) : this.each(function () { a(this).css(f, h(this, b, !0, c) + "px") }) } }), a.extend(a.expr[":"], { data: a.expr.createPseudo ? a.expr.createPseudo(function (b) { return function (c) { return !!a.data(c, b) } }) : function (b, c, d) { return !!a.data(b, d[3]) }, focusable: function (b) { return c(b, !isNaN(a.attr(b, "tabindex"))) }, tabbable: function (b) { var d = a.attr(b, "tabindex"), e = isNaN(d); return (e || d >= 0) && c(b, !e) } }), a(function () { var b = document.body, c = b.appendChild(c = document.createElement("div")); c.offsetHeight, a.extend(c.style, { minHeight: "100px", height: "auto", padding: 0, borderWidth: 0 }), a.support.minHeight = c.offsetHeight === 100, a.support.selectstart = "onselectstart" in c, b.removeChild(c).style.display = "none" }), a.curCSS || (a.curCSS = a.css), a.extend(a.ui, { plugin: { add: function (b, c, d) { var e = a.ui[b].prototype; for (var f in d) e.plugins[f] = e.plugins[f] || [], e.plugins[f].push([c, d[f]]) }, call: function (a, b, c) { var d = a.plugins[b]; if (!d || !a.element[0].parentNode) return; for (var e = 0; e < d.length; e++) a.options[d[e][0]] && d[e][1].apply(a.element, c) } }, contains: function (a, b) { return document.compareDocumentPosition ? a.compareDocumentPosition(b) & 16 : a !== b && a.contains(b) }, hasScroll: function (b, c) { if (a(b).css("overflow") === "hidden") return !1; var d = c && c === "left" ? "scrollLeft" : "scrollTop", e = !1; return b[d] > 0 ? !0 : (b[d] = 1, e = b[d] > 0, b[d] = 0, e) }, isOverAxis: function (a, b, c) { return a > b && a < b + c }, isOver: function (b, c, d, e, f, g) { return a.ui.isOverAxis(b, d, f) && a.ui.isOverAxis(c, e, g) } }) })(jQuery), function (a, b) { if (a.cleanData) { var c = a.cleanData; a.cleanData = function (b) { for (var d = 0, e; (e = b[d]) != null; d++) try { a(e).triggerHandler("remove") } catch (f) { } c(b) } } else { var d = a.fn.remove; a.fn.remove = function (b, c) { return this.each(function () { return c || (!b || a.filter(b, [this]).length) && a("*", this).add([this]).each(function () { try { a(this).triggerHandler("remove") } catch (b) { } }), d.call(a(this), b, c) }) } } a.widget = function (b, c, d) { var e = b.split(".")[0], f; b = b.split(".")[1], f = e + "-" + b, d || (d = c, c = a.Widget), a.expr[":"][f] = function (c) { return !!a.data(c, b) }, a[e] = a[e] || {}, a[e][b] = function (a, b) { arguments.length && this._createWidget(a, b) }; var g = new c; g.options = a.extend(!0, {}, g.options), a[e][b].prototype = a.extend(!0, g, { namespace: e, widgetName: b, widgetEventPrefix: a[e][b].prototype.widgetEventPrefix || b, widgetBaseClass: f }, d), a.widget.bridge(b, a[e][b]) }, a.widget.bridge = function (c, d) { a.fn[c] = function (e) { var f = typeof e == "string", g = Array.prototype.slice.call(arguments, 1), h = this; return e = !f && g.length ? a.extend.apply(null, [!0, e].concat(g)) : e, f && e.charAt(0) === "_" ? h : (f ? this.each(function () { var d = a.data(this, c), f = d && a.isFunction(d[e]) ? d[e].apply(d, g) : d; if (f !== d && f !== b) return h = f, !1 }) : this.each(function () { var b = a.data(this, c); b ? b.option(e || {})._init() : a.data(this, c, new d(e, this)) }), h) } }, a.Widget = function (a, b) { arguments.length && this._createWidget(a, b) }, a.Widget.prototype = { widgetName: "widget", widgetEventPrefix: "", options: { disabled: !1 }, _createWidget: function (b, c) { a.data(c, this.widgetName, this), this.element = a(c), this.options = a.extend(!0, {}, this.options, this._getCreateOptions(), b); var d = this; this.element.bind("remove." + this.widgetName, function () { d.destroy() }), this._create(), this._trigger("create"), this._init() }, _getCreateOptions: function () { return a.metadata && a.metadata.get(this.element[0])[this.widgetName] }, _create: function () { }, _init: function () { }, destroy: function () { this.element.unbind("." + this.widgetName).removeData(this.widgetName), this.widget().unbind("." + this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass + "-disabled " + "ui-state-disabled") }, widget: function () { return this.element }, option: function (c, d) { var e = c; if (arguments.length === 0) return a.extend({}, this.options); if (typeof c == "string") { if (d === b) return this.options[c]; e = {}, e[c] = d } return this._setOptions(e), this }, _setOptions: function (b) { var c = this; return a.each(b, function (a, b) { c._setOption(a, b) }), this }, _setOption: function (a, b) { return this.options[a] = b, a === "disabled" && this.widget()[b ? "addClass" : "removeClass"](this.widgetBaseClass + "-disabled" + " " + "ui-state-disabled").attr("aria-disabled", b), this }, enable: function () { return this._setOption("disabled", !1) }, disable: function () { return this._setOption("disabled", !0) }, _trigger: function (b, c, d) { var e, f, g = this.options[b]; d = d || {}, c = a.Event(c), c.type = (b === this.widgetEventPrefix ? b : this.widgetEventPrefix + b).toLowerCase(), c.target = this.element[0], f = c.originalEvent; if (f) for (e in f) e in c || (c[e] = f[e]); return this.element.trigger(c, d), !(a.isFunction(g) && g.call(this.element[0], c, d) === !1 || c.isDefaultPrevented()) } } }(jQuery), function (a, b) { var c = !1; a(document).mouseup(function (a) { c = !1 }), a.widget("ui.mouse", { options: { cancel: ":input,option", distance: 1, delay: 0 }, _mouseInit: function () { var b = this; this.element.bind("mousedown." + this.widgetName, function (a) { return b._mouseDown(a) }).bind("click." + this.widgetName, function (c) { if (!0 === a.data(c.target, b.widgetName + ".preventClickEvent")) return a.removeData(c.target, b.widgetName + ".preventClickEvent"), c.stopImmediatePropagation(), !1 }), this.started = !1 }, _mouseDestroy: function () { this.element.unbind("." + this.widgetName), this._mouseMoveDelegate && a(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate) }, _mouseDown: function (b) { if (c) return; this._mouseStarted && this._mouseUp(b), this._mouseDownEvent = b; var d = this, e = b.which == 1, f = typeof this.options.cancel == "string" && b.target.nodeName ? a(b.target).closest(this.options.cancel).length : !1; if (!e || f || !this._mouseCapture(b)) return !0; this.mouseDelayMet = !this.options.delay, this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function () { d.mouseDelayMet = !0 }, this.options.delay)); if (this._mouseDistanceMet(b) && this._mouseDelayMet(b)) { this._mouseStarted = this._mouseStart(b) !== !1; if (!this._mouseStarted) return b.preventDefault(), !0 } return !0 === a.data(b.target, this.widgetName + ".preventClickEvent") && a.removeData(b.target, this.widgetName + ".preventClickEvent"), this._mouseMoveDelegate = function (a) { return d._mouseMove(a) }, this._mouseUpDelegate = function (a) { return d._mouseUp(a) }, a(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate), b.preventDefault(), c = !0, !0 }, _mouseMove: function (b) { return !a.browser.msie || document.documentMode >= 9 || !!b.button ? this._mouseStarted ? (this._mouseDrag(b), b.preventDefault()) : (this._mouseDistanceMet(b) && this._mouseDelayMet(b) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, b) !== !1, this._mouseStarted ? this._mouseDrag(b) : this._mouseUp(b)), !this._mouseStarted) : this._mouseUp(b) }, _mouseUp: function (b) { return a(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate), this._mouseStarted && (this._mouseStarted = !1, b.target == this._mouseDownEvent.target && a.data(b.target, this.widgetName + ".preventClickEvent", !0), this._mouseStop(b)), !1 }, _mouseDistanceMet: function (a) { return Math.max(Math.abs(this._mouseDownEvent.pageX - a.pageX), Math.abs(this._mouseDownEvent.pageY - a.pageY)) >= this.options.distance }, _mouseDelayMet: function (a) { return this.mouseDelayMet }, _mouseStart: function (a) { }, _mouseDrag: function (a) { }, _mouseStop: function (a) { }, _mouseCapture: function (a) { return !0 } }) }(jQuery), function (a, b) { a.widget("ui.draggable", a.ui.mouse, { widgetEventPrefix: "drag", options: { addClasses: !0, appendTo: "parent", axis: !1, connectToSortable: !1, containment: !1, cursor: "auto", cursorAt: !1, grid: !1, handle: !1, helper: "original", iframeFix: !1, opacity: !1, refreshPositions: !1, revert: !1, revertDuration: 500, scope: "default", scroll: !0, scrollSensitivity: 20, scrollSpeed: 20, snap: !1, snapMode: "both", snapTolerance: 20, stack: !1, zIndex: !1 }, _create: function () { this.options.helper == "original" && !/^(?:r|a|f)/.test(this.element.css("position")) && (this.element[0].style.position = "relative"), this.options.addClasses && this.element.addClass("ui-draggable"), this.options.disabled && this.element.addClass("ui-draggable-disabled"), this._mouseInit() }, destroy: function () { if (!this.element.data("draggable")) return; return this.element.removeData("draggable").unbind(".draggable").removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"), this._mouseDestroy(), this }, _mouseCapture: function (b) { var c = this.options; return this.helper || c.disabled || a(b.target).is(".ui-resizable-handle") ? !1 : (this.handle = this._getHandle(b), this.handle ? (c.iframeFix && a(c.iframeFix === !0 ? "iframe" : c.iframeFix).each(function () { a('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({ width: this.offsetWidth + "px", height: this.offsetHeight + "px", position: "absolute", opacity: "0.001", zIndex: 1e3 }).css(a(this).offset()).appendTo("body") }), !0) : !1) }, _mouseStart: function (b) { var c = this.options; return this.helper = this._createHelper(b), this.helper.addClass("ui-draggable-dragging"), this._cacheHelperProportions(), a.ui.ddmanager && (a.ui.ddmanager.current = this), this._cacheMargins(), this.cssPosition = this.helper.css("position"), this.scrollParent = this.helper.scrollParent(), this.offset = this.positionAbs = this.element.offset(), this.offset = { top: this.offset.top - this.margins.top, left: this.offset.left - this.margins.left }, a.extend(this.offset, { click: { left: b.pageX - this.offset.left, top: b.pageY - this.offset.top }, parent: this._getParentOffset(), relative: this._getRelativeOffset() }), this.originalPosition = this.position = this._generatePosition(b), this.originalPageX = b.pageX, this.originalPageY = b.pageY, c.cursorAt && this._adjustOffsetFromHelper(c.cursorAt), c.containment && this._setContainment(), this._trigger("start", b) === !1 ? (this._clear(), !1) : (this._cacheHelperProportions(), a.ui.ddmanager && !c.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, b), this._mouseDrag(b, !0), a.ui.ddmanager && a.ui.ddmanager.dragStart(this, b), !0) }, _mouseDrag: function (b, c) { this.position = this._generatePosition(b), this.positionAbs = this._convertPositionTo("absolute"); if (!c) { var d = this._uiHash(); if (this._trigger("drag", b, d) === !1) return this._mouseUp({}), !1; this.position = d.position } if (!this.options.axis || this.options.axis != "y") this.helper[0].style.left = this.position.left + "px"; if (!this.options.axis || this.options.axis != "x") this.helper[0].style.top = this.position.top + "px"; return a.ui.ddmanager && a.ui.ddmanager.drag(this, b), !1 }, _mouseStop: function (b) { var c = !1; a.ui.ddmanager && !this.options.dropBehaviour && (c = a.ui.ddmanager.drop(this, b)), this.dropped && (c = this.dropped, this.dropped = !1); var d = this.element[0], e = !1; while (d && (d = d.parentNode)) d == document && (e = !0); if (!e && this.options.helper === "original") return !1; if (this.options.revert == "invalid" && !c || this.options.revert == "valid" && c || this.options.revert === !0 || a.isFunction(this.options.revert) && this.options.revert.call(this.element, c)) { var f = this; a(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function () { f._trigger("stop", b) !== !1 && f._clear() }) } else this._trigger("stop", b) !== !1 && this._clear(); return !1 }, _mouseUp: function (b) { return a("div.ui-draggable-iframeFix").each(function () { this.parentNode.removeChild(this) }), a.ui.ddmanager && a.ui.ddmanager.dragStop(this, b), a.ui.mouse.prototype._mouseUp.call(this, b) }, cancel: function () { return this.helper.is(".ui-draggable-dragging") ? this._mouseUp({}) : this._clear(), this }, _getHandle: function (b) { var c = !this.options.handle || !a(this.options.handle, this.element).length ? !0 : !1; return a(this.options.handle, this.element).find("*").andSelf().each(function () { this == b.target && (c = !0) }), c }, _createHelper: function (b) { var c = this.options, d = a.isFunction(c.helper) ? a(c.helper.apply(this.element[0], [b])) : c.helper == "clone" ? this.element.clone().removeAttr("id") : this.element; return d.parents("body").length || d.appendTo(c.appendTo == "parent" ? this.element[0].parentNode : c.appendTo), d[0] != this.element[0] && !/(fixed|absolute)/.test(d.css("position")) && d.css("position", "absolute"), d }, _adjustOffsetFromHelper: function (b) { typeof b == "string" && (b = b.split(" ")), a.isArray(b) && (b = { left: +b[0], top: +b[1] || 0 }), "left" in b && (this.offset.click.left = b.left + this.margins.left), "right" in b && (this.offset.click.left = this.helperProportions.width - b.right + this.margins.left), "top" in b && (this.offset.click.top = b.top + this.margins.top), "bottom" in b && (this.offset.click.top = this.helperProportions.height - b.bottom + this.margins.top) }, _getParentOffset: function () { this.offsetParent = this.helper.offsetParent(); var b = this.offsetParent.offset(); this.cssPosition == "absolute" && this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0]) && (b.left += this.scrollParent.scrollLeft(), b.top += this.scrollParent.scrollTop()); if (this.offsetParent[0] == document.body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && a.browser.msie) b = { top: 0, left: 0 }; return { top: b.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0), left: b.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0) } }, _getRelativeOffset: function () { if (this.cssPosition == "relative") { var a = this.element.position(); return { top: a.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(), left: a.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft() } } return { top: 0, left: 0 } }, _cacheMargins: function () { this.margins = { left: parseInt(this.element.css("marginLeft"), 10) || 0, top: parseInt(this.element.css("marginTop"), 10) || 0, right: parseInt(this.element.css("marginRight"), 10) || 0, bottom: parseInt(this.element.css("marginBottom"), 10) || 0 } }, _cacheHelperProportions: function () { this.helperProportions = { width: this.helper.outerWidth(), height: this.helper.outerHeight() } }, _setContainment: function () { var b = this.options; b.containment == "parent" && (b.containment = this.helper[0].parentNode); if (b.containment == "document" || b.containment == "window") this.containment = [b.containment == "document" ? 0 : a(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, b.containment == "document" ? 0 : a(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, (b.containment == "document" ? 0 : a(window).scrollLeft()) + a(b.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (b.containment == "document" ? 0 : a(window).scrollTop()) + (a(b.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]; if (!/^(document|window|parent)$/.test(b.containment) && b.containment.constructor != Array) { var c = a(b.containment), d = c[0]; if (!d) return; var e = c.offset(), f = a(d).css("overflow") != "hidden"; this.containment = [(parseInt(a(d).css("borderLeftWidth"), 10) || 0) + (parseInt(a(d).css("paddingLeft"), 10) || 0), (parseInt(a(d).css("borderTopWidth"), 10) || 0) + (parseInt(a(d).css("paddingTop"), 10) || 0), (f ? Math.max(d.scrollWidth, d.offsetWidth) : d.offsetWidth) - (parseInt(a(d).css("borderLeftWidth"), 10) || 0) - (parseInt(a(d).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (f ? Math.max(d.scrollHeight, d.offsetHeight) : d.offsetHeight) - (parseInt(a(d).css("borderTopWidth"), 10) || 0) - (parseInt(a(d).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom], this.relative_container = c } else b.containment.constructor == Array && (this.containment = b.containment) }, _convertPositionTo: function (b, c) { c || (c = this.position); var d = b == "absolute" ? 1 : -1, e = this.options, f = this.cssPosition == "absolute" && (this.scrollParent[0] == document || !a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, g = /(html|body)/i.test(f[0].tagName); return { top: c.top + this.offset.relative.top * d + this.offset.parent.top * d - (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : g ? 0 : f.scrollTop()) * d), left: c.left + this.offset.relative.left * d + this.offset.parent.left * d - (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : g ? 0 : f.scrollLeft()) * d) } }, _generatePosition: function (b) { var c = this.options, d = this.cssPosition == "absolute" && (this.scrollParent[0] == document || !a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, e = /(html|body)/i.test(d[0].tagName), f = b.pageX, g = b.pageY; if (this.originalPosition) { var h; if (this.containment) { if (this.relative_container) { var i = this.relative_container.offset(); h = [this.containment[0] + i.left, this.containment[1] + i.top, this.containment[2] + i.left, this.containment[3] + i.top] } else h = this.containment; b.pageX - this.offset.click.left < h[0] && (f = h[0] + this.offset.click.left), b.pageY - this.offset.click.top < h[1] && (g = h[1] + this.offset.click.top), b.pageX - this.offset.click.left > h[2] && (f = h[2] + this.offset.click.left), b.pageY - this.offset.click.top > h[3] && (g = h[3] + this.offset.click.top) } if (c.grid) { var j = c.grid[1] ? this.originalPageY + Math.round((g - this.originalPageY) / c.grid[1]) * c.grid[1] : this.originalPageY; g = h ? j - this.offset.click.top < h[1] || j - this.offset.click.top > h[3] ? j - this.offset.click.top < h[1] ? j + c.grid[1] : j - c.grid[1] : j : j; var k = c.grid[0] ? this.originalPageX + Math.round((f - this.originalPageX) / c.grid[0]) * c.grid[0] : this.originalPageX; f = h ? k - this.offset.click.left < h[0] || k - this.offset.click.left > h[2] ? k - this.offset.click.left < h[0] ? k + c.grid[0] : k - c.grid[0] : k : k } } return { top: g - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : e ? 0 : d.scrollTop()), left: f - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : e ? 0 : d.scrollLeft()) } }, _clear: function () { this.helper.removeClass("ui-draggable-dragging"), this.helper[0] != this.element[0] && !this.cancelHelperRemoval && this.helper.remove(), this.helper = null, this.cancelHelperRemoval = !1 }, _trigger: function (b, c, d) { return d = d || this._uiHash(), a.ui.plugin.call(this, b, [c, d]), b == "drag" && (this.positionAbs = this._convertPositionTo("absolute")), a.Widget.prototype._trigger.call(this, b, c, d) }, plugins: {}, _uiHash: function (a) { return { helper: this.helper, position: this.position, originalPosition: this.originalPosition, offset: this.positionAbs } } }), a.extend(a.ui.draggable, { version: "1.8.24" }), a.ui.plugin.add("draggable", "connectToSortable", { start: function (b, c) { var d = a(this).data("draggable"), e = d.options, f = a.extend({}, c, { item: d.element }); d.sortables = [], a(e.connectToSortable).each(function () { var c = a.data(this, "sortable"); c && !c.options.disabled && (d.sortables.push({ instance: c, shouldRevert: c.options.revert }), c.refreshPositions(), c._trigger("activate", b, f)) }) }, stop: function (b, c) { var d = a(this).data("draggable"), e = a.extend({}, c, { item: d.element }); a.each(d.sortables, function () { this.instance.isOver ? (this.instance.isOver = 0, d.cancelHelperRemoval = !0, this.instance.cancelHelperRemoval = !1, this.shouldRevert && (this.instance.options.revert = !0), this.instance._mouseStop(b), this.instance.options.helper = this.instance.options._helper, d.options.helper == "original" && this.instance.currentItem.css({ top: "auto", left: "auto" })) : (this.instance.cancelHelperRemoval = !1, this.instance._trigger("deactivate", b, e)) }) }, drag: function (b, c) { var d = a(this).data("draggable"), e = this, f = function (b) { var c = this.offset.click.top, d = this.offset.click.left, e = this.positionAbs.top, f = this.positionAbs.left, g = b.height, h = b.width, i = b.top, j = b.left; return a.ui.isOver(e + c, f + d, i, j, g, h) }; a.each(d.sortables, function (f) { this.instance.positionAbs = d.positionAbs, this.instance.helperProportions = d.helperProportions, this.instance.offset.click = d.offset.click, this.instance._intersectsWith(this.instance.containerCache) ? (this.instance.isOver || (this.instance.isOver = 1, this.instance.currentItem = a(e).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item", !0), this.instance.options._helper = this.instance.options.helper, this.instance.options.helper = function () { return c.helper[0] }, b.target = this.instance.currentItem[0], this.instance._mouseCapture(b, !0), this.instance._mouseStart(b, !0, !0), this.instance.offset.click.top = d.offset.click.top, this.instance.offset.click.left = d.offset.click.left, this.instance.offset.parent.left -= d.offset.parent.left - this.instance.offset.parent.left, this.instance.offset.parent.top -= d.offset.parent.top - this.instance.offset.parent.top, d._trigger("toSortable", b), d.dropped = this.instance.element, d.currentItem = d.element, this.instance.fromOutside = d), this.instance.currentItem && this.instance._mouseDrag(b)) : this.instance.isOver && (this.instance.isOver = 0, this.instance.cancelHelperRemoval = !0, this.instance.options.revert = !1, this.instance._trigger("out", b, this.instance._uiHash(this.instance)), this.instance._mouseStop(b, !0), this.instance.options.helper = this.instance.options._helper, this.instance.currentItem.remove(), this.instance.placeholder && this.instance.placeholder.remove(), d._trigger("fromSortable", b), d.dropped = !1) }) } }), a.ui.plugin.add("draggable", "cursor", { start: function (b, c) { var d = a("body"), e = a(this).data("draggable").options; d.css("cursor") && (e._cursor = d.css("cursor")), d.css("cursor", e.cursor) }, stop: function (b, c) { var d = a(this).data("draggable").options; d._cursor && a("body").css("cursor", d._cursor) } }), a.ui.plugin.add("draggable", "opacity", { start: function (b, c) { var d = a(c.helper), e = a(this).data("draggable").options; d.css("opacity") && (e._opacity = d.css("opacity")), d.css("opacity", e.opacity) }, stop: function (b, c) { var d = a(this).data("draggable").options; d._opacity && a(c.helper).css("opacity", d._opacity) } }), a.ui.plugin.add("draggable", "scroll", { start: function (b, c) { var d = a(this).data("draggable"); d.scrollParent[0] != document && d.scrollParent[0].tagName != "HTML" && (d.overflowOffset = d.scrollParent.offset()) }, drag: function (b, c) { var d = a(this).data("draggable"), e = d.options, f = !1; if (d.scrollParent[0] != document && d.scrollParent[0].tagName != "HTML") { if (!e.axis || e.axis != "x") d.overflowOffset.top + d.scrollParent[0].offsetHeight - b.pageY < e.scrollSensitivity ? d.scrollParent[0].scrollTop = f = d.scrollParent[0].scrollTop + e.scrollSpeed : b.pageY - d.overflowOffset.top < e.scrollSensitivity && (d.scrollParent[0].scrollTop = f = d.scrollParent[0].scrollTop - e.scrollSpeed); if (!e.axis || e.axis != "y") d.overflowOffset.left + d.scrollParent[0].offsetWidth - b.pageX < e.scrollSensitivity ? d.scrollParent[0].scrollLeft = f = d.scrollParent[0].scrollLeft + e.scrollSpeed : b.pageX - d.overflowOffset.left < e.scrollSensitivity && (d.scrollParent[0].scrollLeft = f = d.scrollParent[0].scrollLeft - e.scrollSpeed) } else { if (!e.axis || e.axis != "x") b.pageY - a(document).scrollTop() < e.scrollSensitivity ? f = a(document).scrollTop(a(document).scrollTop() - e.scrollSpeed) : a(window).height() - (b.pageY - a(document).scrollTop()) < e.scrollSensitivity && (f = a(document).scrollTop(a(document).scrollTop() + e.scrollSpeed)); if (!e.axis || e.axis != "y") b.pageX - a(document).scrollLeft() < e.scrollSensitivity ? f = a(document).scrollLeft(a(document).scrollLeft() - e.scrollSpeed) : a(window).width() - (b.pageX - a(document).scrollLeft()) < e.scrollSensitivity && (f = a(document).scrollLeft(a(document).scrollLeft() + e.scrollSpeed)) } f !== !1 && a.ui.ddmanager && !e.dropBehaviour && a.ui.ddmanager.prepareOffsets(d, b) } }), a.ui.plugin.add("draggable", "snap", { start: function (b, c) { var d = a(this).data("draggable"), e = d.options; d.snapElements = [], a(e.snap.constructor != String ? e.snap.items || ":data(draggable)" : e.snap).each(function () { var b = a(this), c = b.offset(); this != d.element[0] && d.snapElements.push({ item: this, width: b.outerWidth(), height: b.outerHeight(), top: c.top, left: c.left }) }) }, drag: function (b, c) { var d = a(this).data("draggable"), e = d.options, f = e.snapTolerance, g = c.offset.left, h = g + d.helperProportions.width, i = c.offset.top, j = i + d.helperProportions.height; for (var k = d.snapElements.length - 1; k >= 0; k--) { var l = d.snapElements[k].left, m = l + d.snapElements[k].width, n = d.snapElements[k].top, o = n + d.snapElements[k].height; if (!(l - f < g && g < m + f && n - f < i && i < o + f || l - f < g && g < m + f && n - f < j && j < o + f || l - f < h && h < m + f && n - f < i && i < o + f || l - f < h && h < m + f && n - f < j && j < o + f)) { d.snapElements[k].snapping && d.options.snap.release && d.options.snap.release.call(d.element, b, a.extend(d._uiHash(), { snapItem: d.snapElements[k].item })), d.snapElements[k].snapping = !1; continue } if (e.snapMode != "inner") { var p = Math.abs(n - j) <= f, q = Math.abs(o - i) <= f, r = Math.abs(l - h) <= f, s = Math.abs(m - g) <= f; p && (c.position.top = d._convertPositionTo("relative", { top: n - d.helperProportions.height, left: 0 }).top - d.margins.top), q && (c.position.top = d._convertPositionTo("relative", { top: o, left: 0 }).top - d.margins.top), r && (c.position.left = d._convertPositionTo("relative", { top: 0, left: l - d.helperProportions.width }).left - d.margins.left), s && (c.position.left = d._convertPositionTo("relative", { top: 0, left: m }).left - d.margins.left) } var t = p || q || r || s; if (e.snapMode != "outer") { var p = Math.abs(n - i) <= f, q = Math.abs(o - j) <= f, r = Math.abs(l - g) <= f, s = Math.abs(m - h) <= f; p && (c.position.top = d._convertPositionTo("relative", { top: n, left: 0 }).top - d.margins.top), q && (c.position.top = d._convertPositionTo("relative", { top: o - d.helperProportions.height, left: 0 }).top - d.margins.top), r && (c.position.left = d._convertPositionTo("relative", { top: 0, left: l }).left - d.margins.left), s && (c.position.left = d._convertPositionTo("relative", { top: 0, left: m - d.helperProportions.width }).left - d.margins.left) } !d.snapElements[k].snapping && (p || q || r || s || t) && d.options.snap.snap && d.options.snap.snap.call(d.element, b, a.extend(d._uiHash(), { snapItem: d.snapElements[k].item })), d.snapElements[k].snapping = p || q || r || s || t } } }), a.ui.plugin.add("draggable", "stack", { start: function (b, c) { var d = a(this).data("draggable").options, e = a.makeArray(a(d.stack)).sort(function (b, c) { return (parseInt(a(b).css("zIndex"), 10) || 0) - (parseInt(a(c).css("zIndex"), 10) || 0) }); if (!e.length) return; var f = parseInt(e[0].style.zIndex) || 0; a(e).each(function (a) { this.style.zIndex = f + a }), this[0].style.zIndex = f + e.length } }), a.ui.plugin.add("draggable", "zIndex", { start: function (b, c) { var d = a(c.helper), e = a(this).data("draggable").options; d.css("zIndex") && (e._zIndex = d.css("zIndex")), d.css("zIndex", e.zIndex) }, stop: function (b, c) { var d = a(this).data("draggable").options; d._zIndex && a(c.helper).css("zIndex", d._zIndex) } }) }(jQuery), function (a, b) { a.widget("ui.droppable", { widgetEventPrefix: "drop", options: { accept: "*", activeClass: !1, addClasses: !0, greedy: !1, hoverClass: !1, scope: "default", tolerance: "intersect" }, _create: function () { var b = this.options, c = b.accept; this.isover = 0, this.isout = 1, this.accept = a.isFunction(c) ? c : function (a) { return a.is(c) }, this.proportions = { width: this.element[0].offsetWidth, height: this.element[0].offsetHeight }, a.ui.ddmanager.droppables[b.scope] = a.ui.ddmanager.droppables[b.scope] || [], a.ui.ddmanager.droppables[b.scope].push(this), b.addClasses && this.element.addClass("ui-droppable") }, destroy: function () { var b = a.ui.ddmanager.droppables[this.options.scope]; for (var c = 0; c < b.length; c++) b[c] == this && b.splice(c, 1); return this.element.removeClass("ui-droppable ui-droppable-disabled").removeData("droppable").unbind(".droppable"), this }, _setOption: function (b, c) { b == "accept" && (this.accept = a.isFunction(c) ? c : function (a) { return a.is(c) }), a.Widget.prototype._setOption.apply(this, arguments) }, _activate: function (b) { var c = a.ui.ddmanager.current; this.options.activeClass && this.element.addClass(this.options.activeClass), c && this._trigger("activate", b, this.ui(c)) }, _deactivate: function (b) { var c = a.ui.ddmanager.current; this.options.activeClass && this.element.removeClass(this.options.activeClass), c && this._trigger("deactivate", b, this.ui(c)) }, _over: function (b) { var c = a.ui.ddmanager.current; if (!c || (c.currentItem || c.element)[0] == this.element[0]) return; this.accept.call(this.element[0], c.currentItem || c.element) && (this.options.hoverClass && this.element.addClass(this.options.hoverClass), this._trigger("over", b, this.ui(c))) }, _out: function (b) { var c = a.ui.ddmanager.current; if (!c || (c.currentItem || c.element)[0] == this.element[0]) return; this.accept.call(this.element[0], c.currentItem || c.element) && (this.options.hoverClass && this.element.removeClass(this.options.hoverClass), this._trigger("out", b, this.ui(c))) }, _drop: function (b, c) { var d = c || a.ui.ddmanager.current; if (!d || (d.currentItem || d.element)[0] == this.element[0]) return !1; var e = !1; return this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function () { var b = a.data(this, "droppable"); if (b.options.greedy && !b.options.disabled && b.options.scope == d.options.scope && b.accept.call(b.element[0], d.currentItem || d.element) && a.ui.intersect(d, a.extend(b, { offset: b.element.offset() }), b.options.tolerance)) return e = !0, !1 }), e ? !1 : this.accept.call(this.element[0], d.currentItem || d.element) ? (this.options.activeClass && this.element.removeClass(this.options.activeClass), this.options.hoverClass && this.element.removeClass(this.options.hoverClass), this._trigger("drop", b, this.ui(d)), this.element) : !1 }, ui: function (a) { return { draggable: a.currentItem || a.element, helper: a.helper, position: a.position, offset: a.positionAbs } } }), a.extend(a.ui.droppable, { version: "1.8.24" }), a.ui.intersect = function (b, c, d) { if (!c.offset) return !1; var e = (b.positionAbs || b.position.absolute).left, f = e + b.helperProportions.width, g = (b.positionAbs || b.position.absolute).top, h = g + b.helperProportions.height, i = c.offset.left, j = i + c.proportions.width, k = c.offset.top, l = k + c.proportions.height; switch (d) { case "fit": return i <= e && f <= j && k <= g && h <= l; case "intersect": return i < e + b.helperProportions.width / 2 && f - b.helperProportions.width / 2 < j && k < g + b.helperProportions.height / 2 && h - b.helperProportions.height / 2 < l; case "pointer": var m = (b.positionAbs || b.position.absolute).left + (b.clickOffset || b.offset.click).left, n = (b.positionAbs || b.position.absolute).top + (b.clickOffset || b.offset.click).top, o = a.ui.isOver(n, m, k, i, c.proportions.height, c.proportions.width); return o; case "touch": return (g >= k && g <= l || h >= k && h <= l || g < k && h > l) && (e >= i && e <= j || f >= i && f <= j || e < i && f > j); default: return !1 } }, a.ui.ddmanager = { current: null, droppables: { "default": [] }, prepareOffsets: function (b, c) { var d = a.ui.ddmanager.droppables[b.options.scope] || [], e = c ? c.type : null, f = (b.currentItem || b.element).find(":data(droppable)").andSelf(); g: for (var h = 0; h < d.length; h++) { if (d[h].options.disabled || b && !d[h].accept.call(d[h].element[0], b.currentItem || b.element)) continue; for (var i = 0; i < f.length; i++) if (f[i] == d[h].element[0]) { d[h].proportions.height = 0; continue g } d[h].visible = d[h].element.css("display") != "none"; if (!d[h].visible) continue; e == "mousedown" && d[h]._activate.call(d[h], c), d[h].offset = d[h].element.offset(), d[h].proportions = { width: d[h].element[0].offsetWidth, height: d[h].element[0].offsetHeight } } }, drop: function (b, c) { var d = !1; return a.each(a.ui.ddmanager.droppables[b.options.scope] || [], function () { if (!this.options) return; !this.options.disabled && this.visible && a.ui.intersect(b, this, this.options.tolerance) && (d = this._drop.call(this, c) || d), !this.options.disabled && this.visible && this.accept.call(this.element[0], b.currentItem || b.element) && (this.isout = 1, this.isover = 0, this._deactivate.call(this, c)) }), d }, dragStart: function (b, c) { b.element.parents(":not(body,html)").bind("scroll.droppable", function () { b.options.refreshPositions || a.ui.ddmanager.prepareOffsets(b, c) }) }, drag: function (b, c) { b.options.refreshPositions && a.ui.ddmanager.prepareOffsets(b, c), a.each(a.ui.ddmanager.droppables[b.options.scope] || [], function () { if (this.options.disabled || this.greedyChild || !this.visible) return; var d = a.ui.intersect(b, this, this.options.tolerance), e = !d && this.isover == 1 ? "isout" : d && this.isover == 0 ? "isover" : null; if (!e) return; var f; if (this.options.greedy) { var g = this.options.scope, h = this.element.parents(":data(droppable)").filter(function () { return a.data(this, "droppable").options.scope === g }); h.length && (f = a.data(h[0], "droppable"), f.greedyChild = e == "isover" ? 1 : 0) } f && e == "isover" && (f.isover = 0, f.isout = 1, f._out.call(f, c)), this[e] = 1, this[e == "isout" ? "isover" : "isout"] = 0, this[e == "isover" ? "_over" : "_out"].call(this, c), f && e == "isout" && (f.isout = 0, f.isover = 1, f._over.call(f, c)) }) }, dragStop: function (b, c) { b.element.parents(":not(body,html)").unbind("scroll.droppable"), b.options.refreshPositions || a.ui.ddmanager.prepareOffsets(b, c) } } }(jQuery), function (a, b) { a.widget("ui.resizable", a.ui.mouse, { widgetEventPrefix: "resize", options: { alsoResize: !1, animate: !1, animateDuration: "slow", animateEasing: "swing", aspectRatio: !1, autoHide: !1, containment: !1, ghost: !1, grid: !1, handles: "e,s,se", helper: !1, maxHeight: null, maxWidth: null, minHeight: 10, minWidth: 10, zIndex: 1e3 }, _create: function () { var b = this, c = this.options; this.element.addClass("ui-resizable"), a.extend(this, { _aspectRatio: !!c.aspectRatio, aspectRatio: c.aspectRatio, originalElement: this.element, _proportionallyResizeElements: [], _helper: c.helper || c.ghost || c.animate ? c.helper || "ui-resizable-helper" : null }), this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i) && (this.element.wrap(a('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({ position: this.element.css("position"), width: this.element.outerWidth(), height: this.element.outerHeight(), top: this.element.css("top"), left: this.element.css("left") })), this.element = this.element.parent().data("resizable", this.element.data("resizable")), this.elementIsWrapper = !0, this.element.css({ marginLeft: this.originalElement.css("marginLeft"), marginTop: this.originalElement.css("marginTop"), marginRight: this.originalElement.css("marginRight"), marginBottom: this.originalElement.css("marginBottom") }), this.originalElement.css({ marginLeft: 0, marginTop: 0, marginRight: 0, marginBottom: 0 }), this.originalResizeStyle = this.originalElement.css("resize"), this.originalElement.css("resize", "none"), this._proportionallyResizeElements.push(this.originalElement.css({ position: "static", zoom: 1, display: "block" })), this.originalElement.css({ margin: this.originalElement.css("margin") }), this._proportionallyResize()), this.handles = c.handles || (a(".ui-resizable-handle", this.element).length ? { n: ".ui-resizable-n", e: ".ui-resizable-e", s: ".ui-resizable-s", w: ".ui-resizable-w", se: ".ui-resizable-se", sw: ".ui-resizable-sw", ne: ".ui-resizable-ne", nw: ".ui-resizable-nw" } : "e,s,se"); if (this.handles.constructor == String) { this.handles == "all" && (this.handles = "n,e,s,w,se,sw,ne,nw"); var d = this.handles.split(","); this.handles = {}; for (var e = 0; e < d.length; e++) { var f = a.trim(d[e]), g = "ui-resizable-" + f, h = a('<div class="ui-resizable-handle ' + g + '"></div>'); h.css({ zIndex: c.zIndex }), "se" == f && h.addClass("ui-icon ui-icon-gripsmall-diagonal-se"), this.handles[f] = ".ui-resizable-" + f, this.element.append(h) } } this._renderAxis = function (b) { b = b || this.element; for (var c in this.handles) { this.handles[c].constructor == String && (this.handles[c] = a(this.handles[c], this.element).show()); if (this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) { var d = a(this.handles[c], this.element), e = 0; e = /sw|ne|nw|se|n|s/.test(c) ? d.outerHeight() : d.outerWidth(); var f = ["padding", /ne|nw|n/.test(c) ? "Top" : /se|sw|s/.test(c) ? "Bottom" : /^e$/.test(c) ? "Right" : "Left"].join(""); b.css(f, e), this._proportionallyResize() } if (!a(this.handles[c]).length) continue } }, this._renderAxis(this.element), this._handles = a(".ui-resizable-handle", this.element).disableSelection(), this._handles.mouseover(function () { if (!b.resizing) { if (this.className) var a = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i); b.axis = a && a[1] ? a[1] : "se" } }), c.autoHide && (this._handles.hide(), a(this.element).addClass("ui-resizable-autohide").hover(function () { if (c.disabled) return; a(this).removeClass("ui-resizable-autohide"), b._handles.show() }, function () { if (c.disabled) return; b.resizing || (a(this).addClass("ui-resizable-autohide"), b._handles.hide()) })), this._mouseInit() }, destroy: function () { this._mouseDestroy(); var b = function (b) { a(b).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").unbind(".resizable").find(".ui-resizable-handle").remove() }; if (this.elementIsWrapper) { b(this.element); var c = this.element; c.after(this.originalElement.css({ position: c.css("position"), width: c.outerWidth(), height: c.outerHeight(), top: c.css("top"), left: c.css("left") })).remove() } return this.originalElement.css("resize", this.originalResizeStyle), b(this.originalElement), this }, _mouseCapture: function (b) { var c = !1; for (var d in this.handles) a(this.handles[d])[0] == b.target && (c = !0); return !this.options.disabled && c }, _mouseStart: function (b) { var d = this.options, e = this.element.position(), f = this.element; this.resizing = !0, this.documentScroll = { top: a(document).scrollTop(), left: a(document).scrollLeft() }, (f.is(".ui-draggable") || /absolute/.test(f.css("position"))) && f.css({ position: "absolute", top: e.top, left: e.left }), this._renderProxy(); var g = c(this.helper.css("left")), h = c(this.helper.css("top")); d.containment && (g += a(d.containment).scrollLeft() || 0, h += a(d.containment).scrollTop() || 0), this.offset = this.helper.offset(), this.position = { left: g, top: h }, this.size = this._helper ? { width: f.outerWidth(), height: f.outerHeight() } : { width: f.width(), height: f.height() }, this.originalSize = this._helper ? { width: f.outerWidth(), height: f.outerHeight() } : { width: f.width(), height: f.height() }, this.originalPosition = { left: g, top: h }, this.sizeDiff = { width: f.outerWidth() - f.width(), height: f.outerHeight() - f.height() }, this.originalMousePosition = { left: b.pageX, top: b.pageY }, this.aspectRatio = typeof d.aspectRatio == "number" ? d.aspectRatio : this.originalSize.width / this.originalSize.height || 1; var i = a(".ui-resizable-" + this.axis).css("cursor"); return a("body").css("cursor", i == "auto" ? this.axis + "-resize" : i), f.addClass("ui-resizable-resizing"), this._propagate("start", b), !0 }, _mouseDrag: function (b) { var c = this.helper, d = this.options, e = {}, f = this, g = this.originalMousePosition, h = this.axis, i = b.pageX - g.left || 0, j = b.pageY - g.top || 0, k = this._change[h]; if (!k) return !1; var l = k.apply(this, [b, i, j]), m = a.browser.msie && a.browser.version < 7, n = this.sizeDiff; this._updateVirtualBoundaries(b.shiftKey); if (this._aspectRatio || b.shiftKey) l = this._updateRatio(l, b); return l = this._respectSize(l, b), this._propagate("resize", b), c.css({ top: this.position.top + "px", left: this.position.left + "px", width: this.size.width + "px", height: this.size.height + "px" }), !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize(), this._updateCache(l), this._trigger("resize", b, this.ui()), !1 }, _mouseStop: function (b) { this.resizing = !1; var c = this.options, d = this; if (this._helper) { var e = this._proportionallyResizeElements, f = e.length && /textarea/i.test(e[0].nodeName), g = f && a.ui.hasScroll(e[0], "left") ? 0 : d.sizeDiff.height, h = f ? 0 : d.sizeDiff.width, i = { width: d.helper.width() - h, height: d.helper.height() - g }, j = parseInt(d.element.css("left"), 10) + (d.position.left - d.originalPosition.left) || null, k = parseInt(d.element.css("top"), 10) + (d.position.top - d.originalPosition.top) || null; c.animate || this.element.css(a.extend(i, { top: k, left: j })), d.helper.height(d.size.height), d.helper.width(d.size.width), this._helper && !c.animate && this._proportionallyResize() } return a("body").css("cursor", "auto"), this.element.removeClass("ui-resizable-resizing"), this._propagate("stop", b), this._helper && this.helper.remove(), !1 }, _updateVirtualBoundaries: function (a) { var b = this.options, c, e, f, g, h; h = { minWidth: d(b.minWidth) ? b.minWidth : 0, maxWidth: d(b.maxWidth) ? b.maxWidth : Infinity, minHeight: d(b.minHeight) ? b.minHeight : 0, maxHeight: d(b.maxHeight) ? b.maxHeight : Infinity }; if (this._aspectRatio || a) c = h.minHeight * this.aspectRatio, f = h.minWidth / this.aspectRatio, e = h.maxHeight * this.aspectRatio, g = h.maxWidth / this.aspectRatio, c > h.minWidth && (h.minWidth = c), f > h.minHeight && (h.minHeight = f), e < h.maxWidth && (h.maxWidth = e), g < h.maxHeight && (h.maxHeight = g); this._vBoundaries = h }, _updateCache: function (a) { var b = this.options; this.offset = this.helper.offset(), d(a.left) && (this.position.left = a.left), d(a.top) && (this.position.top = a.top), d(a.height) && (this.size.height = a.height), d(a.width) && (this.size.width = a.width) }, _updateRatio: function (a, b) { var c = this.options, e = this.position, f = this.size, g = this.axis; return d(a.height) ? a.width = a.height * this.aspectRatio : d(a.width) && (a.height = a.width / this.aspectRatio), g == "sw" && (a.left = e.left + (f.width - a.width), a.top = null), g == "nw" && (a.top = e.top + (f.height - a.height), a.left = e.left + (f.width - a.width)), a }, _respectSize: function (a, b) { var c = this.helper, e = this._vBoundaries, f = this._aspectRatio || b.shiftKey, g = this.axis, h = d(a.width) && e.maxWidth && e.maxWidth < a.width, i = d(a.height) && e.maxHeight && e.maxHeight < a.height, j = d(a.width) && e.minWidth && e.minWidth > a.width, k = d(a.height) && e.minHeight && e.minHeight > a.height; j && (a.width = e.minWidth), k && (a.height = e.minHeight), h && (a.width = e.maxWidth), i && (a.height = e.maxHeight); var l = this.originalPosition.left + this.originalSize.width, m = this.position.top + this.size.height, n = /sw|nw|w/.test(g), o = /nw|ne|n/.test(g); j && n && (a.left = l - e.minWidth), h && n && (a.left = l - e.maxWidth), k && o && (a.top = m - e.minHeight), i && o && (a.top = m - e.maxHeight); var p = !a.width && !a.height; return p && !a.left && a.top ? a.top = null : p && !a.top && a.left && (a.left = null), a }, _proportionallyResize: function () { var b = this.options; if (!this._proportionallyResizeElements.length) return; var c = this.helper || this.element; for (var d = 0; d < this._proportionallyResizeElements.length; d++) { var e = this._proportionallyResizeElements[d]; if (!this.borderDif) { var f = [e.css("borderTopWidth"), e.css("borderRightWidth"), e.css("borderBottomWidth"), e.css("borderLeftWidth")], g = [e.css("paddingTop"), e.css("paddingRight"), e.css("paddingBottom"), e.css("paddingLeft")]; this.borderDif = a.map(f, function (a, b) { var c = parseInt(a, 10) || 0, d = parseInt(g[b], 10) || 0; return c + d }) } if (!a.browser.msie || !a(c).is(":hidden") && !a(c).parents(":hidden").length) e.css({ height: c.height() - this.borderDif[0] - this.borderDif[2] || 0, width: c.width() - this.borderDif[1] - this.borderDif[3] || 0 }); else continue } }, _renderProxy: function () { var b = this.element, c = this.options; this.elementOffset = b.offset(); if (this._helper) { this.helper = this.helper || a('<div style="overflow:hidden;"></div>'); var d = a.browser.msie && a.browser.version < 7, e = d ? 1 : 0, f = d ? 2 : -1; this.helper.addClass(this._helper).css({ width: this.element.outerWidth() + f, height: this.element.outerHeight() + f, position: "absolute", left: this.elementOffset.left - e + "px", top: this.elementOffset.top - e + "px", zIndex: ++c.zIndex }), this.helper.appendTo("body").disableSelection() } else this.helper = this.element }, _change: { e: function (a, b, c) { return { width: this.originalSize.width + b } }, w: function (a, b, c) { var d = this.options, e = this.originalSize, f = this.originalPosition; return { left: f.left + b, width: e.width - b } }, n: function (a, b, c) { var d = this.options, e = this.originalSize, f = this.originalPosition; return { top: f.top + c, height: e.height - c } }, s: function (a, b, c) { return { height: this.originalSize.height + c } }, se: function (b, c, d) { return a.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [b, c, d])) }, sw: function (b, c, d) { return a.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [b, c, d])) }, ne: function (b, c, d) { return a.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [b, c, d])) }, nw: function (b, c, d) { return a.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [b, c, d])) } }, _propagate: function (b, c) { a.ui.plugin.call(this, b, [c, this.ui()]), b != "resize" && this._trigger(b, c, this.ui()) }, plugins: {}, ui: function () { return { originalElement: this.originalElement, element: this.element, helper: this.helper, position: this.position, size: this.size, originalSize: this.originalSize, originalPosition: this.originalPosition } } }), a.extend(a.ui.resizable, { version: "1.8.24" }), a.ui.plugin.add("resizable", "alsoResize", { start: function (b, c) { var d = a(this).data("resizable"), e = d.options, f = function (b) { a(b).each(function () { var b = a(this); b.data("resizable-alsoresize", { width: parseInt(b.width(), 10), height: parseInt(b.height(), 10), left: parseInt(b.css("left"), 10), top: parseInt(b.css("top"), 10) }) }) }; typeof e.alsoResize == "object" && !e.alsoResize.parentNode ? e.alsoResize.length ? (e.alsoResize = e.alsoResize[0], f(e.alsoResize)) : a.each(e.alsoResize, function (a) { f(a) }) : f(e.alsoResize) }, resize: function (b, c) { var d = a(this).data("resizable"), e = d.options, f = d.originalSize, g = d.originalPosition, h = { height: d.size.height - f.height || 0, width: d.size.width - f.width || 0, top: d.position.top - g.top || 0, left: d.position.left - g.left || 0 }, i = function (b, d) { a(b).each(function () { var b = a(this), e = a(this).data("resizable-alsoresize"), f = {}, g = d && d.length ? d : b.parents(c.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"]; a.each(g, function (a, b) { var c = (e[b] || 0) + (h[b] || 0); c && c >= 0 && (f[b] = c || null) }), b.css(f) }) }; typeof e.alsoResize == "object" && !e.alsoResize.nodeType ? a.each(e.alsoResize, function (a, b) { i(a, b) }) : i(e.alsoResize) }, stop: function (b, c) { a(this).removeData("resizable-alsoresize") } }), a.ui.plugin.add("resizable", "animate", { stop: function (b, c) { var d = a(this).data("resizable"), e = d.options, f = d._proportionallyResizeElements, g = f.length && /textarea/i.test(f[0].nodeName), h = g && a.ui.hasScroll(f[0], "left") ? 0 : d.sizeDiff.height, i = g ? 0 : d.sizeDiff.width, j = { width: d.size.width - i, height: d.size.height - h }, k = parseInt(d.element.css("left"), 10) + (d.position.left - d.originalPosition.left) || null, l = parseInt(d.element.css("top"), 10) + (d.position.top - d.originalPosition.top) || null; d.element.animate(a.extend(j, l && k ? { top: l, left: k } : {}), { duration: e.animateDuration, easing: e.animateEasing, step: function () { var c = { width: parseInt(d.element.css("width"), 10), height: parseInt(d.element.css("height"), 10), top: parseInt(d.element.css("top"), 10), left: parseInt(d.element.css("left"), 10) }; f && f.length && a(f[0]).css({ width: c.width, height: c.height }), d._updateCache(c), d._propagate("resize", b) } }) } }), a.ui.plugin.add("resizable", "containment", { start: function (b, d) { var e = a(this).data("resizable"), f = e.options, g = e.element, h = f.containment, i = h instanceof a ? h.get(0) : /parent/.test(h) ? g.parent().get(0) : h; if (!i) return; e.containerElement = a(i); if (/document/.test(h) || h == document) e.containerOffset = { left: 0, top: 0 }, e.containerPosition = { left: 0, top: 0 }, e.parentData = { element: a(document), left: 0, top: 0, width: a(document).width(), height: a(document).height() || document.body.parentNode.scrollHeight }; else { var j = a(i), k = []; a(["Top", "Right", "Left", "Bottom"]).each(function (a, b) { k[a] = c(j.css("padding" + b)) }), e.containerOffset = j.offset(), e.containerPosition = j.position(), e.containerSize = { height: j.innerHeight() - k[3], width: j.innerWidth() - k[1] }; var l = e.containerOffset, m = e.containerSize.height, n = e.containerSize.width, o = a.ui.hasScroll(i, "left") ? i.scrollWidth : n, p = a.ui.hasScroll(i) ? i.scrollHeight : m; e.parentData = { element: i, left: l.left, top: l.top, width: o, height: p } } }, resize: function (b, c) { var d = a(this).data("resizable"), e = d.options, f = d.containerSize, g = d.containerOffset, h = d.size, i = d.position, j = d._aspectRatio || b.shiftKey, k = { top: 0, left: 0 }, l = d.containerElement; l[0] != document && /static/.test(l.css("position")) && (k = g), i.left < (d._helper ? g.left : 0) && (d.size.width = d.size.width + (d._helper ? d.position.left - g.left : d.position.left - k.left), j && (d.size.height = d.size.width / d.aspectRatio), d.position.left = e.helper ? g.left : 0), i.top < (d._helper ? g.top : 0) && (d.size.height = d.size.height + (d._helper ? d.position.top - g.top : d.position.top), j && (d.size.width = d.size.height * d.aspectRatio), d.position.top = d._helper ? g.top : 0), d.offset.left = d.parentData.left + d.position.left, d.offset.top = d.parentData.top + d.position.top; var m = Math.abs((d._helper ? d.offset.left - k.left : d.offset.left - k.left) + d.sizeDiff.width), n = Math.abs((d._helper ? d.offset.top - k.top : d.offset.top - g.top) + d.sizeDiff.height), o = d.containerElement.get(0) == d.element.parent().get(0), p = /relative|absolute/.test(d.containerElement.css("position")); o && p && (m -= d.parentData.left), m + d.size.width >= d.parentData.width && (d.size.width = d.parentData.width - m, j && (d.size.height = d.size.width / d.aspectRatio)), n + d.size.height >= d.parentData.height && (d.size.height = d.parentData.height - n, j && (d.size.width = d.size.height * d.aspectRatio)) }, stop: function (b, c) { var d = a(this).data("resizable"), e = d.options, f = d.position, g = d.containerOffset, h = d.containerPosition, i = d.containerElement, j = a(d.helper), k = j.offset(), l = j.outerWidth() - d.sizeDiff.width, m = j.outerHeight() - d.sizeDiff.height; d._helper && !e.animate && /relative/.test(i.css("position")) && a(this).css({ left: k.left - h.left - g.left, width: l, height: m }), d._helper && !e.animate && /static/.test(i.css("position")) && a(this).css({ left: k.left - h.left - g.left, width: l, height: m }) } }), a.ui.plugin.add("resizable", "ghost", { start: function (b, c) { var d = a(this).data("resizable"), e = d.options, f = d.size; d.ghost = d.originalElement.clone(), d.ghost.css({ opacity: .25, display: "block", position: "relative", height: f.height, width: f.width, margin: 0, left: 0, top: 0 }).addClass("ui-resizable-ghost").addClass(typeof e.ghost == "string" ? e.ghost : ""), d.ghost.appendTo(d.helper) }, resize: function (b, c) { var d = a(this).data("resizable"), e = d.options; d.ghost && d.ghost.css({ position: "relative", height: d.size.height, width: d.size.width }) }, stop: function (b, c) { var d = a(this).data("resizable"), e = d.options; d.ghost && d.helper && d.helper.get(0).removeChild(d.ghost.get(0)) } }), a.ui.plugin.add("resizable", "grid", { resize: function (b, c) { var d = a(this).data("resizable"), e = d.options, f = d.size, g = d.originalSize, h = d.originalPosition, i = d.axis, j = e._aspectRatio || b.shiftKey; e.grid = typeof e.grid == "number" ? [e.grid, e.grid] : e.grid; var k = Math.round((f.width - g.width) / (e.grid[0] || 1)) * (e.grid[0] || 1), l = Math.round((f.height - g.height) / (e.grid[1] || 1)) * (e.grid[1] || 1); /^(se|s|e)$/.test(i) ? (d.size.width = g.width + k, d.size.height = g.height + l) : /^(ne)$/.test(i) ? (d.size.width = g.width + k, d.size.height = g.height + l, d.position.top = h.top - l) : /^(sw)$/.test(i) ? (d.size.width = g.width + k, d.size.height = g.height + l, d.position.left = h.left - k) : (d.size.width = g.width + k, d.size.height = g.height + l, d.position.top = h.top - l, d.position.left = h.left - k) } }); var c = function (a) { return parseInt(a, 10) || 0 }, d = function (a) { return !isNaN(parseInt(a, 10)) } }(jQuery), function (a, b) { a.widget("ui.selectable", a.ui.mouse, { options: { appendTo: "body", autoRefresh: !0, distance: 0, filter: "*", tolerance: "touch" }, _create: function () { var b = this; this.element.addClass("ui-selectable"), this.dragged = !1; var c; this.refresh = function () { c = a(b.options.filter, b.element[0]), c.addClass("ui-selectee"), c.each(function () { var b = a(this), c = b.offset(); a.data(this, "selectable-item", { element: this, $element: b, left: c.left, top: c.top, right: c.left + b.outerWidth(), bottom: c.top + b.outerHeight(), startselected: !1, selected: b.hasClass("ui-selected"), selecting: b.hasClass("ui-selecting"), unselecting: b.hasClass("ui-unselecting") }) }) }, this.refresh(), this.selectees = c.addClass("ui-selectee"), this._mouseInit(), this.helper = a("<div class='ui-selectable-helper'></div>") }, destroy: function () { return this.selectees.removeClass("ui-selectee").removeData("selectable-item"), this.element.removeClass("ui-selectable ui-selectable-disabled").removeData("selectable").unbind(".selectable"), this._mouseDestroy(), this }, _mouseStart: function (b) { var c = this; this.opos = [b.pageX, b.pageY]; if (this.options.disabled) return; var d = this.options; this.selectees = a(d.filter, this.element[0]), this._trigger("start", b), a(d.appendTo).append(this.helper), this.helper.css({ left: b.clientX, top: b.clientY, width: 0, height: 0 }), d.autoRefresh && this.refresh(), this.selectees.filter(".ui-selected").each(function () { var d = a.data(this, "selectable-item"); d.startselected = !0, !b.metaKey && !b.ctrlKey && (d.$element.removeClass("ui-selected"), d.selected = !1, d.$element.addClass("ui-unselecting"), d.unselecting = !0, c._trigger("unselecting", b, { unselecting: d.element })) }), a(b.target).parents().andSelf().each(function () { var d = a.data(this, "selectable-item"); if (d) { var e = !b.metaKey && !b.ctrlKey || !d.$element.hasClass("ui-selected"); return d.$element.removeClass(e ? "ui-unselecting" : "ui-selected").addClass(e ? "ui-selecting" : "ui-unselecting"), d.unselecting = !e, d.selecting = e, d.selected = e, e ? c._trigger("selecting", b, { selecting: d.element }) : c._trigger("unselecting", b, { unselecting: d.element }), !1 } }) }, _mouseDrag: function (b) { var c = this; this.dragged = !0; if (this.options.disabled) return; var d = this.options, e = this.opos[0], f = this.opos[1], g = b.pageX, h = b.pageY; if (e > g) { var i = g; g = e, e = i } if (f > h) { var i = h; h = f, f = i } return this.helper.css({ left: e, top: f, width: g - e, height: h - f }), this.selectees.each(function () { var i = a.data(this, "selectable-item"); if (!i || i.element == c.element[0]) return; var j = !1; d.tolerance == "touch" ? j = !(i.left > g || i.right < e || i.top > h || i.bottom < f) : d.tolerance == "fit" && (j = i.left > e && i.right < g && i.top > f && i.bottom < h), j ? (i.selected && (i.$element.removeClass("ui-selected"), i.selected = !1), i.unselecting && (i.$element.removeClass("ui-unselecting"), i.unselecting = !1), i.selecting || (i.$element.addClass("ui-selecting"), i.selecting = !0, c._trigger("selecting", b, { selecting: i.element }))) : (i.selecting && ((b.metaKey || b.ctrlKey) && i.startselected ? (i.$element.removeClass("ui-selecting"), i.selecting = !1, i.$element.addClass("ui-selected"), i.selected = !0) : (i.$element.removeClass("ui-selecting"), i.selecting = !1, i.startselected && (i.$element.addClass("ui-unselecting"), i.unselecting = !0), c._trigger("unselecting", b, { unselecting: i.element }))), i.selected && !b.metaKey && !b.ctrlKey && !i.startselected && (i.$element.removeClass("ui-selected"), i.selected = !1, i.$element.addClass("ui-unselecting"), i.unselecting = !0, c._trigger("unselecting", b, { unselecting: i.element }))) }), !1 }, _mouseStop: function (b) { var c = this; this.dragged = !1; var d = this.options; return a(".ui-unselecting", this.element[0]).each(function () { var d = a.data(this, "selectable-item"); d.$element.removeClass("ui-unselecting"), d.unselecting = !1, d.startselected = !1, c._trigger("unselected", b, { unselected: d.element }) }), a(".ui-selecting", this.element[0]).each(function () { var d = a.data(this, "selectable-item"); d.$element.removeClass("ui-selecting").addClass("ui-selected"), d.selecting = !1, d.selected = !0, d.startselected = !0, c._trigger("selected", b, { selected: d.element }) }), this._trigger("stop", b), this.helper.remove(), !1 } }), a.extend(a.ui.selectable, { version: "1.8.24" }) }(jQuery), function (a, b) { a.widget("ui.sortable", a.ui.mouse, { widgetEventPrefix: "sort", ready: !1, options: { appendTo: "parent", axis: !1, connectWith: !1, containment: !1, cursor: "auto", cursorAt: !1, dropOnEmpty: !0, forcePlaceholderSize: !1, forceHelperSize: !1, grid: !1, handle: !1, helper: "original", items: "> *", opacity: !1, placeholder: !1, revert: !1, scroll: !0, scrollSensitivity: 20, scrollSpeed: 20, scope: "default", tolerance: "intersect", zIndex: 1e3 }, _create: function () { var a = this.options; this.containerCache = {}, this.element.addClass("ui-sortable"), this.refresh(), this.floating = this.items.length ? a.axis === "x" || /left|right/.test(this.items[0].item.css("float")) || /inline|table-cell/.test(this.items[0].item.css("display")) : !1, this.offset = this.element.offset(), this._mouseInit(), this.ready = !0 }, destroy: function () { a.Widget.prototype.destroy.call(this), this.element.removeClass("ui-sortable ui-sortable-disabled"), this._mouseDestroy(); for (var b = this.items.length - 1; b >= 0; b--) this.items[b].item.removeData(this.widgetName + "-item"); return this }, _setOption: function (b, c) { b === "disabled" ? (this.options[b] = c, this.widget()[c ? "addClass" : "removeClass"]("ui-sortable-disabled")) : a.Widget.prototype._setOption.apply(this, arguments) }, _mouseCapture: function (b, c) { var d = this; if (this.reverting) return !1; if (this.options.disabled || this.options.type == "static") return !1; this._refreshItems(b); var e = null, f = this, g = a(b.target).parents().each(function () { if (a.data(this, d.widgetName + "-item") == f) return e = a(this), !1 }); a.data(b.target, d.widgetName + "-item") == f && (e = a(b.target)); if (!e) return !1; if (this.options.handle && !c) { var h = !1; a(this.options.handle, e).find("*").andSelf().each(function () { this == b.target && (h = !0) }); if (!h) return !1 } return this.currentItem = e, this._removeCurrentsFromItems(), !0 }, _mouseStart: function (b, c, d) { var e = this.options, f = this; this.currentContainer = this, this.refreshPositions(), this.helper = this._createHelper(b), this._cacheHelperProportions(), this._cacheMargins(), this.scrollParent = this.helper.scrollParent(), this.offset = this.currentItem.offset(), this.offset = { top: this.offset.top - this.margins.top, left: this.offset.left - this.margins.left }, a.extend(this.offset, { click: { left: b.pageX - this.offset.left, top: b.pageY - this.offset.top }, parent: this._getParentOffset(), relative: this._getRelativeOffset() }), this.helper.css("position", "absolute"), this.cssPosition = this.helper.css("position"), this.originalPosition = this._generatePosition(b), this.originalPageX = b.pageX, this.originalPageY = b.pageY, e.cursorAt && this._adjustOffsetFromHelper(e.cursorAt), this.domPosition = { prev: this.currentItem.prev()[0], parent: this.currentItem.parent()[0] }, this.helper[0] != this.currentItem[0] && this.currentItem.hide(), this._createPlaceholder(), e.containment && this._setContainment(), e.cursor && (a("body").css("cursor") && (this._storedCursor = a("body").css("cursor")), a("body").css("cursor", e.cursor)), e.opacity && (this.helper.css("opacity") && (this._storedOpacity = this.helper.css("opacity")), this.helper.css("opacity", e.opacity)), e.zIndex && (this.helper.css("zIndex") && (this._storedZIndex = this.helper.css("zIndex")), this.helper.css("zIndex", e.zIndex)), this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML" && (this.overflowOffset = this.scrollParent.offset()), this._trigger("start", b, this._uiHash()), this._preserveHelperProportions || this._cacheHelperProportions(); if (!d) for (var g = this.containers.length - 1; g >= 0; g--) this.containers[g]._trigger("activate", b, f._uiHash(this)); return a.ui.ddmanager && (a.ui.ddmanager.current = this), a.ui.ddmanager && !e.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, b), this.dragging = !0, this.helper.addClass("ui-sortable-helper"), this._mouseDrag(b), !0 }, _mouseDrag: function (b) { this.position = this._generatePosition(b), this.positionAbs = this._convertPositionTo("absolute"), this.lastPositionAbs || (this.lastPositionAbs = this.positionAbs); if (this.options.scroll) { var c = this.options, d = !1; this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML" ? (this.overflowOffset.top + this.scrollParent[0].offsetHeight - b.pageY < c.scrollSensitivity ? this.scrollParent[0].scrollTop = d = this.scrollParent[0].scrollTop + c.scrollSpeed : b.pageY - this.overflowOffset.top < c.scrollSensitivity && (this.scrollParent[0].scrollTop = d = this.scrollParent[0].scrollTop - c.scrollSpeed), this.overflowOffset.left + this.scrollParent[0].offsetWidth - b.pageX < c.scrollSensitivity ? this.scrollParent[0].scrollLeft = d = this.scrollParent[0].scrollLeft + c.scrollSpeed : b.pageX - this.overflowOffset.left < c.scrollSensitivity && (this.scrollParent[0].scrollLeft = d = this.scrollParent[0].scrollLeft - c.scrollSpeed)) : (b.pageY - a(document).scrollTop() < c.scrollSensitivity ? d = a(document).scrollTop(a(document).scrollTop() - c.scrollSpeed) : a(window).height() - (b.pageY - a(document).scrollTop()) < c.scrollSensitivity && (d = a(document).scrollTop(a(document).scrollTop() + c.scrollSpeed)), b.pageX - a(document).scrollLeft() < c.scrollSensitivity ? d = a(document).scrollLeft(a(document).scrollLeft() - c.scrollSpeed) : a(window).width() - (b.pageX - a(document).scrollLeft()) < c.scrollSensitivity && (d = a(document).scrollLeft(a(document).scrollLeft() + c.scrollSpeed))), d !== !1 && a.ui.ddmanager && !c.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, b) } this.positionAbs = this._convertPositionTo("absolute"); if (!this.options.axis || this.options.axis != "y") this.helper[0].style.left = this.position.left + "px"; if (!this.options.axis || this.options.axis != "x") this.helper[0].style.top = this.position.top + "px"; for (var e = this.items.length - 1; e >= 0; e--) { var f = this.items[e], g = f.item[0], h = this._intersectsWithPointer(f); if (!h) continue; if (f.instance !== this.currentContainer) continue; if (g != this.currentItem[0] && this.placeholder[h == 1 ? "next" : "prev"]()[0] != g && !a.ui.contains(this.placeholder[0], g) && (this.options.type == "semi-dynamic" ? !a.ui.contains(this.element[0], g) : !0)) { this.direction = h == 1 ? "down" : "up"; if (this.options.tolerance == "pointer" || this._intersectsWithSides(f)) this._rearrange(b, f); else break; this._trigger("change", b, this._uiHash()); break } } return this._contactContainers(b), a.ui.ddmanager && a.ui.ddmanager.drag(this, b), this._trigger("sort", b, this._uiHash()), this.lastPositionAbs = this.positionAbs, !1 }, _mouseStop: function (b, c) { if (!b) return; a.ui.ddmanager && !this.options.dropBehaviour && a.ui.ddmanager.drop(this, b); if (this.options.revert) { var d = this, e = d.placeholder.offset(); d.reverting = !0, a(this.helper).animate({ left: e.left - this.offset.parent.left - d.margins.left + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollLeft), top: e.top - this.offset.parent.top - d.margins.top + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollTop) }, parseInt(this.options.revert, 10) || 500, function () { d._clear(b) }) } else this._clear(b, c); return !1 }, cancel: function () { var b = this; if (this.dragging) { this._mouseUp({ target: null }), this.options.helper == "original" ? this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper") : this.currentItem.show(); for (var c = this.containers.length - 1; c >= 0; c--) this.containers[c]._trigger("deactivate", null, b._uiHash(this)), this.containers[c].containerCache.over && (this.containers[c]._trigger("out", null, b._uiHash(this)), this.containers[c].containerCache.over = 0) } return this.placeholder && (this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]), this.options.helper != "original" && this.helper && this.helper[0].parentNode && this.helper.remove(), a.extend(this, { helper: null, dragging: !1, reverting: !1, _noFinalSort: null }), this.domPosition.prev ? a(this.domPosition.prev).after(this.currentItem) : a(this.domPosition.parent).prepend(this.currentItem)), this }, serialize: function (b) { var c = this._getItemsAsjQuery(b && b.connected), d = []; return b = b || {}, a(c).each(function () { var c = (a(b.item || this).attr(b.attribute || "id") || "").match(b.expression || /(.+)[-=_](.+)/); c && d.push((b.key || c[1] + "[]") + "=" + (b.key && b.expression ? c[1] : c[2])) }), !d.length && b.key && d.push(b.key + "="), d.join("&") }, toArray: function (b) { var c = this._getItemsAsjQuery(b && b.connected), d = []; return b = b || {}, c.each(function () { d.push(a(b.item || this).attr(b.attribute || "id") || "") }), d }, _intersectsWith: function (a) { var b = this.positionAbs.left, c = b + this.helperProportions.width, d = this.positionAbs.top, e = d + this.helperProportions.height, f = a.left, g = f + a.width, h = a.top, i = h + a.height, j = this.offset.click.top, k = this.offset.click.left, l = d + j > h && d + j < i && b + k > f && b + k < g; return this.options.tolerance == "pointer" || this.options.forcePointerForContainers || this.options.tolerance != "pointer" && this.helperProportions[this.floating ? "width" : "height"] > a[this.floating ? "width" : "height"] ? l : f < b + this.helperProportions.width / 2 && c - this.helperProportions.width / 2 < g && h < d + this.helperProportions.height / 2 && e - this.helperProportions.height / 2 < i }, _intersectsWithPointer: function (b) { var c = this.options.axis === "x" || a.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, b.top, b.height), d = this.options.axis === "y" || a.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, b.left, b.width), e = c && d, f = this._getDragVerticalDirection(), g = this._getDragHorizontalDirection(); return e ? this.floating ? g && g == "right" || f == "down" ? 2 : 1 : f && (f == "down" ? 2 : 1) : !1 }, _intersectsWithSides: function (b) { var c = a.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, b.top + b.height / 2, b.height), d = a.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, b.left + b.width / 2, b.width), e = this._getDragVerticalDirection(), f = this._getDragHorizontalDirection(); return this.floating && f ? f == "right" && d || f == "left" && !d : e && (e == "down" && c || e == "up" && !c) }, _getDragVerticalDirection: function () { var a = this.positionAbs.top - this.lastPositionAbs.top; return a != 0 && (a > 0 ? "down" : "up") }, _getDragHorizontalDirection: function () { var a = this.positionAbs.left - this.lastPositionAbs.left; return a != 0 && (a > 0 ? "right" : "left") }, refresh: function (a) { return this._refreshItems(a), this.refreshPositions(), this }, _connectWith: function () { var a = this.options; return a.connectWith.constructor == String ? [a.connectWith] : a.connectWith }, _getItemsAsjQuery: function (b) { var c = this, d = [], e = [], f = this._connectWith(); if (f && b) for (var g = f.length - 1; g >= 0; g--) { var h = a(f[g]); for (var i = h.length - 1; i >= 0; i--) { var j = a.data(h[i], this.widgetName); j && j != this && !j.options.disabled && e.push([a.isFunction(j.options.items) ? j.options.items.call(j.element) : a(j.options.items, j.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), j]) } } e.push([a.isFunction(this.options.items) ? this.options.items.call(this.element, null, { options: this.options, item: this.currentItem }) : a(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]); for (var g = e.length - 1; g >= 0; g--) e[g][0].each(function () { d.push(this) }); return a(d) }, _removeCurrentsFromItems: function () { var a = this.currentItem.find(":data(" + this.widgetName + "-item)"); for (var b = 0; b < this.items.length; b++) for (var c = 0; c < a.length; c++) a[c] == this.items[b].item[0] && this.items.splice(b, 1) }, _refreshItems: function (b) { this.items = [], this.containers = [this]; var c = this.items, d = this, e = [[a.isFunction(this.options.items) ? this.options.items.call(this.element[0], b, { item: this.currentItem }) : a(this.options.items, this.element), this]], f = this._connectWith(); if (f && this.ready) for (var g = f.length - 1; g >= 0; g--) { var h = a(f[g]); for (var i = h.length - 1; i >= 0; i--) { var j = a.data(h[i], this.widgetName); j && j != this && !j.options.disabled && (e.push([a.isFunction(j.options.items) ? j.options.items.call(j.element[0], b, { item: this.currentItem }) : a(j.options.items, j.element), j]), this.containers.push(j)) } } for (var g = e.length - 1; g >= 0; g--) { var k = e[g][1], l = e[g][0]; for (var i = 0, m = l.length; i < m; i++) { var n = a(l[i]); n.data(this.widgetName + "-item", k), c.push({ item: n, instance: k, width: 0, height: 0, left: 0, top: 0 }) } } }, refreshPositions: function (b) { this.offsetParent && this.helper && (this.offset.parent = this._getParentOffset()); for (var c = this.items.length - 1; c >= 0; c--) { var d = this.items[c]; if (d.instance != this.currentContainer && this.currentContainer && d.item[0] != this.currentItem[0]) continue; var e = this.options.toleranceElement ? a(this.options.toleranceElement, d.item) : d.item; b || (d.width = e.outerWidth(), d.height = e.outerHeight()); var f = e.offset(); d.left = f.left, d.top = f.top } if (this.options.custom && this.options.custom.refreshContainers) this.options.custom.refreshContainers.call(this); else for (var c = this.containers.length - 1; c >= 0; c--) { var f = this.containers[c].element.offset(); this.containers[c].containerCache.left = f.left, this.containers[c].containerCache.top = f.top, this.containers[c].containerCache.width = this.containers[c].element.outerWidth(), this.containers[c].containerCache.height = this.containers[c].element.outerHeight() } return this }, _createPlaceholder: function (b) { var c = b || this, d = c.options; if (!d.placeholder || d.placeholder.constructor == String) { var e = d.placeholder; d.placeholder = { element: function () { var b = a(document.createElement(c.currentItem[0].nodeName)).addClass(e || c.currentItem[0].className + " ui-sortable-placeholder").removeClass("ui-sortable-helper")[0]; return e || (b.style.visibility = "hidden"), b }, update: function (a, b) { if (e && !d.forcePlaceholderSize) return; b.height() || b.height(c.currentItem.innerHeight() - parseInt(c.currentItem.css("paddingTop") || 0, 10) - parseInt(c.currentItem.css("paddingBottom") || 0, 10)), b.width() || b.width(c.currentItem.innerWidth() - parseInt(c.currentItem.css("paddingLeft") || 0, 10) - parseInt(c.currentItem.css("paddingRight") || 0, 10)) } } } c.placeholder = a(d.placeholder.element.call(c.element, c.currentItem)), c.currentItem.after(c.placeholder), d.placeholder.update(c, c.placeholder) }, _contactContainers: function (b) { var c = null, d = null; for (var e = this.containers.length - 1; e >= 0; e--) { if (a.ui.contains(this.currentItem[0], this.containers[e].element[0])) continue; if (this._intersectsWith(this.containers[e].containerCache)) { if (c && a.ui.contains(this.containers[e].element[0], c.element[0])) continue; c = this.containers[e], d = e } else this.containers[e].containerCache.over && (this.containers[e]._trigger("out", b, this._uiHash(this)), this.containers[e].containerCache.over = 0) } if (!c) return; if (this.containers.length === 1) this.containers[d]._trigger("over", b, this._uiHash(this)), this.containers[d].containerCache.over = 1; else if (this.currentContainer != this.containers[d]) { var f = 1e4, g = null, h = this.positionAbs[this.containers[d].floating ? "left" : "top"]; for (var i = this.items.length - 1; i >= 0; i--) { if (!a.ui.contains(this.containers[d].element[0], this.items[i].item[0])) continue; var j = this.containers[d].floating ? this.items[i].item.offset().left : this.items[i].item.offset().top; Math.abs(j - h) < f && (f = Math.abs(j - h), g = this.items[i], this.direction = j - h > 0 ? "down" : "up") } if (!g && !this.options.dropOnEmpty) return; this.currentContainer = this.containers[d], g ? this._rearrange(b, g, null, !0) : this._rearrange(b, null, this.containers[d].element, !0), this._trigger("change", b, this._uiHash()), this.containers[d]._trigger("change", b, this._uiHash(this)), this.options.placeholder.update(this.currentContainer, this.placeholder), this.containers[d]._trigger("over", b, this._uiHash(this)), this.containers[d].containerCache.over = 1 } }, _createHelper: function (b) { var c = this.options, d = a.isFunction(c.helper) ? a(c.helper.apply(this.element[0], [b, this.currentItem])) : c.helper == "clone" ? this.currentItem.clone() : this.currentItem; return d.parents("body").length || a(c.appendTo != "parent" ? c.appendTo : this.currentItem[0].parentNode)[0].appendChild(d[0]), d[0] == this.currentItem[0] && (this._storedCSS = { width: this.currentItem[0].style.width, height: this.currentItem[0].style.height, position: this.currentItem.css("position"), top: this.currentItem.css("top"), left: this.currentItem.css("left") }), (d[0].style.width == "" || c.forceHelperSize) && d.width(this.currentItem.width()), (d[0].style.height == "" || c.forceHelperSize) && d.height(this.currentItem.height()), d }, _adjustOffsetFromHelper: function (b) { typeof b == "string" && (b = b.split(" ")), a.isArray(b) && (b = { left: +b[0], top: +b[1] || 0 }), "left" in b && (this.offset.click.left = b.left + this.margins.left), "right" in b && (this.offset.click.left = this.helperProportions.width - b.right + this.margins.left), "top" in b && (this.offset.click.top = b.top + this.margins.top), "bottom" in b && (this.offset.click.top = this.helperProportions.height - b.bottom + this.margins.top) }, _getParentOffset: function () { this.offsetParent = this.helper.offsetParent(); var b = this.offsetParent.offset(); this.cssPosition == "absolute" && this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0]) && (b.left += this.scrollParent.scrollLeft(), b.top += this.scrollParent.scrollTop()); if (this.offsetParent[0] == document.body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && a.browser.msie) b = { top: 0, left: 0 }; return { top: b.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0), left: b.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0) } }, _getRelativeOffset: function () { if (this.cssPosition == "relative") { var a = this.currentItem.position(); return { top: a.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(), left: a.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft() } } return { top: 0, left: 0 } }, _cacheMargins: function () { this.margins = { left: parseInt(this.currentItem.css("marginLeft"), 10) || 0, top: parseInt(this.currentItem.css("marginTop"), 10) || 0 } }, _cacheHelperProportions: function () { this.helperProportions = { width: this.helper.outerWidth(), height: this.helper.outerHeight() } }, _setContainment: function () { var b = this.options; b.containment == "parent" && (b.containment = this.helper[0].parentNode); if (b.containment == "document" || b.containment == "window") this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, a(b.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (a(b.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]; if (!/^(document|window|parent)$/.test(b.containment)) { var c = a(b.containment)[0], d = a(b.containment).offset(), e = a(c).css("overflow") != "hidden"; this.containment = [d.left + (parseInt(a(c).css("borderLeftWidth"), 10) || 0) + (parseInt(a(c).css("paddingLeft"), 10) || 0) - this.margins.left, d.top + (parseInt(a(c).css("borderTopWidth"), 10) || 0) + (parseInt(a(c).css("paddingTop"), 10) || 0) - this.margins.top, d.left + (e ? Math.max(c.scrollWidth, c.offsetWidth) : c.offsetWidth) - (parseInt(a(c).css("borderLeftWidth"), 10) || 0) - (parseInt(a(c).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, d.top + (e ? Math.max(c.scrollHeight, c.offsetHeight) : c.offsetHeight) - (parseInt(a(c).css("borderTopWidth"), 10) || 0) - (parseInt(a(c).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top] } }, _convertPositionTo: function (b, c) { c || (c = this.position); var d = b == "absolute" ? 1 : -1, e = this.options, f = this.cssPosition == "absolute" && (this.scrollParent[0] == document || !a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, g = /(html|body)/i.test(f[0].tagName); return { top: c.top + this.offset.relative.top * d + this.offset.parent.top * d - (a.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : g ? 0 : f.scrollTop()) * d), left: c.left + this.offset.relative.left * d + this.offset.parent.left * d - (a.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : g ? 0 : f.scrollLeft()) * d) } }, _generatePosition: function (b) { var c = this.options, d = this.cssPosition == "absolute" && (this.scrollParent[0] == document || !a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, e = /(html|body)/i.test(d[0].tagName); this.cssPosition == "relative" && (this.scrollParent[0] == document || this.scrollParent[0] == this.offsetParent[0]) && (this.offset.relative = this._getRelativeOffset()); var f = b.pageX, g = b.pageY; if (this.originalPosition) { this.containment && (b.pageX - this.offset.click.left < this.containment[0] && (f = this.containment[0] + this.offset.click.left), b.pageY - this.offset.click.top < this.containment[1] && (g = this.containment[1] + this.offset.click.top), b.pageX - this.offset.click.left > this.containment[2] && (f = this.containment[2] + this.offset.click.left), b.pageY - this.offset.click.top > this.containment[3] && (g = this.containment[3] + this.offset.click.top)); if (c.grid) { var h = this.originalPageY + Math.round((g - this.originalPageY) / c.grid[1]) * c.grid[1]; g = this.containment ? h - this.offset.click.top < this.containment[1] || h - this.offset.click.top > this.containment[3] ? h - this.offset.click.top < this.containment[1] ? h + c.grid[1] : h - c.grid[1] : h : h; var i = this.originalPageX + Math.round((f - this.originalPageX) / c.grid[0]) * c.grid[0]; f = this.containment ? i - this.offset.click.left < this.containment[0] || i - this.offset.click.left > this.containment[2] ? i - this.offset.click.left < this.containment[0] ? i + c.grid[0] : i - c.grid[0] : i : i } } return { top: g - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (a.browser.safari && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : e ? 0 : d.scrollTop()), left: f - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (a.browser.safari && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : e ? 0 : d.scrollLeft()) } }, _rearrange: function (a, b, c, d) { c ? c[0].appendChild(this.placeholder[0]) : b.item[0].parentNode.insertBefore(this.placeholder[0], this.direction == "down" ? b.item[0] : b.item[0].nextSibling), this.counter = this.counter ? ++this.counter : 1; var e = this, f = this.counter; window.setTimeout(function () { f == e.counter && e.refreshPositions(!d) }, 0) }, _clear: function (b, c) { this.reverting = !1; var d = [], e = this; !this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem), this._noFinalSort = null; if (this.helper[0] == this.currentItem[0]) { for (var f in this._storedCSS) if (this._storedCSS[f] == "auto" || this._storedCSS[f] == "static") this._storedCSS[f] = ""; this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper") } else this.currentItem.show(); this.fromOutside && !c && d.push(function (a) { this._trigger("receive", a, this._uiHash(this.fromOutside)) }), (this.fromOutside || this.domPosition.prev != this.currentItem.prev().not(".ui-sortable-helper")[0] || this.domPosition.parent != this.currentItem.parent()[0]) && !c && d.push(function (a) { this._trigger("update", a, this._uiHash()) }), this !== this.currentContainer && (c || (d.push(function (a) { this._trigger("remove", a, this._uiHash()) }), d.push(function (a) { return function (b) { a._trigger("receive", b, this._uiHash(this)) } }.call(this, this.currentContainer)), d.push(function (a) { return function (b) { a._trigger("update", b, this._uiHash(this)) } }.call(this, this.currentContainer)))); for (var f = this.containers.length - 1; f >= 0; f--) c || d.push(function (a) { return function (b) { a._trigger("deactivate", b, this._uiHash(this)) } }.call(this, this.containers[f])), this.containers[f].containerCache.over && (d.push(function (a) { return function (b) { a._trigger("out", b, this._uiHash(this)) } }.call(this, this.containers[f])), this.containers[f].containerCache.over = 0); this._storedCursor && a("body").css("cursor", this._storedCursor), this._storedOpacity && this.helper.css("opacity", this._storedOpacity), this._storedZIndex && this.helper.css("zIndex", this._storedZIndex == "auto" ? "" : this._storedZIndex), this.dragging = !1; if (this.cancelHelperRemoval) { if (!c) { this._trigger("beforeStop", b, this._uiHash()); for (var f = 0; f < d.length; f++) d[f].call(this, b); this._trigger("stop", b, this._uiHash()) } return this.fromOutside = !1, !1 } c || this._trigger("beforeStop", b, this._uiHash()), this.placeholder[0].parentNode.removeChild(this.placeholder[0]), this.helper[0] != this.currentItem[0] && this.helper.remove(), this.helper = null; if (!c) { for (var f = 0; f < d.length; f++) d[f].call(this, b); this._trigger("stop", b, this._uiHash()) } return this.fromOutside = !1, !0 }, _trigger: function () { a.Widget.prototype._trigger.apply(this, arguments) === !1 && this.cancel() }, _uiHash: function (b) { var c = b || this; return { helper: c.helper, placeholder: c.placeholder || a([]), position: c.position, originalPosition: c.originalPosition, offset: c.positionAbs, item: c.currentItem, sender: b ? b.element : null } } }), a.extend(a.ui.sortable, { version: "1.8.24" }) }(jQuery), jQuery.effects || function (a, b) { function c(b) { var c; return b && b.constructor == Array && b.length == 3 ? b : (c = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(b)) ? [parseInt(c[1], 10), parseInt(c[2], 10), parseInt(c[3], 10)] : (c = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(b)) ? [parseFloat(c[1]) * 2.55, parseFloat(c[2]) * 2.55, parseFloat(c[3]) * 2.55] : (c = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(b)) ? [parseInt(c[1], 16), parseInt(c[2], 16), parseInt(c[3], 16)] : (c = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(b)) ? [parseInt(c[1] + c[1], 16), parseInt(c[2] + c[2], 16), parseInt(c[3] + c[3], 16)] : (c = /rgba\(0, 0, 0, 0\)/.exec(b)) ? e.transparent : e[a.trim(b).toLowerCase()] } function d(b, d) { var e; do { e = (a.curCSS || a.css)(b, d); if (e != "" && e != "transparent" || a.nodeName(b, "body")) break; d = "backgroundColor" } while (b = b.parentNode); return c(e) } function h() { var a = document.defaultView ? document.defaultView.getComputedStyle(this, null) : this.currentStyle, b = {}, c, d; if (a && a.length && a[0] && a[a[0]]) { var e = a.length; while (e--) c = a[e], typeof a[c] == "string" && (d = c.replace(/\-(\w)/g, function (a, b) { return b.toUpperCase() }), b[d] = a[c]) } else for (c in a) typeof a[c] == "string" && (b[c] = a[c]); return b } function i(b) { var c, d; for (c in b) d = b[c], (d == null || a.isFunction(d) || c in g || /scrollbar/.test(c) || !/color/i.test(c) && isNaN(parseFloat(d))) && delete b[c]; return b } function j(a, b) { var c = { _: 0 }, d; for (d in b) a[d] != b[d] && (c[d] = b[d]); return c } function k(b, c, d, e) { typeof b == "object" && (e = c, d = null, c = b, b = c.effect), a.isFunction(c) && (e = c, d = null, c = {}); if (typeof c == "number" || a.fx.speeds[c]) e = d, d = c, c = {}; return a.isFunction(d) && (e = d, d = null), c = c || {}, d = d || c.duration, d = a.fx.off ? 0 : typeof d == "number" ? d : d in a.fx.speeds ? a.fx.speeds[d] : a.fx.speeds._default, e = e || c.complete, [b, c, d, e] } function l(b) { return !b || typeof b == "number" || a.fx.speeds[b] ? !0 : typeof b == "string" && !a.effects[b] ? !0 : !1 } a.effects = {}, a.each(["backgroundColor", "borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor", "borderColor", "color", "outlineColor"], function (b, e) { a.fx.step[e] = function (a) { a.colorInit || (a.start = d(a.elem, e), a.end = c(a.end), a.colorInit = !0), a.elem.style[e] = "rgb(" + Math.max(Math.min(parseInt(a.pos * (a.end[0] - a.start[0]) + a.start[0], 10), 255), 0) + "," + Math.max(Math.min(parseInt(a.pos * (a.end[1] - a.start[1]) + a.start[1], 10), 255), 0) + "," + Math.max(Math.min(parseInt(a.pos * (a.end[2] - a.start[2]) + a.start[2], 10), 255), 0) + ")" } }); var e = { aqua: [0, 255, 255], azure: [240, 255, 255], beige: [245, 245, 220], black: [0, 0, 0], blue: [0, 0, 255], brown: [165, 42, 42], cyan: [0, 255, 255], darkblue: [0, 0, 139], darkcyan: [0, 139, 139], darkgrey: [169, 169, 169], darkgreen: [0, 100, 0], darkkhaki: [189, 183, 107], darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47], darkorange: [255, 140, 0], darkorchid: [153, 50, 204], darkred: [139, 0, 0], darksalmon: [233, 150, 122], darkviolet: [148, 0, 211], fuchsia: [255, 0, 255], gold: [255, 215, 0], green: [0, 128, 0], indigo: [75, 0, 130], khaki: [240, 230, 140], lightblue: [173, 216, 230], lightcyan: [224, 255, 255], lightgreen: [144, 238, 144], lightgrey: [211, 211, 211], lightpink: [255, 182, 193], lightyellow: [255, 255, 224], lime: [0, 255, 0], magenta: [255, 0, 255], maroon: [128, 0, 0], navy: [0, 0, 128], olive: [128, 128, 0], orange: [255, 165, 0], pink: [255, 192, 203], purple: [128, 0, 128], violet: [128, 0, 128], red: [255, 0, 0], silver: [192, 192, 192], white: [255, 255, 255], yellow: [255, 255, 0], transparent: [255, 255, 255] }, f = ["add", "remove", "toggle"], g = { border: 1, borderBottom: 1, borderColor: 1, borderLeft: 1, borderRight: 1, borderTop: 1, borderWidth: 1, margin: 1, padding: 1 }; a.effects.animateClass = function (b, c, d, e) { return a.isFunction(d) && (e = d, d = null), this.queue(function () { var g = a(this), k = g.attr("style") || " ", l = i(h.call(this)), m, n = g.attr("class") || ""; a.each(f, function (a, c) { b[c] && g[c + "Class"](b[c]) }), m = i(h.call(this)), g.attr("class", n), g.animate(j(l, m), { queue: !1, duration: c, easing: d, complete: function () { a.each(f, function (a, c) { b[c] && g[c + "Class"](b[c]) }), typeof g.attr("style") == "object" ? (g.attr("style").cssText = "", g.attr("style").cssText = k) : g.attr("style", k), e && e.apply(this, arguments), a.dequeue(this) } }) }) }, a.fn.extend({ _addClass: a.fn.addClass, addClass: function (b, c, d, e) { return c ? a.effects.animateClass.apply(this, [{ add: b }, c, d, e]) : this._addClass(b) }, _removeClass: a.fn.removeClass, removeClass: function (b, c, d, e) { return c ? a.effects.animateClass.apply(this, [{ remove: b }, c, d, e]) : this._removeClass(b) }, _toggleClass: a.fn.toggleClass, toggleClass: function (c, d, e, f, g) { return typeof d == "boolean" || d === b ? e ? a.effects.animateClass.apply(this, [d ? { add: c } : { remove: c }, e, f, g]) : this._toggleClass(c, d) : a.effects.animateClass.apply(this, [{ toggle: c }, d, e, f]) }, switchClass: function (b, c, d, e, f) { return a.effects.animateClass.apply(this, [{ add: c, remove: b }, d, e, f]) } }), a.extend(a.effects, { version: "1.8.24", save: function (a, b) { for (var c = 0; c < b.length; c++) b[c] !== null && a.data("ec.storage." + b[c], a[0].style[b[c]]) }, restore: function (a, b) { for (var c = 0; c < b.length; c++) b[c] !== null && a.css(b[c], a.data("ec.storage." + b[c])) }, setMode: function (a, b) { return b == "toggle" && (b = a.is(":hidden") ? "show" : "hide"), b }, getBaseline: function (a, b) { var c, d; switch (a[0]) { case "top": c = 0; break; case "middle": c = .5; break; case "bottom": c = 1; break; default: c = a[0] / b.height } switch (a[1]) { case "left": d = 0; break; case "center": d = .5; break; case "right": d = 1; break; default: d = a[1] / b.width } return { x: d, y: c } }, createWrapper: function (b) { if (b.parent().is(".ui-effects-wrapper")) return b.parent(); var c = { width: b.outerWidth(!0), height: b.outerHeight(!0), "float": b.css("float") }, d = a("<div></div>").addClass("ui-effects-wrapper").css({ fontSize: "100%", background: "transparent", border: "none", margin: 0, padding: 0 }), e = document.activeElement; try { e.id } catch (f) { e = document.body } return b.wrap(d), (b[0] === e || a.contains(b[0], e)) && a(e).focus(), d = b.parent(), b.css("position") == "static" ? (d.css({ position: "relative" }), b.css({ position: "relative" })) : (a.extend(c, { position: b.css("position"), zIndex: b.css("z-index") }), a.each(["top", "left", "bottom", "right"], function (a, d) { c[d] = b.css(d), isNaN(parseInt(c[d], 10)) && (c[d] = "auto") }), b.css({ position: "relative", top: 0, left: 0, right: "auto", bottom: "auto" })), d.css(c).show() }, removeWrapper: function (b) { var c, d = document.activeElement; return b.parent().is(".ui-effects-wrapper") ? (c = b.parent().replaceWith(b), (b[0] === d || a.contains(b[0], d)) && a(d).focus(), c) : b }, setTransition: function (b, c, d, e) { return e = e || {}, a.each(c, function (a, c) { var f = b.cssUnit(c); f[0] > 0 && (e[c] = f[0] * d + f[1]) }), e } }), a.fn.extend({ effect: function (b, c, d, e) { var f = k.apply(this, arguments), g = { options: f[1], duration: f[2], callback: f[3] }, h = g.options.mode, i = a.effects[b]; return a.fx.off || !i ? h ? this[h](g.duration, g.callback) : this.each(function () { g.callback && g.callback.call(this) }) : i.call(this, g) }, _show: a.fn.show, show: function (a) { if (l(a)) return this._show.apply(this, arguments); var b = k.apply(this, arguments); return b[1].mode = "show", this.effect.apply(this, b) }, _hide: a.fn.hide, hide: function (a) { if (l(a)) return this._hide.apply(this, arguments); var b = k.apply(this, arguments); return b[1].mode = "hide", this.effect.apply(this, b) }, __toggle: a.fn.toggle, toggle: function (b) { if (l(b) || typeof b == "boolean" || a.isFunction(b)) return this.__toggle.apply(this, arguments); var c = k.apply(this, arguments); return c[1].mode = "toggle", this.effect.apply(this, c) }, cssUnit: function (b) { var c = this.css(b), d = []; return a.each(["em", "px", "%", "pt"], function (a, b) { c.indexOf(b) > 0 && (d = [parseFloat(c), b]) }), d } }); var m = {}; a.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function (a, b) { m[b] = function (b) { return Math.pow(b, a + 2) } }), a.extend(m, { Sine: function (a) { return 1 - Math.cos(a * Math.PI / 2) }, Circ: function (a) { return 1 - Math.sqrt(1 - a * a) }, Elastic: function (a) { return a === 0 || a === 1 ? a : -Math.pow(2, 8 * (a - 1)) * Math.sin(((a - 1) * 80 - 7.5) * Math.PI / 15) }, Back: function (a) { return a * a * (3 * a - 2) }, Bounce: function (a) { var b, c = 4; while (a < ((b = Math.pow(2, --c)) - 1) / 11); return 1 / Math.pow(4, 3 - c) - 7.5625 * Math.pow((b * 3 - 2) / 22 - a, 2) } }), a.each(m, function (b, c) { a.easing["easeIn" + b] = c, a.easing["easeOut" + b] = function (a) { return 1 - c(1 - a) }, a.easing["easeInOut" + b] = function (a) { return a < .5 ? c(a * 2) / 2 : c(a * -2 + 2) / -2 + 1 } }) }(jQuery), function (a, b) { a.effects.blind = function (b) { return this.queue(function () { var c = a(this), d = ["position", "top", "bottom", "left", "right"], e = a.effects.setMode(c, b.options.mode || "hide"), f = b.options.direction || "vertical"; a.effects.save(c, d), c.show(); var g = a.effects.createWrapper(c).css({ overflow: "hidden" }), h = f == "vertical" ? "height" : "width", i = f == "vertical" ? g.height() : g.width(); e == "show" && g.css(h, 0); var j = {}; j[h] = e == "show" ? i : 0, g.animate(j, b.duration, b.options.easing, function () { e == "hide" && c.hide(), a.effects.restore(c, d), a.effects.removeWrapper(c), b.callback && b.callback.apply(c[0], arguments), c.dequeue() }) }) } }(jQuery), function (a, b) { a.effects.bounce = function (b) { return this.queue(function () { var c = a(this), d = ["position", "top", "bottom", "left", "right"], e = a.effects.setMode(c, b.options.mode || "effect"), f = b.options.direction || "up", g = b.options.distance || 20, h = b.options.times || 5, i = b.duration || 250; /show|hide/.test(e) && d.push("opacity"), a.effects.save(c, d), c.show(), a.effects.createWrapper(c); var j = f == "up" || f == "down" ? "top" : "left", k = f == "up" || f == "left" ? "pos" : "neg", g = b.options.distance || (j == "top" ? c.outerHeight(!0) / 3 : c.outerWidth(!0) / 3); e == "show" && c.css("opacity", 0).css(j, k == "pos" ? -g : g), e == "hide" && (g = g / (h * 2)), e != "hide" && h--; if (e == "show") { var l = { opacity: 1 }; l[j] = (k == "pos" ? "+=" : "-=") + g, c.animate(l, i / 2, b.options.easing), g = g / 2, h-- } for (var m = 0; m < h; m++) { var n = {}, p = {}; n[j] = (k == "pos" ? "-=" : "+=") + g, p[j] = (k == "pos" ? "+=" : "-=") + g, c.animate(n, i / 2, b.options.easing).animate(p, i / 2, b.options.easing), g = e == "hide" ? g * 2 : g / 2 } if (e == "hide") { var l = { opacity: 0 }; l[j] = (k == "pos" ? "-=" : "+=") + g, c.animate(l, i / 2, b.options.easing, function () { c.hide(), a.effects.restore(c, d), a.effects.removeWrapper(c), b.callback && b.callback.apply(this, arguments) }) } else { var n = {}, p = {}; n[j] = (k == "pos" ? "-=" : "+=") + g, p[j] = (k == "pos" ? "+=" : "-=") + g, c.animate(n, i / 2, b.options.easing).animate(p, i / 2, b.options.easing, function () { a.effects.restore(c, d), a.effects.removeWrapper(c), b.callback && b.callback.apply(this, arguments) }) } c.queue("fx", function () { c.dequeue() }), c.dequeue() }) } }(jQuery), function (a, b) { a.effects.clip = function (b) { return this.queue(function () { var c = a(this), d = ["position", "top", "bottom", "left", "right", "height", "width"], e = a.effects.setMode(c, b.options.mode || "hide"), f = b.options.direction || "vertical"; a.effects.save(c, d), c.show(); var g = a.effects.createWrapper(c).css({ overflow: "hidden" }), h = c[0].tagName == "IMG" ? g : c, i = { size: f == "vertical" ? "height" : "width", position: f == "vertical" ? "top" : "left" }, j = f == "vertical" ? h.height() : h.width(); e == "show" && (h.css(i.size, 0), h.css(i.position, j / 2)); var k = {}; k[i.size] = e == "show" ? j : 0, k[i.position] = e == "show" ? 0 : j / 2, h.animate(k, { queue: !1, duration: b.duration, easing: b.options.easing, complete: function () { e == "hide" && c.hide(), a.effects.restore(c, d), a.effects.removeWrapper(c), b.callback && b.callback.apply(c[0], arguments), c.dequeue() } }) }) } }(jQuery), function (a, b) { a.effects.drop = function (b) { return this.queue(function () { var c = a(this), d = ["position", "top", "bottom", "left", "right", "opacity"], e = a.effects.setMode(c, b.options.mode || "hide"), f = b.options.direction || "left"; a.effects.save(c, d), c.show(), a.effects.createWrapper(c); var g = f == "up" || f == "down" ? "top" : "left", h = f == "up" || f == "left" ? "pos" : "neg", i = b.options.distance || (g == "top" ? c.outerHeight(!0) / 2 : c.outerWidth(!0) / 2); e == "show" && c.css("opacity", 0).css(g, h == "pos" ? -i : i); var j = { opacity: e == "show" ? 1 : 0 }; j[g] = (e == "show" ? h == "pos" ? "+=" : "-=" : h == "pos" ? "-=" : "+=") + i, c.animate(j, { queue: !1, duration: b.duration, easing: b.options.easing, complete: function () { e == "hide" && c.hide(), a.effects.restore(c, d), a.effects.removeWrapper(c), b.callback && b.callback.apply(this, arguments), c.dequeue() } }) }) } }(jQuery), function (a, b) { a.effects.explode = function (b) { return this.queue(function () { var c = b.options.pieces ? Math.round(Math.sqrt(b.options.pieces)) : 3, d = b.options.pieces ? Math.round(Math.sqrt(b.options.pieces)) : 3; b.options.mode = b.options.mode == "toggle" ? a(this).is(":visible") ? "hide" : "show" : b.options.mode; var e = a(this).show().css("visibility", "hidden"), f = e.offset(); f.top -= parseInt(e.css("marginTop"), 10) || 0, f.left -= parseInt(e.css("marginLeft"), 10) || 0; var g = e.outerWidth(!0), h = e.outerHeight(!0); for (var i = 0; i < c; i++) for (var j = 0; j < d; j++) e.clone().appendTo("body").wrap("<div></div>").css({ position: "absolute", visibility: "visible", left: -j * (g / d), top: -i * (h / c) }).parent().addClass("ui-effects-explode").css({ position: "absolute", overflow: "hidden", width: g / d, height: h / c, left: f.left + j * (g / d) + (b.options.mode == "show" ? (j - Math.floor(d / 2)) * (g / d) : 0), top: f.top + i * (h / c) + (b.options.mode == "show" ? (i - Math.floor(c / 2)) * (h / c) : 0), opacity: b.options.mode == "show" ? 0 : 1 }).animate({ left: f.left + j * (g / d) + (b.options.mode == "show" ? 0 : (j - Math.floor(d / 2)) * (g / d)), top: f.top + i * (h / c) + (b.options.mode == "show" ? 0 : (i - Math.floor(c / 2)) * (h / c)), opacity: b.options.mode == "show" ? 1 : 0 }, b.duration || 500); setTimeout(function () { b.options.mode == "show" ? e.css({ visibility: "visible" }) : e.css({ visibility: "visible" }).hide(), b.callback && b.callback.apply(e[0]), e.dequeue(), a("div.ui-effects-explode").remove() }, b.duration || 500) }) } }(jQuery), function (a, b) { a.effects.fade = function (b) { return this.queue(function () { var c = a(this), d = a.effects.setMode(c, b.options.mode || "hide"); c.animate({ opacity: d }, { queue: !1, duration: b.duration, easing: b.options.easing, complete: function () { b.callback && b.callback.apply(this, arguments), c.dequeue() } }) }) } }(jQuery), function (a, b) { a.effects.fold = function (b) { return this.queue(function () { var c = a(this), d = ["position", "top", "bottom", "left", "right"], e = a.effects.setMode(c, b.options.mode || "hide"), f = b.options.size || 15, g = !!b.options.horizFirst, h = b.duration ? b.duration / 2 : a.fx.speeds._default / 2; a.effects.save(c, d), c.show(); var i = a.effects.createWrapper(c).css({ overflow: "hidden" }), j = e == "show" != g, k = j ? ["width", "height"] : ["height", "width"], l = j ? [i.width(), i.height()] : [i.height(), i.width()], m = /([0-9]+)%/.exec(f); m && (f = parseInt(m[1], 10) / 100 * l[e == "hide" ? 0 : 1]), e == "show" && i.css(g ? { height: 0, width: f } : { height: f, width: 0 }); var n = {}, p = {}; n[k[0]] = e == "show" ? l[0] : f, p[k[1]] = e == "show" ? l[1] : 0, i.animate(n, h, b.options.easing).animate(p, h, b.options.easing, function () { e == "hide" && c.hide(), a.effects.restore(c, d), a.effects.removeWrapper(c), b.callback && b.callback.apply(c[0], arguments), c.dequeue() }) }) } }(jQuery), function (a, b) { a.effects.highlight = function (b) { return this.queue(function () { var c = a(this), d = ["backgroundImage", "backgroundColor", "opacity"], e = a.effects.setMode(c, b.options.mode || "show"), f = { backgroundColor: c.css("backgroundColor") }; e == "hide" && (f.opacity = 0), a.effects.save(c, d), c.show().css({ backgroundImage: "none", backgroundColor: b.options.color || "#ffff99" }).animate(f, { queue: !1, duration: b.duration, easing: b.options.easing, complete: function () { e == "hide" && c.hide(), a.effects.restore(c, d), e == "show" && !a.support.opacity && this.style.removeAttribute("filter"), b.callback && b.callback.apply(this, arguments), c.dequeue() } }) }) } }(jQuery), function (a, b) { a.effects.pulsate = function (b) { return this.queue(function () { var c = a(this), d = a.effects.setMode(c, b.options.mode || "show"), e = (b.options.times || 5) * 2 - 1, f = b.duration ? b.duration / 2 : a.fx.speeds._default / 2, g = c.is(":visible"), h = 0; g || (c.css("opacity", 0).show(), h = 1), (d == "hide" && g || d == "show" && !g) && e--; for (var i = 0; i < e; i++) c.animate({ opacity: h }, f, b.options.easing), h = (h + 1) % 2; c.animate({ opacity: h }, f, b.options.easing, function () { h == 0 && c.hide(), b.callback && b.callback.apply(this, arguments) }), c.queue("fx", function () { c.dequeue() }).dequeue() }) } }(jQuery), function (a, b) { a.effects.puff = function (b) { return this.queue(function () { var c = a(this), d = a.effects.setMode(c, b.options.mode || "hide"), e = parseInt(b.options.percent, 10) || 150, f = e / 100, g = { height: c.height(), width: c.width() }; a.extend(b.options, { fade: !0, mode: d, percent: d == "hide" ? e : 100, from: d == "hide" ? g : { height: g.height * f, width: g.width * f } }), c.effect("scale", b.options, b.duration, b.callback), c.dequeue() }) }, a.effects.scale = function (b) { return this.queue(function () { var c = a(this), d = a.extend(!0, {}, b.options), e = a.effects.setMode(c, b.options.mode || "effect"), f = parseInt(b.options.percent, 10) || (parseInt(b.options.percent, 10) == 0 ? 0 : e == "hide" ? 0 : 100), g = b.options.direction || "both", h = b.options.origin; e != "effect" && (d.origin = h || ["middle", "center"], d.restore = !0); var i = { height: c.height(), width: c.width() }; c.from = b.options.from || (e == "show" ? { height: 0, width: 0 } : i); var j = { y: g != "horizontal" ? f / 100 : 1, x: g != "vertical" ? f / 100 : 1 }; c.to = { height: i.height * j.y, width: i.width * j.x }, b.options.fade && (e == "show" && (c.from.opacity = 0, c.to.opacity = 1), e == "hide" && (c.from.opacity = 1, c.to.opacity = 0)), d.from = c.from, d.to = c.to, d.mode = e, c.effect("size", d, b.duration, b.callback), c.dequeue() }) }, a.effects.size = function (b) { return this.queue(function () { var c = a(this), d = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"], e = ["position", "top", "bottom", "left", "right", "overflow", "opacity"], f = ["width", "height", "overflow"], g = ["fontSize"], h = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"], i = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"], j = a.effects.setMode(c, b.options.mode || "effect"), k = b.options.restore || !1, l = b.options.scale || "both", m = b.options.origin, n = { height: c.height(), width: c.width() }; c.from = b.options.from || n, c.to = b.options.to || n; if (m) { var p = a.effects.getBaseline(m, n); c.from.top = (n.height - c.from.height) * p.y, c.from.left = (n.width - c.from.width) * p.x, c.to.top = (n.height - c.to.height) * p.y, c.to.left = (n.width - c.to.width) * p.x } var q = { from: { y: c.from.height / n.height, x: c.from.width / n.width }, to: { y: c.to.height / n.height, x: c.to.width / n.width } }; if (l == "box" || l == "both") q.from.y != q.to.y && (d = d.concat(h), c.from = a.effects.setTransition(c, h, q.from.y, c.from), c.to = a.effects.setTransition(c, h, q.to.y, c.to)), q.from.x != q.to.x && (d = d.concat(i), c.from = a.effects.setTransition(c, i, q.from.x, c.from), c.to = a.effects.setTransition(c, i, q.to.x, c.to)); (l == "content" || l == "both") && q.from.y != q.to.y && (d = d.concat(g), c.from = a.effects.setTransition(c, g, q.from.y, c.from), c.to = a.effects.setTransition(c, g, q.to.y, c.to)), a.effects.save(c, k ? d : e), c.show(), a.effects.createWrapper(c), c.css("overflow", "hidden").css(c.from); if (l == "content" || l == "both") h = h.concat(["marginTop", "marginBottom"]).concat(g), i = i.concat(["marginLeft", "marginRight"]), f = d.concat(h).concat(i), c.find("*[width]").each(function () { var c = a(this); k && a.effects.save(c, f); var d = { height: c.height(), width: c.width() }; c.from = { height: d.height * q.from.y, width: d.width * q.from.x }, c.to = { height: d.height * q.to.y, width: d.width * q.to.x }, q.from.y != q.to.y && (c.from = a.effects.setTransition(c, h, q.from.y, c.from), c.to = a.effects.setTransition(c, h, q.to.y, c.to)), q.from.x != q.to.x && (c.from = a.effects.setTransition(c, i, q.from.x, c.from), c.to = a.effects.setTransition(c, i, q.to.x, c.to)), c.css(c.from), c.animate(c.to, b.duration, b.options.easing, function () { k && a.effects.restore(c, f) }) }); c.animate(c.to, { queue: !1, duration: b.duration, easing: b.options.easing, complete: function () { c.to.opacity === 0 && c.css("opacity", c.from.opacity), j == "hide" && c.hide(), a.effects.restore(c, k ? d : e), a.effects.removeWrapper(c), b.callback && b.callback.apply(this, arguments), c.dequeue() } }) }) } }(jQuery), function (a, b) { a.effects.shake = function (b) { return this.queue(function () { var c = a(this), d = ["position", "top", "bottom", "left", "right"], e = a.effects.setMode(c, b.options.mode || "effect"), f = b.options.direction || "left", g = b.options.distance || 20, h = b.options.times || 3, i = b.duration || b.options.duration || 140; a.effects.save(c, d), c.show(), a.effects.createWrapper(c); var j = f == "up" || f == "down" ? "top" : "left", k = f == "up" || f == "left" ? "pos" : "neg", l = {}, m = {}, n = {}; l[j] = (k == "pos" ? "-=" : "+=") + g, m[j] = (k == "pos" ? "+=" : "-=") + g * 2, n[j] = (k == "pos" ? "-=" : "+=") + g * 2, c.animate(l, i, b.options.easing); for (var p = 1; p < h; p++) c.animate(m, i, b.options.easing).animate(n, i, b.options.easing); c.animate(m, i, b.options.easing).animate(l, i / 2, b.options.easing, function () { a.effects.restore(c, d), a.effects.removeWrapper(c), b.callback && b.callback.apply(this, arguments) }), c.queue("fx", function () { c.dequeue() }), c.dequeue() }) } }(jQuery), function (a, b) { a.effects.slide = function (b) { return this.queue(function () { var c = a(this), d = ["position", "top", "bottom", "left", "right"], e = a.effects.setMode(c, b.options.mode || "show"), f = b.options.direction || "left"; a.effects.save(c, d), c.show(), a.effects.createWrapper(c).css({ overflow: "hidden" }); var g = f == "up" || f == "down" ? "top" : "left", h = f == "up" || f == "left" ? "pos" : "neg", i = b.options.distance || (g == "top" ? c.outerHeight(!0) : c.outerWidth(!0)); e == "show" && c.css(g, h == "pos" ? isNaN(i) ? "-" + i : -i : i); var j = {}; j[g] = (e == "show" ? h == "pos" ? "+=" : "-=" : h == "pos" ? "-=" : "+=") + i, c.animate(j, { queue: !1, duration: b.duration, easing: b.options.easing, complete: function () { e == "hide" && c.hide(), a.effects.restore(c, d), a.effects.removeWrapper(c), b.callback && b.callback.apply(this, arguments), c.dequeue() } }) }) } }(jQuery), function (a, b) { a.effects.transfer = function (b) { return this.queue(function () { var c = a(this), d = a(b.options.to), e = d.offset(), f = { top: e.top, left: e.left, height: d.innerHeight(), width: d.innerWidth() }, g = c.offset(), h = a('<div class="ui-effects-transfer"></div>').appendTo(document.body).addClass(b.options.className).css({ top: g.top, left: g.left, height: c.innerHeight(), width: c.innerWidth(), position: "absolute" }).animate(f, b.duration, b.options.easing, function () { h.remove(), b.callback && b.callback.apply(c[0], arguments), c.dequeue() }) }) } }(jQuery), function (a, b) { a.widget("ui.accordion", { options: { active: 0, animated: "slide", autoHeight: !0, clearStyle: !1, collapsible: !1, event: "click", fillSpace: !1, header: "> li > :first-child,> :not(li):even", icons: { header: "ui-icon-triangle-1-e", headerSelected: "ui-icon-triangle-1-s" }, navigation: !1, navigationFilter: function () { return this.href.toLowerCase() === location.href.toLowerCase() } }, _create: function () { var b = this, c = b.options; b.running = 0, b.element.addClass("ui-accordion ui-widget ui-helper-reset").children("li").addClass("ui-accordion-li-fix"), b.headers = b.element.find(c.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all").bind("mouseenter.accordion", function () { if (c.disabled) return; a(this).addClass("ui-state-hover") }).bind("mouseleave.accordion", function () { if (c.disabled) return; a(this).removeClass("ui-state-hover") }).bind("focus.accordion", function () { if (c.disabled) return; a(this).addClass("ui-state-focus") }).bind("blur.accordion", function () { if (c.disabled) return; a(this).removeClass("ui-state-focus") }), b.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom"); if (c.navigation) { var d = b.element.find("a").filter(c.navigationFilter).eq(0); if (d.length) { var e = d.closest(".ui-accordion-header"); e.length ? b.active = e : b.active = d.closest(".ui-accordion-content").prev() } } b.active = b._findActive(b.active || c.active).addClass("ui-state-default ui-state-active").toggleClass("ui-corner-all").toggleClass("ui-corner-top"), b.active.next().addClass("ui-accordion-content-active"), b._createIcons(), b.resize(), b.element.attr("role", "tablist"), b.headers.attr("role", "tab").bind("keydown.accordion", function (a) { return b._keydown(a) }).next().attr("role", "tabpanel"), b.headers.not(b.active || "").attr({ "aria-expanded": "false", "aria-selected": "false", tabIndex: -1 }).next().hide(), b.active.length ? b.active.attr({ "aria-expanded": "true", "aria-selected": "true", tabIndex: 0 }) : b.headers.eq(0).attr("tabIndex", 0), a.browser.safari || b.headers.find("a").attr("tabIndex", -1), c.event && b.headers.bind(c.event.split(" ").join(".accordion ") + ".accordion", function (a) { b._clickHandler.call(b, a, this), a.preventDefault() }) }, _createIcons: function () { var b = this.options; b.icons && (a("<span></span>").addClass("ui-icon " + b.icons.header).prependTo(this.headers), this.active.children(".ui-icon").toggleClass(b.icons.header).toggleClass(b.icons.headerSelected), this.element.addClass("ui-accordion-icons")) }, _destroyIcons: function () { this.headers.children(".ui-icon").remove(), this.element.removeClass("ui-accordion-icons") }, destroy: function () { var b = this.options; this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role"), this.headers.unbind(".accordion").removeClass("ui-accordion-header ui-accordion-disabled ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-selected").removeAttr("tabIndex"), this.headers.find("a").removeAttr("tabIndex"), this._destroyIcons(); var c = this.headers.next().css("display", "").removeAttr("role").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-accordion-disabled ui-state-disabled"); return (b.autoHeight || b.fillHeight) && c.css("height", ""), a.Widget.prototype.destroy.call(this) }, _setOption: function (b, c) { a.Widget.prototype._setOption.apply(this, arguments), b == "active" && this.activate(c), b == "icons" && (this._destroyIcons(), c && this._createIcons()), b == "disabled" && this.headers.add(this.headers.next())[c ? "addClass" : "removeClass"]("ui-accordion-disabled ui-state-disabled") }, _keydown: function (b) { if (this.options.disabled || b.altKey || b.ctrlKey) return; var c = a.ui.keyCode, d = this.headers.length, e = this.headers.index(b.target), f = !1; switch (b.keyCode) { case c.RIGHT: case c.DOWN: f = this.headers[(e + 1) % d]; break; case c.LEFT: case c.UP: f = this.headers[(e - 1 + d) % d]; break; case c.SPACE: case c.ENTER: this._clickHandler({ target: b.target }, b.target), b.preventDefault() } return f ? (a(b.target).attr("tabIndex", -1), a(f).attr("tabIndex", 0), f.focus(), !1) : !0 }, resize: function () { var b = this.options, c; if (b.fillSpace) { if (a.browser.msie) { var d = this.element.parent().css("overflow"); this.element.parent().css("overflow", "hidden") } c = this.element.parent().height(), a.browser.msie && this.element.parent().css("overflow", d), this.headers.each(function () { c -= a(this).outerHeight(!0) }), this.headers.next().each(function () { a(this).height(Math.max(0, c - a(this).innerHeight() + a(this).height())) }).css("overflow", "auto") } else b.autoHeight && (c = 0, this.headers.next().each(function () { c = Math.max(c, a(this).height("").height()) }).height(c)); return this }, activate: function (a) { this.options.active = a; var b = this._findActive(a)[0]; return this._clickHandler({ target: b }, b), this }, _findActive: function (b) { return b ? typeof b == "number" ? this.headers.filter(":eq(" + b + ")") : this.headers.not(this.headers.not(b)) : b === !1 ? a([]) : this.headers.filter(":eq(0)") }, _clickHandler: function (b, c) { var d = this.options; if (d.disabled) return; if (!b.target) { if (!d.collapsible) return; this.active.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").children(".ui-icon").removeClass(d.icons.headerSelected).addClass(d.icons.header), this.active.next().addClass("ui-accordion-content-active"); var e = this.active.next(), f = { options: d, newHeader: a([]), oldHeader: d.active, newContent: a([]), oldContent: e }, g = this.active = a([]); this._toggle(g, e, f); return } var h = a(b.currentTarget || c), i = h[0] === this.active[0]; d.active = d.collapsible && i ? !1 : this.headers.index(h); if (this.running || !d.collapsible && i) return; var j = this.active, g = h.next(), e = this.active.next(), f = { options: d, newHeader: i && d.collapsible ? a([]) : h, oldHeader: this.active, newContent: i && d.collapsible ? a([]) : g, oldContent: e }, k = this.headers.index(this.active[0]) > this.headers.index(h[0]); this.active = i ? a([]) : h, this._toggle(g, e, f, i, k), j.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").children(".ui-icon").removeClass(d.icons.headerSelected).addClass(d.icons.header), i || (h.removeClass("ui-state-default ui-corner-all").addClass("ui-state-active ui-corner-top").children(".ui-icon").removeClass(d.icons.header).addClass(d.icons.headerSelected), h.next().addClass("ui-accordion-content-active")); return }, _toggle: function (b, c, d, e, f) { var g = this, h = g.options; g.toShow = b, g.toHide = c, g.data = d; var i = function () { if (!g) return; return g._completed.apply(g, arguments) }; g._trigger("changestart", null, g.data), g.running = c.size() === 0 ? b.size() : c.size(); if (h.animated) { var j = {}; h.collapsible && e ? j = { toShow: a([]), toHide: c, complete: i, down: f, autoHeight: h.autoHeight || h.fillSpace } : j = { toShow: b, toHide: c, complete: i, down: f, autoHeight: h.autoHeight || h.fillSpace }, h.proxied || (h.proxied = h.animated), h.proxiedDuration || (h.proxiedDuration = h.duration), h.animated = a.isFunction(h.proxied) ? h.proxied(j) : h.proxied, h.duration = a.isFunction(h.proxiedDuration) ? h.proxiedDuration(j) : h.proxiedDuration; var k = a.ui.accordion.animations, l = h.duration, m = h.animated; m && !k[m] && !a.easing[m] && (m = "slide"), k[m] || (k[m] = function (a) { this.slide(a, { easing: m, duration: l || 700 }) }), k[m](j) } else h.collapsible && e ? b.toggle() : (c.hide(), b.show()), i(!0); c.prev().attr({ "aria-expanded": "false", "aria-selected": "false", tabIndex: -1 }).blur(), b.prev().attr({ "aria-expanded": "true", "aria-selected": "true", tabIndex: 0 }).focus() }, _completed: function (a) { this.running = a ? 0 : --this.running; if (this.running) return; this.options.clearStyle && this.toShow.add(this.toHide).css({ height: "", overflow: "" }), this.toHide.removeClass("ui-accordion-content-active"), this.toHide.length && (this.toHide.parent()[0].className = this.toHide.parent()[0].className), this._trigger("change", null, this.data) } }), a.extend(a.ui.accordion, { version: "1.8.24", animations: { slide: function (b, c) { b = a.extend({ easing: "swing", duration: 300 }, b, c); if (!b.toHide.size()) { b.toShow.animate({ height: "show", paddingTop: "show", paddingBottom: "show" }, b); return } if (!b.toShow.size()) { b.toHide.animate({ height: "hide", paddingTop: "hide", paddingBottom: "hide" }, b); return } var d = b.toShow.css("overflow"), e = 0, f = {}, g = {}, h = ["height", "paddingTop", "paddingBottom"], i, j = b.toShow; i = j[0].style.width, j.width(j.parent().width() - parseFloat(j.css("paddingLeft")) - parseFloat(j.css("paddingRight")) - (parseFloat(j.css("borderLeftWidth")) || 0) - (parseFloat(j.css("borderRightWidth")) || 0)), a.each(h, function (c, d) { g[d] = "hide"; var e = ("" + a.css(b.toShow[0], d)).match(/^([\d+-.]+)(.*)$/); f[d] = { value: e[1], unit: e[2] || "px" } }), b.toShow.css({ height: 0, overflow: "hidden" }).show(), b.toHide.filter(":hidden").each(b.complete).end().filter(":visible").animate(g, { step: function (a, c) { c.prop == "height" && (e = c.end - c.start === 0 ? 0 : (c.now - c.start) / (c.end - c.start)), b.toShow[0].style[c.prop] = e * f[c.prop].value + f[c.prop].unit }, duration: b.duration, easing: b.easing, complete: function () { b.autoHeight || b.toShow.css("height", ""), b.toShow.css({ width: i, overflow: d }), b.complete() } }) }, bounceslide: function (a) { this.slide(a, { easing: a.down ? "easeOutBounce" : "swing", duration: a.down ? 1e3 : 200 }) } } }) }(jQuery), function (a, b) { var c = 0; a.widget("ui.autocomplete", { options: { appendTo: "body", autoFocus: !1, delay: 300, minLength: 1, position: { my: "left top", at: "left bottom", collision: "none" }, source: null }, pending: 0, _create: function () { var b = this, c = this.element[0].ownerDocument, d; this.isMultiLine = this.element.is("textarea"), this.element.addClass("ui-autocomplete-input").attr("autocomplete", "off").attr({ role: "textbox", "aria-autocomplete": "list", "aria-haspopup": "true" }).bind("keydown.autocomplete", function (c) { if (b.options.disabled || b.element.propAttr("readOnly")) return; d = !1; var e = a.ui.keyCode; switch (c.keyCode) { case e.PAGE_UP: b._move("previousPage", c); break; case e.PAGE_DOWN: b._move("nextPage", c); break; case e.UP: b._keyEvent("previous", c); break; case e.DOWN: b._keyEvent("next", c); break; case e.ENTER: case e.NUMPAD_ENTER: b.menu.active && (d = !0, c.preventDefault()); case e.TAB: if (!b.menu.active) return; b.menu.select(c); break; case e.ESCAPE: b.element.val(b.term), b.close(c); break; default: clearTimeout(b.searching), b.searching = setTimeout(function () { b.term != b.element.val() && (b.selectedItem = null, b.search(null, c)) }, b.options.delay) } }).bind("keypress.autocomplete", function (a) { d && (d = !1, a.preventDefault()) }).bind("focus.autocomplete", function () { if (b.options.disabled) return; b.selectedItem = null, b.previous = b.element.val() }).bind("blur.autocomplete", function (a) { if (b.options.disabled) return; clearTimeout(b.searching), b.closing = setTimeout(function () { b.close(a), b._change(a) }, 150) }), this._initSource(), this.menu = a("<ul></ul>").addClass("ui-autocomplete").appendTo(a(this.options.appendTo || "body", c)[0]).mousedown(function (c) { var d = b.menu.element[0]; a(c.target).closest(".ui-menu-item").length || setTimeout(function () { a(document).one("mousedown", function (c) { c.target !== b.element[0] && c.target !== d && !a.ui.contains(d, c.target) && b.close() }) }, 1), setTimeout(function () { clearTimeout(b.closing) }, 13) }).menu({ focus: function (a, c) { var d = c.item.data("item.autocomplete"); !1 !== b._trigger("focus", a, { item: d }) && /^key/.test(a.originalEvent.type) && b.element.val(d.value) }, selected: function (a, d) { var e = d.item.data("item.autocomplete"), f = b.previous; b.element[0] !== c.activeElement && (b.element.focus(), b.previous = f, setTimeout(function () { b.previous = f, b.selectedItem = e }, 1)), !1 !== b._trigger("select", a, { item: e }) && b.element.val(e.value), b.term = b.element.val(), b.close(a), b.selectedItem = e }, blur: function (a, c) { b.menu.element.is(":visible") && b.element.val() !== b.term && b.element.val(b.term) } }).zIndex(this.element.zIndex() + 1).css({ top: 0, left: 0 }).hide().data("menu"), a.fn.bgiframe && this.menu.element.bgiframe(), b.beforeunloadHandler = function () { b.element.removeAttr("autocomplete") }, a(window).bind("beforeunload", b.beforeunloadHandler) }, destroy: function () { this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete").removeAttr("role").removeAttr("aria-autocomplete").removeAttr("aria-haspopup"), this.menu.element.remove(), a(window).unbind("beforeunload", this.beforeunloadHandler), a.Widget.prototype.destroy.call(this) }, _setOption: function (b, c) { a.Widget.prototype._setOption.apply(this, arguments), b === "source" && this._initSource(), b === "appendTo" && this.menu.element.appendTo(a(c || "body", this.element[0].ownerDocument)[0]), b === "disabled" && c && this.xhr && this.xhr.abort() }, _initSource: function () { var b = this, c, d; a.isArray(this.options.source) ? (c = this.options.source, this.source = function (b, d) { d(a.ui.autocomplete.filter(c, b.term)) }) : typeof this.options.source == "string" ? (d = this.options.source, this.source = function (c, e) { b.xhr && b.xhr.abort(), b.xhr = a.ajax({ url: d, data: c, dataType: "json", success: function (a, b) { e(a) }, error: function () { e([]) } }) }) : this.source = this.options.source }, search: function (a, b) { a = a != null ? a : this.element.val(), this.term = this.element.val(); if (a.length < this.options.minLength) return this.close(b); clearTimeout(this.closing); if (this._trigger("search", b) === !1) return; return this._search(a) }, _search: function (a) { this.pending++, this.element.addClass("ui-autocomplete-loading"), this.source({ term: a }, this._response()) }, _response: function () { var a = this, b = ++c; return function (d) { b === c && a.__response(d), a.pending--, a.pending || a.element.removeClass("ui-autocomplete-loading") } }, __response: function (a) { !this.options.disabled && a && a.length ? (a = this._normalize(a), this._suggest(a), this._trigger("open")) : this.close() }, close: function (a) { clearTimeout(this.closing), this.menu.element.is(":visible") && (this.menu.element.hide(), this.menu.deactivate(), this._trigger("close", a)) }, _change: function (a) { this.previous !== this.element.val() && this._trigger("change", a, { item: this.selectedItem }) }, _normalize: function (b) { return b.length && b[0].label && b[0].value ? b : a.map(b, function (b) { return typeof b == "string" ? { label: b, value: b } : a.extend({ label: b.label || b.value, value: b.value || b.label }, b) }) }, _suggest: function (b) { var c = this.menu.element.empty().zIndex(this.element.zIndex() + 1); this._renderMenu(c, b), this.menu.deactivate(), this.menu.refresh(), c.show(), this._resizeMenu(), c.position(a.extend({ of: this.element }, this.options.position)), this.options.autoFocus && this.menu.next(new a.Event("mouseover")) }, _resizeMenu: function () { var a = this.menu.element; a.outerWidth(Math.max(a.width("").outerWidth() + 1, this.element.outerWidth())) }, _renderMenu: function (b, c) { var d = this; a.each(c, function (a, c) { d._renderItem(b, c) }) }, _renderItem: function (b, c) { return a("<li></li>").data("item.autocomplete", c).append(a("<a></a>").text(c.label)).appendTo(b) }, _move: function (a, b) { if (!this.menu.element.is(":visible")) { this.search(null, b); return } if (this.menu.first() && /^previous/.test(a) || this.menu.last() && /^next/.test(a)) { this.element.val(this.term), this.menu.deactivate(); return } this.menu[a](b) }, widget: function () { return this.menu.element }, _keyEvent: function (a, b) { if (!this.isMultiLine || this.menu.element.is(":visible")) this._move(a, b), b.preventDefault() } }), a.extend(a.ui.autocomplete, { escapeRegex: function (a) { return a.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&") }, filter: function (b, c) { var d = new RegExp(a.ui.autocomplete.escapeRegex(c), "i"); return a.grep(b, function (a) { return d.test(a.label || a.value || a) }) } }) }(jQuery), function (a) { a.widget("ui.menu", { _create: function () { var b = this; this.element.addClass("ui-menu ui-widget ui-widget-content ui-corner-all").attr({ role: "listbox", "aria-activedescendant": "ui-active-menuitem" }).click(function (c) { if (!a(c.target).closest(".ui-menu-item a").length) return; c.preventDefault(), b.select(c) }), this.refresh() }, refresh: function () { var b = this, c = this.element.children("li:not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role", "menuitem"); c.children("a").addClass("ui-corner-all").attr("tabindex", -1).mouseenter(function (c) { b.activate(c, a(this).parent()) }).mouseleave(function () { b.deactivate() }) }, activate: function (a, b) { this.deactivate(); if (this.hasScroll()) { var c = b.offset().top - this.element.offset().top, d = this.element.scrollTop(), e = this.element.height(); c < 0 ? this.element.scrollTop(d + c) : c >= e && this.element.scrollTop(d + c - e + b.height()) } this.active = b.eq(0).children("a").addClass("ui-state-hover").attr("id", "ui-active-menuitem").end(), this._trigger("focus", a, { item: b }) }, deactivate: function () { if (!this.active) return; this.active.children("a").removeClass("ui-state-hover").removeAttr("id"), this._trigger("blur"), this.active = null }, next: function (a) { this.move("next", ".ui-menu-item:first", a) }, previous: function (a) { this.move("prev", ".ui-menu-item:last", a) }, first: function () { return this.active && !this.active.prevAll(".ui-menu-item").length }, last: function () { return this.active && !this.active.nextAll(".ui-menu-item").length }, move: function (a, b, c) { if (!this.active) { this.activate(c, this.element.children(b)); return } var d = this.active[a + "All"](".ui-menu-item").eq(0); d.length ? this.activate(c, d) : this.activate(c, this.element.children(b)) }, nextPage: function (b) { if (this.hasScroll()) { if (!this.active || this.last()) { this.activate(b, this.element.children(".ui-menu-item:first")); return } var c = this.active.offset().top, d = this.element.height(), e = this.element.children(".ui-menu-item").filter(function () { var b = a(this).offset().top - c - d + a(this).height(); return b < 10 && b > -10 }); e.length || (e = this.element.children(".ui-menu-item:last")), this.activate(b, e) } else this.activate(b, this.element.children(".ui-menu-item").filter(!this.active || this.last() ? ":first" : ":last")) }, previousPage: function (b) { if (this.hasScroll()) { if (!this.active || this.first()) { this.activate(b, this.element.children(".ui-menu-item:last")); return } var c = this.active.offset().top, d = this.element.height(), e = this.element.children(".ui-menu-item").filter(function () { var b = a(this).offset().top - c + d - a(this).height(); return b < 10 && b > -10 }); e.length || (e = this.element.children(".ui-menu-item:first")), this.activate(b, e) } else this.activate(b, this.element.children(".ui-menu-item").filter(!this.active || this.first() ? ":last" : ":first")) }, hasScroll: function () { return this.element.height() < this.element[a.fn.prop ? "prop" : "attr"]("scrollHeight") }, select: function (a) { this._trigger("selected", a, { item: this.active }) } }) }(jQuery), function (a, b) { var c, d, e, f, g = "ui-button ui-widget ui-state-default ui-corner-all", h = "ui-state-hover ui-state-active ", i = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only", j = function () { var b = a(this).find(":ui-button"); setTimeout(function () { b.button("refresh") }, 1) }, k = function (b) { var c = b.name, d = b.form, e = a([]); return c && (d ? e = a(d).find("[name='" + c + "']") : e = a("[name='" + c + "']", b.ownerDocument).filter(function () { return !this.form })), e }; a.widget("ui.button", { options: { disabled: null, text: !0, label: null, icons: { primary: null, secondary: null } }, _create: function () { this.element.closest("form").unbind("reset.button").bind("reset.button", j), typeof this.options.disabled != "boolean" ? this.options.disabled = !!this.element.propAttr("disabled") : this.element.propAttr("disabled", this.options.disabled), this._determineButtonType(), this.hasTitle = !!this.buttonElement.attr("title"); var b = this, h = this.options, i = this.type === "checkbox" || this.type === "radio", l = "ui-state-hover" + (i ? "" : " ui-state-active"), m = "ui-state-focus"; h.label === null && (h.label = this.buttonElement.html()), this.buttonElement.addClass(g).attr("role", "button").bind("mouseenter.button", function () { if (h.disabled) return; a(this).addClass("ui-state-hover"), this === c && a(this).addClass("ui-state-active") }).bind("mouseleave.button", function () { if (h.disabled) return; a(this).removeClass(l) }).bind("click.button", function (a) { h.disabled && (a.preventDefault(), a.stopImmediatePropagation()) }), this.element.bind("focus.button", function () { b.buttonElement.addClass(m) }).bind("blur.button", function () { b.buttonElement.removeClass(m) }), i && (this.element.bind("change.button", function () { if (f) return; b.refresh() }), this.buttonElement.bind("mousedown.button", function (a) { if (h.disabled) return; f = !1, d = a.pageX, e = a.pageY }).bind("mouseup.button", function (a) { if (h.disabled) return; if (d !== a.pageX || e !== a.pageY) f = !0 })), this.type === "checkbox" ? this.buttonElement.bind("click.button", function () { if (h.disabled || f) return !1; a(this).toggleClass("ui-state-active"), b.buttonElement.attr("aria-pressed", b.element[0].checked) }) : this.type === "radio" ? this.buttonElement.bind("click.button", function () { if (h.disabled || f) return !1; a(this).addClass("ui-state-active"), b.buttonElement.attr("aria-pressed", "true"); var c = b.element[0]; k(c).not(c).map(function () { return a(this).button("widget")[0] }).removeClass("ui-state-active").attr("aria-pressed", "false") }) : (this.buttonElement.bind("mousedown.button", function () { if (h.disabled) return !1; a(this).addClass("ui-state-active"), c = this, a(document).one("mouseup", function () { c = null }) }).bind("mouseup.button", function () { if (h.disabled) return !1; a(this).removeClass("ui-state-active") }).bind("keydown.button", function (b) { if (h.disabled) return !1; (b.keyCode == a.ui.keyCode.SPACE || b.keyCode == a.ui.keyCode.ENTER) && a(this).addClass("ui-state-active") }).bind("keyup.button", function () { a(this).removeClass("ui-state-active") }), this.buttonElement.is("a") && this.buttonElement.keyup(function (b) { b.keyCode === a.ui.keyCode.SPACE && a(this).click() })), this._setOption("disabled", h.disabled), this._resetButton() }, _determineButtonType: function () { this.element.is(":checkbox") ? this.type = "checkbox" : this.element.is(":radio") ? this.type = "radio" : this.element.is("input") ? this.type = "input" : this.type = "button"; if (this.type === "checkbox" || this.type === "radio") { var a = this.element.parents().filter(":last"), b = "label[for='" + this.element.attr("id") + "']"; this.buttonElement = a.find(b), this.buttonElement.length || (a = a.length ? a.siblings() : this.element.siblings(), this.buttonElement = a.filter(b), this.buttonElement.length || (this.buttonElement = a.find(b))), this.element.addClass("ui-helper-hidden-accessible"); var c = this.element.is(":checked"); c && this.buttonElement.addClass("ui-state-active"), this.buttonElement.attr("aria-pressed", c) } else this.buttonElement = this.element }, widget: function () { return this.buttonElement }, destroy: function () { this.element.removeClass("ui-helper-hidden-accessible"), this.buttonElement.removeClass(g + " " + h + " " + i).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()), this.hasTitle || this.buttonElement.removeAttr("title"), a.Widget.prototype.destroy.call(this) }, _setOption: function (b, c) { a.Widget.prototype._setOption.apply(this, arguments); if (b === "disabled") { c ? this.element.propAttr("disabled", !0) : this.element.propAttr("disabled", !1); return } this._resetButton() }, refresh: function () { var b = this.element.is(":disabled"); b !== this.options.disabled && this._setOption("disabled", b), this.type === "radio" ? k(this.element[0]).each(function () { a(this).is(":checked") ? a(this).button("widget").addClass("ui-state-active").attr("aria-pressed", "true") : a(this).button("widget").removeClass("ui-state-active").attr("aria-pressed", "false") }) : this.type === "checkbox" && (this.element.is(":checked") ? this.buttonElement.addClass("ui-state-active").attr("aria-pressed", "true") : this.buttonElement.removeClass("ui-state-active").attr("aria-pressed", "false")) }, _resetButton: function () { if (this.type === "input") { this.options.label && this.element.val(this.options.label); return } var b = this.buttonElement.removeClass(i), c = a("<span></span>", this.element[0].ownerDocument).addClass("ui-button-text").html(this.options.label).appendTo(b.empty()).text(), d = this.options.icons, e = d.primary && d.secondary, f = []; d.primary || d.secondary ? (this.options.text && f.push("ui-button-text-icon" + (e ? "s" : d.primary ? "-primary" : "-secondary")), d.primary && b.prepend("<span class='ui-button-icon-primary ui-icon " + d.primary + "'></span>"), d.secondary && b.append("<span class='ui-button-icon-secondary ui-icon " + d.secondary + "'></span>"), this.options.text || (f.push(e ? "ui-button-icons-only" : "ui-button-icon-only"), this.hasTitle || b.attr("title", c))) : f.push("ui-button-text-only"), b.addClass(f.join(" ")) } }), a.widget("ui.buttonset", { options: { items: ":button, :submit, :reset, :checkbox, :radio, a, :data(button)" }, _create: function () { this.element.addClass("ui-buttonset") }, _init: function () { this.refresh() }, _setOption: function (b, c) { b === "disabled" && this.buttons.button("option", b, c), a.Widget.prototype._setOption.apply(this, arguments) }, refresh: function () { var b = this.element.css("direction") === "rtl"; this.buttons = this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function () { return a(this).button("widget")[0] }).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(b ? "ui-corner-right" : "ui-corner-left").end().filter(":last").addClass(b ? "ui-corner-left" : "ui-corner-right").end().end() }, destroy: function () { this.element.removeClass("ui-buttonset"), this.buttons.map(function () { return a(this).button("widget")[0] }).removeClass("ui-corner-left ui-corner-right").end().button("destroy"), a.Widget.prototype.destroy.call(this) } }) }(jQuery), function ($, undefined) { function Datepicker() { this.debug = !1, this._curInst = null, this._keyEvent = !1, this._disabledInputs = [], this._datepickerShowing = !1, this._inDialog = !1, this._mainDivId = "ui-datepicker-div", this._inlineClass = "ui-datepicker-inline", this._appendClass = "ui-datepicker-append", this._triggerClass = "ui-datepicker-trigger", this._dialogClass = "ui-datepicker-dialog", this._disableClass = "ui-datepicker-disabled", this._unselectableClass = "ui-datepicker-unselectable", this._currentClass = "ui-datepicker-current-day", this._dayOverClass = "ui-datepicker-days-cell-over", this.regional = [], this.regional[""] = { closeText: "Done", prevText: "Prev", nextText: "Next", currentText: "Today", monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"], weekHeader: "Wk", dateFormat: "mm/dd/yy", firstDay: 0, isRTL: !1, showMonthAfterYear: !1, yearSuffix: "" }, this._defaults = { showOn: "focus", showAnim: "fadeIn", showOptions: {}, defaultDate: null, appendText: "", buttonText: "...", buttonImage: "", buttonImageOnly: !1, hideIfNoPrevNext: !1, navigationAsDateFormat: !1, gotoCurrent: !1, changeMonth: !1, changeYear: !1, yearRange: "c-10:c+10", showOtherMonths: !1, selectOtherMonths: !1, showWeek: !1, calculateWeek: this.iso8601Week, shortYearCutoff: "+10", minDate: null, maxDate: null, duration: "fast", beforeShowDay: null, beforeShow: null, onSelect: null, onChangeMonthYear: null, onClose: null, numberOfMonths: 1, showCurrentAtPos: 0, stepMonths: 1, stepBigMonths: 12, altField: "", altFormat: "", constrainInput: !0, showButtonPanel: !1, autoSize: !1, disabled: !1 }, $.extend(this._defaults, this.regional[""]), this.dpDiv = bindHover($('<div id="' + this._mainDivId + '" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')) } function bindHover(a) { var b = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a"; return a.bind("mouseout", function (a) { var c = $(a.target).closest(b); if (!c.length) return; c.removeClass("ui-state-hover ui-datepicker-prev-hover ui-datepicker-next-hover") }).bind("mouseover", function (c) { var d = $(c.target).closest(b); if ($.datepicker._isDisabledDatepicker(instActive.inline ? a.parent()[0] : instActive.input[0]) || !d.length) return; d.parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"), d.addClass("ui-state-hover"), d.hasClass("ui-datepicker-prev") && d.addClass("ui-datepicker-prev-hover"), d.hasClass("ui-datepicker-next") && d.addClass("ui-datepicker-next-hover") }) } function extendRemove(a, b) { $.extend(a, b); for (var c in b) if (b[c] == null || b[c] == undefined) a[c] = b[c]; return a } function isArray(a) { return a && ($.browser.safari && typeof a == "object" && a.length || a.constructor && a.constructor.toString().match(/\Array\(\)/)) } $.extend($.ui, { datepicker: { version: "1.8.24" } }); var PROP_NAME = "datepicker", dpuuid = (new Date).getTime(), instActive; $.extend(Datepicker.prototype, { markerClassName: "hasDatepicker", maxRows: 4, log: function () { this.debug && console.log.apply("", arguments) }, _widgetDatepicker: function () { return this.dpDiv }, setDefaults: function (a) { return extendRemove(this._defaults, a || {}), this }, _attachDatepicker: function (target, settings) { var inlineSettings = null; for (var attrName in this._defaults) { var attrValue = target.getAttribute("date:" + attrName); if (attrValue) { inlineSettings = inlineSettings || {}; try { inlineSettings[attrName] = eval(attrValue) } catch (err) { inlineSettings[attrName] = attrValue } } } var nodeName = target.nodeName.toLowerCase(), inline = nodeName == "div" || nodeName == "span"; target.id || (this.uuid += 1, target.id = "dp" + this.uuid); var inst = this._newInst($(target), inline); inst.settings = $.extend({}, settings || {}, inlineSettings || {}), nodeName == "input" ? this._connectDatepicker(target, inst) : inline && this._inlineDatepicker(target, inst) }, _newInst: function (a, b) { var c = a[0].id.replace(/([^A-Za-z0-9_-])/g, "\\\\$1"); return { id: c, input: a, selectedDay: 0, selectedMonth: 0, selectedYear: 0, drawMonth: 0, drawYear: 0, inline: b, dpDiv: b ? bindHover($('<div class="' + this._inlineClass + ' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')) : this.dpDiv } }, _connectDatepicker: function (a, b) { var c = $(a); b.append = $([]), b.trigger = $([]); if (c.hasClass(this.markerClassName)) return; this._attachments(c, b), c.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker", function (a, c, d) { b.settings[c] = d }).bind("getData.datepicker", function (a, c) { return this._get(b, c) }), this._autoSize(b), $.data(a, PROP_NAME, b), b.settings.disabled && this._disableDatepicker(a) }, _attachments: function (a, b) { var c = this._get(b, "appendText"), d = this._get(b, "isRTL"); b.append && b.append.remove(), c && (b.append = $('<span class="' + this._appendClass + '">' + c + "</span>"), a[d ? "before" : "after"](b.append)), a.unbind("focus", this._showDatepicker), b.trigger && b.trigger.remove(); var e = this._get(b, "showOn"); (e == "focus" || e == "both") && a.focus(this._showDatepicker); if (e == "button" || e == "both") { var f = this._get(b, "buttonText"), g = this._get(b, "buttonImage"); b.trigger = $(this._get(b, "buttonImageOnly") ? $("<img/>").addClass(this._triggerClass).attr({ src: g, alt: f, title: f }) : $('<button type="button"></button>').addClass(this._triggerClass).html(g == "" ? f : $("<img/>").attr({ src: g, alt: f, title: f }))), a[d ? "before" : "after"](b.trigger), b.trigger.click(function () { return $.datepicker._datepickerShowing && $.datepicker._lastInput == a[0] ? $.datepicker._hideDatepicker() : $.datepicker._datepickerShowing && $.datepicker._lastInput != a[0] ? ($.datepicker._hideDatepicker(), $.datepicker._showDatepicker(a[0])) : $.datepicker._showDatepicker(a[0]), !1 }) } }, _autoSize: function (a) { if (this._get(a, "autoSize") && !a.inline) { var b = new Date(2009, 11, 20), c = this._get(a, "dateFormat"); if (c.match(/[DM]/)) { var d = function (a) { var b = 0, c = 0; for (var d = 0; d < a.length; d++) a[d].length > b && (b = a[d].length, c = d); return c }; b.setMonth(d(this._get(a, c.match(/MM/) ? "monthNames" : "monthNamesShort"))), b.setDate(d(this._get(a, c.match(/DD/) ? "dayNames" : "dayNamesShort")) + 20 - b.getDay()) } a.input.attr("size", this._formatDate(a, b).length) } }, _inlineDatepicker: function (a, b) { var c = $(a); if (c.hasClass(this.markerClassName)) return; c.addClass(this.markerClassName).append(b.dpDiv).bind("setData.datepicker", function (a, c, d) { b.settings[c] = d }).bind("getData.datepicker", function (a, c) { return this._get(b, c) }), $.data(a, PROP_NAME, b), this._setDate(b, this._getDefaultDate(b), !0), this._updateDatepicker(b), this._updateAlternate(b), b.settings.disabled && this._disableDatepicker(a), b.dpDiv.css("display", "block") }, _dialogDatepicker: function (a, b, c, d, e) { var f = this._dialogInst; if (!f) { this.uuid += 1; var g = "dp" + this.uuid; this._dialogInput = $('<input type="text" id="' + g + '" style="position: absolute; top: -100px; width: 0px;"/>'), this._dialogInput.keydown(this._doKeyDown), $("body").append(this._dialogInput), f = this._dialogInst = this._newInst(this._dialogInput, !1), f.settings = {}, $.data(this._dialogInput[0], PROP_NAME, f) } extendRemove(f.settings, d || {}), b = b && b.constructor == Date ? this._formatDate(f, b) : b, this._dialogInput.val(b), this._pos = e ? e.length ? e : [e.pageX, e.pageY] : null; if (!this._pos) { var h = document.documentElement.clientWidth, i = document.documentElement.clientHeight, j = document.documentElement.scrollLeft || document.body.scrollLeft, k = document.documentElement.scrollTop || document.body.scrollTop; this._pos = [h / 2 - 100 + j, i / 2 - 150 + k] } return this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px"), f.settings.onSelect = c, this._inDialog = !0, this.dpDiv.addClass(this._dialogClass), this._showDatepicker(this._dialogInput[0]), $.blockUI && $.blockUI(this.dpDiv), $.data(this._dialogInput[0], PROP_NAME, f), this }, _destroyDatepicker: function (a) { var b = $(a), c = $.data(a, PROP_NAME); if (!b.hasClass(this.markerClassName)) return; var d = a.nodeName.toLowerCase(); $.removeData(a, PROP_NAME), d == "input" ? (c.append.remove(), c.trigger.remove(), b.removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress).unbind("keyup", this._doKeyUp)) : (d == "div" || d == "span") && b.removeClass(this.markerClassName).empty() }, _enableDatepicker: function (a) { var b = $(a), c = $.data(a, PROP_NAME); if (!b.hasClass(this.markerClassName)) return; var d = a.nodeName.toLowerCase(); if (d == "input") a.disabled = !1, c.trigger.filter("button").each(function () { this.disabled = !1 }).end().filter("img").css({ opacity: "1.0", cursor: "" }); else if (d == "div" || d == "span") { var e = b.children("." + this._inlineClass); e.children().removeClass("ui-state-disabled"), e.find("select.ui-datepicker-month, select.ui-datepicker-year").removeAttr("disabled") } this._disabledInputs = $.map(this._disabledInputs, function (b) { return b == a ? null : b }) }, _disableDatepicker: function (a) { var b = $(a), c = $.data(a, PROP_NAME); if (!b.hasClass(this.markerClassName)) return; var d = a.nodeName.toLowerCase(); if (d == "input") a.disabled = !0, c.trigger.filter("button").each(function () { this.disabled = !0 }).end().filter("img").css({ opacity: "0.5", cursor: "default" }); else if (d == "div" || d == "span") { var e = b.children("." + this._inlineClass); e.children().addClass("ui-state-disabled"), e.find("select.ui-datepicker-month, select.ui-datepicker-year").attr("disabled", "disabled") } this._disabledInputs = $.map(this._disabledInputs, function (b) { return b == a ? null : b }), this._disabledInputs[this._disabledInputs.length] = a }, _isDisabledDatepicker: function (a) { if (!a) return !1; for (var b = 0; b < this._disabledInputs.length; b++) if (this._disabledInputs[b] == a) return !0; return !1 }, _getInst: function (a) { try { return $.data(a, PROP_NAME) } catch (b) { throw "Missing instance data for this datepicker" } }, _optionDatepicker: function (a, b, c) { var d = this._getInst(a); if (arguments.length == 2 && typeof b == "string") return b == "defaults" ? $.extend({}, $.datepicker._defaults) : d ? b == "all" ? $.extend({}, d.settings) : this._get(d, b) : null; var e = b || {}; typeof b == "string" && (e = {}, e[b] = c); if (d) { this._curInst == d && this._hideDatepicker(); var f = this._getDateDatepicker(a, !0), g = this._getMinMaxDate(d, "min"), h = this._getMinMaxDate(d, "max"); extendRemove(d.settings, e), g !== null && e.dateFormat !== undefined && e.minDate === undefined && (d.settings.minDate = this._formatDate(d, g)), h !== null && e.dateFormat !== undefined && e.maxDate === undefined && (d.settings.maxDate = this._formatDate(d, h)), this._attachments($(a), d), this._autoSize(d), this._setDate(d, f), this._updateAlternate(d), this._updateDatepicker(d) } }, _changeDatepicker: function (a, b, c) { this._optionDatepicker(a, b, c) }, _refreshDatepicker: function (a) { var b = this._getInst(a); b && this._updateDatepicker(b) }, _setDateDatepicker: function (a, b) { var c = this._getInst(a); c && (this._setDate(c, b), this._updateDatepicker(c), this._updateAlternate(c)) }, _getDateDatepicker: function (a, b) { var c = this._getInst(a); return c && !c.inline && this._setDateFromField(c, b), c ? this._getDate(c) : null }, _doKeyDown: function (a) { var b = $.datepicker._getInst(a.target), c = !0, d = b.dpDiv.is(".ui-datepicker-rtl"); b._keyEvent = !0; if ($.datepicker._datepickerShowing) switch (a.keyCode) { case 9: $.datepicker._hideDatepicker(), c = !1; break; case 13: var e = $("td." + $.datepicker._dayOverClass + ":not(." + $.datepicker._currentClass + ")", b.dpDiv); e[0] && $.datepicker._selectDay(a.target, b.selectedMonth, b.selectedYear, e[0]); var f = $.datepicker._get(b, "onSelect"); if (f) { var g = $.datepicker._formatDate(b); f.apply(b.input ? b.input[0] : null, [g, b]) } else $.datepicker._hideDatepicker(); return !1; case 27: $.datepicker._hideDatepicker(); break; case 33: $.datepicker._adjustDate(a.target, a.ctrlKey ? -$.datepicker._get(b, "stepBigMonths") : -$.datepicker._get(b, "stepMonths"), "M"); break; case 34: $.datepicker._adjustDate(a.target, a.ctrlKey ? +$.datepicker._get(b, "stepBigMonths") : +$.datepicker._get(b, "stepMonths"), "M"); break; case 35: (a.ctrlKey || a.metaKey) && $.datepicker._clearDate(a.target), c = a.ctrlKey || a.metaKey; break; case 36: (a.ctrlKey || a.metaKey) && $.datepicker._gotoToday(a.target), c = a.ctrlKey || a.metaKey; break; case 37: (a.ctrlKey || a.metaKey) && $.datepicker._adjustDate(a.target, d ? 1 : -1, "D"), c = a.ctrlKey || a.metaKey, a.originalEvent.altKey && $.datepicker._adjustDate(a.target, a.ctrlKey ? -$.datepicker._get(b, "stepBigMonths") : -$.datepicker._get(b, "stepMonths"), "M"); break; case 38: (a.ctrlKey || a.metaKey) && $.datepicker._adjustDate(a.target, -7, "D"), c = a.ctrlKey || a.metaKey; break; case 39: (a.ctrlKey || a.metaKey) && $.datepicker._adjustDate(a.target, d ? -1 : 1, "D"), c = a.ctrlKey || a.metaKey, a.originalEvent.altKey && $.datepicker._adjustDate(a.target, a.ctrlKey ? +$.datepicker._get(b, "stepBigMonths") : +$.datepicker._get(b, "stepMonths"), "M"); break; case 40: (a.ctrlKey || a.metaKey) && $.datepicker._adjustDate(a.target, 7, "D"), c = a.ctrlKey || a.metaKey; break; default: c = !1 } else a.keyCode == 36 && a.ctrlKey ? $.datepicker._showDatepicker(this) : c = !1; c && (a.preventDefault(), a.stopPropagation()) }, _doKeyPress: function (a) { var b = $.datepicker._getInst(a.target); if ($.datepicker._get(b, "constrainInput")) { var c = $.datepicker._possibleChars($.datepicker._get(b, "dateFormat")), d = String.fromCharCode(a.charCode == undefined ? a.keyCode : a.charCode); return a.ctrlKey || a.metaKey || d < " " || !c || c.indexOf(d) > -1 } }, _doKeyUp: function (a) { var b = $.datepicker._getInst(a.target); if (b.input.val() != b.lastVal) try { var c = $.datepicker.parseDate($.datepicker._get(b, "dateFormat"), b.input ? b.input.val() : null, $.datepicker._getFormatConfig(b)); c && ($.datepicker._setDateFromField(b), $.datepicker._updateAlternate(b), $.datepicker._updateDatepicker(b)) } catch (d) { $.datepicker.log(d) } return !0 }, _showDatepicker: function (a) { a = a.target || a, a.nodeName.toLowerCase() != "input" && (a = $("input", a.parentNode)[0]); if ($.datepicker._isDisabledDatepicker(a) || $.datepicker._lastInput == a) return; var b = $.datepicker._getInst(a); $.datepicker._curInst && $.datepicker._curInst != b && ($.datepicker._curInst.dpDiv.stop(!0, !0), b && $.datepicker._datepickerShowing && $.datepicker._hideDatepicker($.datepicker._curInst.input[0])); var c = $.datepicker._get(b, "beforeShow"), d = c ? c.apply(a, [a, b]) : {}; if (d === !1) return; extendRemove(b.settings, d), b.lastVal = null, $.datepicker._lastInput = a, $.datepicker._setDateFromField(b), $.datepicker._inDialog && (a.value = ""), $.datepicker._pos || ($.datepicker._pos = $.datepicker._findPos(a), $.datepicker._pos[1] += a.offsetHeight); var e = !1; $(a).parents().each(function () { return e |= $(this).css("position") == "fixed", !e }), e && $.browser.opera && ($.datepicker._pos[0] -= document.documentElement.scrollLeft, $.datepicker._pos[1] -= document.documentElement.scrollTop); var f = { left: $.datepicker._pos[0], top: $.datepicker._pos[1] }; $.datepicker._pos = null, b.dpDiv.empty(), b.dpDiv.css({ position: "absolute", display: "block", top: "-1000px" }), $.datepicker._updateDatepicker(b), f = $.datepicker._checkOffset(b, f, e), b.dpDiv.css({ position: $.datepicker._inDialog && $.blockUI ? "static" : e ? "fixed" : "absolute", display: "none", left: f.left + "px", top: f.top + "px" }); if (!b.inline) { var g = $.datepicker._get(b, "showAnim"), h = $.datepicker._get(b, "duration"), i = function () { var a = b.dpDiv.find("iframe.ui-datepicker-cover"); if (!!a.length) { var c = $.datepicker._getBorders(b.dpDiv); a.css({ left: -c[0], top: -c[1], width: b.dpDiv.outerWidth(), height: b.dpDiv.outerHeight() }) } }; b.dpDiv.zIndex($(a).zIndex() + 1), $.datepicker._datepickerShowing = !0, $.effects && $.effects[g] ? b.dpDiv.show(g, $.datepicker._get(b, "showOptions"), h, i) : b.dpDiv[g || "show"](g ? h : null, i), (!g || !h) && i(), b.input.is(":visible") && !b.input.is(":disabled") && b.input.focus(), $.datepicker._curInst = b } }, _updateDatepicker: function (a) { var b = this; b.maxRows = 4; var c = $.datepicker._getBorders(a.dpDiv); instActive = a, a.dpDiv.empty().append(this._generateHTML(a)), this._attachHandlers(a); var d = a.dpDiv.find("iframe.ui-datepicker-cover"); !d.length || d.css({ left: -c[0], top: -c[1], width: a.dpDiv.outerWidth(), height: a.dpDiv.outerHeight() }), a.dpDiv.find("." + this._dayOverClass + " a").mouseover(); var e = this._getNumberOfMonths(a), f = e[1], g = 17; a.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""), f > 1 && a.dpDiv.addClass("ui-datepicker-multi-" + f).css("width", g * f + "em"), a.dpDiv[(e[0] != 1 || e[1] != 1 ? "add" : "remove") + "Class"]("ui-datepicker-multi"), a.dpDiv[(this._get(a, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl"), a == $.datepicker._curInst && $.datepicker._datepickerShowing && a.input && a.input.is(":visible") && !a.input.is(":disabled") && a.input[0] != document.activeElement && a.input.focus(); if (a.yearshtml) { var h = a.yearshtml; setTimeout(function () { h === a.yearshtml && a.yearshtml && a.dpDiv.find("select.ui-datepicker-year:first").replaceWith(a.yearshtml), h = a.yearshtml = null }, 0) } }, _getBorders: function (a) { var b = function (a) { return { thin: 1, medium: 2, thick: 3 }[a] || a }; return [parseFloat(b(a.css("border-left-width"))), parseFloat(b(a.css("border-top-width")))] }, _checkOffset: function (a, b, c) { var d = a.dpDiv.outerWidth(), e = a.dpDiv.outerHeight(), f = a.input ? a.input.outerWidth() : 0, g = a.input ? a.input.outerHeight() : 0, h = document.documentElement.clientWidth + (c ? 0 : $(document).scrollLeft()), i = document.documentElement.clientHeight + (c ? 0 : $(document).scrollTop()); return b.left -= this._get(a, "isRTL") ? d - f : 0, b.left -= c && b.left == a.input.offset().left ? $(document).scrollLeft() : 0, b.top -= c && b.top == a.input.offset().top + g ? $(document).scrollTop() : 0, b.left -= Math.min(b.left, b.left + d > h && h > d ? Math.abs(b.left + d - h) : 0), b.top -= Math.min(b.top, b.top + e > i && i > e ? Math.abs(e + g) : 0), b }, _findPos: function (a) { var b = this._getInst(a), c = this._get(b, "isRTL"); while (a && (a.type == "hidden" || a.nodeType != 1 || $.expr.filters.hidden(a))) a = a[c ? "previousSibling" : "nextSibling"]; var d = $(a).offset(); return [d.left, d.top] }, _hideDatepicker: function (a) { var b = this._curInst; if (!b || a && b != $.data(a, PROP_NAME)) return; if (this._datepickerShowing) { var c = this._get(b, "showAnim"), d = this._get(b, "duration"), e = function () { $.datepicker._tidyDialog(b) }; $.effects && $.effects[c] ? b.dpDiv.hide(c, $.datepicker._get(b, "showOptions"), d, e) : b.dpDiv[c == "slideDown" ? "slideUp" : c == "fadeIn" ? "fadeOut" : "hide"](c ? d : null, e), c || e(), this._datepickerShowing = !1; var f = this._get(b, "onClose"); f && f.apply(b.input ? b.input[0] : null, [b.input ? b.input.val() : "", b]), this._lastInput = null, this._inDialog && (this._dialogInput.css({ position: "absolute", left: "0", top: "-100px" }), $.blockUI && ($.unblockUI(), $("body").append(this.dpDiv))), this._inDialog = !1 } }, _tidyDialog: function (a) { a.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar") }, _checkExternalClick: function (a) { if (!$.datepicker._curInst) return; var b = $(a.target), c = $.datepicker._getInst(b[0]); (b[0].id != $.datepicker._mainDivId && b.parents("#" + $.datepicker._mainDivId).length == 0 && !b.hasClass($.datepicker.markerClassName) && !b.closest("." + $.datepicker._triggerClass).length && $.datepicker._datepickerShowing && (!$.datepicker._inDialog || !$.blockUI) || b.hasClass($.datepicker.markerClassName) && $.datepicker._curInst != c) && $.datepicker._hideDatepicker() }, _adjustDate: function (a, b, c) { var d = $(a), e = this._getInst(d[0]); if (this._isDisabledDatepicker(d[0])) return; this._adjustInstDate(e, b + (c == "M" ? this._get(e, "showCurrentAtPos") : 0), c), this._updateDatepicker(e) }, _gotoToday: function (a) { var b = $(a), c = this._getInst(b[0]); if (this._get(c, "gotoCurrent") && c.currentDay) c.selectedDay = c.currentDay, c.drawMonth = c.selectedMonth = c.currentMonth, c.drawYear = c.selectedYear = c.currentYear; else { var d = new Date; c.selectedDay = d.getDate(), c.drawMonth = c.selectedMonth = d.getMonth(), c.drawYear = c.selectedYear = d.getFullYear() } this._notifyChange(c), this._adjustDate(b) }, _selectMonthYear: function (a, b, c) { var d = $(a), e = this._getInst(d[0]); e["selected" + (c == "M" ? "Month" : "Year")] = e["draw" + (c == "M" ? "Month" : "Year")] = parseInt(b.options[b.selectedIndex].value, 10), this._notifyChange(e), this._adjustDate(d) }, _selectDay: function (a, b, c, d) { var e = $(a); if ($(d).hasClass(this._unselectableClass) || this._isDisabledDatepicker(e[0])) return; var f = this._getInst(e[0]); f.selectedDay = f.currentDay = $("a", d).html(), f.selectedMonth = f.currentMonth = b, f.selectedYear = f.currentYear = c, this._selectDate(a, this._formatDate(f, f.currentDay, f.currentMonth, f.currentYear)) }, _clearDate: function (a) { var b = $(a), c = this._getInst(b[0]); this._selectDate(b, "") }, _selectDate: function (a, b) { var c = $(a), d = this._getInst(c[0]); b = b != null ? b : this._formatDate(d), d.input && d.input.val(b), this._updateAlternate(d); var e = this._get(d, "onSelect"); e ? e.apply(d.input ? d.input[0] : null, [b, d]) : d.input && d.input.trigger("change"), d.inline ? this._updateDatepicker(d) : (this._hideDatepicker(), this._lastInput = d.input[0], typeof d.input[0] != "object" && d.input.focus(), this._lastInput = null) }, _updateAlternate: function (a) { var b = this._get(a, "altField"); if (b) { var c = this._get(a, "altFormat") || this._get(a, "dateFormat"), d = this._getDate(a), e = this.formatDate(c, d, this._getFormatConfig(a)); $(b).each(function () { $(this).val(e) }) } }, noWeekends: function (a) { var b = a.getDay(); return [b > 0 && b < 6, ""] }, iso8601Week: function (a) { var b = new Date(a.getTime()); b.setDate(b.getDate() + 4 - (b.getDay() || 7)); var c = b.getTime(); return b.setMonth(0), b.setDate(1), Math.floor(Math.round((c - b) / 864e5) / 7) + 1 }, parseDate: function (a, b, c) { if (a == null || b == null) throw "Invalid arguments"; b = typeof b == "object" ? b.toString() : b + ""; if (b == "") return null; var d = (c ? c.shortYearCutoff : null) || this._defaults.shortYearCutoff; d = typeof d != "string" ? d : (new Date).getFullYear() % 100 + parseInt(d, 10); var e = (c ? c.dayNamesShort : null) || this._defaults.dayNamesShort, f = (c ? c.dayNames : null) || this._defaults.dayNames, g = (c ? c.monthNamesShort : null) || this._defaults.monthNamesShort, h = (c ? c.monthNames : null) || this._defaults.monthNames, i = -1, j = -1, k = -1, l = -1, m = !1, n = function (b) { var c = s + 1 < a.length && a.charAt(s + 1) == b; return c && s++, c }, o = function (a) { var c = n(a), d = a == "@" ? 14 : a == "!" ? 20 : a == "y" && c ? 4 : a == "o" ? 3 : 2, e = new RegExp("^\\d{1," + d + "}"), f = b.substring(r).match(e); if (!f) throw "Missing number at position " + r; return r += f[0].length, parseInt(f[0], 10) }, p = function (a, c, d) { var e = $.map(n(a) ? d : c, function (a, b) { return [[b, a]] }).sort(function (a, b) { return -(a[1].length - b[1].length) }), f = -1; $.each(e, function (a, c) { var d = c[1]; if (b.substr(r, d.length).toLowerCase() == d.toLowerCase()) return f = c[0], r += d.length, !1 }); if (f != -1) return f + 1; throw "Unknown name at position " + r }, q = function () { if (b.charAt(r) != a.charAt(s)) throw "Unexpected literal at position " + r; r++ }, r = 0; for (var s = 0; s < a.length; s++) if (m) a.charAt(s) == "'" && !n("'") ? m = !1 : q(); else switch (a.charAt(s)) { case "d": k = o("d"); break; case "D": p("D", e, f); break; case "o": l = o("o"); break; case "m": j = o("m"); break; case "M": j = p("M", g, h); break; case "y": i = o("y"); break; case "@": var t = new Date(o("@")); i = t.getFullYear(), j = t.getMonth() + 1, k = t.getDate(); break; case "!": var t = new Date((o("!") - this._ticksTo1970) / 1e4); i = t.getFullYear(), j = t.getMonth() + 1, k = t.getDate(); break; case "'": n("'") ? q() : m = !0; break; default: q() } if (r < b.length) throw "Extra/unparsed characters found in date: " + b.substring(r); i == -1 ? i = (new Date).getFullYear() : i < 100 && (i += (new Date).getFullYear() - (new Date).getFullYear() % 100 + (i <= d ? 0 : -100)); if (l > -1) { j = 1, k = l; do { var u = this._getDaysInMonth(i, j - 1); if (k <= u) break; j++, k -= u } while (!0) } var t = this._daylightSavingAdjust(new Date(i, j - 1, k)); if (t.getFullYear() != i || t.getMonth() + 1 != j || t.getDate() != k) throw "Invalid date"; return t }, ATOM: "yy-mm-dd", COOKIE: "D, dd M yy", ISO_8601: "yy-mm-dd", RFC_822: "D, d M y", RFC_850: "DD, dd-M-y", RFC_1036: "D, d M y", RFC_1123: "D, d M yy", RFC_2822: "D, d M yy", RSS: "D, d M y", TICKS: "!", TIMESTAMP: "@", W3C: "yy-mm-dd", _ticksTo1970: (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)) * 24 * 60 * 60 * 1e7, formatDate: function (a, b, c) { if (!b) return ""; var d = (c ? c.dayNamesShort : null) || this._defaults.dayNamesShort, e = (c ? c.dayNames : null) || this._defaults.dayNames, f = (c ? c.monthNamesShort : null) || this._defaults.monthNamesShort, g = (c ? c.monthNames : null) || this._defaults.monthNames, h = function (b) { var c = m + 1 < a.length && a.charAt(m + 1) == b; return c && m++, c }, i = function (a, b, c) { var d = "" + b; if (h(a)) while (d.length < c) d = "0" + d; return d }, j = function (a, b, c, d) { return h(a) ? d[b] : c[b] }, k = "", l = !1; if (b) for (var m = 0; m < a.length; m++) if (l) a.charAt(m) == "'" && !h("'") ? l = !1 : k += a.charAt(m); else switch (a.charAt(m)) { case "d": k += i("d", b.getDate(), 2); break; case "D": k += j("D", b.getDay(), d, e); break; case "o": k += i("o", Math.round(((new Date(b.getFullYear(), b.getMonth(), b.getDate())).getTime() - (new Date(b.getFullYear(), 0, 0)).getTime()) / 864e5), 3); break; case "m": k += i("m", b.getMonth() + 1, 2); break; case "M": k += j("M", b.getMonth(), f, g); break; case "y": k += h("y") ? b.getFullYear() : (b.getYear() % 100 < 10 ? "0" : "") + b.getYear() % 100; break; case "@": k += b.getTime(); break; case "!": k += b.getTime() * 1e4 + this._ticksTo1970; break; case "'": h("'") ? k += "'" : l = !0; break; default: k += a.charAt(m) } return k }, _possibleChars: function (a) { var b = "", c = !1, d = function (b) { var c = e + 1 < a.length && a.charAt(e + 1) == b; return c && e++, c }; for (var e = 0; e < a.length; e++) if (c) a.charAt(e) == "'" && !d("'") ? c = !1 : b += a.charAt(e); else switch (a.charAt(e)) { case "d": case "m": case "y": case "@": b += "0123456789"; break; case "D": case "M": return null; case "'": d("'") ? b += "'" : c = !0; break; default: b += a.charAt(e) } return b }, _get: function (a, b) { return a.settings[b] !== undefined ? a.settings[b] : this._defaults[b] }, _setDateFromField: function (a, b) { if (a.input.val() == a.lastVal) return; var c = this._get(a, "dateFormat"), d = a.lastVal = a.input ? a.input.val() : null, e, f; e = f = this._getDefaultDate(a); var g = this._getFormatConfig(a); try { e = this.parseDate(c, d, g) || f } catch (h) { this.log(h), d = b ? "" : d } a.selectedDay = e.getDate(), a.drawMonth = a.selectedMonth = e.getMonth(), a.drawYear = a.selectedYear = e.getFullYear(), a.currentDay = d ? e.getDate() : 0, a.currentMonth = d ? e.getMonth() : 0, a.currentYear = d ? e.getFullYear() : 0, this._adjustInstDate(a) }, _getDefaultDate: function (a) { return this._restrictMinMax(a, this._determineDate(a, this._get(a, "defaultDate"), new Date)) }, _determineDate: function (a, b, c) { var d = function (a) { var b = new Date; return b.setDate(b.getDate() + a), b }, e = function (b) { try { return $.datepicker.parseDate($.datepicker._get(a, "dateFormat"), b, $.datepicker._getFormatConfig(a)) } catch (c) { } var d = (b.toLowerCase().match(/^c/) ? $.datepicker._getDate(a) : null) || new Date, e = d.getFullYear(), f = d.getMonth(), g = d.getDate(), h = /([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g, i = h.exec(b); while (i) { switch (i[2] || "d") { case "d": case "D": g += parseInt(i[1], 10); break; case "w": case "W": g += parseInt(i[1], 10) * 7; break; case "m": case "M": f += parseInt(i[1], 10), g = Math.min(g, $.datepicker._getDaysInMonth(e, f)); break; case "y": case "Y": e += parseInt(i[1], 10), g = Math.min(g, $.datepicker._getDaysInMonth(e, f)) } i = h.exec(b) } return new Date(e, f, g) }, f = b == null || b === "" ? c : typeof b == "string" ? e(b) : typeof b == "number" ? isNaN(b) ? c : d(b) : new Date(b.getTime()); return f = f && f.toString() == "Invalid Date" ? c : f, f && (f.setHours(0), f.setMinutes(0), f.setSeconds(0), f.setMilliseconds(0)), this._daylightSavingAdjust(f) }, _daylightSavingAdjust: function (a) { return a ? (a.setHours(a.getHours() > 12 ? a.getHours() + 2 : 0), a) : null }, _setDate: function (a, b, c) { var d = !b, e = a.selectedMonth, f = a.selectedYear, g = this._restrictMinMax(a, this._determineDate(a, b, new Date)); a.selectedDay = a.currentDay = g.getDate(), a.drawMonth = a.selectedMonth = a.currentMonth = g.getMonth(), a.drawYear = a.selectedYear = a.currentYear = g.getFullYear(), (e != a.selectedMonth || f != a.selectedYear) && !c && this._notifyChange(a), this._adjustInstDate(a), a.input && a.input.val(d ? "" : this._formatDate(a)) }, _getDate: function (a) { var b = !a.currentYear || a.input && a.input.val() == "" ? null : this._daylightSavingAdjust(new Date(a.currentYear, a.currentMonth, a.currentDay)); return b }, _attachHandlers: function (a) { var b = this._get(a, "stepMonths"), c = "#" + a.id.replace(/\\\\/g, "\\"); a.dpDiv.find("[data-handler]").map(function () { var a = { prev: function () { window["DP_jQuery_" + dpuuid].datepicker._adjustDate(c, -b, "M") }, next: function () { window["DP_jQuery_" + dpuuid].datepicker._adjustDate(c, +b, "M") }, hide: function () { window["DP_jQuery_" + dpuuid].datepicker._hideDatepicker() }, today: function () { window["DP_jQuery_" + dpuuid].datepicker._gotoToday(c) }, selectDay: function () { return window["DP_jQuery_" + dpuuid].datepicker._selectDay(c, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this), !1 }, selectMonth: function () { return window["DP_jQuery_" + dpuuid].datepicker._selectMonthYear(c, this, "M"), !1 }, selectYear: function () { return window["DP_jQuery_" + dpuuid].datepicker._selectMonthYear(c, this, "Y"), !1 } }; $(this).bind(this.getAttribute("data-event"), a[this.getAttribute("data-handler")]) }) }, _generateHTML: function (a) { var b = new Date; b = this._daylightSavingAdjust(new Date(b.getFullYear(), b.getMonth(), b.getDate())); var c = this._get(a, "isRTL"), d = this._get(a, "showButtonPanel"), e = this._get(a, "hideIfNoPrevNext"), f = this._get(a, "navigationAsDateFormat"), g = this._getNumberOfMonths(a), h = this._get(a, "showCurrentAtPos"), i = this._get(a, "stepMonths"), j = g[0] != 1 || g[1] != 1, k = this._daylightSavingAdjust(a.currentDay ? new Date(a.currentYear, a.currentMonth, a.currentDay) : new Date(9999, 9, 9)), l = this._getMinMaxDate(a, "min"), m = this._getMinMaxDate(a, "max"), n = a.drawMonth - h, o = a.drawYear; n < 0 && (n += 12, o--); if (m) { var p = this._daylightSavingAdjust(new Date(m.getFullYear(), m.getMonth() - g[0] * g[1] + 1, m.getDate())); p = l && p < l ? l : p; while (this._daylightSavingAdjust(new Date(o, n, 1)) > p) n--, n < 0 && (n = 11, o--) } a.drawMonth = n, a.drawYear = o; var q = this._get(a, "prevText"); q = f ? this.formatDate(q, this._daylightSavingAdjust(new Date(o, n - i, 1)), this._getFormatConfig(a)) : q; var r = this._canAdjustMonth(a, -1, o, n) ? '<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="' + q + '"><span class="ui-icon ui-icon-circle-triangle-' + (c ? "e" : "w") + '">' + q + "</span></a>" : e ? "" : '<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="' + q + '"><span class="ui-icon ui-icon-circle-triangle-' + (c ? "e" : "w") + '">' + q + "</span></a>", s = this._get(a, "nextText"); s = f ? this.formatDate(s, this._daylightSavingAdjust(new Date(o, n + i, 1)), this._getFormatConfig(a)) : s; var t = this._canAdjustMonth(a, 1, o, n) ? '<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="' + s + '"><span class="ui-icon ui-icon-circle-triangle-' + (c ? "w" : "e") + '">' + s + "</span></a>" : e ? "" : '<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="' + s + '"><span class="ui-icon ui-icon-circle-triangle-' + (c ? "w" : "e") + '">' + s + "</span></a>", u = this._get(a, "currentText"), v = this._get(a, "gotoCurrent") && a.currentDay ? k : b; u = f ? this.formatDate(u, v, this._getFormatConfig(a)) : u; var w = a.inline ? "" : '<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">' + this._get(a, "closeText") + "</button>", x = d ? '<div class="ui-datepicker-buttonpane ui-widget-content">' + (c ? w : "") + (this._isInRange(a, v) ? '<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">' + u + "</button>" : "") + (c ? "" : w) + "</div>" : "", y = parseInt(this._get(a, "firstDay"), 10); y = isNaN(y) ? 0 : y; var z = this._get(a, "showWeek"), A = this._get(a, "dayNames"), B = this._get(a, "dayNamesShort"), C = this._get(a, "dayNamesMin"), D = this._get(a, "monthNames"), E = this._get(a, "monthNamesShort"), F = this._get(a, "beforeShowDay"), G = this._get(a, "showOtherMonths"), H = this._get(a, "selectOtherMonths"), I = this._get(a, "calculateWeek") || this.iso8601Week, J = this._getDefaultDate(a), K = ""; for (var L = 0; L < g[0]; L++) { var M = ""; this.maxRows = 4; for (var N = 0; N < g[1]; N++) { var O = this._daylightSavingAdjust(new Date(o, n, a.selectedDay)), P = " ui-corner-all", Q = ""; if (j) { Q += '<div class="ui-datepicker-group'; if (g[1] > 1) switch (N) { case 0: Q += " ui-datepicker-group-first", P = " ui-corner-" + (c ? "right" : "left"); break; case g[1] - 1: Q += " ui-datepicker-group-last", P = " ui-corner-" + (c ? "left" : "right"); break; default: Q += " ui-datepicker-group-middle", P = "" } Q += '">' } Q += '<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix' + P + '">' + (/all|left/.test(P) && L == 0 ? c ? t : r : "") + (/all|right/.test(P) && L == 0 ? c ? r : t : "") + this._generateMonthYearHeader(a, n, o, l, m, L > 0 || N > 0, D, E) + '</div><table class="ui-datepicker-calendar"><thead>' + "<tr>"; var R = z ? '<th class="ui-datepicker-week-col">' + this._get(a, "weekHeader") + "</th>" : ""; for (var S = 0; S < 7; S++) { var T = (S + y) % 7; R += "<th" + ((S + y + 6) % 7 >= 5 ? ' class="ui-datepicker-week-end"' : "") + ">" + '<span title="' + A[T] + '">' + C[T] + "</span></th>" } Q += R + "</tr></thead><tbody>"; var U = this._getDaysInMonth(o, n); o == a.selectedYear && n == a.selectedMonth && (a.selectedDay = Math.min(a.selectedDay, U)); var V = (this._getFirstDayOfMonth(o, n) - y + 7) % 7, W = Math.ceil((V + U) / 7), X = j ? this.maxRows > W ? this.maxRows : W : W; this.maxRows = X; var Y = this._daylightSavingAdjust(new Date(o, n, 1 - V)); for (var Z = 0; Z < X; Z++) { Q += "<tr>"; var _ = z ? '<td class="ui-datepicker-week-col">' + this._get(a, "calculateWeek")(Y) + "</td>" : ""; for (var S = 0; S < 7; S++) { var ba = F ? F.apply(a.input ? a.input[0] : null, [Y]) : [!0, ""], bb = Y.getMonth() != n, bc = bb && !H || !ba[0] || l && Y < l || m && Y > m; _ += '<td class="' + ((S + y + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (bb ? " ui-datepicker-other-month" : "") + (Y.getTime() == O.getTime() && n == a.selectedMonth && a._keyEvent || J.getTime() == Y.getTime() && J.getTime() == O.getTime() ? " " + this._dayOverClass : "") + (bc ? " " + this._unselectableClass + " ui-state-disabled" : "") + (bb && !G ? "" : " " + ba[1] + (Y.getTime() == k.getTime() ? " " + this._currentClass : "") + (Y.getTime() == b.getTime() ? " ui-datepicker-today" : "")) + '"' + ((!bb || G) && ba[2] ? ' title="' + ba[2] + '"' : "") + (bc ? "" : ' data-handler="selectDay" data-event="click" data-month="' + Y.getMonth() + '" data-year="' + Y.getFullYear() + '"') + ">" + (bb && !G ? "&#xa0;" : bc ? '<span class="ui-state-default">' + Y.getDate() + "</span>" : '<a class="ui-state-default' + (Y.getTime() == b.getTime() ? " ui-state-highlight" : "") + (Y.getTime() == k.getTime() ? " ui-state-active" : "") + (bb ? " ui-priority-secondary" : "") + '" href="#">' + Y.getDate() + "</a>") + "</td>", Y.setDate(Y.getDate() + 1), Y = this._daylightSavingAdjust(Y) } Q += _ + "</tr>" } n++, n > 11 && (n = 0, o++), Q += "</tbody></table>" + (j ? "</div>" + (g[0] > 0 && N == g[1] - 1 ? '<div class="ui-datepicker-row-break"></div>' : "") : ""), M += Q } K += M } return K += x + ($.browser.msie && parseInt($.browser.version, 10) < 7 && !a.inline ? '<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>' : ""), a._keyEvent = !1, K }, _generateMonthYearHeader: function (a, b, c, d, e, f, g, h) { var i = this._get(a, "changeMonth"), j = this._get(a, "changeYear"), k = this._get(a, "showMonthAfterYear"), l = '<div class="ui-datepicker-title">', m = ""; if (f || !i) m += '<span class="ui-datepicker-month">' + g[b] + "</span>"; else { var n = d && d.getFullYear() == c, o = e && e.getFullYear() == c; m += '<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">'; for (var p = 0; p < 12; p++) (!n || p >= d.getMonth()) && (!o || p <= e.getMonth()) && (m += '<option value="' + p + '"' + (p == b ? ' selected="selected"' : "") + ">" + h[p] + "</option>"); m += "</select>" } k || (l += m + (f || !i || !j ? "&#xa0;" : "")); if (!a.yearshtml) { a.yearshtml = ""; if (f || !j) l += '<span class="ui-datepicker-year">' + c + "</span>"; else { var q = this._get(a, "yearRange").split(":"), r = (new Date).getFullYear(), s = function (a) { var b = a.match(/c[+-].*/) ? c + parseInt(a.substring(1), 10) : a.match(/[+-].*/) ? r + parseInt(a, 10) : parseInt(a, 10); return isNaN(b) ? r : b }, t = s(q[0]), u = Math.max(t, s(q[1] || "")); t = d ? Math.max(t, d.getFullYear()) : t, u = e ? Math.min(u, e.getFullYear()) : u, a.yearshtml += '<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">'; for (; t <= u; t++) a.yearshtml += '<option value="' + t + '"' + (t == c ? ' selected="selected"' : "") + ">" + t + "</option>"; a.yearshtml += "</select>", l += a.yearshtml, a.yearshtml = null } } return l += this._get(a, "yearSuffix"), k && (l += (f || !i || !j ? "&#xa0;" : "") + m), l += "</div>", l }, _adjustInstDate: function (a, b, c) { var d = a.drawYear + (c == "Y" ? b : 0), e = a.drawMonth + (c == "M" ? b : 0), f = Math.min(a.selectedDay, this._getDaysInMonth(d, e)) + (c == "D" ? b : 0), g = this._restrictMinMax(a, this._daylightSavingAdjust(new Date(d, e, f))); a.selectedDay = g.getDate(), a.drawMonth = a.selectedMonth = g.getMonth(), a.drawYear = a.selectedYear = g.getFullYear(), (c == "M" || c == "Y") && this._notifyChange(a) }, _restrictMinMax: function (a, b) { var c = this._getMinMaxDate(a, "min"), d = this._getMinMaxDate(a, "max"), e = c && b < c ? c : b; return e = d && e > d ? d : e, e }, _notifyChange: function (a) { var b = this._get(a, "onChangeMonthYear"); b && b.apply(a.input ? a.input[0] : null, [a.selectedYear, a.selectedMonth + 1, a]) }, _getNumberOfMonths: function (a) { var b = this._get(a, "numberOfMonths"); return b == null ? [1, 1] : typeof b == "number" ? [1, b] : b }, _getMinMaxDate: function (a, b) { return this._determineDate(a, this._get(a, b + "Date"), null) }, _getDaysInMonth: function (a, b) { return 32 - this._daylightSavingAdjust(new Date(a, b, 32)).getDate() }, _getFirstDayOfMonth: function (a, b) { return (new Date(a, b, 1)).getDay() }, _canAdjustMonth: function (a, b, c, d) { var e = this._getNumberOfMonths(a), f = this._daylightSavingAdjust(new Date(c, d + (b < 0 ? b : e[0] * e[1]), 1)); return b < 0 && f.setDate(this._getDaysInMonth(f.getFullYear(), f.getMonth())), this._isInRange(a, f) }, _isInRange: function (a, b) { var c = this._getMinMaxDate(a, "min"), d = this._getMinMaxDate(a, "max"); return (!c || b.getTime() >= c.getTime()) && (!d || b.getTime() <= d.getTime()) }, _getFormatConfig: function (a) { var b = this._get(a, "shortYearCutoff"); return b = typeof b != "string" ? b : (new Date).getFullYear() % 100 + parseInt(b, 10), { shortYearCutoff: b, dayNamesShort: this._get(a, "dayNamesShort"), dayNames: this._get(a, "dayNames"), monthNamesShort: this._get(a, "monthNamesShort"), monthNames: this._get(a, "monthNames") } }, _formatDate: function (a, b, c, d) { b || (a.currentDay = a.selectedDay, a.currentMonth = a.selectedMonth, a.currentYear = a.selectedYear); var e = b ? typeof b == "object" ? b : this._daylightSavingAdjust(new Date(d, c, b)) : this._daylightSavingAdjust(new Date(a.currentYear, a.currentMonth, a.currentDay)); return this.formatDate(this._get(a, "dateFormat"), e, this._getFormatConfig(a)) } }), $.fn.datepicker = function (a) { if (!this.length) return this; $.datepicker.initialized || ($(document).mousedown($.datepicker._checkExternalClick).find("body").append($.datepicker.dpDiv), $.datepicker.initialized = !0); var b = Array.prototype.slice.call(arguments, 1); return typeof a != "string" || a != "isDisabled" && a != "getDate" && a != "widget" ? a == "option" && arguments.length == 2 && typeof arguments[1] == "string" ? $.datepicker["_" + a + "Datepicker"].apply($.datepicker, [this[0]].concat(b)) : this.each(function () { typeof a == "string" ? $.datepicker["_" + a + "Datepicker"].apply($.datepicker, [this].concat(b)) : $.datepicker._attachDatepicker(this, a) }) : $.datepicker["_" + a + "Datepicker"].apply($.datepicker, [this[0]].concat(b)) }, $.datepicker = new Datepicker, $.datepicker.initialized = !1, $.datepicker.uuid = (new Date).getTime(), $.datepicker.version = "1.8.24", window["DP_jQuery_" + dpuuid] = $ }(jQuery), function (a, b) { var c = "ui-dialog ui-widget ui-widget-content ui-corner-all ", d = { buttons: !0, height: !0, maxHeight: !0, maxWidth: !0, minHeight: !0, minWidth: !0, width: !0 }, e = { maxHeight: !0, maxWidth: !0, minHeight: !0, minWidth: !0 }; a.widget("ui.dialog", { options: { autoOpen: !0, buttons: {}, closeOnEscape: !0, closeText: "close", dialogClass: "", draggable: !0, hide: null, height: "auto", maxHeight: !1, maxWidth: !1, minHeight: 150, minWidth: 150, modal: !1, position: { my: "center", at: "center", collision: "fit", using: function (b) { var c = a(this).css(b).offset().top; c < 0 && a(this).css("top", b.top - c) } }, resizable: !0, show: null, stack: !0, title: "", width: 300, zIndex: 1e3 }, _create: function () { this.originalTitle = this.element.attr("title"), typeof this.originalTitle != "string" && (this.originalTitle = ""), this.options.title = this.options.title || this.originalTitle; var b = this, d = b.options, e = d.title || "&#160;", f = a.ui.dialog.getTitleId(b.element), g = (b.uiDialog = a("<div></div>")).appendTo(document.body).hide().addClass(c + d.dialogClass).css({ zIndex: d.zIndex }).attr("tabIndex", -1).css("outline", 0).keydown(function (c) { d.closeOnEscape && !c.isDefaultPrevented() && c.keyCode && c.keyCode === a.ui.keyCode.ESCAPE && (b.close(c), c.preventDefault()) }).attr({ role: "dialog", "aria-labelledby": f }).mousedown(function (a) { b.moveToTop(!1, a) }), h = b.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(g), i = (b.uiDialogTitlebar = a("<div></div>")).addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(g), j = a('<a href="#"></a>').addClass("ui-dialog-titlebar-close ui-corner-all").attr("role", "button").hover(function () { j.addClass("ui-state-hover") }, function () { j.removeClass("ui-state-hover") }).focus(function () { j.addClass("ui-state-focus") }).blur(function () { j.removeClass("ui-state-focus") }).click(function (a) { return b.close(a), !1 }).appendTo(i), k = (b.uiDialogTitlebarCloseText = a("<span></span>")).addClass("ui-icon ui-icon-closethick").text(d.closeText).appendTo(j), l = a("<span></span>").addClass("ui-dialog-title").attr("id", f).html(e).prependTo(i); a.isFunction(d.beforeclose) && !a.isFunction(d.beforeClose) && (d.beforeClose = d.beforeclose), i.find("*").add(i).disableSelection(), d.draggable && a.fn.draggable && b._makeDraggable(), d.resizable && a.fn.resizable && b._makeResizable(), b._createButtons(d.buttons), b._isOpen = !1, a.fn.bgiframe && g.bgiframe() }, _init: function () { this.options.autoOpen && this.open() }, destroy: function () { var a = this; return a.overlay && a.overlay.destroy(), a.uiDialog.hide(), a.element.unbind(".dialog").removeData("dialog").removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body"), a.uiDialog.remove(), a.originalTitle && a.element.attr("title", a.originalTitle), a }, widget: function () { return this.uiDialog }, close: function (b) { var c = this, d, e; if (!1 === c._trigger("beforeClose", b)) return; return c.overlay && c.overlay.destroy(), c.uiDialog.unbind("keypress.ui-dialog"), c._isOpen = !1, c.options.hide ? c.uiDialog.hide(c.options.hide, function () { c._trigger("close", b) }) : (c.uiDialog.hide(), c._trigger("close", b)), a.ui.dialog.overlay.resize(), c.options.modal && (d = 0, a(".ui-dialog").each(function () { this !== c.uiDialog[0] && (e = a(this).css("z-index"), isNaN(e) || (d = Math.max(d, e))) }), a.ui.dialog.maxZ = d), c }, isOpen: function () { return this._isOpen }, moveToTop: function (b, c) { var d = this, e = d.options, f; return e.modal && !b || !e.stack && !e.modal ? d._trigger("focus", c) : (e.zIndex > a.ui.dialog.maxZ && (a.ui.dialog.maxZ = e.zIndex), d.overlay && (a.ui.dialog.maxZ += 1, d.overlay.$el.css("z-index", a.ui.dialog.overlay.maxZ = a.ui.dialog.maxZ)), f = { scrollTop: d.element.scrollTop(), scrollLeft: d.element.scrollLeft() }, a.ui.dialog.maxZ += 1, d.uiDialog.css("z-index", a.ui.dialog.maxZ), d.element.attr(f), d._trigger("focus", c), d) }, open: function () { if (this._isOpen) return; var b = this, c = b.options, d = b.uiDialog; return b.overlay = c.modal ? new a.ui.dialog.overlay(b) : null, b._size(), b._position(c.position), d.show(c.show), b.moveToTop(!0), c.modal && d.bind("keydown.ui-dialog", function (b) { if (b.keyCode !== a.ui.keyCode.TAB) return; var c = a(":tabbable", this), d = c.filter(":first"), e = c.filter(":last"); if (b.target === e[0] && !b.shiftKey) return d.focus(1), !1; if (b.target === d[0] && b.shiftKey) return e.focus(1), !1 }), a(b.element.find(":tabbable").get().concat(d.find(".ui-dialog-buttonpane :tabbable").get().concat(d.get()))).eq(0).focus(), b._isOpen = !0, b._trigger("open"), b }, _createButtons: function (b) { var c = this, d = !1, e = a("<div></div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"), f = a("<div></div>").addClass("ui-dialog-buttonset").appendTo(e); c.uiDialog.find(".ui-dialog-buttonpane").remove(), typeof b == "object" && b !== null && a.each(b, function () { return !(d = !0) }), d && (a.each(b, function (b, d) { d = a.isFunction(d) ? { click: d, text: b } : d; var e = a('<button type="button"></button>').click(function () { d.click.apply(c.element[0], arguments) }).appendTo(f); a.each(d, function (a, b) { if (a === "click") return; a in e ? e[a](b) : e.attr(a, b) }), a.fn.button && e.button() }), e.appendTo(c.uiDialog)) }, _makeDraggable: function () { function f(a) { return { position: a.position, offset: a.offset } } var b = this, c = b.options, d = a(document), e; b.uiDialog.draggable({ cancel: ".ui-dialog-content, .ui-dialog-titlebar-close", handle: ".ui-dialog-titlebar", containment: "document", start: function (d, g) { e = c.height === "auto" ? "auto" : a(this).height(), a(this).height(a(this).height()).addClass("ui-dialog-dragging"), b._trigger("dragStart", d, f(g)) }, drag: function (a, c) { b._trigger("drag", a, f(c)) }, stop: function (g, h) { c.position = [h.position.left - d.scrollLeft(), h.position.top - d.scrollTop()], a(this).removeClass("ui-dialog-dragging").height(e), b._trigger("dragStop", g, f(h)), a.ui.dialog.overlay.resize() } }) }, _makeResizable: function (c) { function h(a) { return { originalPosition: a.originalPosition, originalSize: a.originalSize, position: a.position, size: a.size } } c = c === b ? this.options.resizable : c; var d = this, e = d.options, f = d.uiDialog.css("position"), g = typeof c == "string" ? c : "n,e,s,w,se,sw,ne,nw"; d.uiDialog.resizable({ cancel: ".ui-dialog-content", containment: "document", alsoResize: d.element, maxWidth: e.maxWidth, maxHeight: e.maxHeight, minWidth: e.minWidth, minHeight: d._minHeight(), handles: g, start: function (b, c) { a(this).addClass("ui-dialog-resizing"), d._trigger("resizeStart", b, h(c)) }, resize: function (a, b) { d._trigger("resize", a, h(b)) }, stop: function (b, c) { a(this).removeClass("ui-dialog-resizing"), e.height = a(this).height(), e.width = a(this).width(), d._trigger("resizeStop", b, h(c)), a.ui.dialog.overlay.resize() } }).css("position", f).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se") }, _minHeight: function () { var a = this.options; return a.height === "auto" ? a.minHeight : Math.min(a.minHeight, a.height) }, _position: function (b) { var c = [], d = [0, 0], e; if (b) { if (typeof b == "string" || typeof b == "object" && "0" in b) c = b.split ? b.split(" ") : [b[0], b[1]], c.length === 1 && (c[1] = c[0]), a.each(["left", "top"], function (a, b) { +c[a] === c[a] && (d[a] = c[a], c[a] = b) }), b = { my: c.join(" "), at: c.join(" "), offset: d.join(" ") }; b = a.extend({}, a.ui.dialog.prototype.options.position, b) } else b = a.ui.dialog.prototype.options.position; e = this.uiDialog.is(":visible"), e || this.uiDialog.show(), this.uiDialog.css({ top: 0, left: 0 }).position(a.extend({ of: window }, b)), e || this.uiDialog.hide() }, _setOptions: function (b) { var c = this, f = {}, g = !1; a.each(b, function (a, b) { c._setOption(a, b), a in d && (g = !0), a in e && (f[a] = b) }), g && this._size(), this.uiDialog.is(":data(resizable)") && this.uiDialog.resizable("option", f) }, _setOption: function (b, d) { var e = this, f = e.uiDialog; switch (b) { case "beforeclose": b = "beforeClose"; break; case "buttons": e._createButtons(d); break; case "closeText": e.uiDialogTitlebarCloseText.text("" + d); break; case "dialogClass": f.removeClass(e.options.dialogClass).addClass(c + d); break; case "disabled": d ? f.addClass("ui-dialog-disabled") : f.removeClass("ui-dialog-disabled"); break; case "draggable": var g = f.is(":data(draggable)"); g && !d && f.draggable("destroy"), !g && d && e._makeDraggable(); break; case "position": e._position(d); break; case "resizable": var h = f.is(":data(resizable)"); h && !d && f.resizable("destroy"), h && typeof d == "string" && f.resizable("option", "handles", d), !h && d !== !1 && e._makeResizable(d); break; case "title": a(".ui-dialog-title", e.uiDialogTitlebar).html("" + (d || "&#160;")) } a.Widget.prototype._setOption.apply(e, arguments) }, _size: function () { var b = this.options, c, d, e = this.uiDialog.is(":visible"); this.element.show().css({ width: "auto", minHeight: 0, height: 0 }), b.minWidth > b.width && (b.width = b.minWidth), c = this.uiDialog.css({ height: "auto", width: b.width }).height(), d = Math.max(0, b.minHeight - c); if (b.height === "auto") if (a.support.minHeight) this.element.css({ minHeight: d, height: "auto" }); else { this.uiDialog.show(); var f = this.element.css("height", "auto").height(); e || this.uiDialog.hide(), this.element.height(Math.max(f, d)) } else this.element.height(Math.max(b.height - c, 0)); this.uiDialog.is(":data(resizable)") && this.uiDialog.resizable("option", "minHeight", this._minHeight()) } }), a.extend(a.ui.dialog, { version: "1.8.24", uuid: 0, maxZ: 0, getTitleId: function (a) { var b = a.attr("id"); return b || (this.uuid += 1, b = this.uuid), "ui-dialog-title-" + b }, overlay: function (b) { this.$el = a.ui.dialog.overlay.create(b) } }), a.extend(a.ui.dialog.overlay, { instances: [], oldInstances: [], maxZ: 0, events: a.map("focus,mousedown,mouseup,keydown,keypress,click".split(","), function (a) { return a + ".dialog-overlay" }).join(" "), create: function (b) { this.instances.length === 0 && (setTimeout(function () { a.ui.dialog.overlay.instances.length && a(document).bind(a.ui.dialog.overlay.events, function (b) { if (a(b.target).zIndex() < a.ui.dialog.overlay.maxZ) return !1 }) }, 1), a(document).bind("keydown.dialog-overlay", function (c) { b.options.closeOnEscape && !c.isDefaultPrevented() && c.keyCode && c.keyCode === a.ui.keyCode.ESCAPE && (b.close(c), c.preventDefault()) }), a(window).bind("resize.dialog-overlay", a.ui.dialog.overlay.resize)); var c = (this.oldInstances.pop() || a("<div></div>").addClass("ui-widget-overlay")).appendTo(document.body).css({ width: this.width(), height: this.height() }); return a.fn.bgiframe && c.bgiframe(), this.instances.push(c), c }, destroy: function (b) { var c = a.inArray(b, this.instances); c != -1 && this.oldInstances.push(this.instances.splice(c, 1)[0]), this.instances.length === 0 && a([document, window]).unbind(".dialog-overlay"), b.remove(); var d = 0; a.each(this.instances, function () { d = Math.max(d, this.css("z-index")) }), this.maxZ = d }, height: function () { var b, c; return a.browser.msie && a.browser.version < 7 ? (b = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight), c = Math.max(document.documentElement.offsetHeight, document.body.offsetHeight), b < c ? a(window).height() + "px" : b + "px") : a(document).height() + "px" }, width: function () { var b, c; return a.browser.msie ? (b = Math.max(document.documentElement.scrollWidth, document.body.scrollWidth), c = Math.max(document.documentElement.offsetWidth, document.body.offsetWidth), b < c ? a(window).width() + "px" : b + "px") : a(document).width() + "px" }, resize: function () { var b = a([]); a.each(a.ui.dialog.overlay.instances, function () { b = b.add(this) }), b.css({ width: 0, height: 0 }).css({ width: a.ui.dialog.overlay.width(), height: a.ui.dialog.overlay.height() }) } }), a.extend(a.ui.dialog.overlay.prototype, { destroy: function () { a.ui.dialog.overlay.destroy(this.$el) } }) }(jQuery), function (a, b) { a.ui = a.ui || {}; var c = /left|center|right/, d = /top|center|bottom/, e = "center", f = {}, g = a.fn.position, h = a.fn.offset; a.fn.position = function (b) { if (!b || !b.of) return g.apply(this, arguments); b = a.extend({}, b); var h = a(b.of), i = h[0], j = (b.collision || "flip").split(" "), k = b.offset ? b.offset.split(" ") : [0, 0], l, m, n; return i.nodeType === 9 ? (l = h.width(), m = h.height(), n = { top: 0, left: 0 }) : i.setTimeout ? (l = h.width(), m = h.height(), n = { top: h.scrollTop(), left: h.scrollLeft() }) : i.preventDefault ? (b.at = "left top", l = m = 0, n = { top: b.of.pageY, left: b.of.pageX }) : (l = h.outerWidth(), m = h.outerHeight(), n = h.offset()), a.each(["my", "at"], function () { var a = (b[this] || "").split(" "); a.length === 1 && (a = c.test(a[0]) ? a.concat([e]) : d.test(a[0]) ? [e].concat(a) : [e, e]), a[0] = c.test(a[0]) ? a[0] : e, a[1] = d.test(a[1]) ? a[1] : e, b[this] = a }), j.length === 1 && (j[1] = j[0]), k[0] = parseInt(k[0], 10) || 0, k.length === 1 && (k[1] = k[0]), k[1] = parseInt(k[1], 10) || 0, b.at[0] === "right" ? n.left += l : b.at[0] === e && (n.left += l / 2), b.at[1] === "bottom" ? n.top += m : b.at[1] === e && (n.top += m / 2), n.left += k[0], n.top += k[1], this.each(function () { var c = a(this), d = c.outerWidth(), g = c.outerHeight(), h = parseInt(a.curCSS(this, "marginLeft", !0)) || 0, i = parseInt(a.curCSS(this, "marginTop", !0)) || 0, o = d + h + (parseInt(a.curCSS(this, "marginRight", !0)) || 0), p = g + i + (parseInt(a.curCSS(this, "marginBottom", !0)) || 0), q = a.extend({}, n), r; b.my[0] === "right" ? q.left -= d : b.my[0] === e && (q.left -= d / 2), b.my[1] === "bottom" ? q.top -= g : b.my[1] === e && (q.top -= g / 2), f.fractions || (q.left = Math.round(q.left), q.top = Math.round(q.top)), r = { left: q.left - h, top: q.top - i }, a.each(["left", "top"], function (c, e) { a.ui.position[j[c]] && a.ui.position[j[c]][e](q, { targetWidth: l, targetHeight: m, elemWidth: d, elemHeight: g, collisionPosition: r, collisionWidth: o, collisionHeight: p, offset: k, my: b.my, at: b.at }) }), a.fn.bgiframe && c.bgiframe(), c.offset(a.extend(q, { using: b.using })) }) }, a.ui.position = { fit: { left: function (b, c) { var d = a(window), e = c.collisionPosition.left + c.collisionWidth - d.width() - d.scrollLeft(); b.left = e > 0 ? b.left - e : Math.max(b.left - c.collisionPosition.left, b.left) }, top: function (b, c) { var d = a(window), e = c.collisionPosition.top + c.collisionHeight - d.height() - d.scrollTop(); b.top = e > 0 ? b.top - e : Math.max(b.top - c.collisionPosition.top, b.top) } }, flip: { left: function (b, c) { if (c.at[0] === e) return; var d = a(window), f = c.collisionPosition.left + c.collisionWidth - d.width() - d.scrollLeft(), g = c.my[0] === "left" ? -c.elemWidth : c.my[0] === "right" ? c.elemWidth : 0, h = c.at[0] === "left" ? c.targetWidth : -c.targetWidth, i = -2 * c.offset[0]; b.left += c.collisionPosition.left < 0 ? g + h + i : f > 0 ? g + h + i : 0 }, top: function (b, c) { if (c.at[1] === e) return; var d = a(window), f = c.collisionPosition.top + c.collisionHeight - d.height() - d.scrollTop(), g = c.my[1] === "top" ? -c.elemHeight : c.my[1] === "bottom" ? c.elemHeight : 0, h = c.at[1] === "top" ? c.targetHeight : -c.targetHeight, i = -2 * c.offset[1]; b.top += c.collisionPosition.top < 0 ? g + h + i : f > 0 ? g + h + i : 0 } } }, a.offset.setOffset || (a.offset.setOffset = function (b, c) { /static/.test(a.curCSS(b, "position")) && (b.style.position = "relative"); var d = a(b), e = d.offset(), f = parseInt(a.curCSS(b, "top", !0), 10) || 0, g = parseInt(a.curCSS(b, "left", !0), 10) || 0, h = { top: c.top - e.top + f, left: c.left - e.left + g }; "using" in c ? c.using.call(b, h) : d.css(h) }, a.fn.offset = function (b) { var c = this[0]; return !c || !c.ownerDocument ? null : b ? a.isFunction(b) ? this.each(function (c) { a(this).offset(b.call(this, c, a(this).offset())) }) : this.each(function () { a.offset.setOffset(this, b) }) : h.call(this) }), a.curCSS || (a.curCSS = a.css), function () { var b = document.getElementsByTagName("body")[0], c = document.createElement("div"), d, e, g, h, i; d = document.createElement(b ? "div" : "body"), g = { visibility: "hidden", width: 0, height: 0, border: 0, margin: 0, background: "none" }, b && a.extend(g, { position: "absolute", left: "-1000px", top: "-1000px" }); for (var j in g) d.style[j] = g[j]; d.appendChild(c), e = b || document.documentElement, e.insertBefore(d, e.firstChild), c.style.cssText = "position: absolute; left: 10.7432222px; top: 10.432325px; height: 30px; width: 201px;", h = a(c).offset(function (a, b) { return b }).offset(), d.innerHTML = "", e.removeChild(d), i = h.top + h.left + (b ? 2e3 : 0), f.fractions = i > 21 && i < 22 }() }(jQuery), function (a, b) { a.widget("ui.progressbar", { options: { value: 0, max: 100 }, min: 0, _create: function () { this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({ role: "progressbar", "aria-valuemin": this.min, "aria-valuemax": this.options.max, "aria-valuenow": this._value() }), this.valueDiv = a("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element), this.oldValue = this._value(), this._refreshValue() }, destroy: function () { this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"), this.valueDiv.remove(), a.Widget.prototype.destroy.apply(this, arguments) }, value: function (a) { return a === b ? this._value() : (this._setOption("value", a), this) }, _setOption: function (b, c) { b === "value" && (this.options.value = c, this._refreshValue(), this._value() === this.options.max && this._trigger("complete")), a.Widget.prototype._setOption.apply(this, arguments) }, _value: function () { var a = this.options.value; return typeof a != "number" && (a = 0), Math.min(this.options.max, Math.max(this.min, a)) }, _percentage: function () { return 100 * this._value() / this.options.max }, _refreshValue: function () { var a = this.value(), b = this._percentage(); this.oldValue !== a && (this.oldValue = a, this._trigger("change")), this.valueDiv.toggle(a > this.min).toggleClass("ui-corner-right", a === this.options.max).width(b.toFixed(0) + "%"), this.element.attr("aria-valuenow", a) } }), a.extend(a.ui.progressbar, { version: "1.8.24" }) }(jQuery), function (a, b) { var c = 5; a.widget("ui.slider", a.ui.mouse, { widgetEventPrefix: "slide", options: { animate: !1, distance: 0, max: 100, min: 0, orientation: "horizontal", range: !1, step: 1, value: 0, values: null }, _create: function () { var b = this, d = this.options, e = this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"), f = "<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>", g = d.values && d.values.length || 1, h = []; this._keySliding = !1, this._mouseSliding = !1, this._animateOff = !0, this._handleIndex = null, this._detectOrientation(), this._mouseInit(), this.element.addClass("ui-slider ui-slider-" + this.orientation + " ui-widget" + " ui-widget-content" + " ui-corner-all" + (d.disabled ? " ui-slider-disabled ui-disabled" : "")), this.range = a([]), d.range && (d.range === !0 && (d.values || (d.values = [this._valueMin(), this._valueMin()]), d.values.length && d.values.length !== 2 && (d.values = [d.values[0], d.values[0]])), this.range = a("<div></div>").appendTo(this.element).addClass("ui-slider-range ui-widget-header" + (d.range === "min" || d.range === "max" ? " ui-slider-range-" + d.range : ""))); for (var i = e.length; i < g; i += 1) h.push(f); this.handles = e.add(a(h.join("")).appendTo(b.element)), this.handle = this.handles.eq(0), this.handles.add(this.range).filter("a").click(function (a) { a.preventDefault() }).hover(function () { d.disabled || a(this).addClass("ui-state-hover") }, function () { a(this).removeClass("ui-state-hover") }).focus(function () { d.disabled ? a(this).blur() : (a(".ui-slider .ui-state-focus").removeClass("ui-state-focus"), a(this).addClass("ui-state-focus")) }).blur(function () { a(this).removeClass("ui-state-focus") }), this.handles.each(function (b) { a(this).data("index.ui-slider-handle", b) }), this.handles.keydown(function (d) { var e = a(this).data("index.ui-slider-handle"), f, g, h, i; if (b.options.disabled) return; switch (d.keyCode) { case a.ui.keyCode.HOME: case a.ui.keyCode.END: case a.ui.keyCode.PAGE_UP: case a.ui.keyCode.PAGE_DOWN: case a.ui.keyCode.UP: case a.ui.keyCode.RIGHT: case a.ui.keyCode.DOWN: case a.ui.keyCode.LEFT: d.preventDefault(); if (!b._keySliding) { b._keySliding = !0, a(this).addClass("ui-state-active"), f = b._start(d, e); if (f === !1) return } } i = b.options.step, b.options.values && b.options.values.length ? g = h = b.values(e) : g = h = b.value(); switch (d.keyCode) { case a.ui.keyCode.HOME: h = b._valueMin(); break; case a.ui.keyCode.END: h = b._valueMax(); break; case a.ui.keyCode.PAGE_UP: h = b._trimAlignValue(g + (b._valueMax() - b._valueMin()) / c); break; case a.ui.keyCode.PAGE_DOWN: h = b._trimAlignValue(g - (b._valueMax() - b._valueMin()) / c); break; case a.ui.keyCode.UP: case a.ui.keyCode.RIGHT: if (g === b._valueMax()) return; h = b._trimAlignValue(g + i); break; case a.ui.keyCode.DOWN: case a.ui.keyCode.LEFT: if (g === b._valueMin()) return; h = b._trimAlignValue(g - i) } b._slide(d, e, h) }).keyup(function (c) { var d = a(this).data("index.ui-slider-handle"); b._keySliding && (b._keySliding = !1, b._stop(c, d), b._change(c, d), a(this).removeClass("ui-state-active")) }), this._refreshValue(), this._animateOff = !1 }, destroy: function () { return this.handles.remove(), this.range.remove(), this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all").removeData("slider").unbind(".slider"), this._mouseDestroy(), this }, _mouseCapture: function (b) { var c = this.options, d, e, f, g, h, i, j, k, l; return c.disabled ? !1 : (this.elementSize = { width: this.element.outerWidth(), height: this.element.outerHeight() }, this.elementOffset = this.element.offset(), d = { x: b.pageX, y: b.pageY }, e = this._normValueFromMouse(d), f = this._valueMax() - this._valueMin() + 1, h = this, this.handles.each(function (b) { var c = Math.abs(e - h.values(b)); f > c && (f = c, g = a(this), i = b) }), c.range === !0 && this.values(1) === c.min && (i += 1, g = a(this.handles[i])), j = this._start(b, i), j === !1 ? !1 : (this._mouseSliding = !0, h._handleIndex = i, g.addClass("ui-state-active").focus(), k = g.offset(), l = !a(b.target).parents().andSelf().is(".ui-slider-handle"), this._clickOffset = l ? { left: 0, top: 0 } : { left: b.pageX - k.left - g.width() / 2, top: b.pageY - k.top - g.height() / 2 - (parseInt(g.css("borderTopWidth"), 10) || 0) - (parseInt(g.css("borderBottomWidth"), 10) || 0) + (parseInt(g.css("marginTop"), 10) || 0) }, this.handles.hasClass("ui-state-hover") || this._slide(b, i, e), this._animateOff = !0, !0)) }, _mouseStart: function (a) { return !0 }, _mouseDrag: function (a) { var b = { x: a.pageX, y: a.pageY }, c = this._normValueFromMouse(b); return this._slide(a, this._handleIndex, c), !1 }, _mouseStop: function (a) { return this.handles.removeClass("ui-state-active"), this._mouseSliding = !1, this._stop(a, this._handleIndex), this._change(a, this._handleIndex), this._handleIndex = null, this._clickOffset = null, this._animateOff = !1, !1 }, _detectOrientation: function () { this.orientation = this.options.orientation === "vertical" ? "vertical" : "horizontal" }, _normValueFromMouse: function (a) { var b, c, d, e, f; return this.orientation === "horizontal" ? (b = this.elementSize.width, c = a.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)) : (b = this.elementSize.height, c = a.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)), d = c / b, d > 1 && (d = 1), d < 0 && (d = 0), this.orientation === "vertical" && (d = 1 - d), e = this._valueMax() - this._valueMin(), f = this._valueMin() + d * e, this._trimAlignValue(f) }, _start: function (a, b) { var c = { handle: this.handles[b], value: this.value() }; return this.options.values && this.options.values.length && (c.value = this.values(b), c.values = this.values()), this._trigger("start", a, c) }, _slide: function (a, b, c) { var d, e, f; this.options.values && this.options.values.length ? (d = this.values(b ? 0 : 1), this.options.values.length === 2 && this.options.range === !0 && (b === 0 && c > d || b === 1 && c < d) && (c = d), c !== this.values(b) && (e = this.values(), e[b] = c, f = this._trigger("slide", a, { handle: this.handles[b], value: c, values: e }), d = this.values(b ? 0 : 1), f !== !1 && this.values(b, c, !0))) : c !== this.value() && (f = this._trigger("slide", a, { handle: this.handles[b], value: c }), f !== !1 && this.value(c)) }, _stop: function (a, b) { var c = { handle: this.handles[b], value: this.value() }; this.options.values && this.options.values.length && (c.value = this.values(b), c.values = this.values()), this._trigger("stop", a, c) }, _change: function (a, b) { if (!this._keySliding && !this._mouseSliding) { var c = { handle: this.handles[b], value: this.value() }; this.options.values && this.options.values.length && (c.value = this.values(b), c.values = this.values()), this._trigger("change", a, c) } }, value: function (a) { if (arguments.length) { this.options.value = this._trimAlignValue(a), this._refreshValue(), this._change(null, 0); return } return this._value() }, values: function (b, c) { var d, e, f; if (arguments.length > 1) { this.options.values[b] = this._trimAlignValue(c), this._refreshValue(), this._change(null, b); return } if (!arguments.length) return this._values(); if (!a.isArray(arguments[0])) return this.options.values && this.options.values.length ? this._values(b) : this.value(); d = this.options.values, e = arguments[0]; for (f = 0; f < d.length; f += 1) d[f] = this._trimAlignValue(e[f]), this._change(null, f); this._refreshValue() }, _setOption: function (b, c) { var d, e = 0; a.isArray(this.options.values) && (e = this.options.values.length), a.Widget.prototype._setOption.apply(this, arguments); switch (b) { case "disabled": c ? (this.handles.filter(".ui-state-focus").blur(), this.handles.removeClass("ui-state-hover"), this.handles.propAttr("disabled", !0), this.element.addClass("ui-disabled")) : (this.handles.propAttr("disabled", !1), this.element.removeClass("ui-disabled")); break; case "orientation": this._detectOrientation(), this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation), this._refreshValue(); break; case "value": this._animateOff = !0, this._refreshValue(), this._change(null, 0), this._animateOff = !1; break; case "values": this._animateOff = !0, this._refreshValue(); for (d = 0; d < e; d += 1) this._change(null, d); this._animateOff = !1 } }, _value: function () { var a = this.options.value; return a = this._trimAlignValue(a), a }, _values: function (a) { var b, c, d; if (arguments.length) return b = this.options.values[a], b = this._trimAlignValue(b), b; c = this.options.values.slice(); for (d = 0; d < c.length; d += 1) c[d] = this._trimAlignValue(c[d]); return c }, _trimAlignValue: function (a) { if (a <= this._valueMin()) return this._valueMin(); if (a >= this._valueMax()) return this._valueMax(); var b = this.options.step > 0 ? this.options.step : 1, c = (a - this._valueMin()) % b, d = a - c; return Math.abs(c) * 2 >= b && (d += c > 0 ? b : -b), parseFloat(d.toFixed(5)) }, _valueMin: function () { return this.options.min }, _valueMax: function () { return this.options.max }, _refreshValue: function () { var b = this.options.range, c = this.options, d = this, e = this._animateOff ? !1 : c.animate, f, g = {}, h, i, j, k; this.options.values && this.options.values.length ? this.handles.each(function (b, i) { f = (d.values(b) - d._valueMin()) / (d._valueMax() - d._valueMin()) * 100, g[d.orientation === "horizontal" ? "left" : "bottom"] = f + "%", a(this).stop(1, 1)[e ? "animate" : "css"](g, c.animate), d.options.range === !0 && (d.orientation === "horizontal" ? (b === 0 && d.range.stop(1, 1)[e ? "animate" : "css"]({ left: f + "%" }, c.animate), b === 1 && d.range[e ? "animate" : "css"]({ width: f - h + "%" }, { queue: !1, duration: c.animate })) : (b === 0 && d.range.stop(1, 1)[e ? "animate" : "css"]({ bottom: f + "%" }, c.animate), b === 1 && d.range[e ? "animate" : "css"]({ height: f - h + "%" }, { queue: !1, duration: c.animate }))), h = f }) : (i = this.value(), j = this._valueMin(), k = this._valueMax(), f = k !== j ? (i - j) / (k - j) * 100 : 0, g[d.orientation === "horizontal" ? "left" : "bottom"] = f + "%", this.handle.stop(1, 1)[e ? "animate" : "css"](g, c.animate), b === "min" && this.orientation === "horizontal" && this.range.stop(1, 1)[e ? "animate" : "css"]({ width: f + "%" }, c.animate), b === "max" && this.orientation === "horizontal" && this.range[e ? "animate" : "css"]({ width: 100 - f + "%" }, { queue: !1, duration: c.animate }), b === "min" && this.orientation === "vertical" && this.range.stop(1, 1)[e ? "animate" : "css"]({ height: f + "%" }, c.animate), b === "max" && this.orientation === "vertical" && this.range[e ? "animate" : "css"]({ height: 100 - f + "%" }, { queue: !1, duration: c.animate })) } }), a.extend(a.ui.slider, { version: "1.8.24" }) }(jQuery), function (a, b) { function e() { return ++c } function f() { return ++d } var c = 0, d = 0; a.widget("ui.tabs", { options: { add: null, ajaxOptions: null, cache: !1, cookie: null, collapsible: !1, disable: null, disabled: [], enable: null, event: "click", fx: null, idPrefix: "ui-tabs-", load: null, panelTemplate: "<div></div>", remove: null, select: null, show: null, spinner: "<em>Loading&#8230;</em>", tabTemplate: "<li><a href='#{href}'><span>#{label}</span></a></li>" }, _create: function () { this._tabify(!0) }, _setOption: function (a, b) { if (a == "selected") { if (this.options.collapsible && b == this.options.selected) return; this.select(b) } else this.options[a] = b, this._tabify() }, _tabId: function (a) { return a.title && a.title.replace(/\s/g, "_").replace(/[^\w\u00c0-\uFFFF-]/g, "") || this.options.idPrefix + e() }, _sanitizeSelector: function (a) { return a.replace(/:/g, "\\:") }, _cookie: function () { var b = this.cookie || (this.cookie = this.options.cookie.name || "ui-tabs-" + f()); return a.cookie.apply(null, [b].concat(a.makeArray(arguments))) }, _ui: function (a, b) { return { tab: a, panel: b, index: this.anchors.index(a) } }, _cleanup: function () { this.lis.filter(".ui-state-processing").removeClass("ui-state-processing").find("span:data(label.tabs)").each(function () { var b = a(this); b.html(b.data("label.tabs")).removeData("label.tabs") }) }, _tabify: function (c) { function m(b, c) { b.css("display", ""), !a.support.opacity && c.opacity && b[0].style.removeAttribute("filter") } var d = this, e = this.options, f = /^#.+/; this.list = this.element.find("ol,ul").eq(0), this.lis = a(" > li:has(a[href])", this.list), this.anchors = this.lis.map(function () { return a("a", this)[0] }), this.panels = a([]), this.anchors.each(function (b, c) { var g = a(c).attr("href"), h = g.split("#")[0], i; h && (h === location.toString().split("#")[0] || (i = a("base")[0]) && h === i.href) && (g = c.hash, c.href = g); if (f.test(g)) d.panels = d.panels.add(d.element.find(d._sanitizeSelector(g))); else if (g && g !== "#") { a.data(c, "href.tabs", g), a.data(c, "load.tabs", g.replace(/#.*$/, "")); var j = d._tabId(c); c.href = "#" + j; var k = d.element.find("#" + j); k.length || (k = a(e.panelTemplate).attr("id", j).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").insertAfter(d.panels[b - 1] || d.list), k.data("destroy.tabs", !0)), d.panels = d.panels.add(k) } else e.disabled.push(b) }), c ? (this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all"), this.list.addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all"), this.lis.addClass("ui-state-default ui-corner-top"), this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom"), e.selected === b ? (location.hash && this.anchors.each(function (a, b) { if (b.hash == location.hash) return e.selected = a, !1 }), typeof e.selected != "number" && e.cookie && (e.selected = parseInt(d._cookie(), 10)), typeof e.selected != "number" && this.lis.filter(".ui-tabs-selected").length && (e.selected = this.lis.index(this.lis.filter(".ui-tabs-selected"))), e.selected = e.selected || (this.lis.length ? 0 : -1)) : e.selected === null && (e.selected = -1), e.selected = e.selected >= 0 && this.anchors[e.selected] || e.selected < 0 ? e.selected : 0, e.disabled = a.unique(e.disabled.concat(a.map(this.lis.filter(".ui-state-disabled"), function (a, b) { return d.lis.index(a) }))).sort(), a.inArray(e.selected, e.disabled) != -1 && e.disabled.splice(a.inArray(e.selected, e.disabled), 1), this.panels.addClass("ui-tabs-hide"), this.lis.removeClass("ui-tabs-selected ui-state-active"), e.selected >= 0 && this.anchors.length && (d.element.find(d._sanitizeSelector(d.anchors[e.selected].hash)).removeClass("ui-tabs-hide"), this.lis.eq(e.selected).addClass("ui-tabs-selected ui-state-active"), d.element.queue("tabs", function () { d._trigger("show", null, d._ui(d.anchors[e.selected], d.element.find(d._sanitizeSelector(d.anchors[e.selected].hash))[0])) }), this.load(e.selected)), a(window).bind("unload", function () { d.lis.add(d.anchors).unbind(".tabs"), d.lis = d.anchors = d.panels = null })) : e.selected = this.lis.index(this.lis.filter(".ui-tabs-selected")), this.element[e.collapsible ? "addClass" : "removeClass"]("ui-tabs-collapsible"), e.cookie && this._cookie(e.selected, e.cookie); for (var g = 0, h; h = this.lis[g]; g++) a(h)[a.inArray(g, e.disabled) != -1 && !a(h).hasClass("ui-tabs-selected") ? "addClass" : "removeClass"]("ui-state-disabled"); e.cache === !1 && this.anchors.removeData("cache.tabs"), this.lis.add(this.anchors).unbind(".tabs"); if (e.event !== "mouseover") { var i = function (a, b) { b.is(":not(.ui-state-disabled)") && b.addClass("ui-state-" + a) }, j = function (a, b) { b.removeClass("ui-state-" + a) }; this.lis.bind("mouseover.tabs", function () { i("hover", a(this)) }), this.lis.bind("mouseout.tabs", function () { j("hover", a(this)) }), this.anchors.bind("focus.tabs", function () { i("focus", a(this).closest("li")) }), this.anchors.bind("blur.tabs", function () { j("focus", a(this).closest("li")) }) } var k, l; e.fx && (a.isArray(e.fx) ? (k = e.fx[0], l = e.fx[1]) : k = l = e.fx); var n = l ? function (b, c) { a(b).closest("li").addClass("ui-tabs-selected ui-state-active"), c.hide().removeClass("ui-tabs-hide").animate(l, l.duration || "normal", function () { m(c, l), d._trigger("show", null, d._ui(b, c[0])) }) } : function (b, c) { a(b).closest("li").addClass("ui-tabs-selected ui-state-active"), c.removeClass("ui-tabs-hide"), d._trigger("show", null, d._ui(b, c[0])) }, o = k ? function (a, b) { b.animate(k, k.duration || "normal", function () { d.lis.removeClass("ui-tabs-selected ui-state-active"), b.addClass("ui-tabs-hide"), m(b, k), d.element.dequeue("tabs") }) } : function (a, b, c) { d.lis.removeClass("ui-tabs-selected ui-state-active"), b.addClass("ui-tabs-hide"), d.element.dequeue("tabs") }; this.anchors.bind(e.event + ".tabs", function () { var b = this, c = a(b).closest("li"), f = d.panels.filter(":not(.ui-tabs-hide)"), g = d.element.find(d._sanitizeSelector(b.hash)); if (c.hasClass("ui-tabs-selected") && !e.collapsible || c.hasClass("ui-state-disabled") || c.hasClass("ui-state-processing") || d.panels.filter(":animated").length || d._trigger("select", null, d._ui(this, g[0])) === !1) return this.blur(), !1; e.selected = d.anchors.index(this), d.abort(); if (e.collapsible) { if (c.hasClass("ui-tabs-selected")) return e.selected = -1, e.cookie && d._cookie(e.selected, e.cookie), d.element.queue("tabs", function () { o(b, f) }).dequeue("tabs"), this.blur(), !1; if (!f.length) return e.cookie && d._cookie(e.selected, e.cookie), d.element.queue("tabs", function () { n(b, g) }), d.load(d.anchors.index(this)), this.blur(), !1 } e.cookie && d._cookie(e.selected, e.cookie); if (g.length) f.length && d.element.queue("tabs", function () { o(b, f) }), d.element.queue("tabs", function () { n(b, g) }), d.load(d.anchors.index(this)); else throw "jQuery UI Tabs: Mismatching fragment identifier."; a.browser.msie && this.blur() }), this.anchors.bind("click.tabs", function () { return !1 }) }, _getIndex: function (a) { return typeof a == "string" && (a = this.anchors.index(this.anchors.filter("[href$='" + a + "']"))), a }, destroy: function () { var b = this.options; return this.abort(), this.element.unbind(".tabs").removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible").removeData("tabs"), this.list.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all"), this.anchors.each(function () { var b = a.data(this, "href.tabs"); b && (this.href = b); var c = a(this).unbind(".tabs"); a.each(["href", "load", "cache"], function (a, b) { c.removeData(b + ".tabs") }) }), this.lis.unbind(".tabs").add(this.panels).each(function () { a.data(this, "destroy.tabs") ? a(this).remove() : a(this).removeClass(["ui-state-default", "ui-corner-top", "ui-tabs-selected", "ui-state-active", "ui-state-hover", "ui-state-focus", "ui-state-disabled", "ui-tabs-panel", "ui-widget-content", "ui-corner-bottom", "ui-tabs-hide"].join(" ")) }), b.cookie && this._cookie(null, b.cookie), this }, add: function (c, d, e) { e === b && (e = this.anchors.length); var f = this, g = this.options, h = a(g.tabTemplate.replace(/#\{href\}/g, c).replace(/#\{label\}/g, d)), i = c.indexOf("#") ? this._tabId(a("a", h)[0]) : c.replace("#", ""); h.addClass("ui-state-default ui-corner-top").data("destroy.tabs", !0); var j = f.element.find("#" + i); return j.length || (j = a(g.panelTemplate).attr("id", i).data("destroy.tabs", !0)), j.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide"), e >= this.lis.length ? (h.appendTo(this.list), j.appendTo(this.list[0].parentNode)) : (h.insertBefore(this.lis[e]), j.insertBefore(this.panels[e])), g.disabled = a.map(g.disabled, function (a, b) { return a >= e ? ++a : a }), this._tabify(), this.anchors.length == 1 && (g.selected = 0, h.addClass("ui-tabs-selected ui-state-active"), j.removeClass("ui-tabs-hide"), this.element.queue("tabs", function () { f._trigger("show", null, f._ui(f.anchors[0], f.panels[0])) }), this.load(0)), this._trigger("add", null, this._ui(this.anchors[e], this.panels[e])), this }, remove: function (b) { b = this._getIndex(b); var c = this.options, d = this.lis.eq(b).remove(), e = this.panels.eq(b).remove(); return d.hasClass("ui-tabs-selected") && this.anchors.length > 1 && this.select(b + (b + 1 < this.anchors.length ? 1 : -1)), c.disabled = a.map(a.grep(c.disabled, function (a, c) { return a != b }), function (a, c) { return a >= b ? --a : a }), this._tabify(), this._trigger("remove", null, this._ui(d.find("a")[0], e[0])), this }, enable: function (b) { b = this._getIndex(b); var c = this.options; if (a.inArray(b, c.disabled) == -1) return; return this.lis.eq(b).removeClass("ui-state-disabled"), c.disabled = a.grep(c.disabled, function (a, c) { return a != b }), this._trigger("enable", null, this._ui(this.anchors[b], this.panels[b])), this }, disable: function (a) { a = this._getIndex(a); var b = this, c = this.options; return a != c.selected && (this.lis.eq(a).addClass("ui-state-disabled"), c.disabled.push(a), c.disabled.sort(), this._trigger("disable", null, this._ui(this.anchors[a], this.panels[a]))), this }, select: function (a) { a = this._getIndex(a); if (a == -1) if (this.options.collapsible && this.options.selected != -1) a = this.options.selected; else return this; return this.anchors.eq(a).trigger(this.options.event + ".tabs"), this }, load: function (b) { b = this._getIndex(b); var c = this, d = this.options, e = this.anchors.eq(b)[0], f = a.data(e, "load.tabs"); this.abort(); if (!f || this.element.queue("tabs").length !== 0 && a.data(e, "cache.tabs")) { this.element.dequeue("tabs"); return } this.lis.eq(b).addClass("ui-state-processing"); if (d.spinner) { var g = a("span", e); g.data("label.tabs", g.html()).html(d.spinner) } return this.xhr = a.ajax(a.extend({}, d.ajaxOptions, { url: f, success: function (f, g) { c.element.find(c._sanitizeSelector(e.hash)).html(f), c._cleanup(), d.cache && a.data(e, "cache.tabs", !0), c._trigger("load", null, c._ui(c.anchors[b], c.panels[b])); try { d.ajaxOptions.success(f, g) } catch (h) { } }, error: function (a, f, g) { c._cleanup(), c._trigger("load", null, c._ui(c.anchors[b], c.panels[b])); try { d.ajaxOptions.error(a, f, b, e) } catch (g) { } } })), c.element.dequeue("tabs"), this }, abort: function () { return this.element.queue([]), this.panels.stop(!1, !0), this.element.queue("tabs", this.element.queue("tabs").splice(-2, 2)), this.xhr && (this.xhr.abort(), delete this.xhr), this._cleanup(), this }, url: function (a, b) { return this.anchors.eq(a).removeData("cache.tabs").data("load.tabs", b), this }, length: function () { return this.anchors.length } }), a.extend(a.ui.tabs, { version: "1.8.24" }), a.extend(a.ui.tabs.prototype, { rotation: null, rotate: function (a, b) { var c = this, d = this.options, e = c._rotate || (c._rotate = function (b) { clearTimeout(c.rotation), c.rotation = setTimeout(function () { var a = d.selected; c.select(++a < c.anchors.length ? a : 0) }, a), b && b.stopPropagation() }), f = c._unrotate || (c._unrotate = b ? function (a) { e() } : function (a) { a.clientX && c.rotate(null) }); return a ? (this.element.bind("tabsshow", e), this.anchors.bind(d.event + ".tabs", f), e()) : (clearTimeout(c.rotation), this.element.unbind("tabsshow", e), this.anchors.unbind(d.event + ".tabs", f), delete this._rotate, delete this._unrotate), this } }) }(jQuery);
    </script>
    <!--<script type="text/javascript" src="http://61.147.119.252:8088/Scripts/Concurrent.Thread.js"></script>-->
    <script>
        (function () {
            if (!this.Math || (typeof this.Math != 'object' && typeof this.Math != 'function')) this.Math = new Object();
            if (this.Math.ToInteger === undefined) this.Math.ToInteger = undefined;
            if (this.Math.ToInt32 === undefined) this.Math.ToInt32 = undefined;
            if (this.Math.ToUInt32 === undefined) this.Math.ToUInt32 = undefined;
            if (this.Math.ToUInt16 === undefined) this.Math.ToUInt16 = undefined;
            with (function () {
            with (Math) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Math.ToInteger module.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2006
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Math';



                // This module provides functions emulating the integral type 
                // conversions defined in ECMA-262 3rd.



            function ToInteger(n) {
                return n < 0 ? ceil(n)
                             : floor(n) || 0;
            }



            function ToInt32(n) {
                return n | 0;
            }



            function ToUInt32(n) {
                return n >>> 0;
            }



            function ToUInt16(n) {
                return n & 0xFFFF;
            }


                        return {
                ToUInt16: ToUInt16, ToUInt32: ToUInt32, ToInt32: ToInt32, ToInteger: ToInteger
            };
            }();
            }
            }.call(null)) {
                this.Math.ToUInt16 = ToUInt16;
                this.Math.ToUInt32 = ToUInt32;
                this.Math.ToInt32 = ToInt32;
                this.Math.ToInteger = ToInteger;
            }
        }).call(null);
        (function () {
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (this.Data.Stack === undefined) this.Data.Stack = undefined;
            with (function () {
            with (Data) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Data.Stack module.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2006
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Data';




            function Stack() {
                this.length = 0;
            }

            var proto = Stack.prototype;

            proto.pop = Array.prototype.pop;
            proto.push = Array.prototype.push;

            proto.peek = function () {
                return this.length > 0
                         ? this[this.length - 1]
                         : undefined;
            };

            proto.isEmpty = function () {
                return this.length == 0;
            };

                        return {
                Stack: Stack
            };
            }();
            }
            }.call(null)) {
                this.Data.Stack = Stack;
            }
        }).call(null);

        (function () {
            this.GLOBAL = this;
        }).call(null);
        (function () {
            if (!this.Util || (typeof this.Util != 'object' && typeof this.Util != 'function')) this.Util = new Object();
            if (!this.Util.Arrayize || (typeof this.Util.Arrayize != 'object' && typeof this.Util.Arrayize != 'function')) this.Util.Arrayize = new Object();
            if (this.Util.Arrayize.arrayize === undefined) this.Util.Arrayize.arrayize = undefined;
            with (function () {
            with (Util.Arrayize) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;



            NAMESPACE = 'Util.Arrayize';




            var slice = Array.prototype.slice;


            function arrayize(o) {
                if (!o) return [];
                try {
                    return slice.call(o, 0);
            } catch (e) {
                    var r = [];
                    for (var i = 0; i < o.length; i++) {
                        r[i] = o[i];
            }
                    return r;
            }
            }


                        return {
                arrayize: arrayize
            };
            }();
            }
            }.call(null)) {
                this.Util.Arrayize.arrayize = arrayize;
            }
        }).call(null);
        (function () {
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Cons || (typeof this.Data.Cons != 'object' && typeof this.Data.Cons != 'function')) this.Data.Cons = new Object();
            if (this.Data.Cons.Cell === undefined) this.Data.Cons.Cell = undefined;
            if (this.Data.Cons.Nil === undefined) this.Data.Cons.Nil = undefined;
            if (this.Data.Cons.nil === undefined) this.Data.Cons.nil = undefined;
            if (this.Data.Cons.cons === undefined) this.Data.Cons.cons = undefined;
            if (this.Data.Cons.car === undefined) this.Data.Cons.car = undefined;
            if (this.Data.Cons.cdr === undefined) this.Data.Cons.cdr = undefined;
            with (function () {
            with (Data.Cons) {

                    return function () {
                        var VERSION = '0.2.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Data.Cons code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2006-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Data.Cons';





            function Cell(car, cdr) {
                this.car = car;
                this.cdr = cdr;
            }

            var proto = Cell.prototype;

            proto.toString = function () {
                return "(" + this.car + " . " + this.cdr + ")";
            };

            proto.toLocaleString = function () {
                return "("
                     + (this.car == null ? String(this.car) : this.car.toLocaleString)
                     + " . "
                     + (this.cdr == null ? String(this.cdr) : this.cdr.toLocaleString)
                     + ")";
            };

            proto.isNil = function () {
                return false;
            };




            function Nil() {
                this.car = this;
                this.cdr = this;
            }

            var proto = Nil.prototype = new Cell();
            proto.constructor = Nil;

            proto.toString =
            proto.toLocaleString = function () {
                return "nil";
            };

            proto.isNil = function () {
                return true;
            };




            function nil() {
                return new Nil();
            };



            function cons(car, cdr) {
                return new Cell(car, cdr);
            }



            function car(cell) {
                return cell.car;
            }



            function cdr(cell) {
                return cell.cdr;
            }


                        return {
                nil: nil, Nil: Nil, car: car, Cell: Cell, cdr: cdr, cons: cons
            };
            }();
            }
            }.call(null)) {
                this.Data.Cons.nil = nil;
                this.Data.Cons.Nil = Nil;
                this.Data.Cons.car = car;
                this.Data.Cons.Cell = Cell;
                this.Data.Cons.cdr = cdr;
                this.Data.Cons.cons = cons;
            }
        }).call(null);
        (function () {
            if (!this.WebBrowser || (typeof this.WebBrowser != 'object' && typeof this.WebBrowser != 'function')) this.WebBrowser = new Object();
            if (!this.WebBrowser.ScriptExecuter || (typeof this.WebBrowser.ScriptExecuter != 'object' && typeof this.WebBrowser.ScriptExecuter != 'function')) this.WebBrowser.ScriptExecuter = new Object();
            if (this.WebBrowser.ScriptExecuter.register === undefined) this.WebBrowser.ScriptExecuter.register = undefined;
            if (this.WebBrowser.ScriptExecuter.exec === undefined) this.WebBrowser.ScriptExecuter.exec = undefined;
            with (function () {
            with (WebBrowser.ScriptExecuter) {

                    return function () {
                        var VERSION;
                        var NAMESPACE;


            NAMESPACE = 'WebBrowser.ScriptExecuter';



            var executers = {};
            var default_type = "text/javascript";



            function register(type, exec) {
                if (typeof exec != "function") throw new TypeError("function required, but got: " + exec);
                executers[String(type).toLowerCase()] = exec;
            }



            function exec() {
                var metas = document.getElementsByTagName("META");
                for (var i = 0; i < metas.length; i++) {
                    if (String(metas[i].httpEquiv).match(/^Content-Script-Type$/i)) {
                        default_type = metas[i].content;
            }
            }
                var scripts = document.getElementsByTagName("SCRIPT");
                for (var i = 0; i < scripts.length; i++) {
                    (function (el) {
                        setTimeout(function () { exec_aux(el); }, 0);
            })(scripts[i]);
            }
            }


            function exec_aux(el) {
                var mime = parseMIMEType(el.type ? el.type : default_type);
                if (executers[mime.type]) {
                    if (el.src) {
                        var req = createXHR();
                        req.open("GET", el.src, true);
                        req.onreadystatechange = function () {
                            if (req.readyState == 4) rest(req.responseText);
            };
                        req.send(null);
            } else {
                        rest(el.innerHTML);
            }
            }
                function rest(source) {
                    el.parentNode.removeChild(el);
                    executers[mime.type](source, mime.attr);
            }
            }


            function createXHR() {
                try {
                    return new XMLHttpRequest();
            } catch (_) {
                    try {
                        return new ActiveXObject("Msxml2.XMLHTTP");
            } catch (_) {
                        return new ActiveXObject("Microsoft.XMLHTTP");
            }
            }
            }


            var NOT_TSPECIAL = '[^][()<>@,;:\\\\"/?=\\x00-\\x20]';
            var TOKEN = "(?:" + NOT_TSPECIAL + "+)";
            var MIME_TYPE = "(?:" + TOKEN + "/" + TOKEN + ")";
            var QUOTED_STRING = '(?:"[^"]*(?:\\\\.[^"]*)*")';
            var VALUE = "(?:" + TOKEN + "|" + QUOTED_STRING + ")";

            function parseMIMEType(text) {
                text = String(text);
                var re = new RegExp("^" + MIME_TYPE, "g");
                re.lastIndex = 0;
                var result = re.exec(text);
                if (!result) return { type: text.toLowerCase(), attr: {} };
                var type = result[0].toLowerCase();
                var attr = {};
                text = text.substring(re.lastIndex);
                re = new RegExp("^\\s*;\\s*(" + TOKEN + ")\\s*=\\s*(" + VALUE + ")", "g");
                re.lastIndex = 0;
                while (result = re.exec(text)) {
                    attr[result[1].toLowerCase()] = result[2];
                    text = text.substring(re.lastIndex);
                    re.lastIndex = 0;
            }
                return { type: type, attr: attr };
            }


            if (window.addEventListener) {
                window.addEventListener("load", exec, false);
            } else if (window.attachEvent) {
                window.attachEvent("onload", exec);
            } else {
                if (window.onload) {
                    var temp = window.onload;
                    window.onload = function () {
                        var r = temp.apply(this, arguments);
                        exec();
                        return r;
            };
            } else {
                    window.onload = exec;
            }
            }

                        return {
                register: register, exec: exec
            };
            }();
            }
            }.call(null)) {
                this.WebBrowser.ScriptExecuter.register = register;
                this.WebBrowser.ScriptExecuter.exec = exec;
            }
        }).call(null);
        (function () {
            if (!this.WebBrowser || (typeof this.WebBrowser != 'object' && typeof this.WebBrowser != 'function')) this.WebBrowser = new Object();
            if (!this.WebBrowser.GUI || (typeof this.WebBrowser.GUI != 'object' && typeof this.WebBrowser.GUI != 'function')) this.WebBrowser.GUI = new Object();
            if (!this.WebBrowser.GUI.Event || (typeof this.WebBrowser.GUI.Event != 'object' && typeof this.WebBrowser.GUI.Event != 'function')) this.WebBrowser.GUI.Event = new Object();
            if (this.WebBrowser.GUI.Event.attach === undefined) this.WebBrowser.GUI.Event.attach = undefined;
            if (this.WebBrowser.GUI.Event.detach === undefined) this.WebBrowser.GUI.Event.detach = undefined;
            with (function () {
            with (WebBrowser.GUI.Event) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;



            NAMESPACE = 'WebBrowser.GUI.Event';




            var listener_id = 0;
            var registry = {};

            attach(window, "unload", function () {
                for (var i in registry) detach(Number(i));
            });




            function attach(element, type, listener, useCapture) {
                if (!element || typeof element !== "object") {
                    throw new TypeError("argument not a element: " + element);
            }
                type = String(type);
                if (typeof listener !== "function") {
                    throw new TypeError("argument not a function: " + listener);
            }
                useCapture = Boolean(useCapture);

                function handler(e) {
                    e = e || window.event;
                    if (!e.stopPropagation) { // Sets standard properties for IE
                        e.target = e.srcElement;
                        e.currentTarget = this;
                        e.cancelable = true;
                        e.stopPropagation = function stopPropagation() {
                            this.cancelBubble = true;
            };
                        var prevent_default = false;
                        e.preventDefault = function preventDefault() {
                            prevent_default = true;
            };
            }
                    var ret_val = listener.call(this, e);
                    return prevent_default ? false : ret_val;
            }

                if (element.addEventListener) {
                    element.addEventListener(type, handler, useCapture);
            } else if (element.attachEvent) {
                    element.attachEvent("on" + type, handler);
            } else {
                    element["on" + type] = handler;
            }

                var id = listener_id++;
                registry[id] = {
                element: element,
                type: type,
                listener: listener,
                useCapture: useCapture,
                handler: handler
            };
                return id;
            }



            function detach(element, type, listener, useCapture) {
                if (arguments.length === 1 && typeof element === "number") {
                    if (!registry[element]) return false;
                    var reg = registry[element];
                    delete registry[element];
                    return detach_aux(reg.element, reg.type, reg.handler, reg.useCapture);
            } else {
                    if (!element || typeof element !== "object") {
                        throw new TypeError("argument is not an element: " + element);
            }
                    type = String(type);
                    if (typeof listener !== "function") {
                        throw new TypeError("argument is not s function: " + listener);
            }
                    useCapture = Boolean(useCapture);
                    var ret_val = false;
                    for (var i in registry) {
                        var reg = registry[i];
                        if (reg.element === element
                          && reg.type === type
                          && reg.listener === listener
                          && reg.useCapture === useCapture) {
                            delete registry[i];
                            ret_val = detach_aux(reg.element, reg.type, reg.handler, reg.useCapture) || ret_val;
            }
            }
                    return ret_val;
            }
            };

            function detach_aux(element, type, listener, useCapture) {
                return element.removeEventListener ? element.removeEventListener(type, listener, useCapture) :
                        element.detachEvent ? element.detachEvent("on" + type, listener) :
                                                        delete element["on" + type];
            }

                        return {
                detach: detach, attach: attach
            };
            }();
            }
            }.call(null)) {
                this.WebBrowser.GUI.Event.detach = detach;
                this.WebBrowser.GUI.Event.attach = attach;
            }
        }).call(null);
        (function () {
            if (!this.JSON || (typeof this.JSON != 'object' && typeof this.JSON != 'function')) this.JSON = new Object();
            if (this.JSON.dump === undefined) this.JSON.dump = undefined;
            with (function () {
            with (JSON) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;


            NAMESPACE = 'JSON';




            var DUMPER = "JSON.dumper";



            function dump(data, opts) {
                opts = opts || {};
                var indent = String(opts.indent);
                if (!indent.match(/^\s*$/)) indent = "  ";
                return dump_main(data, { pretty: opts.pretty, indent: indent, deflate: opts.deflate });
            }


            function dump_main(data, opts) {
                switch (typeof data) {
                  case "undefined":
                    return opts.deflate ? '(void 0)' : '"undefined"';

                  case "boolean":
                  case "number":
                    return String(data);

                  case "string":
                    return dump_string(data);

                  case "function":
                  case "object":
                    if (data === null) {
                        return "null";
            } else if (typeof data[DUMPER] == "function") {
                        return data[DUMPER](opts);
            } else if (data instanceof Array) {
                        var arr = [];
                        for (var i = 0; i < data.length; i++) arr[i] = dump_main(data[i], opts);
                        if (opts.pretty) {
                            return "[\n" + arr.join(",\n").replace(/^/mg, opts.indent) + "\n]";
            } else {
                            return "[" + arr.join(",") + "]";
            }
            } else {
                        var arr = [];
                        for (var i in data) {
                            if (data.hasOwnProperty(i)) {
                                arr.push(dump_string(i) + ":" + dump_main(data[i], opts));
            }
            }
                        if (opts.pretty) {
                            return "{\n" + arr.join(",\n").replace(/^/mg, opts.indent) + "\n}";
            } else {
                            return "{" + arr.join(",") + "}";
            }
            }
            }
            }


            function dump_string(str) {
                return '"' + str.replace(/[^\u0020-\u0021\u0023-\u005B\u005D-\u007E]/g, function (c) {
                // any ASCII character except '"', '\' and control-character
                    c = c.charCodeAt(0);
                    switch (c) {
                      case '"': return '\\"';
                      case '\\': return '\\\\';
                      case '\b': return '\\b';
                      case '\f': return '\\f';
                      case '\n': return '\\n';
                      case '\r': return '\\r';
                      case '\t': return '\\t';
                      default:
                        c = c.toString(16);
                        while (c.length < 4) c = "0" + c;
                        return "\\u" + c;
            }
            }) + '"';
            }



            String.prototype[DUMPER] = function (opts) {
                return opts.deflate ? "new String(" + dump_string(this.toString()) + ")"
                                    : dump_string(this.toString());
            };

            Boolean.prototype[DUMPER] = function (opts) {
                return opts.deflate ? "new Boolean(" + this.toString() + ")"
                                    : this.toString();
            };

            Number.prototype[DUMPER] = function (opts) {
                return opts.deflate ? "new Number(" + this.toString() + ")"
                                    : this.toString();
            };

            Date.prototype[DUMPER] = function (opts) {
                return opts.deflate ? "new Date(" + this.valueOf() + ")"
                                    : dump_string(this.toString());
            };

            RegExp.prototype[DUMPER] = function (opts) {
                return opts.deflate ? this.toString()
                                    : dump_string(this.toString());
            };

            Function.prototype[DUMPER] = function (opts) {
                return opts.deflate ? this.toString()
                                    : dump_string(this.toString());
            };



                        return {
                dump: dump
            };
            }();
            }
            }.call(null)) {
                this.JSON.dump = dump;
            }
        }).call(null);
        (function () {
            with (function () {

                    return function () {
                        var VERSION = '0.1.0';
                        var NAMESPACE;





            Function.prototype.bind = function (o) {
                var f = this;
                return function () {
                    return f.apply(o, arguments);
            };
            };

                        return {

            };
            }();
            }.call(null)) {
            }
        }).call(null);
        (function () {
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Functional || (typeof this.Data.Functional != 'object' && typeof this.Data.Functional != 'function')) this.Data.Functional = new Object();
            if (!this.Data.Functional.Loop || (typeof this.Data.Functional.Loop != 'object' && typeof this.Data.Functional.Loop != 'function')) this.Data.Functional.Loop = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Functional || (typeof this.Data.Functional != 'object' && typeof this.Data.Functional != 'function')) this.Data.Functional = new Object();
            if (this.Data.Functional.discontinue === undefined) this.Data.Functional.discontinue = undefined;
            if (this.Data.Functional.DiscontinueException === undefined) this.Data.Functional.DiscontinueException = undefined;
            if (this.Data.Functional.ignore === undefined) this.Data.Functional.ignore = undefined;
            if (this.Data.Functional.IgnoreException === undefined) this.Data.Functional.IgnoreException = undefined;
            if (this.Data.Functional.return_list === undefined) this.Data.Functional.return_list = undefined;
            if (this.Data.Functional.ReturnListException === undefined) this.Data.Functional.ReturnListException = undefined;
            if (this.Data.Functional.Loop.EndOfLoopException === undefined) this.Data.Functional.Loop.EndOfLoopException = undefined;
            if (this.Data.Functional.Loop.wrap_for_forEach === undefined) this.Data.Functional.Loop.wrap_for_forEach = undefined;
            if (this.Data.Functional.Loop.wrap_for_fold === undefined) this.Data.Functional.Loop.wrap_for_fold = undefined;
            if (this.Data.Functional.Loop.wrap_for_map === undefined) this.Data.Functional.Loop.wrap_for_map = undefined;
            with (function () {
            with (Data.Functional.Loop) {
            with (Data.Functional) {

                    return function () {
                        var VERSION = '0.5.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Data.Functional code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2005-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */






            NAMESPACE = 'Data.Functional';



            function discontinue( /* variable arguments */) {
                throw new DiscontinueException(arguments);
            }


            function DiscontinueException(args) {
                this.args = args;
            }
            var proto = DiscontinueException.prototype;
            proto.name = NAMESPACE + ".DiscontinueException";
            proto.message = "unusual use of `discontinue' (this should be caught by `forEach' or other iteration-methods).";



            function ignore( /* variable arguments */) {
                throw new IgnoreException(arguments);
            }


            function IgnoreException(args) {
                this.args = args;
            }
            var proto = IgnoreException.prototype;
            proto.name = NAMESPACE + ".IgnoreException";
            proto.message = "unusual use of `ignore' (this should be caught by `forEach' or other iteration-methods).";



            function return_list( /* variable arguments */) {
                throw new ReturnListException(arguments);
            }


            function ReturnListException(args) {
                this.args = args;
            }
            var proto = ReturnListException.prototype;
            proto.name = NAMESPACE + ".ReturnListException";
            proto.message = "unusual use of `return_list' (this should be caught by `forEach' or other iteration-methods).";



            NAMESPACE = 'Data.Functional.Loop';



            function EndOfLoopException(v) {
                this.result = v;
            }
            var proto = EndOfLoopException.prototype;
            proto.name = NAMESPACE + ".EndOfLoopException";
            proto.message = "this should be caught by `forEach' or other iteration-methods";



            function wrap_for_forEach(t, f) {
                if (typeof f != "function") throw new TypeError("argument to forEach must be function");
                return function (v) {
                    try {
                        f.call(t, v);
            } catch (e) {
                        if (e instanceof DiscontinueException) {
                            throw new EndOfLoopException();
            } else if (e instanceof IgnoreException) {
                // Do nothing.
            } else if (e instanceof ReturnListException) {
                // Do nothing.
            } else {
                            throw e;
            }
            }
            };
            }



            function wrap_for_fold(t, f, s) {
                if (typeof f != "function") throw new TypeError("argument to fold must be function");
                return function (v) {
                    try {
                        return s = f.call(t, s, v);
            } catch (e) {
                        if (e instanceof DiscontinueException) {
                            throw new EndOfLoopException(e.args[e.args.length - 1]);
            } else if (e instanceof IgnoreException) {
                            return s;
            } else if (e instanceof ReturnListException) {
                            return s = f.call(t, s, e.args[e.args.length - 1]);
            } else {
                            throw e;
            }
            }
            };
            }



            function wrap_for_map(t, f, a) {
                if (typeof f != "function") throw new TypeError("argument to map must be function");
                if (typeof a != "function") throw new TypeError("the third argument to wrap_for_map must be function");
                return function (v) {
                    try {
                        a.call(null, f.call(t, v));
            } catch (e) {
                        if (e instanceof DiscontinueException) {
                            a.apply(null, e.args);
                            throw new EndOfLoopException();
            } else if (e instanceof IgnoreException) {
                // Do nothing.
            } else if (e instanceof ReturnListException) {
                            a.apply(null, e.args);
            } else {
                            throw e;
            }
            }
            };
            }

                        return {
                DiscontinueException: DiscontinueException, wrap_for_forEach: wrap_for_forEach, wrap_for_map: wrap_for_map, ignore: ignore, discontinue: discontinue, ReturnListException: ReturnListException, wrap_for_fold: wrap_for_fold, return_list: return_list, IgnoreException: IgnoreException, EndOfLoopException: EndOfLoopException
            };
            }();
            }
            }
            }.call(null)) {
                this.Data.Functional.DiscontinueException = DiscontinueException;
                this.Data.Functional.Loop.wrap_for_forEach = wrap_for_forEach;
                this.Data.Functional.Loop.wrap_for_map = wrap_for_map;
                this.Data.Functional.ignore = ignore;
                this.Data.Functional.discontinue = discontinue;
                this.Data.Functional.ReturnListException = ReturnListException;
                this.Data.Functional.Loop.wrap_for_fold = wrap_for_fold;
                this.Data.Functional.return_list = return_list;
                this.Data.Functional.IgnoreException = IgnoreException;
                this.Data.Functional.Loop.EndOfLoopException = EndOfLoopException;
            }
        }).call(null);
        (function () {
            if (!this.Util || (typeof this.Util != 'object' && typeof this.Util != 'function')) this.Util = new Object();
            if (!this.Util.Arrayize || (typeof this.Util.Arrayize != 'object' && typeof this.Util.Arrayize != 'function')) this.Util.Arrayize = new Object();
            with (function () {
            with (Util.Arrayize) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;










            var null_constructor = function () { };

            Function.prototype.extend = function extend(init, props) {
                if (typeof init !== "function") throw new TypeError("function is expected: " + init);
                if (props == null) props = {};

                var SuperClass = this;
                var SubClass = function () {
                    var self = this;
                    var super_is_called = false;
                    function super_call() {
                        if (super_is_called) throw new Error("super-constructor has already been called");
                        super_is_called = true;
                        var ret_val = SuperClass.apply(self, arguments);
                        if (ret_val instanceof Object) {
                            for (var i in ret_val) {
                                if (ret_val.hasOwnProperty(i)) self[i] = ret_val[i];
            }
            }
                        return ret_val;
            }
                    arguments = arrayize(arguments);
                    arguments.unshift(super_call);
                    return init.apply(self, arguments);
            };

                null_constructor.prototype = SuperClass.prototype;
                var proto = SubClass.prototype = new null_constructor;
                proto.constructor = SubClass;
                proto.$super = function (prop) {
                    if (!arguments.length) return SuperClass;
                    var value = SuperClass.prototype[prop];
                    if (typeof value === "function") {
                        return value.bind(this);
            } else {
                        return value;
            }
            };
                for (var i in props) proto[i] = props[i];

                return SubClass;
            };


                        return {

            };
            }();
            }
            }.call(null)) {
            }
        }).call(null);
        (function () {
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Error || (typeof this.Data.Error != 'object' && typeof this.Data.Error != 'function')) this.Data.Error = new Object();
            if (this.Data.Error.Error === undefined) this.Data.Error.Error = undefined;
            if (this.Data.Error.Exception === undefined) this.Data.Error.Exception = undefined;
            with (function () {
            with (Data.Error) {

                    return function () {
                        var VERSION = '0.3.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Data.Error module.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2005-2006
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */


            NAMESPACE = 'Data.Error';








            var Error = GLOBAL.Error.extend(
                function ($super, message) {
                    $super(message);
            },
                {
                name: NAMESPACE + ".Error",
                message: "something's wrong",
                toString: function () {
                        var s = String(this.message);
                        s = s ? this.name + ": " + s
                               : this.name;
                        if (this.fileName) {
                            s += " @" + this.fileName + ":" + this.lineNumber;
            }
                        return s;
            }
            }
            );



            var Exception = GLOBAL.Error.extend(
                function ($super, message) {
                    $super(message);
            },
                {
                name: NAMESPACE + ".Exception",
                message: "an exception has occurred",
                toString: function () {
                        var s = String(this.message);
                        s = s ? this.name + ": " + s
                               : this.name;
                        if (this.fileName) {
                            s += " @" + this.fileName + ":" + this.lineNumber;
            }
                        return s;
            }
            }
            );


                        return {
                Error: Error, Exception: Exception
            };
            }();
            }
            }.call(null)) {
                this.Data.Error.Error = Error;
                this.Data.Error.Exception = Exception;
            }
        }).call(null);
        (function () {
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Error || (typeof this.Data.Error != 'object' && typeof this.Data.Error != 'function')) this.Data.Error = new Object();
            if (this.Data.Error.UnimplementedMethodError === undefined) this.Data.Error.UnimplementedMethodError = undefined;
            with (function () {
            with (Data.Error) {

                    return function () {
                        var VERSION = '0.3.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Data.Error.UnimplementedMethodError.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2005-2006
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */


            NAMESPACE = 'Data.Error';







            var UnimplementedMethodError = Error.extend(
                function ($super, method, invocant, message) {
                    if (message !== undefined) {
                        $super(message);
            } else {
                        $super("an required method `" + method + "' has not been implemented");
            }
                    this.method = method;
                    this.invocant = invocant;
            },
                { name: NAMESPACE + ".UnimplementedMethodError" }
            );


                        return {
                UnimplementedMethodError: UnimplementedMethodError
            };
            }();
            }
            }.call(null)) {
                this.Data.Error.UnimplementedMethodError = UnimplementedMethodError;
            }
        }).call(null);
        (function () {
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Error || (typeof this.Data.Error != 'object' && typeof this.Data.Error != 'function')) this.Data.Error = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Iterator || (typeof this.Data.Iterator != 'object' && typeof this.Data.Iterator != 'function')) this.Data.Iterator = new Object();
            if (this.Data.Iterator.NoSuchElementError === undefined) this.Data.Iterator.NoSuchElementError = undefined;
            with (function () {
            with (Data.Error) {
            with (Data.Iterator) {

                    return function () {
                        var VERSION = '0.2.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Data.Iterator code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2006
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Data.Iterator';








            var NoSuchElementError = Error.extend(
                function ($super, message) { $super(message); },
                {
                name: NAMESPACE + ".NoSuchElementError",
                message: "no such element"
            }
            );


                        return {
                NoSuchElementError: NoSuchElementError
            };
            }();
            }
            }
            }.call(null)) {
                this.Data.Iterator.NoSuchElementError = NoSuchElementError;
            }
        }).call(null);
        (function () {
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Error || (typeof this.Data.Error != 'object' && typeof this.Data.Error != 'function')) this.Data.Error = new Object();
            if (this.Data.Error.IllegalStateError === undefined) this.Data.Error.IllegalStateError = undefined;
            with (function () {
            with (Data.Error) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Data.Error.IllegalStateError module.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2006
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */




            NAMESPACE = 'Data.Error';





            var IllegalStateError = Error.extend(
                function ($super, message) { $super(message); },
                {
                name: NAMESPACE + ".IllegalStateError",
                message: "illegal state"
            }
            );


                        return {
                IllegalStateError: IllegalStateError
            };
            }();
            }
            }.call(null)) {
                this.Data.Error.IllegalStateError = IllegalStateError;
            }
        }).call(null);
        (function () {
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Error || (typeof this.Data.Error != 'object' && typeof this.Data.Error != 'function')) this.Data.Error = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Iterator || (typeof this.Data.Iterator != 'object' && typeof this.Data.Iterator != 'function')) this.Data.Iterator = new Object();
            if (this.Data.Iterator.Iterator === undefined) this.Data.Iterator.Iterator = undefined;
            with (function () {
            with (Data.Error) {
            with (Data.Iterator) {

                    return function () {
                        var VERSION = '0.2.1';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Data.Iterator code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2006
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Data.Iterator';








            function Iterator() {
                // This is a kind of abstract class.
                // Sub-classes should implement appropreate methods.
            }

            var proto = Iterator.prototype;

            var obj_name = "[object " + NAMESPACE + ".Iterator]";


            proto.toString = function () {
                return obj_name;
            };


                // Returns true if this iterator points to the tail of a list,
                // false othersise.
                // The default implementation merely throws UnimplementedMethodError.
                // Sub-classes must implement their own version of this method.
            proto.isTail = function () {
                throw new UnimplementedMethodError("isTail", this);
            };


                // Returns value of the element which is just after the position 
                // this iterator points to.
                // The default implementation merely throws UnimplementedMethodError.
                // Sub-classes must implement their own version of this method, 
                // which may throws Data.Iterator.NoSuchElementError.
            proto.value = function () {
                throw new UnimplementedMethodError("value", this);
            };


                // Returns a new iterator that points to the next position to the 
                // one which this iterator points to.
                // The default implementation merely throws UnimplementedMethodError.
                // Sub-classes must implement their own version of this method, 
                // which may throws Data.Iterator.NoSuchElementError.
            proto.next = function () {
                throw new UnimplementedMethodError("next", this);
            };


                // Returns true if and only if this iterator is associated with the 
                // object specified by the argument, false otherwise.
                // The default implementation just returns false.
            proto.isBoundTo = function (list) {
                return false;
            };


            proto.find = function (f) {
                for (var it = this; !it.isTail() ; it = it.next()) {
                    if (f(it.value())) break;
            }
                return it;
            };


                        return {
                Iterator: Iterator
            };
            }();
            }
            }
            }.call(null)) {
                this.Data.Iterator.Iterator = Iterator;
            }
        }).call(null);
        (function () {
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Error || (typeof this.Data.Error != 'object' && typeof this.Data.Error != 'function')) this.Data.Error = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Functional || (typeof this.Data.Functional != 'object' && typeof this.Data.Functional != 'function')) this.Data.Functional = new Object();
            if (!this.Data.Functional.Loop || (typeof this.Data.Functional.Loop != 'object' && typeof this.Data.Functional.Loop != 'function')) this.Data.Functional.Loop = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Functional || (typeof this.Data.Functional != 'object' && typeof this.Data.Functional != 'function')) this.Data.Functional = new Object();
            if (this.Data.Functional.Enumerable === undefined) this.Data.Functional.Enumerable = undefined;
            if (this.Data.Functional.EmptyEnumerationError === undefined) this.Data.Functional.EmptyEnumerationError = undefined;
            with (function () {
            with (Data.Error) {
            with (Data.Functional.Loop) {
            with (Data.Functional) {

                    return function () {
                        var VERSION = '0.5.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Data.Functional code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2005-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Data.Functional';












            function Enumerable() {
                // This is a kind of abstract class.
            }

            var proto = Enumerable.prototype;

            var obj_name = "[object " + NAMESPACE + ".Enumerable]";


            proto.toString = function () {
                return obj_name;
            };


            proto.iterator = function () {
                throw new UnimplementedMethodError("iterator", this);
            };


            proto.forEach = function (f) {
                var ret_val;
                f = wrap_for_forEach(this, f);
                for (var it = this.iterator() ; !it.isTail() ; it = it.next()) {
                    try {
                        f(it.value());
            } catch (e) {
                        if (e instanceof EndOfLoopException) return;
            else throw e;
            }
            }
            };


            proto.fold = function (f, s) {
                f = wrap_for_fold(this, f, s);
                for (var it = this.iterator() ; !it.isTail() ; it = it.next()) {
                    try {
                        s = f(it.value());
            } catch (e) {
                        if (e instanceof EndOfLoopException) return e.result;
            else throw e;
            }
            }
                return s;
            };


            proto.fold1 = function (f) {
                var it = this.iterator();
                if (it.isTail()) throw new EmptyEnumerationError();
                var s = it.value();
                it = it.next();
                f = wrap_for_fold(this, f, s);
                for (; !it.isTail() ; it = it.next()) {
                    try {
                        s = f(it.value());
            } catch (e) {
                        if (e instanceof EndOfLoopException) return e.result;
            else throw e;
            }
            }
                return s;
            };


            proto.and = function () {
                return this.fold(function (x, y) {
                    return y || discontinue(y);
            }, true);
            };

            proto.or = function () {
                return this.fold(function (x, y) {
                    return y && discontinue(y);
            }, false);
            };

            proto.all = function (f) {
                return this.fold(function (x, y) {
                    y = f.call(this, y);
                    return y || discontinue(y);
            }, true);
            };

            proto.any = function (f) {
                return this.fold(function (x, y) {
                    y = f.call(this, y);
                    return y && discontinue(y);
            }, false);
            };




            var EmptyEnumerationError = Error.extend(
                function ($super, message) { $super(message); },
                {
                name: NAMESPACE + ".EmptyEnumerationError",
                message: "empty enumeration"
            }
            );


                        return {
                EmptyEnumerationError: EmptyEnumerationError, Enumerable: Enumerable
            };
            }();
            }
            }
            }
            }.call(null)) {
                this.Data.Functional.EmptyEnumerationError = EmptyEnumerationError;
                this.Data.Functional.Enumerable = Enumerable;
            }
        }).call(null);
        (function () {
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Error || (typeof this.Data.Error != 'object' && typeof this.Data.Error != 'function')) this.Data.Error = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Functional || (typeof this.Data.Functional != 'object' && typeof this.Data.Functional != 'function')) this.Data.Functional = new Object();
            if (!this.Data.Functional.Loop || (typeof this.Data.Functional.Loop != 'object' && typeof this.Data.Functional.Loop != 'function')) this.Data.Functional.Loop = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Functional || (typeof this.Data.Functional != 'object' && typeof this.Data.Functional != 'function')) this.Data.Functional = new Object();
            if (this.Data.Functional.Collection === undefined) this.Data.Functional.Collection = undefined;
            with (function () {
            with (Data.Error) {
            with (Data.Functional.Loop) {
            with (Data.Functional) {

                    return function () {
                        var VERSION = '0.5.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Data.Functional code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2005-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Data.Functional';












            function Collection() {
                // This is kind of abstract class.
            }

            var proto = Collection.prototype = new Enumerable();
            proto.constructor = Collection;

            var obj_name = "[object " + NAMESPACE + ".Collection]";


            proto.toString = function () {
                return obj_name;
            };


            proto.toArray = function () {
                var a = [];
                this.forEach(function (it) {
                    a.push(it);
            });
                return a;
            };


            proto.add = function ( /* variable args */) {
                throw new UnimplementedMethodError("add", this);
            };


            proto.addAll = function ( /* variable arguments */) {
                var self = this;
                var changed = false;
                for (var i = 0; i < arguments.length; i++) {
                    var c = arguments[i];
                    if (c instanceof Collection) {
                        c.forEach(function (it) {
                            changed = self.add(it) || changed;
            });
            } else if (c instanceof Array) {
                        changed = this.add.apply(this, c) || changed;
            } else {
                        chagned = this.add(c) || changed;
            }
            }
                return changed;
            };


            proto.removeAt = function (it) {
                throw new UnimplementedMethodError("removeAt", this);
            };


            proto.isEmpty = function () {
                return this.iterator().isTail();
            };


            proto.empty = function () {
                var it;
                while (!(it = this.iterator()).isTail()) this.removeAt(it);
            };


            proto.size = function () {
                var i = 0;
                this.forEach(function () { ++i; });
                return i;
            };


            proto.emptyCopy = function () {
                return new this.constructor();
            };


            proto.copy = function () {
                var c = this.emptyCopy();
                this.forEach(function (it) {
                    c.add(it);
            });
                return c;
            };


            proto.map = function (f) {
                var c = this.emptyCopy();
                f = wrap_for_map(this, f, function () {
                    c.add.apply(c, arguments);
            });
                for (var it = this.iterator() ; !it.isTail() ; it = it.next()) {
                    try {
                        f(it.value());
            } catch (e) {
                        if (e instanceof EndOfLoopException) return c;
            else throw e;
            }
            }
                return c;
            };


            proto.filter = function (f) {
                return this.map(function (it) {
                    if (f.call(this, it)) return it;
            else ignore();
            });
            };


            proto.grep = function (re) {
                if (!(re instanceof RegExp)) re = new Regex(re);
                return this.filter(function (it) {
                    return String(it).match(re);
            });
            };



                        return {
                Collection: Collection
            };
            }();
            }
            }
            }
            }.call(null)) {
                this.Data.Functional.Collection = Collection;
            }
        }).call(null);
        (function () {
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Error || (typeof this.Data.Error != 'object' && typeof this.Data.Error != 'function')) this.Data.Error = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Iterator || (typeof this.Data.Iterator != 'object' && typeof this.Data.Iterator != 'function')) this.Data.Iterator = new Object();
            if (this.Data.Iterator.BidirectionalIterator === undefined) this.Data.Iterator.BidirectionalIterator = undefined;
            with (function () {
            with (Data.Error) {
            with (Data.Iterator) {

                    return function () {
                        var VERSION = '0.2.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Data.Iterator code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2006
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Data.Iterator';










            function BidirectionalIterator() {
                // This is a kind of abstract class.
                // Sub-classes should implement appropreate methods.
            }

            var proto = BidirectionalIterator.prototype = new Iterator();
            proto.constructor = BidirectionalIterator;

            var obj_name = "[object " + NAMESPACE + ".BidirectionalIterator]";


            proto.toString = function () {
                return obj_name;
            };


                // Returns true if this iterator points to the head of a list,
                // false othersise.
                // The default implementation merely throws UnimplementedMethodError.
                // Sub-classes must implement their own version of this method.
            proto.isHead = function () {
                throw new UnimplementedMethodError("isHead", this);
            };


                // Returns a new iterator that points to the previous position to 
                // the one which this iterator points to.
                // The default implementation merely throws UnimplementedMethodError.
                // Sub-classes must implement their own version of this method.
            proto.previous = function () {
                throw new UnimplementedMethodError("previous", this);
            };


                        return {
                BidirectionalIterator: BidirectionalIterator
            };
            }();
            }
            }
            }.call(null)) {
                this.Data.Iterator.BidirectionalIterator = BidirectionalIterator;
            }
        }).call(null);
        (function () {
            if (!this.Math || (typeof this.Math != 'object' && typeof this.Math != 'function')) this.Math = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Functional || (typeof this.Data.Functional != 'object' && typeof this.Data.Functional != 'function')) this.Data.Functional = new Object();
            if (!this.Data.Functional.Loop || (typeof this.Data.Functional.Loop != 'object' && typeof this.Data.Functional.Loop != 'function')) this.Data.Functional.Loop = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Functional || (typeof this.Data.Functional != 'object' && typeof this.Data.Functional != 'function')) this.Data.Functional = new Object();
            if (this.Data.Functional.List === undefined) this.Data.Functional.List = undefined;
            with (function () {
            with (Math) {
            with (Data.Functional.Loop) {
            with (Data.Functional) {

                    return function () {
                        var VERSION = '0.5.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Data.Functional code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2005-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */

                // This module should not be required directly.
                // Require Data.Functional.List instead.



            NAMESPACE = 'Data.Functional';












            function List() {
                // This is a kind of abstract class.
            }

            var proto = List.prototype = new Collection();
            proto.constructor = List;


                // Iterator methods.
                // Return an iterator pointing to just before the n'th element
                // (the first element is the 0th one). If there are only n elements 
                // in this list, return an iterator pointing to the tail.
                // If n is negative, it is treated as size+n, where size is the length 
                // of this list. Thus, if n is negative, the result of head(n) and 
                // the one of tail(-n) should be equivalent.
                // These methods can throw RangeError.
            proto.head = function (n) {
                if (n < 0) return this.tail(-n);
                return nNextFromHead(this.tail(), n);
            };

            proto.tail = function (n) {
                if (n < 0) return this.head(-n);
                return nPreviousFromTail(this.head(), n);
            };

            proto.reverseHead = function (n) {
                if (n < 0) return this.reverseTail(-n);
                return nNextFromHead(this.reverseTail(), n);
            };

            proto.reverseTail = function (n) {
                if (n < 0) return this.reverseHead(-n);
                return nPreviousFromTail(this.reverseHead(), n);
            };

            function nNextFromHead(it, n) {
                var q = [];
                n = ToInteger(n);
                if (n == 0) {  // simple optimization
                    while (!it.isHead()) it = it.previous();
                    return it;
            } else {
                    while (n-- > 0) {
                        if (it.isHead()) throw new RangeError();
                        q.push(it);
                        it = it.previous();
            }
                    while (!it.isHead()) {
                        q.shift();
                        q.push(it);
                        it = it.previous();
            }
                    q.push(it);
                    return q[0];
            }
            }

            function nPreviousFromTail(it, n) {
                var q = [];
                n = ToInteger(n);
                if (n == 0) {  // simple optimization
                    while (!it.isTail()) it = it.next();
                    return it;
            } else {
                    while (n-- > 0) {
                        if (it.isTail()) throw new RangeError();
                        q.push(it);
                        it = it.next();
            }
                    while (!it.isTail()) {
                        q.shift();
                        q.push(it);
                        it = it.next();
            }
                    q.push(it);
                    return q[0];
            }
            }


            proto.iterator = function ( /* delegate */) {
                return this.head.apply(this, arguments);
            };

            proto.add = function ( /* variable args */) {
                if (arguments.length == 0) return false;
                for (var i = 0; i < arguments.length; i++) {
                    this.tail().insert(arguments[i]);
            }
                return true;
            };


                // Returns the value indexed by the argument.
                // If there is no corresponding value in this list, returns undefined.
                // The argument can be either number or iterator.
            proto.get = function (it) {
                if (!(it instanceof List.Iterator && it.isBoundTo(this))) {
                    try {
                        it = this.head(it);
            } catch (e) {
                        if (e instanceof RangeError) {
                            return undefined;
            } else {
                            throw e;
            }
            }
            }
                if (it.isTail()) return undefined;
            else return it.value();
            };

                // Assigns the second argument to the container indexed by the first 
                // argument.
                // The argument can be either number or iterator.
            proto.set = function (it, v) {
                if (!(it instanceof List.Iterator && it.isBoundTo(this))) {
                    it = this.head(it);
            }
                return it.assign(v);
            };

                // Inserts a new container at the position indexed by the first 
                // argument, and sets the second argument to the container, then, 
                // returns the value of the container.
                // The argument can be either number or iterator.
                // The position which this iterator points to after insertion is 
                // implementation-dependent.
            proto.insertAt = function (it, v) {
                if (!(it instanceof List.Iterator && it.isBoundTo(this))) {
                    it = this.head(it);
            }
                return it.insert(v);
            };

                // Removes the container indexed by the argument, then, returns the 
                // value of the container.
                // The argument can be either number or iterator.
                // The position which this iterator points to after removal is 
                // implementation-dependent.
            proto.removeAt = function (it) {
                if (!(it instanceof List.Iterator && it.isBoundTo(this))) {
                    it = this.head(it);
            }
                return it.remove();
            };


            proto.pop = function () {
                return this.reverseHead().remove();
            };

            proto.push = function ( /* variable args */) {
                this.add.apply(this, arguments);
                return this.size();
            };

            proto.shift = function () {
                return this.head().remove();
            };

            proto.unshift = function ( /* variable args */) {
                for (var i = arguments.length - 1; i >= 0; i--) {
                    this.head().insert(arguments[i]);
            }
                return this.size();
            };


            proto.join = function ( /* delegate */) {
                var arr = this.toArray();
                return arr.join.apply(arr, arguments);
            };

            proto.toString = function ( /* delegate */) {
                var arr = this.toArray();
                return arr.toString.apply(arr, arguments);
            };

            proto.toLocaleString = function ( /* delegate */) {
                var arr = this.toArray();
                return arr.toLocaleString.apply(arr, arguments);
            };


            proto.reverse = function () {
                var r = this.emptyCopy();
                for (var it = this.reverseHead() ; !it.isTail() ; it = it.next()) {
                    r.add(it.value());
            }
                return r;
            };

            proto.slice = function (start, end) {
                if (!(start instanceof List.Iterator
                        && end instanceof List.Iterator
                        && start.isBoundTo(this) && end.isBoundTo(this)
                        && start.constructor === end.constructor))  // one might be reverse-iterator even though the other is iterator.
            {
                    try {
                        start = this.head(start);
            } catch (e) {
                        if (e instanceof RangeError) {
                            start = start < 0 ? this.head() : this.tail();
            } else {
                            throw e;
            }
            }
                    if (end === undefined) {
                        end = this.tail();
            } else {
                        try {
                            end = this.head(end);
            } catch (e) {
                            if (e instanceof RangeError) {
                                end = end < 0 ? this.head() : this.tail();
            } else {
                                throw e;
            }
            }
            }
            }
                var l = this.emptyCopy();
                if (start.compareTo(end) >= 0) return l;
                while (!start.equals(end)) {
                    l.add(start.value());
                    start = start.next();
            }
                return l;
            };

            proto.concat = function ( /* variable arguments */) {
                var list = this.emptyCopy();
                arguments[-1] = this;
                for (var i = -1; i < arguments.length; i++) {
                    var e = arguments[i];
                    if (e instanceof List) {
                        e.forEach(function (it) {
                            list.add(it)
            });
            }
            else if (e instanceof Array) {
                        for (var j = 0; j < e.length; j++) list.add(e[j])
            }
            else {
                        list.add(e);
            }
            }
                return list;
            };


            proto.foldl = proto.fold;

            proto.foldl1 = proto.fold1;

            proto.foldr = function (f, s) {
                var g = wrap_for_fold(this, function (x, y) { return f.call(this, y, x); }, s);
                for (var it = this.reverseHead() ; !it.isTail() ; it = it.next()) {
                    try {
                        s = g(it.value());
            } catch (e) {
                        if (e instanceof EndOfLoopException) return e.result;
            else throw e;
            }
            }
                return s;
            };

            proto.foldr1 = function (f) {
                var it = this.reverseHead();
                if (it.isTail()) throw new EmptyEnumerationError();
                var s = it.value();
                it = it.next();
                var g = wrap_for_fold(this, function (x, y) { return f.call(this, y, x); }, s);
                for (; !it.isTail() ; it = it.next()) {
                    try {
                        s = g(it.value());
            } catch (e) {
                        if (e instanceof EndOfLoopException) return e.result;
            else throw e;
            }
            }
                return s;
            };


                        return {
                List: List
            };
            }();
            }
            }
            }
            }.call(null)) {
                this.Data.Functional.List = List;
            }
        }).call(null);
        (function () {
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Error || (typeof this.Data.Error != 'object' && typeof this.Data.Error != 'function')) this.Data.Error = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Iterator || (typeof this.Data.Iterator != 'object' && typeof this.Data.Iterator != 'function')) this.Data.Iterator = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Functional || (typeof this.Data.Functional != 'object' && typeof this.Data.Functional != 'function')) this.Data.Functional = new Object();
            if (this.Data.Functional.Set === undefined) this.Data.Functional.Set = undefined;
            with (function () {
            with (Data.Error) {
            with (Data.Iterator) {
            with (Data.Functional) {

                    return function () {
                        var VERSION = '0.4.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Data.Functional code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2005-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Data.Functional';














            function Set() {
                // This is kind of interface.
            }

            var proto = Set.prototype = new Collection();
            proto.constructor = Set;

            var obj_name = "[object " + NAMESPACE + ".Set]";


            proto.toString = function () {
                return obj_name;
            };


            proto.contains = function ( /* variable args */) {
                throw new UnimplementedMethodError("contains", this);
            };

            proto.containsAll = function ( /* variable args */) {
                for (var i = 0; i < arguments.length; i++) {
                    var e = arguments[i];
                    if (e instanceof Array) {
                        if (!this.contains.apply(this, e)) return false;
            } else if (e instanceof Collection) {
                        var self = this;
                        if (!e.all(function (it) { return self.contains(it); })) return false;
            } else {
                        if (!this.contains(e)) return false;
            }
            }
                return true;
            };


            proto.remove = function ( /* variable args */) {
                throw new UnimplementedMethodError("remove", this);
            };

            proto.removeAll = function ( /* variable args */) {
                var changed = false;
                for (var i = 0; i < arguments.length; i++) {
                    var e = arguments[i];
                    if (e instanceof Array) {
                        changed = this.remove.apply(this, e) || changed;
            } else if (e instanceof Collection) {
                        var self = this;
                        e.forEach(function (it) {
                            changed = self.remove(it) || changed;
            });
            } else {
                        changed = this.remove(e) || changed;
            }
            }
                return changed;
            };

            proto.removeAt = function (it) {
                if (!(it instanceof Iterator)) throw new TypeError("the argument is not of type Data.Iterator.Iterator");
                if (!it.isBoundTo(this)) throw new IllegalStateError();
                var v = it.value();
                this.remove(v);
                return v;
            };


            proto.retainAll = function ( /* variable args */) {
                var temp = this.emptyCopy();
                temp.addAll.apply(temp, arguments);
                return this.removeAll(this.filter(function (it) {
                    return !temp.contains(it);
            }));
            };



                        return {
                Set: Set
            };
            }();
            }
            }
            }
            }.call(null)) {
                this.Data.Functional.Set = Set;
            }
        }).call(null);
        (function () {
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Error || (typeof this.Data.Error != 'object' && typeof this.Data.Error != 'function')) this.Data.Error = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Iterator || (typeof this.Data.Iterator != 'object' && typeof this.Data.Iterator != 'function')) this.Data.Iterator = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Functional || (typeof this.Data.Functional != 'object' && typeof this.Data.Functional != 'function')) this.Data.Functional = new Object();
            if (!this.Data.Functional.List || (typeof this.Data.Functional.List != 'object' && typeof this.Data.Functional.List != 'function')) this.Data.Functional.List = new Object();
            if (this.Data.Functional.List.Iterator === undefined) this.Data.Functional.List.Iterator = undefined;
            with (function () {
            with (Data.Error) {
            with (Data.Iterator) {
            with (Data.Functional.List) {

                    return function () {
                        var VERSION = '0.5.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Data.Functional code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2005-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Data.Functional.List';













            function Iterator() {
                // This is a kind of abstract class.
            }

            var proto = Iterator.prototype = new BidirectionalIterator();
            proto.constructor = Iterator;

            var obj_name = "[object " + NAMESPACE + ".Iterator]";


            proto.toString = function () {
                return obj_name;
            };


                // Assign the argument to the element which is just after the position 
                // this iterator points to, then returns the new value of the element, 
                // which can be defferent from the argument.
                // The effect of assignment at the tail of a list should be identical 
                // to the one of insertion.
                // The default implementation merely throws UnimplementedMethodError.
            proto.assign = function (v) {
                throw new UnimplementedMethodError("assign", this);
            };


                // Inserts a new container at the position which this iterator points 
                // to and sets the argument to the container, then, returns the value 
                // of the container, which can be defferent from the argument.
                // The position which the iterator points to after insertion is 
                // implementation-dependent.
                // The default implementation merely throws UnimplementedMethodError.
            proto.insert = function (v) {
                throw new UnimplementedMethodError("insert", this);
            };


                // Removes the container just after the position which this iterator 
                // points, then, returns the value of the container.
                // The position which the iterator points to after removal is 
                // implementation-dependent.
                // The default implementation merely throws UnimplementedMethodError.
            proto.remove = function () {
                throw new UnimplementedMethodError("remove", this);
            };


                // Returns true if both this iterator and the argument points to the same position,
                // false otherwise.
                // The default implementation is based on `compareTo' method.
            proto.equals = function (that) {
                return this.compareTo(that) === 0;
            };


                // Returns the distance of this iterator and the argument,
                // or undefined if the iterators seem to point to defferent list.
                // A negative return value means the arguments succeeds this iterator
                // and its magnitude represents the distance of them. Thus, this can be 
                // used as comparison-function.
                // The default implementation is based on `next', `equals' and `isTail' method.
            proto.distance =
            proto.compareTo = function (that) {
                if (!(that instanceof Iterator)) return undefined;
                for (var i = 0, l = this, r = that; ; i--, l = l.next()) {
                    if (l.equals(r)) return i;
                    if (l.isTail()) break;
            }
                for (var i = 1, l = that.next(), r = this; ; i++, l = l.next()) {
                    if (l.equals(r)) return i;
                    if (l.isTail()) break;
            }
                return undefined;
            };



                        return {
                Iterator: Iterator
            };
            }();
            }
            }
            }
            }.call(null)) {
                this.Data.Functional.List.Iterator = Iterator;
            }
        }).call(null);
        (function () {
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Functional || (typeof this.Data.Functional != 'object' && typeof this.Data.Functional != 'function')) this.Data.Functional = new Object();
            if (!this.Data.Functional.List || (typeof this.Data.Functional.List != 'object' && typeof this.Data.Functional.List != 'function')) this.Data.Functional.List = new Object();
            if (this.Data.Functional.List.ReverseIterator === undefined) this.Data.Functional.List.ReverseIterator = undefined;
            with (function () {
            with (Data.Functional.List) {

                    return function () {
                        var VERSION = '0.4.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Data.Functional code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2005-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Data.Functional.List';





                // This module provides convinient wrapper to construct 
                // reverse iterator from normal list iterator.



            function ReverseIterator(it) {
                this._it = it;
            }

            var proto = ReverseIterator.prototype = new Iterator();
            proto.constructor = ReverseIterator;


            proto.isBoundTo = function (that) {
                return this._it.isBoundTo(that);
            };

            proto.isTail = function () {
                return this._it.isHead();
            };

            proto.isHead = function () {
                return this._it.isTail();
            };

            proto.next = function () {
                return new ReverseIterator(this._it.previous());
            };

            proto.previous = function () {
                return new ReverseIterator(this._it.next());
            };

            proto.value = function () {
                return this._it.previous().value();
            };

            proto.assign = function (v) {
                return this._it.previous().assign(v);
            };

            proto.insert = function (v) {
                return this._it.insert(v);
            };

            proto.remove = function () {
                return this._it.previous().remove();
            };

            proto.equals = function (that) {
                if (!(that instanceof ReverseIterator)) return false;
                return this._it.equal(taht._it);
            };

            proto.compareTo = function (that) {
                if (!(that instanceof ReverseIterator)) return undefined;
                var c = this._it.compareTo(that._it);
                if (isNaN(d)) return c;
                return -c;
            };

            proto.distance = function (that) {
                if (!(that instanceof ReverseIterator)) return undefined;
                var d = this._it.distance(that._it);
                if (isNaN(d)) return d;
                return -d;
            };


                        return {
                ReverseIterator: ReverseIterator
            };
            }();
            }
            }.call(null)) {
                this.Data.Functional.List.ReverseIterator = ReverseIterator;
            }
        }).call(null);
        (function () {
            with (function () {

                    return function () {
                        var VERSION = '0.5.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Data.Functional code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2005-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */




                // This is just a alias.
                // See "Data.Functional.List.list" for the entity of "Data.Functional.List".



                        return {

            };
            }();
            }.call(null)) {
            }
        }).call(null);
        (function () {
            if (!this.Math || (typeof this.Math != 'object' && typeof this.Math != 'function')) this.Math = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Error || (typeof this.Data.Error != 'object' && typeof this.Data.Error != 'function')) this.Data.Error = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Functional || (typeof this.Data.Functional != 'object' && typeof this.Data.Functional != 'function')) this.Data.Functional = new Object();
            if (!this.Data.Functional.Loop || (typeof this.Data.Functional.Loop != 'object' && typeof this.Data.Functional.Loop != 'function')) this.Data.Functional.Loop = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Functional || (typeof this.Data.Functional != 'object' && typeof this.Data.Functional != 'function')) this.Data.Functional = new Object();
            with (function () {
            with (Math) {
            with (Data.Error) {
            with (Data.Functional.Loop) {
            with (Data.Functional) {

                    return function () {
                        var VERSION = '0.5.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Data.Functional code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2005-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */


















            var proto = Array.prototype;

            for (var i in List.prototype) {
                if (typeof proto[i] != "function") proto[i] = List.prototype[i];
            }


            proto.head = function (n) {
                if (n < 0) return this.tail(-n);
                n = ToInteger(n);
                if (n > this.length) throw new RangeError();
                return new Iterator(this, n);
            };

            proto.tail = function (n) {
                if (n < 0) return this.head(-n);
                n = ToInteger(n);
                if (n > this.length) throw new RangeError();
                return new Iterator(this, this.length - n);
            };

            proto.iterator = proto.head;

            proto.reverseHead = function (n) {
                if (n < 0) return this.reverseTail(-n);
                n = ToInteger(n);
                if (n > this.length) throw new RangeError();
                return new ReverseIterator(this, n);
            };

            proto.reverseTail = function (n) {
                if (n < 0) return this.reverseHead(-n);
                n = ToInteger(n);
                if (n > this.length) throw new RangeError();
                return new ReverseIterator(this, this.length - n);
            };


            proto.add = function ( /* variable args */) {
                this.push.apply(this, arguments);
                return true;
            };

            proto.get = function (it) {
                if (it instanceof Iterator || it instanceof ReverseIterator) {
                    if (it.isBoundTo(this)) return it.value();
                    throw new IllegalStateError();
            }
                it = ToInteger(n);
                if (it < 0) it += this.length;
                return this[it];
            };

            proto.set = function (it, v) {
                if (it instanceof Iterator || it instanceof ReverseIterator) {
                    if (it.isBoundTo(this)) return it.assign(v);
                    throw new IllegalStateError();
            }
                var n = ToInteger(it);
                if (n < 0) n += this.length;
                if (n < 0) throw new RangeError("`" + it + "' is too small.");
                if (n >= this.length) throw new RangeError("`" + it + "' is too large.");
                return this[n] = v;
            };

            proto.insertAt = function (it, v) {
                if (it instanceof Iterator || it instanceof ReverseIterator) {
                    if (it.isBoundTo(this)) return it.insert(v);
                    throw new IllegalStateError();
            }
                var n = ToInteger(it);
                if (n < 0) n += this.length;
                if (n < 0) throw new RangeError("`" + it + "' is too small.");
                if (n >= this.length) throw new RangeError("`" + it + "' is too large.");
                this.splice(n, 0, v);
                return v;
            };

            proto.removeAt = function (it) {
                if (it instanceof Iterator || it instanceof ReverseIterator) {
                    if (it.isBoundTo(this)) return it.remove();
                    throw new IllegalStateError();
            }
                var n = ToInteger(it);
                if (n < 0) n += this.length;
                if (n < 0) throw new RangeError("`" + it + "' is too small.");
                if (n >= this.length) throw new RangeError("`" + it + "' is too large.");
                return this.splice(n, 1)[0];
            };


            proto.isEmpty = function () {
                return this.length == 0;
            };

            proto.empty = function () {
                this.length = 0;
            };

            proto.size = function () {
                return this.length;
            };

            proto.copy =
            proto.toArray = function () {
                var a = [];
                for (var i = 0; i < this.length; i++) a[i] = this[i];
                return a;
            };


            proto.forEach = function (f) {
                f = wrap_for_forEach(this, f);
                for (var i = 0; i < this.length; i++) {
                    try {
                        f(this[i]);
            } catch (e) {
                        if (e instanceof EndOfLoopException) {
                            return;
            } else {
                            throw e;
            }
            }
            }
            };

            proto.fold =
            proto.foldl = function (f, s) {
                f = wrap_for_fold(this, f, s);
                for (var i = 0; i < this.length; i++) {
                    try {
                        s = f(this[i]);
            } catch (e) {
                        if (e instanceof EndOfLoopException) {
                            return e.result;
            } else {
                            throw e;
            }
            }
            }
                return s;
            };

            proto.fold1 =
            proto.foldl1 = function (f) {
                if (this.length == 0) throw new EmptyEnumerationError();
                var s = this[0];
                f = wrap_for_fold(this, f, s);
                for (var i = 1; i < this.length; i++) {
                    try {
                        s = f(this[i]);
            } catch (e) {
                        if (e instanceof EndOfLoopException) {
                            return e.result;
            } else {
                            throw e;
            }
            }
            }
                return s;
            };

            proto.foldr = function (f, s) {
                var g = wrap_for_fold(this, function (x, y) { return f.call(this, y, x); }, s);
                for (var i = this.length - 1; i >= 0; i--) {
                    try {
                        s = f(this[i]);
            } catch (e) {
                        if (e instanceof EndOfLoopException) {
                            return e.result;
            } else {
                            throw e;
            }
            }
            }
                return s;
            };

            proto.foldr1 = function (f) {
                if (this.length == 0) throw new EmptyEnumerationError();
                var s = this[this.length - 1];
                var g = wrap_for_fold(this, function (x, y) { return f.call(this, y, x); }, s);
                for (var i = this.length - 2; i >= 0; i--) {
                    try {
                        s = g(this[i]);
            } catch (e) {
                        if (e instanceof EndOfLoopException) {
                            return e.result;
            } else {
                            throw e;
            }
            }
            }
                return s;
            };

            proto.map = function (f) {
                var a = [];
                f = wrap_for_map(this, f, function () {
                    a.push.apply(a, arguments);
            });
                for (var i = 0; i < this.length; i++) {
                    try {
                        f(this[i]);
            } catch (e) {
                        if (e instanceof EndOfLoopException) return a;
            else throw e;
            }
            }
                return a;
            };


                // Re-define concat and slice
            var original_concat = proto.concat;
            proto.concat = function ( /* variable argumentes */) {
                for (var i = 0; i < arguments.length; i++) {
                    var v = arguments[i];
                    if (v instanceof List) arguments[i] = v.toArray();
            }
                return original_concat.apply(this, arguments);
            };

            var original_slice = proto.slice;
            proto.slice = function (start, end) {
                if ((start instanceof Iterator && end instanceof Iterator
                        || start instanceof ReverseIterator && end instanceof ReverseIterator)
                    && start.isBoundTo(this) && end.isBoundTo(this)) {
                    if (start.compareTo(end) >= 0) return [];
                    var s = [];
                    do {
                        s.push(start.value());
                        start = start.next();
            } while (!start.equals(end));
                    return s;
            } else {
                    return original_slice.apply(this, arguments);
            }
            };



            function Iterator(a, n) {
                this._arr = a;
                this._pos = n;
            }

            var proto = Iterator.prototype = new List.Iterator();
            proto.constructor = Iterator;

            proto.isBoundTo = function (that) {
                return this._arr === that;
            };

            proto.isHead = function () {
                return ToInteger(this._pos) <= 0
                    || this._arr.length == 0;
            };

            proto.isTail = function () {
                return ToInteger(this._pos) >= this._arr.length
                    || this._arr.length == 0;
            };

            proto.value = function () {
                if (this.isTail()) return undefined;
                if (this.isHead()) return this._arr[0];
            else return this._arr[ToInteger(this._pos)];
            };

            proto.assign = function (v) {
                if (this.isTail()) return this.insert();
                if (this.isHead()) return this._arr[0] = v;
            else return this._arr[ToInteger(this._pos)] = v;
            };

            proto.insert = function (v) {
                var i = ToInteger(this._pos);
                if (i <= 0) i = 0;
            else i = min(i, this._arr.length);
                return this._arr.insertAt(i, v);
            };

            proto.remove = function () {
                if (this.isTail()) throw new IllegalStateError("can't remove at the tail of list");
            else if (this.isHead()) return this._arr.aplice(0, 1)[0];
            else return this._arr.splice(this._pos, 1)[0];
            };

            proto.next = function () {
                if (this.isTail()) throw new NoSuchElement("no next element");
                if (this.isHead()) return new this.constructor(this._arr, 1);
            else return new this.constructor(this._arr, this._pos + 1);
            };

            proto.previous = function () {
                if (this.isHead()) throw new NoSuchElement("no previous element");
                if (this.isTail()) return new this.constructor(this._arr, this._arr.length - 1);
            else return new this.constructor(this._arr, this._pos - 1);
            };

            proto.compareTo =
            proto.distance = function (that) {
                if (!(that instanceof this.constructor)) return undefined;
                if (this._arr !== that._arr) return undefined;
                var s = this._arr.length;
                var l = ToInteger(this._pos);
                var r = ToInteger(that._pos);
                if (l <= 0 && r <= 0
                  || l >= s && r >= s) return 0;
                return l - r;
            };


            function ReverseIterator(a, n) {
                Iterator.apply(this, arguments);
            }

            var proto = ReverseIterator.prototype = new List.Iterator();

            for (var i in Iterator.prototype) {
                if (Iterator.prototype.hasOwnProperty(i)
                  && typeof Iterator.prototype[i] == "function") {
                    proto[i] = Iterator.prototype[i];
            }
            }

            proto.constructor = ReverseIterator;

            proto.value = function () {
                if (this.isTail()) return undefined;
                if (this.isHead()) return this._arr[this._arr.length - 1];
            else return this._arr[this._arr.length - 1 - ToInteger(this._pos)];
            };

            proto.assign = function (v) {
                if (this.isTail()) this.insert(v);
                if (this.isHead()) return this._arr[this._arr.length - 1] = v;
            else return this._arr[this._arr.length - 1 - ToInteger(this._pos)] = v;
            };

            proto.insert = function (v) {
                var i = ToInteger(this._pos);
                if (i <= 0) i = 0;
            else i = min(i, this._arr.length);
                return this._arr.insertAt(this._arr.length - i, v);
            };

            proto.remove = function () {
                if (this.isTail()) throw new IllegalStateError("can't remove at the tail of list");
                if (this.isHead()) return this._arr.splice(this._arr.length - 1, 1)[0];
            else return this._arr.splice(this._arr.length - 1 - ToInteger(this._pos), 1)[0];
            };


                        return {

            };
            }();
            }
            }
            }
            }
            }.call(null)) {
            }
        }).call(null);
        (function () {
            if (!this.Math || (typeof this.Math != 'object' && typeof this.Math != 'function')) this.Math = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Error || (typeof this.Data.Error != 'object' && typeof this.Data.Error != 'function')) this.Data.Error = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Iterator || (typeof this.Data.Iterator != 'object' && typeof this.Data.Iterator != 'function')) this.Data.Iterator = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Functional || (typeof this.Data.Functional != 'object' && typeof this.Data.Functional != 'function')) this.Data.Functional = new Object();
            if (!this.Data.Functional.Loop || (typeof this.Data.Functional.Loop != 'object' && typeof this.Data.Functional.Loop != 'function')) this.Data.Functional.Loop = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Functional || (typeof this.Data.Functional != 'object' && typeof this.Data.Functional != 'function')) this.Data.Functional = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Cons || (typeof this.Data.Cons != 'object' && typeof this.Data.Cons != 'function')) this.Data.Cons = new Object();
            if (this.Data.Cons.list === undefined) this.Data.Cons.list = undefined;
            if (this.Data.Cons.InsertAtHeadError === undefined) this.Data.Cons.InsertAtHeadError = undefined;
            if (this.Data.Cons.RemoveHeadError === undefined) this.Data.Cons.RemoveHeadError = undefined;
            with (function () {
            with (Math) {
            with (Data.Error) {
            with (Data.Iterator) {
            with (Data.Functional.Loop) {
            with (Data.Functional) {
            with (Data.Cons) {

                    return function () {
                        var VERSION = '0.2.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Data.Cons code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Data.Cons';























            var proto = new List();
            proto.toString = Cell.prototype.toString;
            proto.toLocaleString = Cell.prototype.toLocaleString;
            proto.isNil = Cell.prototype.isNil;
            Cell.prototype = proto;
            proto.constructor = Cell;

            proto = new Cell();
            proto.toString = Nil.prototype.toString;
            proto.toLocaleString = Nil.prototype.toLocaleString;
            proto.isNil = Nil.prototype.isNil;
            Nil.prototype = proto;
            proto.constructor = Nil;



            function list( /* variable args */) {
                var head, cell;
                head = cell = new Cell(null, new Nil());
                for (var i = 0; i < arguments.length; i++) {
                    cell = cell.cdr = new Cell(arguments[i], cell.cdr);
            }
                return head.cdr;
            }



            proto = Cell.prototype;


            proto.iterator =
            proto.head = function (n) {
                n = ToInteger(n);
                if (n < 0) return this.tail(-n);
                try {
                    for (var it = new Iterator(this, this, null) ; n > 0; it = it.next(), n--);
                    return it;
            } catch (e) {
                    if (e instanceof NoSuchElementError) {
                        throw new RangeError();
            } else {
                        throw e;
            }
            }
            };

            proto.tail = function (n) {
                n = ToInteger(n);
                if (n < 0) return this.head(-n);
                for (var it = new Iterator(this, this, null) ; !it.isTail() ; it = it.next());
                try {
                    for (; n > 0; it = it.previous(), n--);
                    return it;
            } catch (e) {
                    if (e instanceof NoSuchElementError) {
                        throw new RangeError();
            } else {
                        throw e;
            }
            }
            };

            proto.reverseHead = function (n) {
                return new ReverseIterator(this.tail(n));
            };

            proto.reverseTail = function (n) {
                return new ReverseIterator(this.head(n));
            };


            proto.get = function (n) {
                if (n instanceof Iterator || n instanceof ReverseIterator) {
                    if (!n.isBoundTo(this)) throw new IllegalStateError();
                    return n.value();
            }
                n = ToInteger(n);
                if (n < 0) return this.reverse().get(-n - 1);
                var c = this;
                while (n !== 0) {
                    c = c.cdr;
                    if (c.isNil()) return undefined;
                    n--;
            }
                return c.car;
            };

            proto.set = function (n, v) {
                if (n instanceof Iterator || n instanceof ReverseIterator) {
                    if (!n.isBoundTo(this)) throw new IllegalStateError();
                    return n.assign(v);
            }
                return this.head(n).assign(v);
            };


            proto.add = function ( /* variable args */) {
                if (arguments.length == 0) return false;
                if (this.isNil()) throw new InsertAtHeadError();
                for (var c = this; !c.cdr.isNil() ; c = c.cdr);
                for (var i = 0; i < arguments.length; i++) {
                    c = c.cdr = new Cell(arguments[i], new Nil());
            }
                return true;
            };

            proto.shift = function () {
                throw new RemoveHeadError();
            };

            proto.unshift = function () {
                throw new InsertAtHeadError();
            };

            proto.pop = function () {
                if (this.isNil()) return undefined;
                if (this.cdr.isNil()) throw new RemoveHeadError();
                for (var c = this.cdr; !c.cdr.cdr.isNil() ; c = c.cdr);
                var r = c.cdr.car;
                c.cdr = c.cdr.cdr;
                return r;
            };

            proto.push = function ( /* variable args */) {
                if (arguments.length == 0) return this.size();
                if (this.isEmpty()) throw new InsertAtHeadError();
                for (var l = 1, c = this; !c.cdr.isNil() ; l++, c = c.cdr);
                for (var i = 0; i < arguments.length; i++, l++) {
                    c = c.cdr = new Cell(arguments[i], c.cdr);
            }
                return l;
            };


            proto.isEmpty = function () {
                return this.isNil();
            };

            proto.empty = function () {
                if (this.isEmpty()) return;
                throw new RemoveHeadError();
            };

            proto.size = function () {
                for (var i = 0, c = this; !c.isNil() ; i++, c = c.cdr);
                return i;
            };

            proto.copy = function () {
                if (this.isNil()) return new Nil();
                var head, cell;
                head = cell = new Cell(this.car, new Nil());
                for (var c = this.cdr; !c.isNil() ; c = c.cdr) {
                    cell = cell.cdr = new Cell(c.car, cell.cdr);
            }
                return head;
            };

            proto.toArray = function () {
                var a = [];
                for (var c = this; !c.isNil() ; c = c.cdr) a.push(c.car);
                return a;
            };

            proto.reverse = function () {
                var r = new Nil();
                for (var c = this; !c.isNil() ; c = c.cdr) r = new Cell(c.car, r);
                return r;
            };

            proto.concat = function ( /* variable args */) {
                var head, cell;
                head = cell = new Cell(null, new Nil());
                arguments[-1] = this;
                for (var i = -1; i < arguments.length; i++) {
                    var c = arguments[i];
                    if (c instanceof List) {
                        c.forEach(function (it) {
                            cell = cell.cdr = new Cell(it, cell.cdr);
            });
            } else if (c instanceof Array) {
                        for (var j = 0; j < c.length; j++) {
                            cell = cell.cdr = new Cell(c[j], cell.cdr);
            }
            } else {
                        cell = cell.cdr = new Cell(c, cell.cdr);
            }
            }
                return head.cdr;
            };

            proto.slice = function (start, end) {
                if (!((start instanceof Iterator && end instanceof Iterator
                         || start instanceof ReverseIterator && end instanceof ReverseIterator)
                       && start.isBoundTo(this) && end.isBoundTo(this))) {
                try {
                        start = this.head(start);
            } catch (e) {
                        if (e instanceof RangeError) {
                            start = start < 0 ? this.head() : this.tail();
            } else {
                            throw e;
            }
            }
                    if (end === undefined) {
                        end = this.tail();
            } else {
                        try {
                            end = this.head(end);
            } catch (e) {
                            if (e instanceof RangeError) {
                                end = end < 0 ? this.head() : this.tail();
            } else {
                                throw e;
            }
            }
            }
            }
                if (start.compareTo(end) >= 0) return new Nil();
                var head, cell;
                head = cell = new Cell(null, new Nil());
                while (!start.equals(end)) {
                    cell = cell.cdr = new Cell(start.value(), cell.cdr);
                    start = start.next();
            }
                return head.cdr;
            }


            proto.forEach = function (f) {
                f = wrap_for_forEach(this, f);
                for (var c = this; !c.isNil() ; c = c.cdr) {
                    try {
                        f(c.car);
            } catch (e) {
                        if (e instanceof EndOfLoopException) {
                            return;
            } else {
                            throw e;
            }
            }
            }
            };

            proto.fold =
            proto.foldl = function (f, s) {
                f = wrap_for_fold(this, f, s);
                for (var c = this; !c.isNil() ; c = c.cdr) {
                    try {
                        s = f(c.car);
            } catch (e) {
                        if (e instanceof EndOfLoopException) {
                            return e.result;
            } else {
                            throw e;
            }
            }
            }
                return s;
            };

            proto.fold1 =
            proto.foldl1 = function (f) {
                if (this.isEmpty()) throw new EmptyEnumerationError();
                var s = this.car;
                f = wrap_for_fold(this, f, s);
                for (var c = this.cdr; !c.isNil() ; c = c.cdr) {
                    try {
                        s = f(c.car);
            } catch (e) {
                        if (e instanceof EndOfLoopException) {
                            return e.result;
            } else {
                            throw e;
            }
            }
            }
                return s;
            };

            proto.foldr = function (f, s) {
                return this.reverse().foldl(function (x, y) { return f.call(this, y, x); }, s);
            };

            proto.foldr1 = function (f) {
                return this.reverse().foldl1(function (x, y) { return f.call(this, y, x); });
            };

            proto.map = function (f) {
                if (this.isNil()) return new Nil();
                var head, cell;
                head = cell = new Cell(null, new Nil());
                f = wrap_for_map(this, f, function () {
                    for (var i = 0; i < arguments.length; i++) {
                        cell = cell.cdr = new Cell(arguments[i], cell.cdr);
            }
            });
                for (var c = this; !c.isNil() ; c = c.cdr) {
                    try {
                        f(c.car);
            } catch (e) {
                        if (e instanceof EndOfLoopException) {
                            return head.cdr;
            } else {
                            throw e;
            }
            }
            }
                return head.cdr;
            }



            function Iterator(head, cell, prev) {
                this._head = head;
                this._cell = cell;
                this._prev = prev;
            }

            var proto = Iterator.prototype = new List.Iterator();
            proto.constructor = Iterator;

            proto.isBoundTo = function (that) {
                return this._head === that;
            };

            proto.isHead = function () {
                return this._head === this._cell;
            };

            proto.isTail = function () {
                return this._cell.isNil();
            };

            proto.value = function () {
                return this._cell.car;
            };

            proto.assign = function (v) {
                if (this.isTail()) this.insert(v);
            else this._cell.car = v;
                return v;
            };

            proto.insert = function (v) {
                if (this.isHead()) throw new InsertAtHeadError();
                this._cell = this._prev._cell.cdr = new Cell(v, this._cell.cdr);
                return v;
            };

            proto.remove = function () {
                if (this.isHead()) throw new RemoveHeadError();
                if (this.isTail()) throw new IllegalStateError("can't remove at tail");
                var r = this._cell.car;
                this._cell = this._prev._cell.cdr = this._cell.cdr;
                return r;
            };

            proto.next = function () {
                if (this.isTail()) throw new NoSuchElementError("no next element");
                return new Iterator(this._head, this._cell.cdr, this);
            };

            proto.previous = function () {
                if (this.isHead()) throw new NoSuchElementError("no previous element");
                return this._prev;
            };

            proto.equals = function (that) {
                return that instanceof Iterator
                    && that.isBoundTo(this._head)
                    && this._cell === that._cell;
            };

            proto.compareTo =
            proto.distance = function (that) {
                if (!(that instanceof Iterator && that.isBoundTo(this._head))) return undefined;
                for (var i = 0, l = this._cell, r = that._cell; !l.isNil() ; i++, l = l.cdr) {
                    if (l === r) return -i;
            }
                for (var i = 1, l = that._cell.cdr, r = this._cell; !l.isNil() ; i++, l = l.cdr) {
                    if (l === r) return i;
            }
                return void 0;
            };


            function ReverseIterator() {
                return List.ReverseIterator.apply(this, arguments);
            }

            var proto = ReverseIterator.prototype = new List.ReverseIterator();
            proto.constructor = ReverseIterator;




            var InsertAtHeadError = Error.extend(
                function ($super, message) { $super(message); },
                {
                name: NAMESPACE + ".InsertAtHeadError",
                message: "can't insert at head of cons-list"
            }
            );


            var RemoveHeadError = Error.extend(
                function ($super, message) { $super(message); },
                {
                name: NAMESPACE + ".RemoveHeadError",
                message: "can't remove head of cons-list"
            }
            );


                        return {
                InsertAtHeadError: InsertAtHeadError, RemoveHeadError: RemoveHeadError, list: list
            };
            }();
            }
            }
            }
            }
            }
            }
            }.call(null)) {
                this.Data.Cons.InsertAtHeadError = InsertAtHeadError;
                this.Data.Cons.RemoveHeadError = RemoveHeadError;
                this.Data.Cons.list = list;
            }
        }).call(null);
        (function () {
            if (!this.Math || (typeof this.Math != 'object' && typeof this.Math != 'function')) this.Math = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Error || (typeof this.Data.Error != 'object' && typeof this.Data.Error != 'function')) this.Data.Error = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Iterator || (typeof this.Data.Iterator != 'object' && typeof this.Data.Iterator != 'function')) this.Data.Iterator = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Functional || (typeof this.Data.Functional != 'object' && typeof this.Data.Functional != 'function')) this.Data.Functional = new Object();
            if (!this.Data.Functional.Loop || (typeof this.Data.Functional.Loop != 'object' && typeof this.Data.Functional.Loop != 'function')) this.Data.Functional.Loop = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Functional || (typeof this.Data.Functional != 'object' && typeof this.Data.Functional != 'function')) this.Data.Functional = new Object();
            if (this.Data.LinkedList === undefined) this.Data.LinkedList = undefined;
            with (function () {
            with (Math) {
            with (Data.Error) {
            with (Data.Iterator) {
            with (Data.Functional.Loop) {
            with (Data.Functional) {
            with (Data) {

                    return function () {
                        var VERSION = '0.3.1';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Data.LinkedList module.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2005-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Data';




















            function LinkedList( /* variable arguments */) {
                this._value = undefined;
                this._prev = this;
                this._next = this;
                this._removed = false;
                this.add.apply(this, arguments);
            }

            LinkedList.fromCollection = function ( /* variable args */) {
                var l = new LinkedList();
                l.addAll.apply(l, arguments);
                return l;
            };


            function makeContainer(v) {
                return { _value: v, _removed: false };
            }


            var proto = LinkedList.prototype = new List();
            proto.constructor = LinkedList;


            function nForward(top, c, n) {
                if (n == 0) return c;
                c = c._next;
                while (--n > 0) {
                    if (c === top) throw new RangeError();
                    c = c._next;
            }
                return c;
            }

            function nBackward(top, c, n) {
                if (n == 0) return c;
                c = c._prev;
                while (--n > 0) {
                    if (c === top) throw new RangeError();
                    c = c._prev;
            }
                return c;
            }


            proto.head = function (n) {
                if (n < 0) return this.tail(-n);
                return new Iterator(this, nForward(this, this._next, ToInteger(n)));
            };

            proto.tail = function (n) {
                if (n < 0) return this.head(-n);
                return new Iterator(this, nBackward(this, this, ToInteger(n)));
            };

            proto.reverseHead = function (n) {
                if (n < 0) return this.reverseTail(-n);
                return new ReverseIterator(this, nBackward(this, this._prev, ToInteger(n)));
            };

            proto.reverseTail = function (n) {
                if (n < 0) return this.reverseHead(-n);
                return new ReverseIterator(this, nBackward(this, this, ToInteger(n)));
            };

            proto.iterator = proto.head;


            proto.add = function ( /* variable args */) {
                if (!arguments.length) return false;
                var it = new Iterator(this, this);
                for (var i = 0; i < arguments.length; i++) it.insert(arguments[i]);
                return true;
            };

            proto.pop = function () {
                return (new Iterator(this, this._prev)).remove();
            };

            proto.shift = function () {
                return (new Iterator(this, this._next)).remove();
            };

            proto.unshift = function ( /* variable arguments */) {
                var it = new Iterator(this, this._next);
                for (var i = 0; i < arguments.length; i++) it.insert(arguments[i]);
                return this.size();
            };


            proto.isEmpty = function () {
                return this._next === this;
            };

            proto.empty = function () {
                this._prev = this._next = this;
            };

            proto.size = function () {
                for (var i = 0, c = this._next; c !== this; ++i, c = c._next);
                return i;
            };

            proto.copy = function () {
                var l = this.emptyCopy();
                for (var c = this._next; c !== this; c = c._next) l.add(c._value);
                return l;
            };

            proto.toArray = function () {
                var a = [];
                for (var c = this._next; c !== this; c = c._next) a.push(c._value);
                return a;
            };


            proto.forEach = function (f) {
                f = wrap_for_forEach(this, f);
                for (var c = this._next; c !== this; c = c._next) {
                    try {
                        f(c._value);
            } catch (e) {
                        if (e instanceof EndOfLoopException) {
                            return;
            } else {
                            throw e;
            }
            }
            }
            }

            proto.fold =
            proto.foldl = function (f, s) {
                f = wrap_for_fold(this, f, s);
                for (var c = this._next; c !== this; c = c._next) {
                    try {
                        s = f(c._value);
            } catch (e) {
                        if (e instanceof EndOfLoopException) {
                            return e.result;
            } else {
                            throw e;
            }
            }
            }
                return s;
            };

            proto.fold1 =
            proto.foldl1 = function (f) {
                if (this.isEmpty()) throw new EmptyEnumerationError();
                var s = this._next._value;
                f = wrap_for_fold(this, f, s);
                for (var c = this._next._next; c !== this; c = c._next) {
                    try {
                        s = f(c._value);
            } catch (e) {
                        if (e instanceof EndOfLoopException) {
                            return e.result;
            } else {
                            throw e;
            }
            }
            }
                return s;
            };

            proto.foldr = function (f, s) {
                var g = wrap_for_fold(this, function (x, y) { return f.call(this, y, x); }, s);
                for (var c = this._prev; c !== this; c = c._prev) {
                    try {
                        s = f(c._value);
            } catch (e) {
                        if (e instanceof EndOfLoopException) {
                            return e.result;
            } else {
                            throw e;
            }
            }
            }
                return s;
            };

            proto.foldr1 = function (f) {
                if (this.isEmpty()) throw new EmptyEnumerationError();
                var s = this._prev._value;
                var g = wrap_for_fold(this, function (x, y) { return f.call(this, y, x); }, s);
                for (var c = this._prev._prev; c !== this; c = c._prev) {
                    try {
                        s = g(c._value);
            } catch (e) {
                        if (e instanceof EndOfLoopException) {
                            return e.result;
            } else {
                            throw e;
            }
            }
            }
                return s;
            };

            proto.map = function (f) {
                var l = new LinkedList();
                f = wrap_for_map(this, f, function () {
                    l.add.apply(l, arguments);
            });
                for (var c = this._next; c !== this; c = c._next) {
                    try {
                        f(c._value);
            } catch (e) {
                        if (e instanceof EndOfLoopException) return l;
            else throw e;
            }
            }
                return l;
            };



                // comparison function about containers
            function comp(top, l, r) {
                if (l === r) return 0;
                do {
                    l = l._next;
                    if (l === r) return -1;
            } while (l !== top);
                return 1;
            }

                // distance function about containers
            function dist(top, l, r) {
                for (var i = 0, it = l; it !== top; i--, it = it._next) {
                    if (it === r) return i;
            }
                for (var i = 1, it = r._next; it !== top; i++, it = it._next) {
                    if (it === l) return i;
            }
                return undefined;
            }


            function Iterator(l, c) {
                this._top = l;  // LinkedList object which this iterator belongs to.
                this._pos = c;  // Current position; abstractly iterator points to just before this container
            }

            var proto = Iterator.prototype = new List.Iterator();
            proto.constructor = Iterator;

            function validate(it) {
                while (it._pos._removed) {
                    it._pos = it._pos._next;
            }
            }

            proto.isBoundTo = function (that) {
                return this._top === that;
            };

            proto.equals = function (that) {
                if (!(that instanceof Iterator && that.isBoundTo(this._top))) return false;
                validate(this);
                validate(that);
                return this._pos === that._pos;
            };

            proto.compareTo = function (that) {
                if (!(that instanceof Iterator && that.isBoundTo(this._top))) return undefined;
                validate(this);
                validate(that);
                return comp(this._top, this._pos, that._pos);
            };

            proto.distance = function (that) {
                if (!(that instanceof Iterator && that.isBoundTo(this._top))) return undefined;
                validate(this);
                validate(that);
                return dist(this._top, this._pos, that._pos);
            };

            proto.isHead = function () {
                validate(this);
                return this._pos === this._top._next;
            };

            proto.isTail = function () {
                validate(this);
                return this._pos === this._top;
            };

            proto.next = function () {
                if (this.isTail()) throw new NoSuchElementError("no next element");
                return new Iterator(this._top, this._pos._next);
            };

            proto.previous = function () {
                if (this.isHead()) throw new NoSuchElementError("no previous element");
                return new Iterator(this._top, this._pos._prev);
            };

            proto.value = function () {
                validate(this);
                return this._pos._value;
            };

            proto.assign = function (v) {
                if (this.isTail()) return this.insert(v);
            else return this._pos._value = v;
            };

            proto.insert = function (v) {
                validate(this);
                var c = makeContainer(v);
                c._prev = this._pos._prev;
                c._next = this._pos;
                this._pos._prev = this._pos._prev._next = c;
                return v;
            };

            proto.remove = function () {
                if (this.isTail()) throw new IllegalStateError("can't remove at the tail of list");
                this._pos._prev._next = this._pos._next;
                this._pos._next._prev = this._pos._prev;
                this._pos._removed = true;
                return this._pos._value;
            };



            function ReverseIterator(l, c) {
                this._top = l;  // LinkedList object which this iterator belongs to.
                this._pos = c;  // Current position; abstractly iterator points to just before this container
            }

            var proto = ReverseIterator.prototype = new List.Iterator();
            for (var i in Iterator.prototype) proto[i] = Iterator.prototype[i];
            proto.constructor = ReverseIterator;

            function rvalidate(it) {
                while (it._pos._removed) {
                    it._pos = it._pos._prev;
            }
            }

            proto.isBoundTo = Iterator.prototype.isBoundTo;

            proto.equals = function (that) {
                if (!(that instanceof Iterator && that.isBoundTo(this._top))) return false;
                rvalidate(this);
                rvalidate(that);
                return this._pos === that._pos;
            };

            proto.compareTo = function (that) {
                if (!(that instanceof Iterator && that.isBoundTo(this._top))) return undefined;
                rvalidate(this);
                rvalidate(that);
                return -comp(this._top, this._pos, that._pos);
            };

            proto.distance = function (that) {
                if (!(that instanceof Iterator && that.isBoundTo(this._top))) return undefined;
                rvalidate(this);
                rvalidate(that);
                var d = dist(this._top, this._pos, that._pos);
                return isNaN(d) ? d : -d;
            };

            proto.isHead = function () {
                rvalidate(this);
                return this._pos === this._top._prev;
            };

            proto.isTail = function () {
                rvalidate(this);
                return this._pos === this._top;
            };

            proto.next = function () {
                if (this.isTail()) throw new NoSuchElementError("no next element");
                return new ReverseIterator(this._top, this._pos._prev);
            };

            proto.previous = function () {
                if (this.isHead()) throw new NoSuchElementError("no previous element");
                return new ReverseIterator(this._top, this._pos._next);
            };

            proto.value = function () {
                rvalidate(this);
                return this._pos._value;
            };

            proto.assign = Iterator.prototype.assign;

            proto.insert = function (v) {
                rvalidate(this);
                var c = makeContainer(v);
                c._next = this._pos._next;
                c._prev = this._pos;
                this._pos._next = this._pos._next._prev = c;
                return v;
            };

            proto.remove = Iterator.prototype.remove;


                        return {
                LinkedList: LinkedList
            };
            }();
            }
            }
            }
            }
            }
            }
            }.call(null)) {
                this.Data.LinkedList = LinkedList;
            }
        }).call(null);
        (function () {
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Error || (typeof this.Data.Error != 'object' && typeof this.Data.Error != 'function')) this.Data.Error = new Object();
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (this.Concurrent.Thread === undefined) this.Concurrent.Thread = undefined;
            with (function () {
            with (Data.Error) {
            with (Concurrent) {

                    return function () {
                        var VERSION = '0.1.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Concurrent.Thread code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2006-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Concurrent';








            var current_thread = null;  // Retains the current thread.


            function NoContinuationException(r) {
                this.ret_val = r;
            }

            function initial_continuation_procedure(ret_val) {
                throw new NoContinuationException(ret_val);
            }

            function NoExceptionHandlerException(e) {
                this.thrown = e;
            }

            function initial_exception_handler(e) {
                throw new NoExceptionHandlerException(e);
            }

            var initial_continuation = {
                this_val: null,
                procedure: initial_continuation_procedure,
                exception: {
                this_val: null,
                procedure: initial_exception_handler
            }
            };
                // Cyclic reference ensures that at least one exceptinal continuation always exists.
            initial_continuation.exception.exception = initial_continuation.exception;




            function Thread() {
                throw new Error("Thread cannot be instantiated directly.");
            }

            function THREAD(t) {
                this._triplet = t;  // {continuation:{...}, timeout:int|undefined, ret_val:any}
                this._is_ended = 0;  // 0:running, -1:throw, 1:return
                this._join_thread = null;
                this._joined_list = new Data.LinkedList();
                this._timerID = undefined;
                standBy.call(this, 0);
            }

            var proto = THREAD.prototype = Thread.prototype;

            +function () {
                var name = "[object " + NAMESPACE + ".Thread]"
                proto.toString = function () {
                    return name;
            };
            }();


                // Cancel timeout event.
            function cancel() {
                if (this._timerID) {
                    clearTimeout(this._timerID);
                    this._timerID = undefined;
            }
            }

                // Reserve execution of the next step after t msec.
            function standBy(t) {
                cancel.call(this);
                var self = this;
                this._timerID = setTimeout(
                    function () { doNext.call(self); },
                    Number(t) || 2  // some version of IE occationally fails to 
                // context-switch with timeout interval less than 2.
                );
            }

                // Cut "join" link.
            function unjoin() {
                if (this._join_thread) {
                    var self = this;
                    var it = this._join_thread._joined_list.head().find(function (it) {
                        return it === self;
            });
                    it.remove();
                    this._join_thread = null;
            }
            }


            Thread.TIME_SLICE = 20;

            function doNext() {
                cancel.call(this);
                var triplet = this._triplet;
                this._triplet = null;
                try {
                    current_thread = this;
                    var limit = (new Date).valueOf() + Thread.TIME_SLICE;
                    do {
                        try {
                            triplet = triplet.continuation.procedure.call(
                                          triplet.continuation.this_val, triplet.ret_val
                                     );
            } catch (e) {
                            if (e instanceof NoContinuationException) {
                                this._is_ended = 1;
                                this._result = e.ret_val;
                                while (!this._joined_list.isEmpty()) {
                                    var it = this._joined_list.head().value();
                                    unjoin.call(it);
                                    it._triplet.ret_val = e.ret_val;
                                    standBy.call(it);
            }
                                this._joined_list = null;
                                return;
            } else if (e instanceof NoExceptionHandlerException) {
                                e = e.thrown;
                                var joined_list = this._joined_list;
                                this._joined_list = null;
                                this._is_ended = -1;
                                this._result = e;
                                if (!joined_list.isEmpty()) {
                                    while (!joined_list.isEmpty()) {
                                        joined_list.head().value().notify(e);  // "notify" implies "unjoin".
            }
            } else if (!(e instanceof KillException)) {
                                    throw e;
            }
                                return;
            } else {
                                triplet.continuation = triplet.continuation.exception;
                                triplet.ret_val = e;
            }
            }
            } while (triplet.timeout === undefined && (new Date).valueOf() < limit);
            } finally {
                    current_thread = null;
            }
                this._triplet = triplet;
                if (triplet.timeout < 0) { /* Do nothing. */ }
            else { standBy.call(this, triplet.timeout); }
            }


            proto.notify = function (e) {
                if (current_thread === this) throw e;
                if (this._is_ended) throw new NotAliveError();
                cancel.call(this);
                unjoin.call(this);
                this._triplet.continuation = this._triplet.continuation.exception;
                this._triplet.ret_val = e;
                standBy.call(this);
                return e;
            };

            proto.kill = function (s) {
                return this.notify(arguments.length ? new KillException(s) : new KillException());
            };

            proto.join = function () {
                throw new Error("can't `join' in non-compiled functions");
            };

            proto.join.$Concurrent_Thread_compiled = function (this_val, args, cont) {
                //!TODO: check cyclic-join
                if (this_val._is_ended > 0) {  // this thread has already ended normally
                    return { continuation: cont, ret_val: this_val._result, timeout: undefined };
            } else if (this_val._is_ended < 0) {  // this thread has already ended by exception
                    throw this_val._result;
            } else {
                    this_val._joined_list.add(current_thread);
                    current_thread._join_thread = this_val;
                    return { continuation: cont, timeout: -1 };
            }
            };



            Thread.create = function (f /* , ... */) {
                if (typeof f != "function") throw new TypeError("can't create new thread from non-function value");
                if (typeof f.$Concurrent_Thread_compiled !== "function") f = this.compile(f);
                return f.async(null, Array.prototype.slice.call(arguments, 1, arguments.length));
            };


            Thread.self = function () {
                return current_thread;
            };


            Thread.sleep = function () {
                throw new Error("can't `sleep' in non-compiled functions");
            };

            Thread.sleep.$Concurrent_Thread_compiled = function (this_val, args, cont) {
                return {
                continuation: cont,
                ret_val: undefined,
                timeout: args[0] > 0 ? args[0] : 0
            };
            };


            Thread.stop = function () {
                throw new Error("can't `stop' in non-compiled functions");
            };

            Thread.stop.$Concurrent_Thread_compiled = function (this_val, args, cont) {
                return {
                continuation: cont,
                ret_val: undefined,
                timeout: -1
            };
            };


            Thread.yield = function () {
                throw new Error("can't `yield' in non-compiled functions");
            };

            Thread.yield.$Concurrent_Thread_compiled = function (this_val, args, cont) {
                return {
                continuation: cont,
                ret_val: undefined,
                timeout: 0
            };
            };


            var KillException = Thread.KillException = Exception.extend(
                function ($super, message) { $super(message); },
                {
                name: NAMESPACE + ".Thread.KillException",
                message: "thread killed"
            }
            );

            var NotAliveError = Thread.NotAliveError = Error.extend(
                function ($super, message) { $super(message); },
                {
                name: NAMESPACE + ".Thread.NotAliveError",
                message: "thread not alive"
            }
            );



                // Extends Function object.
            var proto = Function.prototype;

            proto.apply.$Concurrent_Thread_compiled = function (this_val, args, cont) {
                if (typeof this_val.$Concurrent_Thread_compiled == "function") {
                    return this_val.$Concurrent_Thread_compiled(args[0], args[1], cont);
            } else {
                    return {
                continuation: cont,
                ret_val: this_val.apply(args[0], args[1])
            };
            }
            };

            proto.call.$Concurrent_Thread_compiled = function (this_val, args, cont) {
                if (typeof this_val.$Concurrent_Thread_compiled == "function") {
                    return this_val.$Concurrent_Thread_compiled(args[0], Array.prototype.slice.call(args, 1, args.length), cont);
            } else {
                    return {
                continuation: cont,
                ret_val: this_val.apply(args[0], Array.prototype.slice.call(args, 1, args.length))
            };
            }
            };

            proto.async = function (this_val, args) {
                if (typeof this.$Concurrent_Thread_compiled != "function") throw new Error("this is not a compiled function");
                if (args === void 0) args = [];  // IE6 does not allow null or undefined-value as the second argument of Function.prototype.apply. That does not conform to ECMA262-3!
                return new THREAD(
                    this.$Concurrent_Thread_compiled(
                        this_val,
                        args,
                        initial_continuation
                    )
                );
            };


                        return {
                Thread: Thread
            };
            }();
            }
            }
            }.call(null)) {
                this.Concurrent.Thread = Thread;
            }
        }).call(null);
        (function () {
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Http || (typeof this.Concurrent.Thread.Http != 'object' && typeof this.Concurrent.Thread.Http != 'function')) this.Concurrent.Thread.Http = new Object();
            if (this.Concurrent.Thread.Http.send === undefined) this.Concurrent.Thread.Http.send = undefined;
            if (this.Concurrent.Thread.Http.get === undefined) this.Concurrent.Thread.Http.get = undefined;
            if (this.Concurrent.Thread.Http.post === undefined) this.Concurrent.Thread.Http.post = undefined;
            with (function () {
            with (Concurrent.Thread.Http) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Concurrent.Thread code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2006-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Concurrent.Thread.Http';




            var createXMLHttpRequest;  // Set up according to environment.
            try {
                new XMLHttpRequest();
                createXMLHttpRequest = function () {
                    return new XMLHttpRequest();
            };
            } catch (e) {
                try {
                // MSXML3 or later
                    new ActiveXObject("Msxml2.XMLHTTP");
                    createXMLHttpRequest = function () {
                        return new ActiveXObject("Msxml2.XMLHTTP");
            };
            } catch (e) {
                    try {
                // MSXML up to 2
                        new ActiveXObject("Microsoft.XMLHTTP");
                        createXMLHttpRequest = function () {
                            return new ActiveXObject("Microsoft.XMLHTTP");
            };
            } catch (e) {
                        throw new Error(NAMESPACE + ": can't load XMLHttpRequest object");
            }
            }
            }



            function send(method, url, body, headers) {
                throw new Error(NAMESPACE + ".send is unusable in non-compiled function");
            }

            var LoadedException = {};

            send.$Concurrent_Thread_compiled = function ($this, $args, $cont) {
                var method = $args[0], url = $args[1], body = $args[2], headers = $args[3];
                if (!headers || !(headers instanceof Array)) headers = [];
                var req = createXMLHttpRequest();
                req.open(method, url, true);
                for (var i = 0; i < headers.length; i += 2) {
                    req.setRequestHeader(headers[i], headers[i + 1]);
            }
                var self = Concurrent.Thread.self();
                var loaded = false;
                var cache_hit = true;
                req.onreadystatechange = function () {
                    if (req.readyState == 4) {
                        loaded = true;
                        if (!cache_hit) self.notify(LoadedException);
            }
            };
                req.send(body);  // Firefox occasionally causes "onload" event here. Maybe, it occurs in case of cache-hit.
                cache_hit = false;
                if (loaded) {
                    return {
                continuation: $cont,
                ret_val: req,
                timeout: undefined
            };
            } else {
                    var ex_handler = {
                procedure: function (e) {
                            if (e === LoadedException) {
                                return {
                continuation: $cont,
                ret_val: req,
                timeout: undefined
            };
            } else {
                                try { req.abort(); } catch (_) { }  // IE less than 7 does not support "abort".
                                return {
                continuation: $cont.exception,
                ret_val: e,
                timeout: undefined
            };
            }
            },
                this_val: null
            };
                    ex_handler.exception = ex_handler;  // Cyclic reference assures to abort request.
                    return {
                timeout: -1,
                continuation: {
                procedure: null,
                this_val: null,
                exception: ex_handler
            }
            };
            }
            };



            function get(url, headers) {
                throw new Error(NAMESPACE + ".get is unusable in non-compiled function");
            }

            get.$Concurrent_Thread_compiled = function ($this, $args, $cont) {
                return send.$Concurrent_Thread_compiled(
                    null,
                    ["GET", $args[0], $args[1], null],
                    $cont
                );
            }



            function post(url, body, headers) {
                throw new Error(NAMESPACE + ".post is unusable in non-compiled function");
            }

            post.$Concurrent_Thread_compiled = function ($this, $args, $cont) {
                var url = $args[0], body = $args[1], headers = $args[2];
                if (typeof body == "object") {
                    var vals = [];
                    for (var i in body) {
                        if (body.hasOwnProperty(i)) {
                            vals.push(encodeURIComponent(i) + "=" + encodeURIComponent(body[i]));
            }
            }
                    body = vals.join("&");
            }
                if (!headers || !(headers instanceof Array)) headers = [];
                var content_type_exists = false;
                for (var i = 0; i < headers.length; i += 2) {
                    if (String(headers[i]).match(/^Content-type$/i)) {
                        content_type_exists = true;
                        break;
            }
            }
                if (!content_type_exists) {
                    headers = headers.concat("Content-type", "application/x-www-form-urlencoded");
            }
                return send.$Concurrent_Thread_compiled(
                    null,
                    ["POST", url, body, headers],
                    $cont
                );
            };

                        return {
                send: send, post: post, get: get
            };
            }();
            }
            }.call(null)) {
                this.Concurrent.Thread.Http.send = send;
                this.Concurrent.Thread.Http.post = post;
                this.Concurrent.Thread.Http.get = get;
            }
        }).call(null);
        (function () {
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Cons || (typeof this.Data.Cons != 'object' && typeof this.Data.Cons != 'function')) this.Data.Cons = new Object();
            if (!this.Data.Cons.Util || (typeof this.Data.Cons.Util != 'object' && typeof this.Data.Cons.Util != 'function')) this.Data.Cons.Util = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Error || (typeof this.Data.Error != 'object' && typeof this.Data.Error != 'function')) this.Data.Error = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Cons || (typeof this.Data.Cons != 'object' && typeof this.Data.Cons != 'function')) this.Data.Cons = new Object();
            if (this.Data.Cons.Util.last === undefined) this.Data.Cons.Util.last = undefined;
            if (this.Data.Cons.Util.adder === undefined) this.Data.Cons.Util.adder = undefined;
            if (this.Data.Cons.Util.concat === undefined) this.Data.Cons.Util.concat = undefined;
            with (function () {
            with (Data.Error) {
            with (Data.Cons) {
            with (Data.Cons.Util) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Data.Cons code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Data.Cons.Util';











            function last(c) {
                if (!(c instanceof Cell)) throw new TypeError("argument is not cons-list");
                if (c.isNil()) return c;
                if (!(c.cdr instanceof Cell)) throw new TypeError("argument is not cons-list");
                while (!c.cdr.isNil()) {
                    c = c.cdr;
                    if (!(c.cdr instanceof Cell)) throw new TypeError("argument is not cons-list");
            }
                return c;
            }



            function adder(c) {
                c = last(c);
                if (c.isNil()) throw new IllegalStateError("can't append to nil");
                return function ( /* variable arguments */) {
                    c = last(c);
                    for (var i = 0; i < arguments.length; i++) {
                        c = c.cdr = new Cell(arguments[i], c.cdr);
            }
            };
            }



            function concat( /* variable arguments */) {
                if (arguments.length == 0) return nil();
                var head = arguments[0];
                var cell = last(head);
                for (var i = 1; i < arguments.length; i++) {
                    cell.cdr = arguments[i];
                    cell = last(cell);
            }
                return head;
            }


                        return {
                adder: adder, concat: concat, last: last
            };
            }();
            }
            }
            }
            }.call(null)) {
                this.Data.Cons.Util.adder = adder;
                this.Data.Cons.Util.concat = concat;
                this.Data.Cons.Util.last = last;
            }
        }).call(null);
        (function () {
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Compiler || (typeof this.Concurrent.Thread.Compiler != 'object' && typeof this.Concurrent.Thread.Compiler != 'function')) this.Concurrent.Thread.Compiler = new Object();
            if (this.Concurrent.Thread.Compiler.isAlpha === undefined) this.Concurrent.Thread.Compiler.isAlpha = undefined;
            if (this.Concurrent.Thread.Compiler.isDigit === undefined) this.Concurrent.Thread.Compiler.isDigit = undefined;
            if (this.Concurrent.Thread.Compiler.isHexDigit === undefined) this.Concurrent.Thread.Compiler.isHexDigit = undefined;
            if (this.Concurrent.Thread.Compiler.isLineTerminator === undefined) this.Concurrent.Thread.Compiler.isLineTerminator = undefined;
            if (this.Concurrent.Thread.Compiler.isSpace === undefined) this.Concurrent.Thread.Compiler.isSpace = undefined;
            if (this.Concurrent.Thread.Compiler.isFormatChar === undefined) this.Concurrent.Thread.Compiler.isFormatChar = undefined;
            if (this.Concurrent.Thread.Compiler.isIdentifierStart === undefined) this.Concurrent.Thread.Compiler.isIdentifierStart = undefined;
            if (this.Concurrent.Thread.Compiler.isIdentifierPart === undefined) this.Concurrent.Thread.Compiler.isIdentifierPart = undefined;
            with (function () {
            with (Concurrent.Thread.Compiler) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Concurrent.Thread code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2006-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Concurrent.Thread.Compiler';





            function isAlpha(c) {
                c = c.charCodeAt(0);
                // #generated# Last update: Tue, 01 Aug 2006 16:31:50 +0900
                return c <= 0x5A ?
                0x41 <= c :
                0x61 <= c && c <= 0x7A;
                // #/generated#
            }



            function isDigit(c) {
                c = c.charCodeAt(0);
                // #generated# Last update: Tue, 01 Aug 2006 21:02:15 +0900
                return 0x30 <= c && c <= 0x39;
                // #/generated#
            }



            function isHexDigit(c) {
                c = c.charCodeAt(0);
                // #generated# Last update: Tue, 01 Aug 2006 15:49:52 +0900
                return c <= 0x46 ?
                c <= 0x39 ?
                0x30 <= c :
                0x41 <= c :
                0x61 <= c && c <= 0x66;
                // #/generated#
            }



            function isLineTerminator(c) {
                switch (c.charCodeAt(0)) {
                case 0x000A:  // Line Feed           <LF>
                case 0x000D:  // Carriage Return     <CR>
                case 0x2028:  // Line separator      <LS>
                case 0x2029:  // Paragraph separator <PS>
                    return true;
                default:
                    return false;
            }
            }



            function isSpace(c) {
                c = c.charCodeAt(0);
                if (c <= 255) {
                    switch (c) {
                    case 0x0009:  // Tab            <TAB>
                    case 0x000B:  // Vertical Tab   <VT>
                    case 0x000C:  // Form Feed      <FF>
                    case 0x0020:  // Space          <SP>
                    case 0x00A0:  // No-break space <NBSP>
                        return true;
                    default:
                        return false;
            }
            }
            else {
                // the following code is derived from the Unicode category Zs based on:
                // http://www.unicode.org/Public/UNIDATA/extracted/DerivedGeneralCategory.txt
                // #generated# Last update: Tue, 01 Aug 2006 01:57:18 +0900
                    return c <= 0x180E ?
                    c <= 0xA0 ?
                    c <= 0x20 ?
                    0x20 <= c :
                    0xA0 <= c :
                    c <= 0x1680 ?
                    0x1680 <= c :
                    0x180E <= c :
                    c <= 0x202F ?
                    c <= 0x200A ?
                    0x2000 <= c :
                    0x202F <= c :
                    c <= 0x205F ?
                    0x205F <= c :
                    c === 0x3000;
                // #/generated#
            }
            }



            function isFormatChar(c) {
                c = c.charCodeAt(0);
                if (c <= 127) return false;  // optimization for ASCII characters
                // the following code is derived from the Unicode category Cf based on:
                // http://www.unicode.org/Public/UNIDATA/extracted/DerivedGeneralCategory.txt
                // #generated# Last update: Tue, 01 Aug 2006 01:50:39 +0900
                return c <= 0x202E ?
                c <= 0x70F ?
                c <= 0x603 ?
                c <= 0xAD ?
                0xAD <= c :
                0x600 <= c :
                c <= 0x6DD ?
                0x6DD <= c :
                0x70F <= c :
                c <= 0x200F ?
                c <= 0x17B5 ?
                0x17B4 <= c :
                0x200B <= c :
                0x202A <= c :
                c <= 0xFFFB ?
                c <= 0x206F ?
                c <= 0x2063 ?
                0x2060 <= c :
                0x206A <= c :
                c <= 0xFEFF ?
                0xFEFF <= c :
                0xFFF9 <= c :
                c <= 0xE0001 ?
                c <= 0x1D17A ?
                0x1D173 <= c :
                0xE0001 <= c :
                0xE0020 <= c && c <= 0xE007F;
                // #/generated#
            }



            function isIdentifierStart(c) {
                var c = c.charCodeAt(0);
                switch (c) {
                case 0x24:  // '$'
                case 0x5F:  // '_'
                    return true;
            }
                // the following code is derived from the Unicode category Lu, Ll, Lt, Lm, Lo, and Nl based on:
                // http://www.unicode.org/Public/UNIDATA/extracted/DerivedGeneralCategory.txt
                // #generated# Last update: Tue, 01 Aug 2006 01:47:30 +0900
                return c <= 0x1731 ?
                c <= 0xB95 ?
                c <= 0x961 ?
                c <= 0x587 ?
                c <= 0x37D ?
                c <= 0xD6 ?
                c <= 0xAA ?
                c <= 0x7A ?
                c <= 0x5A ?
                0x41 <= c :
                0x61 <= c :
                0xAA <= c :
                c <= 0xBA ?
                c <= 0xB5 ?
                0xB5 <= c :
                0xBA <= c :
                0xC0 <= c :
                c <= 0x2D1 ?
                c <= 0x2C1 ?
                c <= 0xF6 ?
                0xD8 <= c :
                0xF8 <= c :
                0x2C6 <= c :
                c <= 0x2EE ?
                c <= 0x2E4 ?
                0x2E0 <= c :
                0x2EE <= c :
                0x37A <= c :
                c <= 0x3F5 ?
                c <= 0x38C ?
                c <= 0x38A ?
                c <= 0x386 ?
                0x386 <= c :
                0x388 <= c :
                0x38C <= c :
                c <= 0x3CE ?
                c <= 0x3A1 ?
                0x38E <= c :
                0x3A3 <= c :
                0x3D0 <= c :
                c <= 0x556 ?
                c <= 0x513 ?
                c <= 0x481 ?
                0x3F7 <= c :
                0x48A <= c :
                0x531 <= c :
                c <= 0x559 ?
                0x559 <= c :
                0x561 <= c :
                c <= 0x710 ?
                c <= 0x6D3 ?
                c <= 0x63A ?
                c <= 0x5F2 ?
                c <= 0x5EA ?
                0x5D0 <= c :
                0x5F0 <= c :
                0x621 <= c :
                c <= 0x66F ?
                c <= 0x64A ?
                0x640 <= c :
                0x66E <= c :
                0x671 <= c :
                c <= 0x6EF ?
                c <= 0x6E6 ?
                c <= 0x6D5 ?
                0x6D5 <= c :
                0x6E5 <= c :
                0x6EE <= c :
                c <= 0x6FF ?
                c <= 0x6FC ?
                0x6FA <= c :
                0x6FF <= c :
                0x710 <= c :
                c <= 0x7F5 ?
                c <= 0x7A5 ?
                c <= 0x76D ?
                c <= 0x72F ?
                0x712 <= c :
                0x74D <= c :
                0x780 <= c :
                c <= 0x7EA ?
                c <= 0x7B1 ?
                0x7B1 <= c :
                0x7CA <= c :
                0x7F4 <= c :
                c <= 0x93D ?
                c <= 0x939 ?
                c <= 0x7FA ?
                0x7FA <= c :
                0x904 <= c :
                0x93D <= c :
                c <= 0x950 ?
                0x950 <= c :
                0x958 <= c :
                c <= 0xA8D ?
                c <= 0x9F1 ?
                c <= 0x9B2 ?
                c <= 0x990 ?
                c <= 0x98C ?
                c <= 0x97F ?
                0x97B <= c :
                0x985 <= c :
                0x98F <= c :
                c <= 0x9B0 ?
                c <= 0x9A8 ?
                0x993 <= c :
                0x9AA <= c :
                0x9B2 <= c :
                c <= 0x9CE ?
                c <= 0x9BD ?
                c <= 0x9B9 ?
                0x9B6 <= c :
                0x9BD <= c :
                0x9CE <= c :
                c <= 0x9E1 ?
                c <= 0x9DD ?
                0x9DC <= c :
                0x9DF <= c :
                0x9F0 <= c :
                c <= 0xA36 ?
                c <= 0xA28 ?
                c <= 0xA10 ?
                c <= 0xA0A ?
                0xA05 <= c :
                0xA0F <= c :
                0xA13 <= c :
                c <= 0xA33 ?
                c <= 0xA30 ?
                0xA2A <= c :
                0xA32 <= c :
                0xA35 <= c :
                c <= 0xA5E ?
                c <= 0xA5C ?
                c <= 0xA39 ?
                0xA38 <= c :
                0xA59 <= c :
                0xA5E <= c :
                c <= 0xA74 ?
                0xA72 <= c :
                0xA85 <= c :
                c <= 0xB28 ?
                c <= 0xABD ?
                c <= 0xAB0 ?
                c <= 0xAA8 ?
                c <= 0xA91 ?
                0xA8F <= c :
                0xA93 <= c :
                0xAAA <= c :
                c <= 0xAB9 ?
                c <= 0xAB3 ?
                0xAB2 <= c :
                0xAB5 <= c :
                0xABD <= c :
                c <= 0xB0C ?
                c <= 0xAE1 ?
                c <= 0xAD0 ?
                0xAD0 <= c :
                0xAE0 <= c :
                0xB05 <= c :
                c <= 0xB10 ?
                0xB0F <= c :
                0xB13 <= c :
                c <= 0xB61 ?
                c <= 0xB39 ?
                c <= 0xB33 ?
                c <= 0xB30 ?
                0xB2A <= c :
                0xB32 <= c :
                0xB35 <= c :
                c <= 0xB5D ?
                c <= 0xB3D ?
                0xB3D <= c :
                0xB5C <= c :
                0xB5F <= c :
                c <= 0xB8A ?
                c <= 0xB83 ?
                c <= 0xB71 ?
                0xB71 <= c :
                0xB83 <= c :
                0xB85 <= c :
                c <= 0xB90 ?
                0xB8E <= c :
                0xB92 <= c :
                c <= 0xEB0 ?
                c <= 0xD28 ?
                c <= 0xC61 ?
                c <= 0xBB9 ?
                c <= 0xB9F ?
                c <= 0xB9C ?
                c <= 0xB9A ?
                0xB99 <= c :
                0xB9C <= c :
                0xB9E <= c :
                c <= 0xBAA ?
                c <= 0xBA4 ?
                0xBA3 <= c :
                0xBA8 <= c :
                0xBAE <= c :
                c <= 0xC28 ?
                c <= 0xC10 ?
                c <= 0xC0C ?
                0xC05 <= c :
                0xC0E <= c :
                0xC12 <= c :
                c <= 0xC39 ?
                c <= 0xC33 ?
                0xC2A <= c :
                0xC35 <= c :
                0xC60 <= c :
                c <= 0xCBD ?
                c <= 0xCA8 ?
                c <= 0xC90 ?
                c <= 0xC8C ?
                0xC85 <= c :
                0xC8E <= c :
                0xC92 <= c :
                c <= 0xCB9 ?
                c <= 0xCB3 ?
                0xCAA <= c :
                0xCB5 <= c :
                0xCBD <= c :
                c <= 0xD0C ?
                c <= 0xCE1 ?
                c <= 0xCDE ?
                0xCDE <= c :
                0xCE0 <= c :
                0xD05 <= c :
                c <= 0xD10 ?
                0xD0E <= c :
                0xD12 <= c :
                c <= 0xE82 ?
                c <= 0xDBD ?
                c <= 0xD96 ?
                c <= 0xD61 ?
                c <= 0xD39 ?
                0xD2A <= c :
                0xD60 <= c :
                0xD85 <= c :
                c <= 0xDBB ?
                c <= 0xDB1 ?
                0xD9A <= c :
                0xDB3 <= c :
                0xDBD <= c :
                c <= 0xE33 ?
                c <= 0xE30 ?
                c <= 0xDC6 ?
                0xDC0 <= c :
                0xE01 <= c :
                0xE32 <= c :
                c <= 0xE46 ?
                0xE40 <= c :
                0xE81 <= c :
                c <= 0xE9F ?
                c <= 0xE8A ?
                c <= 0xE88 ?
                c <= 0xE84 ?
                0xE84 <= c :
                0xE87 <= c :
                0xE8A <= c :
                c <= 0xE97 ?
                c <= 0xE8D ?
                0xE8D <= c :
                0xE94 <= c :
                0xE99 <= c :
                c <= 0xEA7 ?
                c <= 0xEA5 ?
                c <= 0xEA3 ?
                0xEA1 <= c :
                0xEA5 <= c :
                0xEA7 <= c :
                c <= 0xEAB ?
                0xEAA <= c :
                0xEAD <= c :
                c <= 0x1258 ?
                c <= 0x102A ?
                c <= 0xF00 ?
                c <= 0xEC4 ?
                c <= 0xEBD ?
                c <= 0xEB3 ?
                0xEB2 <= c :
                0xEBD <= c :
                0xEC0 <= c :
                c <= 0xEDD ?
                c <= 0xEC6 ?
                0xEC6 <= c :
                0xEDC <= c :
                0xF00 <= c :
                c <= 0xF8B ?
                c <= 0xF6A ?
                c <= 0xF47 ?
                0xF40 <= c :
                0xF49 <= c :
                0xF88 <= c :
                c <= 0x1027 ?
                c <= 0x1021 ?
                0x1000 <= c :
                0x1023 <= c :
                0x1029 <= c :
                c <= 0x11A2 ?
                c <= 0x10FA ?
                c <= 0x10C5 ?
                c <= 0x1055 ?
                0x1050 <= c :
                0x10A0 <= c :
                0x10D0 <= c :
                c <= 0x1159 ?
                c <= 0x10FC ?
                0x10FC <= c :
                0x1100 <= c :
                0x115F <= c :
                c <= 0x124D ?
                c <= 0x1248 ?
                c <= 0x11F9 ?
                0x11A8 <= c :
                0x1200 <= c :
                0x124A <= c :
                c <= 0x1256 ?
                0x1250 <= c :
                0x1258 <= c :
                c <= 0x1315 ?
                c <= 0x12BE ?
                c <= 0x128D ?
                c <= 0x1288 ?
                c <= 0x125D ?
                0x125A <= c :
                0x1260 <= c :
                0x128A <= c :
                c <= 0x12B5 ?
                c <= 0x12B0 ?
                0x1290 <= c :
                0x12B2 <= c :
                0x12B8 <= c :
                c <= 0x12D6 ?
                c <= 0x12C5 ?
                c <= 0x12C0 ?
                0x12C0 <= c :
                0x12C2 <= c :
                0x12C8 <= c :
                c <= 0x1310 ?
                0x12D8 <= c :
                0x1312 <= c :
                c <= 0x169A ?
                c <= 0x13F4 ?
                c <= 0x138F ?
                c <= 0x135A ?
                0x1318 <= c :
                0x1380 <= c :
                0x13A0 <= c :
                c <= 0x1676 ?
                c <= 0x166C ?
                0x1401 <= c :
                0x166F <= c :
                0x1681 <= c :
                c <= 0x170C ?
                c <= 0x16F0 ?
                c <= 0x16EA ?
                0x16A0 <= c :
                0x16EE <= c :
                0x1700 <= c :
                c <= 0x1711 ?
                0x170E <= c :
                0x1720 <= c :
                c <= 0xA805 ?
                c <= 0x2115 ?
                c <= 0x1F4D ?
                c <= 0x19A9 ?
                c <= 0x17DC ?
                c <= 0x1770 ?
                c <= 0x176C ?
                c <= 0x1751 ?
                0x1740 <= c :
                0x1760 <= c :
                0x176E <= c :
                c <= 0x17D7 ?
                c <= 0x17B3 ?
                0x1780 <= c :
                0x17D7 <= c :
                0x17DC <= c :
                c <= 0x191C ?
                c <= 0x18A8 ?
                c <= 0x1877 ?
                0x1820 <= c :
                0x1880 <= c :
                0x1900 <= c :
                c <= 0x1974 ?
                c <= 0x196D ?
                0x1950 <= c :
                0x1970 <= c :
                0x1980 <= c :
                c <= 0x1E9B ?
                c <= 0x1B33 ?
                c <= 0x1A16 ?
                c <= 0x19C7 ?
                0x19C1 <= c :
                0x1A00 <= c :
                0x1B05 <= c :
                c <= 0x1DBF ?
                c <= 0x1B4B ?
                0x1B45 <= c :
                0x1D00 <= c :
                0x1E00 <= c :
                c <= 0x1F1D ?
                c <= 0x1F15 ?
                c <= 0x1EF9 ?
                0x1EA0 <= c :
                0x1F00 <= c :
                0x1F18 <= c :
                c <= 0x1F45 ?
                0x1F20 <= c :
                0x1F48 <= c :
                c <= 0x1FD3 ?
                c <= 0x1FB4 ?
                c <= 0x1F5B ?
                c <= 0x1F59 ?
                c <= 0x1F57 ?
                0x1F50 <= c :
                0x1F59 <= c :
                0x1F5B <= c :
                c <= 0x1F7D ?
                c <= 0x1F5D ?
                0x1F5D <= c :
                0x1F5F <= c :
                0x1F80 <= c :
                c <= 0x1FC4 ?
                c <= 0x1FBE ?
                c <= 0x1FBC ?
                0x1FB6 <= c :
                0x1FBE <= c :
                0x1FC2 <= c :
                c <= 0x1FCC ?
                0x1FC6 <= c :
                0x1FD0 <= c :
                c <= 0x207F ?
                c <= 0x1FF4 ?
                c <= 0x1FEC ?
                c <= 0x1FDB ?
                0x1FD6 <= c :
                0x1FE0 <= c :
                0x1FF2 <= c :
                c <= 0x2071 ?
                c <= 0x1FFC ?
                0x1FF6 <= c :
                0x2071 <= c :
                0x207F <= c :
                c <= 0x2107 ?
                c <= 0x2102 ?
                c <= 0x2094 ?
                0x2090 <= c :
                0x2102 <= c :
                0x2107 <= c :
                c <= 0x2113 ?
                0x210A <= c :
                0x2115 <= c :
                c <= 0x2DBE ?
                c <= 0x2C5E ?
                c <= 0x2139 ?
                c <= 0x2126 ?
                c <= 0x2124 ?
                c <= 0x211D ?
                0x2119 <= c :
                0x2124 <= c :
                0x2126 <= c :
                c <= 0x212D ?
                c <= 0x2128 ?
                0x2128 <= c :
                0x212A <= c :
                0x212F <= c :
                c <= 0x214E ?
                c <= 0x2149 ?
                c <= 0x213F ?
                0x213C <= c :
                0x2145 <= c :
                0x214E <= c :
                c <= 0x2C2E ?
                c <= 0x2184 ?
                0x2160 <= c :
                0x2C00 <= c :
                0x2C30 <= c :
                c <= 0x2D6F ?
                c <= 0x2CE4 ?
                c <= 0x2C77 ?
                c <= 0x2C6C ?
                0x2C60 <= c :
                0x2C74 <= c :
                0x2C80 <= c :
                c <= 0x2D65 ?
                c <= 0x2D25 ?
                0x2D00 <= c :
                0x2D30 <= c :
                0x2D6F <= c :
                c <= 0x2DAE ?
                c <= 0x2DA6 ?
                c <= 0x2D96 ?
                0x2D80 <= c :
                0x2DA0 <= c :
                0x2DA8 <= c :
                c <= 0x2DB6 ?
                0x2DB0 <= c :
                0x2DB8 <= c :
                c <= 0x30FA ?
                c <= 0x3029 ?
                c <= 0x2DD6 ?
                c <= 0x2DCE ?
                c <= 0x2DC6 ?
                0x2DC0 <= c :
                0x2DC8 <= c :
                0x2DD0 <= c :
                c <= 0x3007 ?
                c <= 0x2DDE ?
                0x2DD8 <= c :
                0x3005 <= c :
                0x3021 <= c :
                c <= 0x3096 ?
                c <= 0x303C ?
                c <= 0x3035 ?
                0x3031 <= c :
                0x3038 <= c :
                0x3041 <= c :
                c <= 0x309F ?
                0x309D <= c :
                0x30A1 <= c :
                c <= 0x4DB5 ?
                c <= 0x318E ?
                c <= 0x312C ?
                c <= 0x30FF ?
                0x30FC <= c :
                0x3105 <= c :
                0x3131 <= c :
                c <= 0x31FF ?
                c <= 0x31B7 ?
                0x31A0 <= c :
                0x31F0 <= c :
                0x3400 <= c :
                c <= 0xA71A ?
                c <= 0xA48C ?
                c <= 0x9FBB ?
                0x4E00 <= c :
                0xA000 <= c :
                0xA717 <= c :
                c <= 0xA801 ?
                0xA800 <= c :
                0xA803 <= c :
                c <= 0x1049D ?
                c <= 0xFEFC ?
                c <= 0xFB36 ?
                c <= 0xFA6A ?
                c <= 0xA873 ?
                c <= 0xA822 ?
                c <= 0xA80A ?
                0xA807 <= c :
                0xA80C <= c :
                0xA840 <= c :
                c <= 0xFA2D ?
                c <= 0xD7A3 ?
                0xAC00 <= c :
                0xF900 <= c :
                0xFA30 <= c :
                c <= 0xFB17 ?
                c <= 0xFB06 ?
                c <= 0xFAD9 ?
                0xFA70 <= c :
                0xFB00 <= c :
                0xFB13 <= c :
                c <= 0xFB28 ?
                c <= 0xFB1D ?
                0xFB1D <= c :
                0xFB1F <= c :
                0xFB2A <= c :
                c <= 0xFD3D ?
                c <= 0xFB41 ?
                c <= 0xFB3E ?
                c <= 0xFB3C ?
                0xFB38 <= c :
                0xFB3E <= c :
                0xFB40 <= c :
                c <= 0xFBB1 ?
                c <= 0xFB44 ?
                0xFB43 <= c :
                0xFB46 <= c :
                0xFBD3 <= c :
                c <= 0xFDFB ?
                c <= 0xFDC7 ?
                c <= 0xFD8F ?
                0xFD50 <= c :
                0xFD92 <= c :
                0xFDF0 <= c :
                c <= 0xFE74 ?
                0xFE70 <= c :
                0xFE76 <= c :
                c <= 0x1003D ?
                c <= 0xFFD7 ?
                c <= 0xFFBE ?
                c <= 0xFF5A ?
                c <= 0xFF3A ?
                0xFF21 <= c :
                0xFF41 <= c :
                0xFF66 <= c :
                c <= 0xFFCF ?
                c <= 0xFFC7 ?
                0xFFC2 <= c :
                0xFFCA <= c :
                0xFFD2 <= c :
                c <= 0x10026 ?
                c <= 0x1000B ?
                c <= 0xFFDC ?
                0xFFDA <= c :
                0x10000 <= c :
                0x1000D <= c :
                c <= 0x1003A ?
                0x10028 <= c :
                0x1003C <= c :
                c <= 0x1034A ?
                c <= 0x100FA ?
                c <= 0x1005D ?
                c <= 0x1004D ?
                0x1003F <= c :
                0x10050 <= c :
                0x10080 <= c :
                c <= 0x1031E ?
                c <= 0x10174 ?
                0x10140 <= c :
                0x10300 <= c :
                0x10330 <= c :
                c <= 0x103CF ?
                c <= 0x103C3 ?
                c <= 0x1039D ?
                0x10380 <= c :
                0x103A0 <= c :
                0x103C8 <= c :
                c <= 0x103D5 ?
                0x103D1 <= c :
                0x10400 <= c :
                c <= 0x1D505 ?
                c <= 0x1236E ?
                c <= 0x1083F ?
                c <= 0x10835 ?
                c <= 0x10808 ?
                c <= 0x10805 ?
                0x10800 <= c :
                0x10808 <= c :
                0x1080A <= c :
                c <= 0x1083C ?
                c <= 0x10838 ?
                0x10837 <= c :
                0x1083C <= c :
                0x1083F <= c :
                c <= 0x10A13 ?
                c <= 0x10A00 ?
                c <= 0x10915 ?
                0x10900 <= c :
                0x10A00 <= c :
                0x10A10 <= c :
                c <= 0x10A33 ?
                c <= 0x10A17 ?
                0x10A15 <= c :
                0x10A19 <= c :
                0x12000 <= c :
                c <= 0x1D4A6 ?
                c <= 0x1D49C ?
                c <= 0x1D454 ?
                c <= 0x12462 ?
                0x12400 <= c :
                0x1D400 <= c :
                0x1D456 <= c :
                c <= 0x1D4A2 ?
                c <= 0x1D49F ?
                0x1D49E <= c :
                0x1D4A2 <= c :
                0x1D4A5 <= c :
                c <= 0x1D4BB ?
                c <= 0x1D4B9 ?
                c <= 0x1D4AC ?
                0x1D4A9 <= c :
                0x1D4AE <= c :
                0x1D4BB <= c :
                c <= 0x1D4C3 ?
                0x1D4BD <= c :
                0x1D4C5 <= c :
                c <= 0x1D6DA ?
                c <= 0x1D544 ?
                c <= 0x1D51C ?
                c <= 0x1D514 ?
                c <= 0x1D50A ?
                0x1D507 <= c :
                0x1D50D <= c :
                0x1D516 <= c :
                c <= 0x1D53E ?
                c <= 0x1D539 ?
                0x1D51E <= c :
                0x1D53B <= c :
                0x1D540 <= c :
                c <= 0x1D6A5 ?
                c <= 0x1D550 ?
                c <= 0x1D546 ?
                0x1D546 <= c :
                0x1D54A <= c :
                0x1D552 <= c :
                c <= 0x1D6C0 ?
                0x1D6A8 <= c :
                0x1D6C2 <= c :
                c <= 0x1D788 ?
                c <= 0x1D734 ?
                c <= 0x1D714 ?
                c <= 0x1D6FA ?
                0x1D6DC <= c :
                0x1D6FC <= c :
                0x1D716 <= c :
                c <= 0x1D76E ?
                c <= 0x1D74E ?
                0x1D736 <= c :
                0x1D750 <= c :
                0x1D770 <= c :
                c <= 0x1D7CB ?
                c <= 0x1D7C2 ?
                c <= 0x1D7A8 ?
                0x1D78A <= c :
                0x1D7AA <= c :
                0x1D7C4 <= c :
                c <= 0x2A6D6 ?
                0x20000 <= c :
                0x2F800 <= c && c <= 0x2FA1D;
                // #/generated#
            }



            function isIdentifierPart(c) {
                var c = c.charCodeAt(0);
                switch (c) {
                case 0x24:  // '$'
                case 0x5F:  // '_'
                    return true;
            }
                // the following code is derived from the Unicode category Lu, Ll, Lt, Lm, Lo, Nl, Mn, Mc, Nd, and Pc based on:
                // http://www.unicode.org/Public/UNIDATA/extracted/DerivedGeneralCategory.txt
                // #generated# Last update: Tue, 01 Aug 2006 02:00:01 +0900
                return c <= 0x12B0 ?
                c <= 0xB90 ?
                c <= 0x990 ?
                c <= 0x5BF ?
                c <= 0x37D ?
                c <= 0xD6 ?
                c <= 0x7A ?
                c <= 0x5A ?
                c <= 0x39 ?
                0x30 <= c :
                0x41 <= c :
                c <= 0x5F ?
                0x5F <= c :
                0x61 <= c :
                c <= 0xB5 ?
                c <= 0xAA ?
                0xAA <= c :
                0xB5 <= c :
                c <= 0xBA ?
                0xBA <= c :
                0xC0 <= c :
                c <= 0x2E4 ?
                c <= 0x2C1 ?
                c <= 0xF6 ?
                0xD8 <= c :
                0xF8 <= c :
                c <= 0x2D1 ?
                0x2C6 <= c :
                0x2E0 <= c :
                c <= 0x36F ?
                c <= 0x2EE ?
                0x2EE <= c :
                0x300 <= c :
                0x37A <= c :
                c <= 0x481 ?
                c <= 0x3A1 ?
                c <= 0x38A ?
                c <= 0x386 ?
                0x386 <= c :
                0x388 <= c :
                c <= 0x38C ?
                0x38C <= c :
                0x38E <= c :
                c <= 0x3F5 ?
                c <= 0x3CE ?
                0x3A3 <= c :
                0x3D0 <= c :
                0x3F7 <= c :
                c <= 0x559 ?
                c <= 0x513 ?
                c <= 0x486 ?
                0x483 <= c :
                0x48A <= c :
                c <= 0x556 ?
                0x531 <= c :
                0x559 <= c :
                c <= 0x5BD ?
                c <= 0x587 ?
                0x561 <= c :
                0x591 <= c :
                0x5BF <= c :
                c <= 0x6FF ?
                c <= 0x63A ?
                c <= 0x5EA ?
                c <= 0x5C5 ?
                c <= 0x5C2 ?
                0x5C1 <= c :
                0x5C4 <= c :
                c <= 0x5C7 ?
                0x5C7 <= c :
                0x5D0 <= c :
                c <= 0x615 ?
                c <= 0x5F2 ?
                0x5F0 <= c :
                0x610 <= c :
                0x621 <= c :
                c <= 0x6DC ?
                c <= 0x669 ?
                c <= 0x65E ?
                0x640 <= c :
                0x660 <= c :
                c <= 0x6D3 ?
                0x66E <= c :
                0x6D5 <= c :
                c <= 0x6FC ?
                c <= 0x6E8 ?
                0x6DF <= c :
                0x6EA <= c :
                0x6FF <= c :
                c <= 0x94D ?
                c <= 0x7F5 ?
                c <= 0x76D ?
                c <= 0x74A ?
                0x710 <= c :
                0x74D <= c :
                c <= 0x7B1 ?
                0x780 <= c :
                0x7C0 <= c :
                c <= 0x939 ?
                c <= 0x7FA ?
                0x7FA <= c :
                0x901 <= c :
                0x93C <= c :
                c <= 0x97F ?
                c <= 0x963 ?
                c <= 0x954 ?
                0x950 <= c :
                0x958 <= c :
                c <= 0x96F ?
                0x966 <= c :
                0x97B <= c :
                c <= 0x98C ?
                c <= 0x983 ?
                0x981 <= c :
                0x985 <= c :
                0x98F <= c :
                c <= 0xA91 ?
                c <= 0xA28 ?
                c <= 0x9D7 ?
                c <= 0x9B9 ?
                c <= 0x9B0 ?
                c <= 0x9A8 ?
                0x993 <= c :
                0x9AA <= c :
                c <= 0x9B2 ?
                0x9B2 <= c :
                0x9B6 <= c :
                c <= 0x9C8 ?
                c <= 0x9C4 ?
                0x9BC <= c :
                0x9C7 <= c :
                c <= 0x9CE ?
                0x9CB <= c :
                0x9D7 <= c :
                c <= 0xA03 ?
                c <= 0x9E3 ?
                c <= 0x9DD ?
                0x9DC <= c :
                0x9DF <= c :
                c <= 0x9F1 ?
                0x9E6 <= c :
                0xA01 <= c :
                c <= 0xA10 ?
                c <= 0xA0A ?
                0xA05 <= c :
                0xA0F <= c :
                0xA13 <= c :
                c <= 0xA48 ?
                c <= 0xA39 ?
                c <= 0xA33 ?
                c <= 0xA30 ?
                0xA2A <= c :
                0xA32 <= c :
                c <= 0xA36 ?
                0xA35 <= c :
                0xA38 <= c :
                c <= 0xA42 ?
                c <= 0xA3C ?
                0xA3C <= c :
                0xA3E <= c :
                0xA47 <= c :
                c <= 0xA74 ?
                c <= 0xA5C ?
                c <= 0xA4D ?
                0xA4B <= c :
                0xA59 <= c :
                c <= 0xA5E ?
                0xA5E <= c :
                0xA66 <= c :
                c <= 0xA8D ?
                c <= 0xA83 ?
                0xA81 <= c :
                0xA85 <= c :
                0xA8F <= c :
                c <= 0xB28 ?
                c <= 0xACD ?
                c <= 0xAB9 ?
                c <= 0xAB0 ?
                c <= 0xAA8 ?
                0xA93 <= c :
                0xAAA <= c :
                c <= 0xAB3 ?
                0xAB2 <= c :
                0xAB5 <= c :
                c <= 0xAC9 ?
                c <= 0xAC5 ?
                0xABC <= c :
                0xAC7 <= c :
                0xACB <= c :
                c <= 0xB03 ?
                c <= 0xAE3 ?
                c <= 0xAD0 ?
                0xAD0 <= c :
                0xAE0 <= c :
                c <= 0xAEF ?
                0xAE6 <= c :
                0xB01 <= c :
                c <= 0xB10 ?
                c <= 0xB0C ?
                0xB05 <= c :
                0xB0F <= c :
                0xB13 <= c :
                c <= 0xB57 ?
                c <= 0xB43 ?
                c <= 0xB33 ?
                c <= 0xB30 ?
                0xB2A <= c :
                0xB32 <= c :
                c <= 0xB39 ?
                0xB35 <= c :
                0xB3C <= c :
                c <= 0xB4D ?
                c <= 0xB48 ?
                0xB47 <= c :
                0xB4B <= c :
                0xB56 <= c :
                c <= 0xB71 ?
                c <= 0xB61 ?
                c <= 0xB5D ?
                0xB5C <= c :
                0xB5F <= c :
                c <= 0xB6F ?
                0xB66 <= c :
                0xB71 <= c :
                c <= 0xB8A ?
                c <= 0xB83 ?
                0xB82 <= c :
                0xB85 <= c :
                0xB8E <= c :
                c <= 0xDD6 ?
                c <= 0xCB3 ?
                c <= 0xC10 ?
                c <= 0xBC2 ?
                c <= 0xB9F ?
                c <= 0xB9A ?
                c <= 0xB95 ?
                0xB92 <= c :
                0xB99 <= c :
                c <= 0xB9C ?
                0xB9C <= c :
                0xB9E <= c :
                c <= 0xBAA ?
                c <= 0xBA4 ?
                0xBA3 <= c :
                0xBA8 <= c :
                c <= 0xBB9 ?
                0xBAE <= c :
                0xBBE <= c :
                c <= 0xBEF ?
                c <= 0xBCD ?
                c <= 0xBC8 ?
                0xBC6 <= c :
                0xBCA <= c :
                c <= 0xBD7 ?
                0xBD7 <= c :
                0xBE6 <= c :
                c <= 0xC0C ?
                c <= 0xC03 ?
                0xC01 <= c :
                0xC05 <= c :
                0xC0E <= c :
                c <= 0xC56 ?
                c <= 0xC44 ?
                c <= 0xC33 ?
                c <= 0xC28 ?
                0xC12 <= c :
                0xC2A <= c :
                c <= 0xC39 ?
                0xC35 <= c :
                0xC3E <= c :
                c <= 0xC4D ?
                c <= 0xC48 ?
                0xC46 <= c :
                0xC4A <= c :
                0xC55 <= c :
                c <= 0xC8C ?
                c <= 0xC6F ?
                c <= 0xC61 ?
                0xC60 <= c :
                0xC66 <= c :
                c <= 0xC83 ?
                0xC82 <= c :
                0xC85 <= c :
                c <= 0xCA8 ?
                c <= 0xC90 ?
                0xC8E <= c :
                0xC92 <= c :
                0xCAA <= c :
                c <= 0xD43 ?
                c <= 0xCE3 ?
                c <= 0xCCD ?
                c <= 0xCC4 ?
                c <= 0xCB9 ?
                0xCB5 <= c :
                0xCBC <= c :
                c <= 0xCC8 ?
                0xCC6 <= c :
                0xCCA <= c :
                c <= 0xCDE ?
                c <= 0xCD6 ?
                0xCD5 <= c :
                0xCDE <= c :
                0xCE0 <= c :
                c <= 0xD10 ?
                c <= 0xD03 ?
                c <= 0xCEF ?
                0xCE6 <= c :
                0xD02 <= c :
                c <= 0xD0C ?
                0xD05 <= c :
                0xD0E <= c :
                c <= 0xD39 ?
                c <= 0xD28 ?
                0xD12 <= c :
                0xD2A <= c :
                0xD3E <= c :
                c <= 0xD96 ?
                c <= 0xD61 ?
                c <= 0xD4D ?
                c <= 0xD48 ?
                0xD46 <= c :
                0xD4A <= c :
                c <= 0xD57 ?
                0xD57 <= c :
                0xD60 <= c :
                c <= 0xD83 ?
                c <= 0xD6F ?
                0xD66 <= c :
                0xD82 <= c :
                0xD85 <= c :
                c <= 0xDC6 ?
                c <= 0xDBB ?
                c <= 0xDB1 ?
                0xD9A <= c :
                0xDB3 <= c :
                c <= 0xDBD ?
                0xDBD <= c :
                0xDC0 <= c :
                c <= 0xDD4 ?
                c <= 0xDCA ?
                0xDCA <= c :
                0xDCF <= c :
                0xDD6 <= c :
                c <= 0xF39 ?
                c <= 0xEA7 ?
                c <= 0xE88 ?
                c <= 0xE4E ?
                c <= 0xDF3 ?
                c <= 0xDDF ?
                0xDD8 <= c :
                0xDF2 <= c :
                c <= 0xE3A ?
                0xE01 <= c :
                0xE40 <= c :
                c <= 0xE82 ?
                c <= 0xE59 ?
                0xE50 <= c :
                0xE81 <= c :
                c <= 0xE84 ?
                0xE84 <= c :
                0xE87 <= c :
                c <= 0xE9F ?
                c <= 0xE8D ?
                c <= 0xE8A ?
                0xE8A <= c :
                0xE8D <= c :
                c <= 0xE97 ?
                0xE94 <= c :
                0xE99 <= c :
                c <= 0xEA5 ?
                c <= 0xEA3 ?
                0xEA1 <= c :
                0xEA5 <= c :
                0xEA7 <= c :
                c <= 0xED9 ?
                c <= 0xEC4 ?
                c <= 0xEB9 ?
                c <= 0xEAB ?
                0xEAA <= c :
                0xEAD <= c :
                c <= 0xEBD ?
                0xEBB <= c :
                0xEC0 <= c :
                c <= 0xECD ?
                c <= 0xEC6 ?
                0xEC6 <= c :
                0xEC8 <= c :
                0xED0 <= c :
                c <= 0xF29 ?
                c <= 0xF00 ?
                c <= 0xEDD ?
                0xEDC <= c :
                0xF00 <= c :
                c <= 0xF19 ?
                0xF18 <= c :
                0xF20 <= c :
                c <= 0xF37 ?
                c <= 0xF35 ?
                0xF35 <= c :
                0xF37 <= c :
                0xF39 <= c :
                c <= 0x1059 ?
                c <= 0xFC6 ?
                c <= 0xF8B ?
                c <= 0xF6A ?
                c <= 0xF47 ?
                0xF3E <= c :
                0xF49 <= c :
                c <= 0xF84 ?
                0xF71 <= c :
                0xF86 <= c :
                c <= 0xFBC ?
                c <= 0xF97 ?
                0xF90 <= c :
                0xF99 <= c :
                0xFC6 <= c :
                c <= 0x1032 ?
                c <= 0x1027 ?
                c <= 0x1021 ?
                0x1000 <= c :
                0x1023 <= c :
                c <= 0x102A ?
                0x1029 <= c :
                0x102C <= c :
                c <= 0x1049 ?
                c <= 0x1039 ?
                0x1036 <= c :
                0x1040 <= c :
                0x1050 <= c :
                c <= 0x1248 ?
                c <= 0x1159 ?
                c <= 0x10FA ?
                c <= 0x10C5 ?
                0x10A0 <= c :
                0x10D0 <= c :
                c <= 0x10FC ?
                0x10FC <= c :
                0x1100 <= c :
                c <= 0x11F9 ?
                c <= 0x11A2 ?
                0x115F <= c :
                0x11A8 <= c :
                0x1200 <= c :
                c <= 0x125D ?
                c <= 0x1256 ?
                c <= 0x124D ?
                0x124A <= c :
                0x1250 <= c :
                c <= 0x1258 ?
                0x1258 <= c :
                0x125A <= c :
                c <= 0x128D ?
                c <= 0x1288 ?
                0x1260 <= c :
                0x128A <= c :
                0x1290 <= c :
                c <= 0x30FF ?
                c <= 0x1FB4 ?
                c <= 0x180D ?
                c <= 0x16EA ?
                c <= 0x135A ?
                c <= 0x12C5 ?
                c <= 0x12BE ?
                c <= 0x12B5 ?
                0x12B2 <= c :
                0x12B8 <= c :
                c <= 0x12C0 ?
                0x12C0 <= c :
                0x12C2 <= c :
                c <= 0x1310 ?
                c <= 0x12D6 ?
                0x12C8 <= c :
                0x12D8 <= c :
                c <= 0x1315 ?
                0x1312 <= c :
                0x1318 <= c :
                c <= 0x166C ?
                c <= 0x138F ?
                c <= 0x135F ?
                0x135F <= c :
                0x1380 <= c :
                c <= 0x13F4 ?
                0x13A0 <= c :
                0x1401 <= c :
                c <= 0x169A ?
                c <= 0x1676 ?
                0x166F <= c :
                0x1681 <= c :
                0x16A0 <= c :
                c <= 0x1770 ?
                c <= 0x1734 ?
                c <= 0x170C ?
                c <= 0x16F0 ?
                0x16EE <= c :
                0x1700 <= c :
                c <= 0x1714 ?
                0x170E <= c :
                0x1720 <= c :
                c <= 0x176C ?
                c <= 0x1753 ?
                0x1740 <= c :
                0x1760 <= c :
                0x176E <= c :
                c <= 0x17D7 ?
                c <= 0x17B3 ?
                c <= 0x1773 ?
                0x1772 <= c :
                0x1780 <= c :
                c <= 0x17D3 ?
                0x17B6 <= c :
                0x17D7 <= c :
                c <= 0x17E9 ?
                c <= 0x17DD ?
                0x17DC <= c :
                0x17E0 <= c :
                0x180B <= c :
                c <= 0x1B59 ?
                c <= 0x196D ?
                c <= 0x191C ?
                c <= 0x1877 ?
                c <= 0x1819 ?
                0x1810 <= c :
                0x1820 <= c :
                c <= 0x18A9 ?
                0x1880 <= c :
                0x1900 <= c :
                c <= 0x193B ?
                c <= 0x192B ?
                0x1920 <= c :
                0x1930 <= c :
                0x1946 <= c :
                c <= 0x19D9 ?
                c <= 0x19A9 ?
                c <= 0x1974 ?
                0x1970 <= c :
                0x1980 <= c :
                c <= 0x19C9 ?
                0x19B0 <= c :
                0x19D0 <= c :
                c <= 0x1B4B ?
                c <= 0x1A1B ?
                0x1A00 <= c :
                0x1B00 <= c :
                0x1B50 <= c :
                c <= 0x1F45 ?
                c <= 0x1EF9 ?
                c <= 0x1DCA ?
                c <= 0x1B73 ?
                0x1B6B <= c :
                0x1D00 <= c :
                c <= 0x1E9B ?
                0x1DFE <= c :
                0x1EA0 <= c :
                c <= 0x1F1D ?
                c <= 0x1F15 ?
                0x1F00 <= c :
                0x1F18 <= c :
                0x1F20 <= c :
                c <= 0x1F5B ?
                c <= 0x1F57 ?
                c <= 0x1F4D ?
                0x1F48 <= c :
                0x1F50 <= c :
                c <= 0x1F59 ?
                0x1F59 <= c :
                0x1F5B <= c :
                c <= 0x1F7D ?
                c <= 0x1F5D ?
                0x1F5D <= c :
                0x1F5F <= c :
                0x1F80 <= c :
                c <= 0x2149 ?
                c <= 0x20DC ?
                c <= 0x1FF4 ?
                c <= 0x1FCC ?
                c <= 0x1FBE ?
                c <= 0x1FBC ?
                0x1FB6 <= c :
                0x1FBE <= c :
                c <= 0x1FC4 ?
                0x1FC2 <= c :
                0x1FC6 <= c :
                c <= 0x1FDB ?
                c <= 0x1FD3 ?
                0x1FD0 <= c :
                0x1FD6 <= c :
                c <= 0x1FEC ?
                0x1FE0 <= c :
                0x1FF2 <= c :
                c <= 0x2071 ?
                c <= 0x2040 ?
                c <= 0x1FFC ?
                0x1FF6 <= c :
                0x203F <= c :
                c <= 0x2054 ?
                0x2054 <= c :
                0x2071 <= c :
                c <= 0x2094 ?
                c <= 0x207F ?
                0x207F <= c :
                0x2090 <= c :
                0x20D0 <= c :
                c <= 0x211D ?
                c <= 0x2107 ?
                c <= 0x20EF ?
                c <= 0x20E1 ?
                0x20E1 <= c :
                0x20E5 <= c :
                c <= 0x2102 ?
                0x2102 <= c :
                0x2107 <= c :
                c <= 0x2115 ?
                c <= 0x2113 ?
                0x210A <= c :
                0x2115 <= c :
                0x2119 <= c :
                c <= 0x212D ?
                c <= 0x2126 ?
                c <= 0x2124 ?
                0x2124 <= c :
                0x2126 <= c :
                c <= 0x2128 ?
                0x2128 <= c :
                0x212A <= c :
                c <= 0x213F ?
                c <= 0x2139 ?
                0x212F <= c :
                0x213C <= c :
                0x2145 <= c :
                c <= 0x2DB6 ?
                c <= 0x2CE4 ?
                c <= 0x2C5E ?
                c <= 0x2184 ?
                c <= 0x214E ?
                0x214E <= c :
                0x2160 <= c :
                c <= 0x2C2E ?
                0x2C00 <= c :
                0x2C30 <= c :
                c <= 0x2C77 ?
                c <= 0x2C6C ?
                0x2C60 <= c :
                0x2C74 <= c :
                0x2C80 <= c :
                c <= 0x2D96 ?
                c <= 0x2D65 ?
                c <= 0x2D25 ?
                0x2D00 <= c :
                0x2D30 <= c :
                c <= 0x2D6F ?
                0x2D6F <= c :
                0x2D80 <= c :
                c <= 0x2DAE ?
                c <= 0x2DA6 ?
                0x2DA0 <= c :
                0x2DA8 <= c :
                0x2DB0 <= c :
                c <= 0x302F ?
                c <= 0x2DD6 ?
                c <= 0x2DC6 ?
                c <= 0x2DBE ?
                0x2DB8 <= c :
                0x2DC0 <= c :
                c <= 0x2DCE ?
                0x2DC8 <= c :
                0x2DD0 <= c :
                c <= 0x3007 ?
                c <= 0x2DDE ?
                0x2DD8 <= c :
                0x3005 <= c :
                0x3021 <= c :
                c <= 0x309A ?
                c <= 0x303C ?
                c <= 0x3035 ?
                0x3031 <= c :
                0x3038 <= c :
                c <= 0x3096 ?
                0x3041 <= c :
                0x3099 <= c :
                c <= 0x30FA ?
                c <= 0x309F ?
                0x309D <= c :
                0x30A1 <= c :
                0x30FC <= c :
                c <= 0x1049D ?
                c <= 0xFE23 ?
                c <= 0xFB06 ?
                c <= 0xA71A ?
                c <= 0x31FF ?
                c <= 0x318E ?
                c <= 0x312C ?
                0x3105 <= c :
                0x3131 <= c :
                c <= 0x31B7 ?
                0x31A0 <= c :
                0x31F0 <= c :
                c <= 0x9FBB ?
                c <= 0x4DB5 ?
                0x3400 <= c :
                0x4E00 <= c :
                c <= 0xA48C ?
                0xA000 <= c :
                0xA717 <= c :
                c <= 0xFA2D ?
                c <= 0xA873 ?
                c <= 0xA827 ?
                0xA800 <= c :
                0xA840 <= c :
                c <= 0xD7A3 ?
                0xAC00 <= c :
                0xF900 <= c :
                c <= 0xFAD9 ?
                c <= 0xFA6A ?
                0xFA30 <= c :
                0xFA70 <= c :
                0xFB00 <= c :
                c <= 0xFB44 ?
                c <= 0xFB3C ?
                c <= 0xFB28 ?
                c <= 0xFB17 ?
                0xFB13 <= c :
                0xFB1D <= c :
                c <= 0xFB36 ?
                0xFB2A <= c :
                0xFB38 <= c :
                c <= 0xFB41 ?
                c <= 0xFB3E ?
                0xFB3E <= c :
                0xFB40 <= c :
                0xFB43 <= c :
                c <= 0xFDC7 ?
                c <= 0xFD3D ?
                c <= 0xFBB1 ?
                0xFB46 <= c :
                0xFBD3 <= c :
                c <= 0xFD8F ?
                0xFD50 <= c :
                0xFD92 <= c :
                c <= 0xFE0F ?
                c <= 0xFDFB ?
                0xFDF0 <= c :
                0xFE00 <= c :
                0xFE20 <= c :
                c <= 0x1000B ?
                c <= 0xFF3F ?
                c <= 0xFEFC ?
                c <= 0xFE4F ?
                c <= 0xFE34 ?
                0xFE33 <= c :
                0xFE4D <= c :
                c <= 0xFE74 ?
                0xFE70 <= c :
                0xFE76 <= c :
                c <= 0xFF3A ?
                c <= 0xFF19 ?
                0xFF10 <= c :
                0xFF21 <= c :
                0xFF3F <= c :
                c <= 0xFFCF ?
                c <= 0xFFBE ?
                c <= 0xFF5A ?
                0xFF41 <= c :
                0xFF66 <= c :
                c <= 0xFFC7 ?
                0xFFC2 <= c :
                0xFFCA <= c :
                c <= 0xFFDC ?
                c <= 0xFFD7 ?
                0xFFD2 <= c :
                0xFFDA <= c :
                0x10000 <= c :
                c <= 0x10174 ?
                c <= 0x1004D ?
                c <= 0x1003A ?
                c <= 0x10026 ?
                0x1000D <= c :
                0x10028 <= c :
                c <= 0x1003D ?
                0x1003C <= c :
                0x1003F <= c :
                c <= 0x100FA ?
                c <= 0x1005D ?
                0x10050 <= c :
                0x10080 <= c :
                0x10140 <= c :
                c <= 0x103C3 ?
                c <= 0x1034A ?
                c <= 0x1031E ?
                0x10300 <= c :
                0x10330 <= c :
                c <= 0x1039D ?
                0x10380 <= c :
                0x103A0 <= c :
                c <= 0x103D5 ?
                c <= 0x103CF ?
                0x103C8 <= c :
                0x103D1 <= c :
                0x10400 <= c :
                c <= 0x1D4AC ?
                c <= 0x10A3F ?
                c <= 0x10915 ?
                c <= 0x10835 ?
                c <= 0x10805 ?
                c <= 0x104A9 ?
                0x104A0 <= c :
                0x10800 <= c :
                c <= 0x10808 ?
                0x10808 <= c :
                0x1080A <= c :
                c <= 0x1083C ?
                c <= 0x10838 ?
                0x10837 <= c :
                0x1083C <= c :
                c <= 0x1083F ?
                0x1083F <= c :
                0x10900 <= c :
                c <= 0x10A17 ?
                c <= 0x10A06 ?
                c <= 0x10A03 ?
                0x10A00 <= c :
                0x10A05 <= c :
                c <= 0x10A13 ?
                0x10A0C <= c :
                0x10A15 <= c :
                c <= 0x10A3A ?
                c <= 0x10A33 ?
                0x10A19 <= c :
                0x10A38 <= c :
                0x10A3F <= c :
                c <= 0x1D1AD ?
                c <= 0x1D172 ?
                c <= 0x12462 ?
                c <= 0x1236E ?
                0x12000 <= c :
                0x12400 <= c :
                c <= 0x1D169 ?
                0x1D165 <= c :
                0x1D16D <= c :
                c <= 0x1D18B ?
                c <= 0x1D182 ?
                0x1D17B <= c :
                0x1D185 <= c :
                0x1D1AA <= c :
                c <= 0x1D49F ?
                c <= 0x1D454 ?
                c <= 0x1D244 ?
                0x1D242 <= c :
                0x1D400 <= c :
                c <= 0x1D49C ?
                0x1D456 <= c :
                0x1D49E <= c :
                c <= 0x1D4A6 ?
                c <= 0x1D4A2 ?
                0x1D4A2 <= c :
                0x1D4A5 <= c :
                0x1D4A9 <= c :
                c <= 0x1D6C0 ?
                c <= 0x1D51C ?
                c <= 0x1D505 ?
                c <= 0x1D4BB ?
                c <= 0x1D4B9 ?
                0x1D4AE <= c :
                0x1D4BB <= c :
                c <= 0x1D4C3 ?
                0x1D4BD <= c :
                0x1D4C5 <= c :
                c <= 0x1D514 ?
                c <= 0x1D50A ?
                0x1D507 <= c :
                0x1D50D <= c :
                0x1D516 <= c :
                c <= 0x1D546 ?
                c <= 0x1D53E ?
                c <= 0x1D539 ?
                0x1D51E <= c :
                0x1D53B <= c :
                c <= 0x1D544 ?
                0x1D540 <= c :
                0x1D546 <= c :
                c <= 0x1D6A5 ?
                c <= 0x1D550 ?
                0x1D54A <= c :
                0x1D552 <= c :
                0x1D6A8 <= c :
                c <= 0x1D788 ?
                c <= 0x1D734 ?
                c <= 0x1D6FA ?
                c <= 0x1D6DA ?
                0x1D6C2 <= c :
                0x1D6DC <= c :
                c <= 0x1D714 ?
                0x1D6FC <= c :
                0x1D716 <= c :
                c <= 0x1D76E ?
                c <= 0x1D74E ?
                0x1D736 <= c :
                0x1D750 <= c :
                0x1D770 <= c :
                c <= 0x1D7FF ?
                c <= 0x1D7C2 ?
                c <= 0x1D7A8 ?
                0x1D78A <= c :
                0x1D7AA <= c :
                c <= 0x1D7CB ?
                0x1D7C4 <= c :
                0x1D7CE <= c :
                c <= 0x2FA1D ?
                c <= 0x2A6D6 ?
                0x20000 <= c :
                0x2F800 <= c :
                0xE0100 <= c && c <= 0xE01EF;
                // #/generated#
            }


                        return {
                isDigit: isDigit, isIdentifierStart: isIdentifierStart, isHexDigit: isHexDigit, isAlpha: isAlpha, isSpace: isSpace, isLineTerminator: isLineTerminator, isFormatChar: isFormatChar, isIdentifierPart: isIdentifierPart
            };
            }();
            }
            }.call(null)) {
                this.Concurrent.Thread.Compiler.isDigit = isDigit;
                this.Concurrent.Thread.Compiler.isIdentifierStart = isIdentifierStart;
                this.Concurrent.Thread.Compiler.isHexDigit = isHexDigit;
                this.Concurrent.Thread.Compiler.isAlpha = isAlpha;
                this.Concurrent.Thread.Compiler.isSpace = isSpace;
                this.Concurrent.Thread.Compiler.isLineTerminator = isLineTerminator;
                this.Concurrent.Thread.Compiler.isFormatChar = isFormatChar;
                this.Concurrent.Thread.Compiler.isIdentifierPart = isIdentifierPart;
            }
        }).call(null);
        (function () {
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Compiler || (typeof this.Concurrent.Thread.Compiler != 'object' && typeof this.Concurrent.Thread.Compiler != 'function')) this.Concurrent.Thread.Compiler = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Error || (typeof this.Data.Error != 'object' && typeof this.Data.Error != 'function')) this.Data.Error = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Iterator || (typeof this.Data.Iterator != 'object' && typeof this.Data.Iterator != 'function')) this.Data.Iterator = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Functional || (typeof this.Data.Functional != 'object' && typeof this.Data.Functional != 'function')) this.Data.Functional = new Object();
            if (this.Concurrent.Thread.Compiler.IdentifierSet === undefined) this.Concurrent.Thread.Compiler.IdentifierSet = undefined;
            with (function () {
            with (Data.Error) {
            with (Data.Iterator) {
            with (Data.Functional) {
            with (Concurrent.Thread.Compiler) {

                    return function () {
                        var VERSION;
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Concurrent.Thread code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2006-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */


            NAMESPACE = 'Concurrent.Thread.Compiler';













            var MIN_INT = Math.pow(-2, 53);


            function IdentifierSet() {
                this._set = {};
                this._state_no = MIN_INT;
            }

            var proto = IdentifierSet.prototype = new Set();
            proto.constructor = IdentifierSet;


            var hasOwnProperty = Object.prototype.hasOwnProperty;

            proto.contains = function ( /* variable arguments */) {
                for (var i = 0; i < arguments.length; i++) {
                    var id = arguments[i];
                    if (!(id instanceof Identifier)) throw new TypeError("arguments[" + i + "] is not of type Identifier");
                // Because "hasOwnProperty" itself can be used as identifier,
                // we need to avoid "this._set.hasOwnProperty".
                    if (!hasOwnProperty.call(this._set, id.valueOf())) return false;
            }
                return true;
            };


            proto.add = function ( /* variable arguments */) {
                var changed = false;
                for (var i = 0; i < arguments.length; i++) {
                    var id = arguments[i];
                    if (!(id instanceof Identifier)) throw new TypeError("arguments[" + i + "] is not of type Identifier");
                    var p = id.valueOf();
                    if (this._set[p] !== id) {
                        this._set[p] = id;
                        this._state_no++;
                        changed = true;
            }
            }
                return changed;
            };


            proto.remove = function ( /* variable arguments */) {
                var changed = false;
                for (var i = 0; i < arguments.length; i++) {
                    var id = arguments[i];
                    if (!(id instanceof Identifier)) throw new TypeError("argument is not of type Identifier");
                    var p = id.valueOf();
                    if (hasOwnProperty.call(this._set, p)) {
                        delete this._set[p];
                        this._state_no++;
                        changed = true;
            }
            }
                return changed;
            };


            proto.toArray = function () {
                var arr = [];
                for (var i in this._set) {
                    if (hasOwnProperty.call(this._set, i)) arr.push(this._set[i]);
            }
                return arr;
            };


            proto.iterator = function () {
                return new IdIterator(this, this.toArray(), 0);
            };



            function IdIterator(parent, elems, index) {
                this._parent = parent;
                this._elems = elems;
                this._index = index;
                this._state_no = parent._state_no;
            }

            var proto = IdIterator.prototype = new Iterator();
            proto.constructor = IdIterator;

            proto.isBoundTo = function (o) {
                return this._parent === o;
            };

            proto.isTail = function () {
                if (this._state_no !== this._parent._state_no) throw new IllegalStateError("parent IdentifierSet object's state has been changed");
                return this._index >= this._elems.length;
            };

            proto.next = function () {
                if (this._state_no !== this._parent._state_no) throw new IllegalStateError("parent IdentifierSet object's state has been changed");
                if (this.isTail()) throw new NoSuchElementError("no more element after the tail");
                return new IdIterator(this._parent, this._elems, this._index + 1);
            };

            proto.value = function () {
                if (this._state_no !== this._parent._state_no) throw new IllegalStateError("parent IdentifierSet object's state has been changed");
                return this._elems[this._index];
            };

                        return {
                IdentifierSet: IdentifierSet
            };
            }();
            }
            }
            }
            }
            }.call(null)) {
                this.Concurrent.Thread.Compiler.IdentifierSet = IdentifierSet;
            }
        }).call(null);
        (function () {
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Compiler || (typeof this.Concurrent.Thread.Compiler != 'object' && typeof this.Concurrent.Thread.Compiler != 'function')) this.Concurrent.Thread.Compiler = new Object();
            if (this.Concurrent.Thread.Compiler.ErrorReporter === undefined) this.Concurrent.Thread.Compiler.ErrorReporter = undefined;
            with (function () {
            with (Concurrent.Thread.Compiler) {

                    return function () {
                        var VERSION;
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Rhino code, released
                 * May 6, 1999.
                 *
                 * The Initial Developer of the Original Code is
                 * Netscape Communications Corporation.
                 * Portions created by the Initial Developer are Copyright (C) 1997-1999
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *   Norris Boyd
                 *   Daisuke Maki
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * the GNU General Public License Version 2 or later (the "GPL"), in which
                 * case the provisions of the GPL are applicable instead of those above. If
                 * you wish to allow use of your version of this file only under the terms of
                 * the GPL and not to allow others to use your version of this file under the
                 * MPL, indicate your decision by deleting the provisions above and replacing
                 * them with the notice and other provisions required by the GPL. If you do
                 * not delete the provisions above, a recipient may use your version of this
                 * file under either the MPL or the GPL.
                 *
                 * ***** END LICENSE BLOCK ***** */

                /**
                 * This file is based on the file ErrorReporter.java in Rhino 1.6R5.
                 */

                // API class


            NAMESPACE = 'Concurrent.Thread.Compiler';



                /**
                 * This is interface defines a protocol for the reporting of
                 * errors during JavaScript translation or execution.
                 *
                 * @author Norris Boyd
                 */


            function ErrorReporter() {
                // This is kind of abstract class.
                // It provides null-implementations for the methods as default.
            }

            var proto = ErrorReporter.prototype;


                /**
                 * Report a warning.
                 *
                 * The implementing class may choose to ignore the warning
                 * if it desires.
                 *
                 * @param message a String describing the warning
                 * @param line the line number associated with the warning
                 * @param lineSource the text of the line (may be null)
                 * @param lineOffset the offset into lineSource where problem was detected
                 */
            proto.warning = function (message, line, lineSource, lineOffset) { };


                /**
                 * Report an error.
                 *
                 * The implementing class is free to throw an exception if
                 * it desires.
                 *
                 * If execution has not yet begun, the JavaScript engine is
                 * free to find additional errors rather than terminating
                 * the translation. It will not execute a script that had
                 * errors, however.
                 *
                 * @param message a String describing the error
                 * @param line the line number associated with the error
                 * @param lineSource the text of the line (may be null)
                 * @param lineOffset the offset into lineSource where problem was detected
                 */
            proto.error = function (message, line, lineSource, lineOffset) { };


                        return {
                ErrorReporter: ErrorReporter
            };
            }();
            }
            }.call(null)) {
                this.Concurrent.Thread.Compiler.ErrorReporter = ErrorReporter;
            }
        }).call(null);
        (function () {
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Error || (typeof this.Data.Error != 'object' && typeof this.Data.Error != 'function')) this.Data.Error = new Object();
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (this.Concurrent.Thread.Mutex === undefined) this.Concurrent.Thread.Mutex = undefined;
            with (function () {
            with (Data) {
            with (Data.Error) {
            with (Concurrent) {
            with (Concurrent.Thread) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Concurrent.Thread code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2008
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Concurrent.Thread';














            function Mutex() {
                this._acquiring = null;
                this._waiting = new LinkedList();
            }

            var proto = Mutex.prototype;


            proto.isAcquirable = function () {
                return !this._acquiring && this._waiting.isEmpty();
            };


            proto.acquire = function () {
                throw new Error("can't `acquire' in non-converted function");
            };

            proto.acquire.$Concurrent_Thread_compiled = function ($this, $args, $cont) {
                if ($this.isAcquirable()) {
                    $this._acquiring = Thread.self();
                    return {
                continuation: $cont,
                ret_val: void 0,
                timeout: void 0
            };
            } else {
                    $this._waiting.push(Thread.self());
                    var callee = arguments.callee;
                    return {
                continuation: {
                procedure: null,
                this_val: null,
                exception: {
                procedure: function (e) {
                                    if (e === releasedException) {
                                        if ($this._waiting.shift() !== Thread.self()) {
                                            return {
                continuation: $cont.exception,
                ret_val: new IllegalStateError("unknown state (maybe bug)"),
                timeout: void 0
            };
            }
                                        $this._acquiring = Thread.self();
                                        return {
                continuation: $cont,
                ret_val: void 0,
                timeout: void 0
            };
            } else {
                                        $this._waiting.head().find(function (it) {
                                            return it === Thread.self();
            }).remove();
                                        return {
                continuation: $cont.exception,
                ret_val: e,
                timeout: void 0
            };
            }
            },
                this_val: null,
                exception: $cont.exception
            }
            },
                ret_val: void 0,
                timeout: -1
            };
            }
            };


            proto.release = function () {
                if (!this._acquiring) {
                    throw new IllegalStateError("mutex is not locked");
            }
                if (this._acquiring !== Thread.self()) {
                    throw new IllegalStateError("mutex can be released only by the thread locking it");
            }
                this._acquiring = null;
                if (!this._waiting.isEmpty()) {
                    this._waiting.head().value().notify(releasedException);
            }
            };


            var releasedException = {};

                        return {
                Mutex: Mutex
            };
            }();
            }
            }
            }
            }
            }.call(null)) {
                this.Concurrent.Thread.Mutex = Mutex;
            }
        }).call(null);
        (function () {
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Compiler || (typeof this.Concurrent.Thread.Compiler != 'object' && typeof this.Concurrent.Thread.Compiler != 'function')) this.Concurrent.Thread.Compiler = new Object();
            if (!this.Concurrent.Thread.Compiler.Kit || (typeof this.Concurrent.Thread.Compiler.Kit != 'object' && typeof this.Concurrent.Thread.Compiler.Kit != 'function')) this.Concurrent.Thread.Compiler.Kit = new Object();
            if (this.Concurrent.Thread.Compiler.Kit.printTrees === undefined) this.Concurrent.Thread.Compiler.Kit.printTrees = undefined;
            if (this.Concurrent.Thread.Compiler.Kit.codeBug === undefined) this.Concurrent.Thread.Compiler.Kit.codeBug = undefined;
            with (function () {
            with (Concurrent.Thread.Compiler.Kit) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Rhino code, released
                 * May 6, 1999.
                 *
                 * The Initial Developer of the Original Code is
                 * Netscape Communications Corporation.
                 * Portions created by the Initial Developer are Copyright (C) 1997-1999
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *   Igor Bukanov, igor@fastmail.fm
                 *   Daisuke Maki
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * the GNU General Public License Version 2 or later (the "GPL"), in which
                 * case the provisions of the GPL are applicable instead of those above. If
                 * you wish to allow use of your version of this file only under the terms of
                 * the GPL and not to allow others to use your version of this file under the
                 * MPL, indicate your decision by deleting the provisions above and replacing
                 * them with the notice and other provisions required by the GPL. If you do
                 * not delete the provisions above, a recipient may use your version of this
                 * file under either the MPL or the GPL.
                 *
                 * ***** END LICENSE BLOCK ***** */

                /**
                 * This file is based on the file Kit.java in Rhino 1.6R5.
                 */




            NAMESPACE = 'Concurrent.Thread.Compiler.Kit';








            var printTrees = false;  // debug flag



            function codeBug( /* variable arguments */) {
                var str = "";
                for (var i = 0; i < arguments.length; i++) str += arguments[i];
                var e = new Data.Error.IllegalStateError("FAILED ASSERTION: " + str);
                var s = e.toString();
                if (e.stack) s += "\n----------\n" + e.stack;
                alert(s);
                throw e;
            }


                        return {
                printTrees: printTrees, codeBug: codeBug
            };
            }();
            }
            }.call(null)) {
                this.Concurrent.Thread.Compiler.Kit.printTrees = printTrees;
                this.Concurrent.Thread.Compiler.Kit.codeBug = codeBug;
            }
        }).call(null);
        (function () {
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Continuation || (typeof this.Concurrent.Thread.Continuation != 'object' && typeof this.Concurrent.Thread.Continuation != 'function')) this.Concurrent.Thread.Continuation = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Error || (typeof this.Data.Error != 'object' && typeof this.Data.Error != 'function')) this.Data.Error = new Object();
            if (this.Concurrent.Thread.Continuation.callcc === undefined) this.Concurrent.Thread.Continuation.callcc = undefined;
            if (this.Concurrent.Thread.Continuation.getCC === undefined) this.Concurrent.Thread.Continuation.getCC = undefined;
            if (this.Concurrent.Thread.Continuation.currentContinuation === undefined) this.Concurrent.Thread.Continuation.currentContinuation = undefined;
            if (this.Concurrent.Thread.Continuation.ContinuationCalledException === undefined) this.Concurrent.Thread.Continuation.ContinuationCalledException = undefined;
            with (function () {
            with (Data.Error) {
            with (Concurrent.Thread.Continuation) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Concurrent.Thread code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2008
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Concurrent.Thread.Continuation';










            function callcc() {
                throw new Error("can't call `" + NAMESPACE + ".callcc' in non-threaded functions");
            }

            callcc.$Concurrent_Thread_compiled = function ($this, $args, $cont) {
                function continuation() {
                    throw new Error("can't call any captured continuation in non-threaded functions");
            }
                continuation.$Concurrent_Thread_compiled = function ($this, $args, _) {
                    return {
                continuation: $cont,
                timeout: void 0,
                ret_val: $args[0]
            };
            };
                var f = $args[0];
                return f && typeof f.$Concurrent_Thread_compiled === "function"
                         ? f.$Concurrent_Thread_compiled(null, [continuation], $cont)
                         : { continuation: $cont, ret_val: f(continuation), timeout: void 0 };
            };



            function getCC() {
                throw new Error("can't call `" + NAMESPACE + ".getCC' in non-threaded functions");
            }

            getCC.$Concurrent_Thread_compiled = function ($this, $args, $cont) {
                function continuation() {
                    throw new Error("can't call any captured continuation in non-threaded functions");
            }
                continuation.$Concurrent_Thread_compiled = function ($this, $args, _) {
                    return {
                continuation: $cont,
                timeout: void 0,
                ret_val: $args[0]
            };
            };
                return { continuation: $cont, ret_val: continuation, timeout: void 0 };
            };



            function currentContinuation() {
                throw new Error("can't call `" + NAMESPACE + ".currentContinuation' in non-threaded functions");
            }

            currentContinuation.$Concurrent_Thread_compiled = function ($this, $args, $cont) {
                function continuation() {
                    throw new Error("can't call any captured continuation in non-threaded functions");
            }
                continuation.$Concurrent_Thread_compiled = function ($this, $args, _) {
                    return {
                continuation: $cont.exception,
                timeout: void 0,
                ret_val: new ContinuationCalledException($args)
            };
            };
                return {
                continuation: $cont,
                timeout: void 0,
                ret_val: continuation
            };
            };



            var ContinuationCalledException = Exception.extend(
                function ($super, args) {
                    $super("continuation called");
                    this.args = args;
            },
                { name: NAMESPACE + ".ContinuationCalledException" }
            );

                        return {
                ContinuationCalledException: ContinuationCalledException, callcc: callcc, getCC: getCC, currentContinuation: currentContinuation
            };
            }();
            }
            }
            }.call(null)) {
                this.Concurrent.Thread.Continuation.ContinuationCalledException = ContinuationCalledException;
                this.Concurrent.Thread.Continuation.callcc = callcc;
                this.Concurrent.Thread.Continuation.getCC = getCC;
                this.Concurrent.Thread.Continuation.currentContinuation = currentContinuation;
            }
        }).call(null);
        (function () {
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Compiler || (typeof this.Concurrent.Thread.Compiler != 'object' && typeof this.Concurrent.Thread.Compiler != 'function')) this.Concurrent.Thread.Compiler = new Object();
            if (this.Concurrent.Thread.Compiler.Token === undefined) this.Concurrent.Thread.Compiler.Token = undefined;
            with (function () {
            with (Concurrent.Thread.Compiler) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Rhino code, released
                 * May 6, 1999.
                 *
                 * The Initial Developer of the Original Code is
                 * Netscape Communications Corporation.
                 * Portions created by the Initial Developer are Copyright (C) 1997-1999
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *   Roger Lawrence
                 *   Mike McCabe
                 *   Igor Bukanov
                 *   Milen Nankov
                 *   Daisuke Maki
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * the GNU General Public License Version 2 or later (the "GPL"), in which
                 * case the provisions of the GPL are applicable instead of those above. If
                 * you wish to allow use of your version of this file only under the terms of
                 * the GPL and not to allow others to use your version of this file under the
                 * MPL, indicate your decision by deleting the provisions above and replacing
                 * them with the notice and other provisions required by the GPL. If you do
                 * not delete the provisions above, a recipient may use your version of this
                 * file under either the MPL or the GPL.
                 *
                 * ***** END LICENSE BLOCK ***** */

                /**
                 * This file is based on the file Token.java in Rhino 1.6R5.
                 */





            NAMESPACE = 'Concurrent.Thread.Compiler';







            var Token = {};

                // Although Token is in fact a namespace, we here implements it
                // "manually" because of efficiency.


                // start enum
            Token.ERROR = -1; // well-known as the only code < EOF
            Token.EOF = 0;  // end of file token - (not EOF_CHAR)
            Token.EOL = 1;  // end of line

                // Interpreter reuses the following as bytecodes
            Token.FIRST_BYTECODE_TOKEN = 2;

            Token.ENTERWITH = 2;
            Token.LEAVEWITH = 3;
            Token.RETURN = 4;
            Token.GOTO = 5;
            Token.IFEQ = 6;
            Token.IFNE = 7;
            Token.SETNAME = 8;
            Token.BITOR = 9;
            Token.BITXOR = 10;
            Token.BITAND = 11;
            Token.EQ = 12;
            Token.NE = 13;
            Token.LT = 14;
            Token.LE = 15;
            Token.GT = 16;
            Token.GE = 17;
            Token.LSH = 18;
            Token.RSH = 19;
            Token.URSH = 20;
            Token.ADD = 21;
            Token.SUB = 22;
            Token.MUL = 23;
            Token.DIV = 24;
            Token.MOD = 25;
            Token.NOT = 26;
            Token.BITNOT = 27;
            Token.POS = 28;
            Token.NEG = 29;
            Token.NEW = 30;
            Token.DELPROP = 31;
            Token.TYPEOF = 32;
            Token.GETPROP = 33;
            Token.SETPROP = 34;
            Token.GETELEM = 35;
            Token.SETELEM = 36;
            Token.CALL = 37;
            Token.NAME = 38;
            Token.NUMBER = 39;
            Token.STRING = 40;
            Token.NULL = 41;
            Token.THIS = 42;
            Token.FALSE = 43;
            Token.TRUE = 44;
            Token.SHEQ = 45;   // shallow equality (===)
            Token.SHNE = 46;   // shallow inequality (!==)
            Token.REGEXP = 47;
            Token.BINDNAME = 48;
            Token.THROW = 49;
            Token.RETHROW = 50; // rethrow caught execetion: catch (e if ) use it
            Token.IN = 51;
            Token.INSTANCEOF = 52;
            Token.LOCAL_LOAD = 53;
            Token.GETVAR = 54;
            Token.SETVAR = 55;
            Token.CATCH_SCOPE = 56;
            Token.ENUM_INIT_KEYS = 57;
            Token.ENUM_INIT_VALUES = 58;
            Token.ENUM_NEXT = 59;
            Token.ENUM_ID = 60;
            Token.THISFN = 61;
            Token.RETURN_RESULT = 62; // to return prevoisly stored return result
            Token.ARRAYLIT = 63; // array literal
            Token.OBJECTLIT = 64; // object literal
            Token.GET_REF = 65; // *reference
            Token.SET_REF = 66; // *reference    : something
            Token.DEL_REF = 67; // delete reference
            Token.REF_CALL = 68; // f(args)    = something or f(args)++
            Token.REF_SPECIAL = 69; // reference for special properties like __proto

                // For XML support:
            Token.DEFAULTNAMESPACE = 70; // default xml namespace =
            Token.ESCXMLATTR = 71;
            Token.ESCXMLTEXT = 72;
            Token.REF_MEMBER = 73; // Reference for x.@y, x..y etc.
            Token.REF_NS_MEMBER = 74; // Reference for x.ns::y, x..ns::y etc.
            Token.REF_NAME = 75; // Reference for @y, @[y] etc.
            Token.REF_NS_NAME = 76; // Reference for ns::y, @ns::y@[y] etc.

                // End of interpreter bytecodes

            Token.LAST_BYTECODE_TOKEN = Token.REF_NS_NAME;

            Token.TRY = 77;
            Token.SEMI = 78;  // semicolon
            Token.LB = 79;  // left and right brackets
            Token.RB = 80;
            Token.LC = 81;  // left and right curlies (braces)
            Token.RC = 82;
            Token.LP = 83;  // left and right parentheses
            Token.RP = 84;
            Token.COMMA = 85;  // comma operator

            Token.ASSIGN = 86;  // simple assignment  (=)
            Token.ASSIGN_BITOR = 87;  // |=
            Token.ASSIGN_BITXOR = 88;  // ^=
            Token.ASSIGN_BITAND = 89;  // |=
            Token.ASSIGN_LSH = 90;  // <<=
            Token.ASSIGN_RSH = 91;  // >>=
            Token.ASSIGN_URSH = 92;  // >>>=
            Token.ASSIGN_ADD = 93;  // +=
            Token.ASSIGN_SUB = 94;  // -=
            Token.ASSIGN_MUL = 95;  // *=
            Token.ASSIGN_DIV = 96;  // /=
            Token.ASSIGN_MOD = 97;  // %=

            Token.FIRST_ASSIGN = Token.ASSIGN;
            Token.LAST_ASSIGN = Token.ASSIGN_MOD;

            Token.HOOK = 98; // conditional (?:)
            Token.COLON = 99;
            Token.OR = 100; // logical or (||)
            Token.AND = 101; // logical and (&&)
            Token.INC = 102; // increment/decrement (++ --)
            Token.DEC = 103;
            Token.DOT = 104; // member operator (.)
            Token.FUNCTION = 105; // function keyword
            Token.EXPORT = 106; // export keyword
            Token.IMPORT = 107; // import keyword
            Token.IF = 108; // if keyword
            Token.ELSE = 109; // else keyword
            Token.SWITCH = 110; // switch keyword
            Token.CASE = 111; // case keyword
            Token.DEFAULT = 112; // default keyword
            Token.WHILE = 113; // while keyword
            Token.DO = 114; // do keyword
            Token.FOR = 115; // for keyword
            Token.BREAK = 116; // break keyword
            Token.CONTINUE = 117; // continue keyword
            Token.VAR = 118; // var keyword
            Token.WITH = 119; // with keyword
            Token.CATCH = 120; // catch keyword
            Token.FINALLY = 121; // finally keyword
            Token.VOID = 122; // void keyword
            Token.RESERVED = 123; // reserved keywords

            Token.EMPTY = 124;

                /* types used for the parse tree - these never get returned
                 * by the scanner.
                 */

            Token.BLOCK = 125; // statement block
            Token.LABEL = 126; // label
            Token.TARGET = 127;
            Token.LOOP = 128;
            Token.EXPR_VOID = 129; // expression statement in functions
            Token.EXPR_RESULT = 130; // expression statement in scripts
            Token.JSR = 131;
            Token.SCRIPT = 132; // top-level node for entire script
            Token.TYPEOFNAME = 133; // for typeof(simple-name)
            Token.USE_STACK = 134;
            Token.SETPROP_OP = 135; // x.y op= something
            Token.SETELEM_OP = 136; // x[y] op= something
            Token.LOCAL_BLOCK = 137;
            Token.SET_REF_OP = 138; // *reference op= something

                // For XML support:
            Token.DOTDOT = 139;  // member operator (..)
            Token.COLONCOLON = 140;  // namespace::name
            Token.XML = 141;  // XML type
            Token.DOTQUERY = 142;  // .() -- e.g., x.emps.emp.(name == "terry")
            Token.XMLATTR = 143;  // @
            Token.XMLEND = 144;

                // Optimizer-only-tokens
            Token.TO_OBJECT = 145;
            Token.TO_DOUBLE = 146;

            Token.LAST_TOKEN = 146;


            Token.name = function (token) {
                if (!Kit.printTrees) return String(token);
                with (Token) {
                    switch (token) {
                      case ERROR: return "ERROR";
                      case EOF: return "EOF";
                      case EOL: return "EOL";
                      case ENTERWITH: return "ENTERWITH";
                      case LEAVEWITH: return "LEAVEWITH";
                      case RETURN: return "RETURN";
                      case GOTO: return "GOTO";
                      case IFEQ: return "IFEQ";
                      case IFNE: return "IFNE";
                      case SETNAME: return "SETNAME";
                      case BITOR: return "BITOR";
                      case BITXOR: return "BITXOR";
                      case BITAND: return "BITAND";
                      case EQ: return "EQ";
                      case NE: return "NE";
                      case LT: return "LT";
                      case LE: return "LE";
                      case GT: return "GT";
                      case GE: return "GE";
                      case LSH: return "LSH";
                      case RSH: return "RSH";
                      case URSH: return "URSH";
                      case ADD: return "ADD";
                      case SUB: return "SUB";
                      case MUL: return "MUL";
                      case DIV: return "DIV";
                      case MOD: return "MOD";
                      case NOT: return "NOT";
                      case BITNOT: return "BITNOT";
                      case POS: return "POS";
                      case NEG: return "NEG";
                      case NEW: return "NEW";
                      case DELPROP: return "DELPROP";
                      case TYPEOF: return "TYPEOF";
                      case GETPROP: return "GETPROP";
                      case SETPROP: return "SETPROP";
                      case GETELEM: return "GETELEM";
                      case SETELEM: return "SETELEM";
                      case CALL: return "CALL";
                      case NAME: return "NAME";
                      case NUMBER: return "NUMBER";
                      case STRING: return "STRING";
                      case NULL: return "NULL";
                      case THIS: return "THIS";
                      case FALSE: return "FALSE";
                      case TRUE: return "TRUE";
                      case SHEQ: return "SHEQ";
                      case SHNE: return "SHNE";
                      case REGEXP: return "OBJECT";
                      case BINDNAME: return "BINDNAME";
                      case THROW: return "THROW";
                      case RETHROW: return "RETHROW";
                      case IN: return "IN";
                      case INSTANCEOF: return "INSTANCEOF";
                      case LOCAL_LOAD: return "LOCAL_LOAD";
                      case GETVAR: return "GETVAR";
                      case SETVAR: return "SETVAR";
                      case CATCH_SCOPE: return "CATCH_SCOPE";
                      case ENUM_INIT_KEYS: return "ENUM_INIT_KEYS";
                      case ENUM_INIT_VALUES: return "ENUM_INIT_VALUES";
                      case ENUM_NEXT: return "ENUM_NEXT";
                      case ENUM_ID: return "ENUM_ID";
                      case THISFN: return "THISFN";
                      case RETURN_RESULT: return "RETURN_RESULT";
                      case ARRAYLIT: return "ARRAYLIT";
                      case OBJECTLIT: return "OBJECTLIT";
                      case GET_REF: return "GET_REF";
                      case SET_REF: return "SET_REF";
                      case DEL_REF: return "DEL_REF";
                      case REF_CALL: return "REF_CALL";
                      case REF_SPECIAL: return "REF_SPECIAL";
                      case DEFAULTNAMESPACE: return "DEFAULTNAMESPACE";
                      case ESCXMLTEXT: return "ESCXMLTEXT";
                      case ESCXMLATTR: return "ESCXMLATTR";
                      case REF_MEMBER: return "REF_MEMBER";
                      case REF_NS_MEMBER: return "REF_NS_MEMBER";
                      case REF_NAME: return "REF_NAME";
                      case REF_NS_NAME: return "REF_NS_NAME";
                      case TRY: return "TRY";
                      case SEMI: return "SEMI";
                      case LB: return "LB";
                      case RB: return "RB";
                      case LC: return "LC";
                      case RC: return "RC";
                      case LP: return "LP";
                      case RP: return "RP";
                      case COMMA: return "COMMA";
                      case ASSIGN: return "ASSIGN";
                      case ASSIGN_BITOR: return "ASSIGN_BITOR";
                      case ASSIGN_BITXOR: return "ASSIGN_BITXOR";
                      case ASSIGN_BITAND: return "ASSIGN_BITAND";
                      case ASSIGN_LSH: return "ASSIGN_LSH";
                      case ASSIGN_RSH: return "ASSIGN_RSH";
                      case ASSIGN_URSH: return "ASSIGN_URSH";
                      case ASSIGN_ADD: return "ASSIGN_ADD";
                      case ASSIGN_SUB: return "ASSIGN_SUB";
                      case ASSIGN_MUL: return "ASSIGN_MUL";
                      case ASSIGN_DIV: return "ASSIGN_DIV";
                      case ASSIGN_MOD: return "ASSIGN_MOD";
                      case HOOK: return "HOOK";
                      case COLON: return "COLON";
                      case OR: return "OR";
                      case AND: return "AND";
                      case INC: return "INC";
                      case DEC: return "DEC";
                      case DOT: return "DOT";
                      case FUNCTION: return "FUNCTION";
                      case EXPORT: return "EXPORT";
                      case IMPORT: return "IMPORT";
                      case IF: return "IF";
                      case ELSE: return "ELSE";
                      case SWITCH: return "SWITCH";
                      case CASE: return "CASE";
                      case DEFAULT: return "DEFAULT";
                      case WHILE: return "WHILE";
                      case DO: return "DO";
                      case FOR: return "FOR";
                      case BREAK: return "BREAK";
                      case CONTINUE: return "CONTINUE";
                      case VAR: return "VAR";
                      case WITH: return "WITH";
                      case CATCH: return "CATCH";
                      case FINALLY: return "FINALLY";
                      case RESERVED: return "RESERVED";
                      case EMPTY: return "EMPTY";
                      case BLOCK: return "BLOCK";
                      case LABEL: return "LABEL";
                      case TARGET: return "TARGET";
                      case LOOP: return "LOOP";
                      case EXPR_VOID: return "EXPR_VOID";
                      case EXPR_RESULT: return "EXPR_RESULT";
                      case JSR: return "JSR";
                      case SCRIPT: return "SCRIPT";
                      case TYPEOFNAME: return "TYPEOFNAME";
                      case USE_STACK: return "USE_STACK";
                      case SETPROP_OP: return "SETPROP_OP";
                      case SETELEM_OP: return "SETELEM_OP";
                      case LOCAL_BLOCK: return "LOCAL_BLOCK";
                      case SET_REF_OP: return "SET_REF_OP";
                      case DOTDOT: return "DOTDOT";
                      case COLONCOLON: return "COLONCOLON";
                      case XML: return "XML";
                      case DOTQUERY: return "DOTQUERY";
                      case XMLATTR: return "XMLATTR";
                      case XMLEND: return "XMLEND";
                      case TO_OBJECT: return "TO_OBJECT";
                      case TO_DOUBLE: return "TO_DOUBLE";
            }
            }
                // Token without name
                Kit.codeBug(token);
            };

                        return {
                Token: Token
            };
            }();
            }
            }.call(null)) {
                this.Concurrent.Thread.Compiler.Token = Token;
            }
        }).call(null);
        (function () {
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Compiler || (typeof this.Concurrent.Thread.Compiler != 'object' && typeof this.Concurrent.Thread.Compiler != 'function')) this.Concurrent.Thread.Compiler = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Cons || (typeof this.Data.Cons != 'object' && typeof this.Data.Cons != 'function')) this.Data.Cons = new Object();
            if (this.Concurrent.Thread.Compiler.Expression === undefined) this.Concurrent.Thread.Compiler.Expression = undefined;
            if (this.Concurrent.Thread.Compiler.UnaryExpression === undefined) this.Concurrent.Thread.Compiler.UnaryExpression = undefined;
            if (this.Concurrent.Thread.Compiler.BinaryExpression === undefined) this.Concurrent.Thread.Compiler.BinaryExpression = undefined;
            if (this.Concurrent.Thread.Compiler.ThisExpression === undefined) this.Concurrent.Thread.Compiler.ThisExpression = undefined;
            if (this.Concurrent.Thread.Compiler.Identifier === undefined) this.Concurrent.Thread.Compiler.Identifier = undefined;
            if (this.Concurrent.Thread.Compiler.Literal === undefined) this.Concurrent.Thread.Compiler.Literal = undefined;
            if (this.Concurrent.Thread.Compiler.NumberLiteral === undefined) this.Concurrent.Thread.Compiler.NumberLiteral = undefined;
            if (this.Concurrent.Thread.Compiler.StringLiteral === undefined) this.Concurrent.Thread.Compiler.StringLiteral = undefined;
            if (this.Concurrent.Thread.Compiler.RegExpLiteral === undefined) this.Concurrent.Thread.Compiler.RegExpLiteral = undefined;
            if (this.Concurrent.Thread.Compiler.NullLiteral === undefined) this.Concurrent.Thread.Compiler.NullLiteral = undefined;
            if (this.Concurrent.Thread.Compiler.BooleanLiteral === undefined) this.Concurrent.Thread.Compiler.BooleanLiteral = undefined;
            if (this.Concurrent.Thread.Compiler.TrueLiteral === undefined) this.Concurrent.Thread.Compiler.TrueLiteral = undefined;
            if (this.Concurrent.Thread.Compiler.FalseLiteral === undefined) this.Concurrent.Thread.Compiler.FalseLiteral = undefined;
            if (this.Concurrent.Thread.Compiler.ArrayInitializer === undefined) this.Concurrent.Thread.Compiler.ArrayInitializer = undefined;
            if (this.Concurrent.Thread.Compiler.Elision === undefined) this.Concurrent.Thread.Compiler.Elision = undefined;
            if (this.Concurrent.Thread.Compiler.ObjectInitializer === undefined) this.Concurrent.Thread.Compiler.ObjectInitializer = undefined;
            if (this.Concurrent.Thread.Compiler.FunctionExpression === undefined) this.Concurrent.Thread.Compiler.FunctionExpression = undefined;
            if (this.Concurrent.Thread.Compiler.DotAccessor === undefined) this.Concurrent.Thread.Compiler.DotAccessor = undefined;
            if (this.Concurrent.Thread.Compiler.BracketAccessor === undefined) this.Concurrent.Thread.Compiler.BracketAccessor = undefined;
            if (this.Concurrent.Thread.Compiler.NewExpression === undefined) this.Concurrent.Thread.Compiler.NewExpression = undefined;
            if (this.Concurrent.Thread.Compiler.CallExpression === undefined) this.Concurrent.Thread.Compiler.CallExpression = undefined;
            if (this.Concurrent.Thread.Compiler.PostIncExpression === undefined) this.Concurrent.Thread.Compiler.PostIncExpression = undefined;
            if (this.Concurrent.Thread.Compiler.PostDecExpression === undefined) this.Concurrent.Thread.Compiler.PostDecExpression = undefined;
            if (this.Concurrent.Thread.Compiler.PreIncExpression === undefined) this.Concurrent.Thread.Compiler.PreIncExpression = undefined;
            if (this.Concurrent.Thread.Compiler.PreDecExpression === undefined) this.Concurrent.Thread.Compiler.PreDecExpression = undefined;
            if (this.Concurrent.Thread.Compiler.DeleteExpression === undefined) this.Concurrent.Thread.Compiler.DeleteExpression = undefined;
            if (this.Concurrent.Thread.Compiler.VoidExpression === undefined) this.Concurrent.Thread.Compiler.VoidExpression = undefined;
            if (this.Concurrent.Thread.Compiler.TypeofExpression === undefined) this.Concurrent.Thread.Compiler.TypeofExpression = undefined;
            if (this.Concurrent.Thread.Compiler.PosExpression === undefined) this.Concurrent.Thread.Compiler.PosExpression = undefined;
            if (this.Concurrent.Thread.Compiler.NegExpression === undefined) this.Concurrent.Thread.Compiler.NegExpression = undefined;
            if (this.Concurrent.Thread.Compiler.BitNotExpression === undefined) this.Concurrent.Thread.Compiler.BitNotExpression = undefined;
            if (this.Concurrent.Thread.Compiler.NotExpression === undefined) this.Concurrent.Thread.Compiler.NotExpression = undefined;
            if (this.Concurrent.Thread.Compiler.MulExpression === undefined) this.Concurrent.Thread.Compiler.MulExpression = undefined;
            if (this.Concurrent.Thread.Compiler.DivExpression === undefined) this.Concurrent.Thread.Compiler.DivExpression = undefined;
            if (this.Concurrent.Thread.Compiler.ModExpression === undefined) this.Concurrent.Thread.Compiler.ModExpression = undefined;
            if (this.Concurrent.Thread.Compiler.AddExpression === undefined) this.Concurrent.Thread.Compiler.AddExpression = undefined;
            if (this.Concurrent.Thread.Compiler.SubExpression === undefined) this.Concurrent.Thread.Compiler.SubExpression = undefined;
            if (this.Concurrent.Thread.Compiler.LShiftExpression === undefined) this.Concurrent.Thread.Compiler.LShiftExpression = undefined;
            if (this.Concurrent.Thread.Compiler.RShiftExpression === undefined) this.Concurrent.Thread.Compiler.RShiftExpression = undefined;
            if (this.Concurrent.Thread.Compiler.URShiftExpression === undefined) this.Concurrent.Thread.Compiler.URShiftExpression = undefined;
            if (this.Concurrent.Thread.Compiler.LessThanExpression === undefined) this.Concurrent.Thread.Compiler.LessThanExpression = undefined;
            if (this.Concurrent.Thread.Compiler.GreaterThanExpression === undefined) this.Concurrent.Thread.Compiler.GreaterThanExpression = undefined;
            if (this.Concurrent.Thread.Compiler.LessEqualExpression === undefined) this.Concurrent.Thread.Compiler.LessEqualExpression = undefined;
            if (this.Concurrent.Thread.Compiler.GreaterEqualExpression === undefined) this.Concurrent.Thread.Compiler.GreaterEqualExpression = undefined;
            if (this.Concurrent.Thread.Compiler.InstanceofExpression === undefined) this.Concurrent.Thread.Compiler.InstanceofExpression = undefined;
            if (this.Concurrent.Thread.Compiler.InExpression === undefined) this.Concurrent.Thread.Compiler.InExpression = undefined;
            if (this.Concurrent.Thread.Compiler.EqualExpression === undefined) this.Concurrent.Thread.Compiler.EqualExpression = undefined;
            if (this.Concurrent.Thread.Compiler.NotEqualExpression === undefined) this.Concurrent.Thread.Compiler.NotEqualExpression = undefined;
            if (this.Concurrent.Thread.Compiler.StrictEqualExpression === undefined) this.Concurrent.Thread.Compiler.StrictEqualExpression = undefined;
            if (this.Concurrent.Thread.Compiler.StrictNotEqualExpression === undefined) this.Concurrent.Thread.Compiler.StrictNotEqualExpression = undefined;
            if (this.Concurrent.Thread.Compiler.BitAndExpression === undefined) this.Concurrent.Thread.Compiler.BitAndExpression = undefined;
            if (this.Concurrent.Thread.Compiler.BitXorExpression === undefined) this.Concurrent.Thread.Compiler.BitXorExpression = undefined;
            if (this.Concurrent.Thread.Compiler.BitOrExpression === undefined) this.Concurrent.Thread.Compiler.BitOrExpression = undefined;
            if (this.Concurrent.Thread.Compiler.AndExpression === undefined) this.Concurrent.Thread.Compiler.AndExpression = undefined;
            if (this.Concurrent.Thread.Compiler.OrExpression === undefined) this.Concurrent.Thread.Compiler.OrExpression = undefined;
            if (this.Concurrent.Thread.Compiler.ConditionalExpression === undefined) this.Concurrent.Thread.Compiler.ConditionalExpression = undefined;
            if (this.Concurrent.Thread.Compiler.AssignExpression === undefined) this.Concurrent.Thread.Compiler.AssignExpression = undefined;
            if (this.Concurrent.Thread.Compiler.SimpleAssignExpression === undefined) this.Concurrent.Thread.Compiler.SimpleAssignExpression = undefined;
            if (this.Concurrent.Thread.Compiler.MulAssignExpression === undefined) this.Concurrent.Thread.Compiler.MulAssignExpression = undefined;
            if (this.Concurrent.Thread.Compiler.DivAssignExpression === undefined) this.Concurrent.Thread.Compiler.DivAssignExpression = undefined;
            if (this.Concurrent.Thread.Compiler.ModAssignExpression === undefined) this.Concurrent.Thread.Compiler.ModAssignExpression = undefined;
            if (this.Concurrent.Thread.Compiler.AddAssignExpression === undefined) this.Concurrent.Thread.Compiler.AddAssignExpression = undefined;
            if (this.Concurrent.Thread.Compiler.SubAssignExpression === undefined) this.Concurrent.Thread.Compiler.SubAssignExpression = undefined;
            if (this.Concurrent.Thread.Compiler.LShiftAssignExpression === undefined) this.Concurrent.Thread.Compiler.LShiftAssignExpression = undefined;
            if (this.Concurrent.Thread.Compiler.RShiftAssignExpression === undefined) this.Concurrent.Thread.Compiler.RShiftAssignExpression = undefined;
            if (this.Concurrent.Thread.Compiler.URShiftAssignExpression === undefined) this.Concurrent.Thread.Compiler.URShiftAssignExpression = undefined;
            if (this.Concurrent.Thread.Compiler.BitAndAssignExpression === undefined) this.Concurrent.Thread.Compiler.BitAndAssignExpression = undefined;
            if (this.Concurrent.Thread.Compiler.BitXorAssignExpression === undefined) this.Concurrent.Thread.Compiler.BitXorAssignExpression = undefined;
            if (this.Concurrent.Thread.Compiler.BitOrAssignExpression === undefined) this.Concurrent.Thread.Compiler.BitOrAssignExpression = undefined;
            if (this.Concurrent.Thread.Compiler.CommaExpression === undefined) this.Concurrent.Thread.Compiler.CommaExpression = undefined;
            with (function () {
            with (Data.Cons) {
            with (Concurrent.Thread.Compiler) {

                    return function () {
                        var VERSION;
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Concurrent.Thread code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2006-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */


            NAMESPACE = 'Concurrent.Thread.Compiler';










            function Expression() {
                // This is kind of abstract class.
            }

            var proto = Expression.prototype;

            proto.toString = function () {
                Kit.codeBug("Unimplemented method `toString' of class: " + this.constructor);
            };

            proto.containsFunctionCall = function () {
                Kit.codeBug("Unimplemented method `containsFunctionCall' of class: " + this.constructor);
            };

            proto.hasSideEffect = function () {
                Kit.codeBug("Unimplemented method `hasSideEffect' of class: " + this.constructor);
            };

            proto.hasLvalue = function () {
                return false;
            };



            function UnaryExpression(e) {
                // This is kind of abstract class and should not be instantiated directly.
                // It just provides default implementations of methods and constructor.
                this.exp = e;  // Expression
            }

            var proto = UnaryExpression.prototype = new Expression();
            proto.constructor = UnaryExpression;

            proto.containsFunctionCall = function () {
                return this.exp.containsFunctionCall();
            };

            proto.hasSideEffect = function () {
                return this.exp.hasSideEffect();
            };



            function BinaryExpression(l, r) {
                // This is kind of abstract class and should not be instantiated directly.
                // It just provides default implementations of methods and constructor.
                this.left = l;  // Expression
                this.right = r;  // Expression
            }

            var proto = BinaryExpression.prototype = new Expression();
            proto.constructor = BinaryExpression;

            proto.containsFunctionCall = function () {
                return this.left.containsFunctionCall() || this.right.containsFunctionCall();
            };

            proto.hasSideEffect = function () {
                return this.left.hasSideEfect() || this.right.hasSideEffect();
            };



            function ThisExpression() {
                return THIS_EXPRESSION;  // Reuse object.
            }

            var proto = ThisExpression.prototype = new Expression();
            proto.constructor = ThisExpression;

            proto.toString = function () {
                return "this";
            };

            proto.containsFunctionCall = function () {
                return false;
            };

            proto.hasSideEffect = function () {
                return false;
            };

            function temp() { }
            temp.prototype = ThisExpression.prototype;
            var THIS_EXPRESSION = new temp();



            function Identifier(s) {
                this.string = String(s);
                this.value = eval('"' + this.string + '"');
            }

            var proto = Identifier.prototype = new Expression();
            proto.constructor = Identifier;

            proto.toString = function () {
                return this.string;
            };

            proto.valueOf = function () {
                return this.value;
            };

            proto.hasLvalue = function () {
                return true;
            };

            proto.containsFunctionCall = function () {
                return false;
            };

            proto.hasSideEffect = function () {
                return false;
            };



            function Literal(s) {
                this.string = String(s);
                this.value = eval(this.string);
            }

            var proto = Literal.prototype = new Expression();
            proto.constructor = Literal;

            proto.toString = function () {
                return this.string;
            };

            proto.valueOf = function () {
                return this.value;
            };

            proto.containsFunctionCall = function () {
                return false;
            };

            proto.hasSideEffect = function () {
                return false;
            };



            function NumberLiteral(s) {
                Literal.apply(this, arguments);
            }

            var proto = NumberLiteral.prototype = new Literal();
            proto.constructor = NumberLiteral;



            function StringLiteral(s) {
                Literal.apply(this, arguments);
            }

            var proto = StringLiteral.prototype = new Literal();
            proto.constructor = StringLiteral;



            function RegExpLiteral(s) {
                Literal.apply(this, arguments);
            }

            var proto = RegExpLiteral.prototype = new Literal();
            proto.constructor = RegExpLiteral;



            function NullLiteral() {
                return NULL_LITERAL;  // Reuse object.
            }

            var proto = NullLiteral.prototype = new Literal();
            proto.constructor = NullLiteral;

            proto.string = "null";
            proto.vakue = null;

            proto.toString = function () {
                return "null";
            };

            proto.valueOf = function () {
                return null;
            };

            function temp() { }
            temp.prototype = NullLiteral.prototype;
            var NULL_LITERAL = new temp();



            function BooleanLiteral() { }

            var proto = BooleanLiteral.prototype = new Literal();
            proto.constructor = BooleanLiteral;



            function TrueLiteral() {
                return TRUE_LITERAL;  // Reuse object.
            }

            var proto = TrueLiteral.prototype = new BooleanLiteral();
            proto.constructor = TrueLiteral;

            proto.string = "true";
            proto.vakue = true;

            proto.toString = function () {
                return "true";
            };

            proto.valueOf = function () {
                return true;
            };

            function temp() { }
            temp.prototype = TrueLiteral.prototype;
            var TRUE_LITERAL = new temp();



            function FalseLiteral() {
                return FALSE_LITERAL;  // Reuse object.
            }

            var proto = FalseLiteral.prototype = new BooleanLiteral();
            proto.constructor = FalseLiteral;

            proto.string = "false";
            proto.vakue = false;

            proto.toString = function () {
                return "false";
            };

            proto.valueOf = function () {
                return false;
            };

            function temp() { }
            temp.prototype = FalseLiteral.prototype;
            var FALSE_LITERAL = new temp();



            function ArrayInitializer(elems) {
                this.elems = elems;  // array of Expression
            }

            var proto = ArrayInitializer.prototype = new Expression();
            proto.constructor = ArrayInitializer;

            proto.toString = function () {
                return "[" + this.elems.join(", ") + "]";
            };

            proto.containsFunctionCall = function () {
                for (var i = 0; i < this.elems.length; i++) {
                    if (this.elems[i].containsFunctionCall()) return true;
            }
                return false;
            };

            proto.hasSideEfect = function () {
                for (var i = 0; i < this.elems.length; i++) {
                    if (this.elems[i].hasSideEffect()) return true;
            }
                return false;
            };



            function Elision() { }

            var proto = Elision.prototype = new Expression();
            proto.constructor = Elision;

            proto.toString = function () {
                return "";
            };

            proto.containsFunctionCall = function () {
                return false;
            };

            proto.hasSideEffect = function () {
                return false;
            };



            function ObjectInitializer(v) {
                this.pairs = v;  // array of {prop: Identifier or Literal,  exp: Expression}
            }

            var proto = ObjectInitializer.prototype = new Expression();
            proto.constructor = ObjectInitializer;

            proto.toString = function () {
                var buf = [];
                for (var i = 0; i < this.pairs.length; i++) {
                    buf.push(String(this.pairs[i].prop) + ":" + String(this.pairs[i].exp));
            }
                return "{" + buf.join(", ") + "}";
            };

            proto.containsFunctionCall = function () {
                for (var i = 0; i < this.pairs.length; i++) {
                    if (this.pairs[i].exp.containsFunctionCall()) return true;
            }
                return false;
            };

            proto.hasSideEffect = function () {
                for (var i = 0; i < this.pairs.length; i++) {
                    if (this.pairs[i].exp.hasSideEffect()) return true;
            }
                return false;
            };



            function FunctionExpression(name, params, body) {
                this.name = name;    // Identifier or null
                this.params = params;  // array of Identifier
                this.body = body;    // cons-list of Statement
            }

            var proto = FunctionExpression.prototype = new Expression();
            proto.constructor = FunctionExpression;

            proto.toString = function () {
                var buf = ["(function "];
                if (this.name) buf.push(this.name);
                buf.push("(", this.params.join(", "), ") {\n");
                this.body.forEach(function (it) {
                    buf.push(it, "\n");
            });
                buf.push("})");
                return buf.join("");
            };

            proto.containsFunctionCall = function () {
                return false;
            };

            proto.hasSideEffect = function () {
                return false;
            };



            function DotAccessor(base, prop) {
                this.base = base;  // Expression
                this.prop = prop;  // Identifier
            }

            var proto = DotAccessor.prototype = new Expression();
            proto.constructor = DotAccessor;

            proto.toString = function () {
                return String(this.base) + "." + String(this.prop);
            };

            proto.hasLvalue = function () {
                return true;
            };

            proto.containsFunctionCall = function () {
                return this.base.containsFunctionCall();
            };

            proto.hasSideEffect = function () {
                return this.base.hasSideEffect();
            };



            function BracketAccessor(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = BracketAccessor.prototype = new BinaryExpression();
            proto.constructor = BracketAccessor;

            proto.toString = function () {
                return [this.left, "[", this.right, "]"].join("");
            };

            proto.hasLvalue = function () {
                return true;
            };



            function NewExpression(func, args) {
                this.func = func;  // Expression
                this.args = args;  // array of Expression
            }

            var proto = NewExpression.prototype = new Expression();
            proto.constructor = NewExpression;

            proto.toString = function () {
                return ["new ", this.func, "(", this.args.join(", "), ")"].join("");
            };

            proto.containsFunctionCall = function () {
                return true;
            };

            proto.hasSideEffect = function () {
                return true;
            };



            function CallExpression(func, args) {
                this.func = func;  // Expression
                this.args = args;  // array of Expression
            }

            var proto = CallExpression.prototype = new Expression();
            proto.constructor = CallExpression;

            proto.toString = function () {
                return [this.func, "(", this.args.join(", "), ")"].join("");
            };

            proto.containsFunctionCall = function () {
                return true;
            };

            proto.hasSideEffect = function () {
                return true;
            };



            function PostIncExpression(e) {
                UnaryExpression.apply(this, arguments);
            }

            var proto = PostIncExpression.prototype = new UnaryExpression();
            proto.constructor = PostIncExpression;

            proto.toString = function () {
                return String(this.exp) + "++";
            };

            proto.hasSideEffect = function () {
                return true;
            };



            function PostDecExpression(e) {
                UnaryExpression.apply(this, arguments);
            }

            var proto = PostDecExpression.prototype = new UnaryExpression();
            proto.constructor = PostDecExpression;

            proto.toString = function () {
                return String(this.exp) + "--";
            };

            proto.hasSideEffect = function () {
                return true;
            };



            function PreIncExpression(e) {
                UnaryExpression.apply(this, arguments);
            }

            var proto = PreIncExpression.prototype = new UnaryExpression();
            proto.constructor = PreIncExpression;

            proto.toString = function () {
                return "++" + String(this.exp);
            };

            proto.hasSideEffect = function () {
                return true;
            };



            function PreDecExpression(e) {
                UnaryExpression.apply(this, arguments);
            }

            var proto = PreDecExpression.prototype = new UnaryExpression();
            proto.constructor = PreDecExpression;

            proto.toString = function () {
                return "--" + String(this.exp);
            };

            proto.hasSideEffect = function () {
                return true;
            };



            function DeleteExpression(e) {
                UnaryExpression.apply(this, arguments);
            }

            var proto = DeleteExpression.prototype = new UnaryExpression();
            proto.constructor = DeleteExpression;

            proto.toString = function () {
                return "delete " + String(this.exp);
            };

            proto.hasSideEffect = function () {
                return true;
            };



            function VoidExpression(e) {
                UnaryExpression.apply(this, arguments);
            }

            var proto = VoidExpression.prototype = new UnaryExpression();
            proto.constructor = VoidExpression;

            proto.toString = function () {
                return "void " + String(this.exp);
            };



            function TypeofExpression(e) {
                UnaryExpression.apply(this, arguments);
            }

            var proto = TypeofExpression.prototype = new UnaryExpression();
            proto.constructor = TypeofExpression;

            proto.toString = function () {
                return "typeof " + String(this.exp);
            };



            function PosExpression(e) {
                UnaryExpression.apply(this, arguments);
            }

            var proto = PosExpression.prototype = new UnaryExpression();
            proto.constructor = PosExpression;

            proto.toString = function () {
                return "+ " + String(this.exp);
            };



            function NegExpression(e) {
                UnaryExpression.apply(this, arguments);
            }

            var proto = NegExpression.prototype = new UnaryExpression();
            proto.constructor = NegExpression;

            proto.toString = function () {
                return "- " + String(this.exp);
            };



            function BitNotExpression(e) {
                UnaryExpression.apply(this, arguments);
            }

            var proto = BitNotExpression.prototype = new UnaryExpression();
            proto.constructor = BitNotExpression;

            proto.toString = function () {
                return "~" + String(this.exp);
            };



            function NotExpression(e) {
                UnaryExpression.apply(this, arguments);
            }

            var proto = NotExpression.prototype = new UnaryExpression();
            proto.constructor = NotExpression;

            proto.toString = function () {
                return "!" + String(this.exp);
            };



            function MulExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = MulExpression.prototype = new BinaryExpression();
            proto.constructor = MulExpression;

            proto.toString = function () {
                return ["(", this.left, " * ", this.right, ")"].join("");
            };



            function DivExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = DivExpression.prototype = new BinaryExpression();
            proto.constructor = DivExpression;

            proto.toString = function () {
                return ["(", this.left, " / ", this.right, ")"].join("");
            };



            function ModExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = ModExpression.prototype = new BinaryExpression();
            proto.constructor = ModExpression;

            proto.toString = function () {
                return ["(", this.left, " % ", this.right, ")"].join("");
            };



            function AddExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = AddExpression.prototype = new BinaryExpression();
            proto.constructor = AddExpression;

            proto.toString = function () {
                return ["(", this.left, " + ", this.right, ")"].join("");
            };



            function SubExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = SubExpression.prototype = new BinaryExpression();
            proto.constructor = SubExpression;

            proto.toString = function () {
                return ["(", this.left, " - ", this.right, ")"].join("");
            };



            function LShiftExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = LShiftExpression.prototype = new BinaryExpression();
            proto.constructor = LShiftExpression;

            proto.toString = function () {
                return ["(", this.left, " << ", this.right, ")"].join("");
            };



            function RShiftExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = RShiftExpression.prototype = new BinaryExpression();
            proto.constructor = RShiftExpression;

            proto.toString = function () {
                return ["(", this.left, " >> ", this.right, ")"].join("");
            };



            function URShiftExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = URShiftExpression.prototype = new BinaryExpression();
            proto.constructor = URShiftExpression;

            proto.toString = function () {
                return ["(", this.left, " >>> ", this.right, ")"].join("");
            };



            function LessThanExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = LessThanExpression.prototype = new BinaryExpression();
            proto.constructor = LessThanExpression;

            proto.toString = function () {
                return ["(", this.left, " < ", this.right, ")"].join("");
            };



            function GreaterThanExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = GreaterThanExpression.prototype = new BinaryExpression();
            proto.constructor = GreaterThanExpression;

            proto.toString = function () {
                return ["(", this.left, " > ", this.right, ")"].join("");
            };



            function LessEqualExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = LessEqualExpression.prototype = new BinaryExpression();
            proto.constructor = LessEqualExpression;

            proto.toString = function () {
                return ["(", this.left, " <= ", this.right, ")"].join("");
            };



            function GreaterEqualExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = GreaterEqualExpression.prototype = new BinaryExpression();
            proto.constructor = GreaterEqualExpression;

            proto.toString = function () {
                return ["(", this.left, " >= ", this.right, ")"].join("");
            };



            function InstanceofExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = InstanceofExpression.prototype = new BinaryExpression();
            proto.constructor = InstanceofExpression;

            proto.toString = function () {
                return ["(", this.left, " instanceof ", this.right, ")"].join("");
            };



            function InExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = InExpression.prototype = new BinaryExpression();
            proto.constructor = InExpression;

            proto.toString = function () {
                return ["(", this.left, " in ", this.right, ")"].join("");
            };



            function EqualExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = EqualExpression.prototype = new BinaryExpression();
            proto.constructor = EqualExpression;

            proto.toString = function () {
                return ["(", this.left, " == ", this.right, ")"].join("");
            };



            function NotEqualExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = NotEqualExpression.prototype = new BinaryExpression();
            proto.constructor = NotEqualExpression;

            proto.toString = function () {
                return ["(", this.left, " != ", this.right, ")"].join("");
            };



            function StrictEqualExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = StrictEqualExpression.prototype = new BinaryExpression();
            proto.constructor = StrictEqualExpression;

            proto.toString = function () {
                return ["(", this.left, " === ", this.right, ")"].join("");
            };



            function StrictNotEqualExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = StrictNotEqualExpression.prototype = new BinaryExpression();
            proto.constructor = StrictNotEqualExpression;

            proto.toString = function () {
                return ["(", this.left, " !== ", this.right, ")"].join("");
            };



            function BitAndExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = BitAndExpression.prototype = new BinaryExpression();
            proto.constructor = BitAndExpression;

            proto.toString = function () {
                return ["(", this.left, " & ", this.right, ")"].join("");
            };



            function BitXorExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = BitXorExpression.prototype = new BinaryExpression();
            proto.constructor = BitXorExpression;

            proto.toString = function () {
                return ["(", this.left, " ^ ", this.right, ")"].join("");
            };



            function BitOrExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = BitOrExpression.prototype = new BinaryExpression();
            proto.constructor = BitOrExpression;

            proto.toString = function () {
                return ["(", this.left, " | ", this.right, ")"].join("");
            };



            function AndExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = AndExpression.prototype = new BinaryExpression();
            proto.constructor = AndExpression;

            proto.toString = function () {
                return ["(", this.left, " && ", this.right, ")"].join("");
            };



            function OrExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = OrExpression.prototype = new BinaryExpression();
            proto.constructor = OrExpression;

            proto.toString = function () {
                return ["(", this.left, " || ", this.right, ")"].join("");
            };



            function ConditionalExpression(c, t, f) {
                this.cond = c;  // Expression
                this.texp = t;  // Expression
                this.fexp = f;  // Expression
            }

            var proto = ConditionalExpression.prototype = new Expression();
            proto.constructor = ConditionalExpression;

            proto.toString = function () {
                return ["(", this.cond, " ? ", this.texp, " : ", this.fexp, ")"].join("");
            };

            proto.containsFunctionCall = function () {
                return this.cond.containsFunctionCall()
                    || this.texp.containsFunctionCall()
                    || this.fexp.containsFunctionCall();
            };

            proto.hasSideEffect = function () {
                return this.cond.hasSideEffect()
                    || this.texp.hasSideEffect()
                    || this.fexp.hasSideEffect();
            };



            function AssignExpression(left, right) {
                // This is kind of interface. It just represents a set of classes.
                BinaryExpression.apply(this, arguments);
            }

            var proto = AssignExpression.prototype = new BinaryExpression();
            proto.constructor = AssignExpression;

            proto.hasSideEffect = function () {
                return true;
            };



            function SimpleAssignExpression(left, right) {
                AssignExpression.apply(this, arguments);
            }

            var proto = SimpleAssignExpression.prototype = new AssignExpression();
            proto.constructor = SimpleAssignExpression;

            proto.toString = function () {
                return ["(", this.left, " = ", this.right, ")"].join("");
            };



            function MulAssignExpression(left, right) {
                AssignExpression.apply(this, arguments);
            }

            var proto = MulAssignExpression.prototype = new AssignExpression();
            proto.constructor = MulAssignExpression;

            proto.toString = function () {
                return ["(", this.left, " *= ", this.right, ")"].join("");
            };



            function DivAssignExpression(left, right) {
                AssignExpression.apply(this, arguments);
            }

            var proto = DivAssignExpression.prototype = new AssignExpression();
            proto.constructor = DivAssignExpression;

            proto.toString = function () {
                return ["(", this.left, " /= ", this.right, ")"].join("");
            };



            function ModAssignExpression(left, right) {
                AssignExpression.apply(this, arguments);
            }

            var proto = ModAssignExpression.prototype = new AssignExpression();
            proto.constructor = ModAssignExpression;

            proto.toString = function () {
                return ["(", this.left, " %= ", this.right, ")"].join("");
            };



            function AddAssignExpression(left, right) {
                AssignExpression.apply(this, arguments);
            }

            var proto = AddAssignExpression.prototype = new AssignExpression();
            proto.constructor = AddAssignExpression;

            proto.toString = function () {
                return ["(", this.left, " += ", this.right, ")"].join("");
            };



            function SubAssignExpression(left, right) {
                AssignExpression.apply(this, arguments);
            }

            var proto = SubAssignExpression.prototype = new AssignExpression();
            proto.constructor = SubAssignExpression;

            proto.toString = function () {
                return ["(", this.left, " -= ", this.right, ")"].join("");
            };



            function LShiftAssignExpression(left, right) {
                AssignExpression.apply(this, arguments);
            }

            var proto = LShiftAssignExpression.prototype = new AssignExpression();
            proto.constructor = LShiftAssignExpression;

            proto.toString = function () {
                return ["(", this.left, " <<= ", this.right, ")"].join("");
            };



            function RShiftAssignExpression(left, right) {
                AssignExpression.apply(this, arguments);
            }

            var proto = RShiftAssignExpression.prototype = new AssignExpression();
            proto.constructor = RShiftAssignExpression;

            proto.toString = function () {
                return ["(", this.left, " >>= ", this.right, ")"].join("");
            };



            function URShiftAssignExpression(left, right) {
                AssignExpression.apply(this, arguments);
            }

            var proto = URShiftAssignExpression.prototype = new AssignExpression();
            proto.constructor = URShiftAssignExpression;

            proto.toString = function () {
                return ["(", this.left, " >>>= ", this.right, ")"].join("");
            };



            function BitAndAssignExpression(left, right) {
                AssignExpression.apply(this, arguments);
            }

            var proto = BitAndAssignExpression.prototype = new AssignExpression();
            proto.constructor = BitAndAssignExpression;

            proto.toString = function () {
                return ["(", this.left, " &= ", this.right, ")"].join("");
            };



            function BitXorAssignExpression(left, right) {
                AssignExpression.apply(this, arguments);
            }

            var proto = BitXorAssignExpression.prototype = new AssignExpression();
            proto.constructor = BitXorAssignExpression;

            proto.toString = function () {
                return ["(", this.left, " ^= ", this.right, ")"].join("");
            };



            function BitOrAssignExpression(left, right) {
                AssignExpression.apply(this, arguments);
            }

            var proto = BitOrAssignExpression.prototype = new AssignExpression();
            proto.constructor = BitOrAssignExpression;

            proto.toString = function () {
                return ["(", this.left, " |= ", this.right, ")"].join("");
            };



            function CommaExpression(left, right) {
                BinaryExpression.apply(this, arguments);
            }

            var proto = CommaExpression.prototype = new BinaryExpression();
            proto.constructor = CommaExpression;

            proto.toString = function () {
                return ["(", this.left, ", ", this.right, ")"].join("");
            };



                        return {
                StrictEqualExpression: StrictEqualExpression, BooleanLiteral: BooleanLiteral, OrExpression: OrExpression, NotExpression: NotExpression, ThisExpression: ThisExpression, BitAndAssignExpression: BitAndAssignExpression, DivExpression: DivExpression, BracketAccessor: BracketAccessor, CommaExpression: CommaExpression, BitAndExpression: BitAndExpression, MulExpression: MulExpression, EqualExpression: EqualExpression, CallExpression: CallExpression, FunctionExpression: FunctionExpression, Elision: Elision, PostIncExpression: PostIncExpression, InstanceofExpression: InstanceofExpression, NullLiteral: NullLiteral, BitXorAssignExpression: BitXorAssignExpression, URShiftExpression: URShiftExpression, ConditionalExpression: ConditionalExpression, Identifier: Identifier, UnaryExpression: UnaryExpression, BitOrAssignExpression: BitOrAssignExpression, DivAssignExpression: DivAssignExpression, VoidExpression: VoidExpression, TypeofExpression: TypeofExpression, NewExpression: NewExpression, MulAssignExpression: MulAssignExpression, BinaryExpression: BinaryExpression, TrueLiteral: TrueLiteral, AssignExpression: AssignExpression, SubExpression: SubExpression, PreDecExpression: PreDecExpression, RegExpLiteral: RegExpLiteral, DeleteExpression: DeleteExpression, FalseLiteral: FalseLiteral, BitNotExpression: BitNotExpression, GreaterEqualExpression: GreaterEqualExpression, LessEqualExpression: LessEqualExpression, ModExpression: ModExpression, StringLiteral: StringLiteral, LShiftAssignExpression: LShiftAssignExpression, SubAssignExpression: SubAssignExpression, LShiftExpression: LShiftExpression, ModAssignExpression: ModAssignExpression, URShiftAssignExpression: URShiftAssignExpression, NegExpression: NegExpression, PosExpression: PosExpression, AddAssignExpression: AddAssignExpression, ArrayInitializer: ArrayInitializer, LessThanExpression: LessThanExpression, NumberLiteral: NumberLiteral, StrictNotEqualExpression: StrictNotEqualExpression, RShiftExpression: RShiftExpression, InExpression: InExpression, BitOrExpression: BitOrExpression, AndExpression: AndExpression, PostDecExpression: PostDecExpression, ObjectInitializer: ObjectInitializer, RShiftAssignExpression: RShiftAssignExpression, Expression: Expression, DotAccessor: DotAccessor, Literal: Literal, SimpleAssignExpression: SimpleAssignExpression, BitXorExpression: BitXorExpression, AddExpression: AddExpression, GreaterThanExpression: GreaterThanExpression, NotEqualExpression: NotEqualExpression, PreIncExpression: PreIncExpression
            };
            }();
            }
            }
            }.call(null)) {
                this.Concurrent.Thread.Compiler.StrictEqualExpression = StrictEqualExpression;
                this.Concurrent.Thread.Compiler.BooleanLiteral = BooleanLiteral;
                this.Concurrent.Thread.Compiler.OrExpression = OrExpression;
                this.Concurrent.Thread.Compiler.NotExpression = NotExpression;
                this.Concurrent.Thread.Compiler.ThisExpression = ThisExpression;
                this.Concurrent.Thread.Compiler.BitAndAssignExpression = BitAndAssignExpression;
                this.Concurrent.Thread.Compiler.DivExpression = DivExpression;
                this.Concurrent.Thread.Compiler.BracketAccessor = BracketAccessor;
                this.Concurrent.Thread.Compiler.CommaExpression = CommaExpression;
                this.Concurrent.Thread.Compiler.BitAndExpression = BitAndExpression;
                this.Concurrent.Thread.Compiler.MulExpression = MulExpression;
                this.Concurrent.Thread.Compiler.EqualExpression = EqualExpression;
                this.Concurrent.Thread.Compiler.CallExpression = CallExpression;
                this.Concurrent.Thread.Compiler.FunctionExpression = FunctionExpression;
                this.Concurrent.Thread.Compiler.Elision = Elision;
                this.Concurrent.Thread.Compiler.PostIncExpression = PostIncExpression;
                this.Concurrent.Thread.Compiler.InstanceofExpression = InstanceofExpression;
                this.Concurrent.Thread.Compiler.NullLiteral = NullLiteral;
                this.Concurrent.Thread.Compiler.BitXorAssignExpression = BitXorAssignExpression;
                this.Concurrent.Thread.Compiler.URShiftExpression = URShiftExpression;
                this.Concurrent.Thread.Compiler.ConditionalExpression = ConditionalExpression;
                this.Concurrent.Thread.Compiler.Identifier = Identifier;
                this.Concurrent.Thread.Compiler.UnaryExpression = UnaryExpression;
                this.Concurrent.Thread.Compiler.BitOrAssignExpression = BitOrAssignExpression;
                this.Concurrent.Thread.Compiler.DivAssignExpression = DivAssignExpression;
                this.Concurrent.Thread.Compiler.VoidExpression = VoidExpression;
                this.Concurrent.Thread.Compiler.TypeofExpression = TypeofExpression;
                this.Concurrent.Thread.Compiler.NewExpression = NewExpression;
                this.Concurrent.Thread.Compiler.MulAssignExpression = MulAssignExpression;
                this.Concurrent.Thread.Compiler.BinaryExpression = BinaryExpression;
                this.Concurrent.Thread.Compiler.TrueLiteral = TrueLiteral;
                this.Concurrent.Thread.Compiler.AssignExpression = AssignExpression;
                this.Concurrent.Thread.Compiler.SubExpression = SubExpression;
                this.Concurrent.Thread.Compiler.PreDecExpression = PreDecExpression;
                this.Concurrent.Thread.Compiler.RegExpLiteral = RegExpLiteral;
                this.Concurrent.Thread.Compiler.DeleteExpression = DeleteExpression;
                this.Concurrent.Thread.Compiler.FalseLiteral = FalseLiteral;
                this.Concurrent.Thread.Compiler.BitNotExpression = BitNotExpression;
                this.Concurrent.Thread.Compiler.GreaterEqualExpression = GreaterEqualExpression;
                this.Concurrent.Thread.Compiler.LessEqualExpression = LessEqualExpression;
                this.Concurrent.Thread.Compiler.ModExpression = ModExpression;
                this.Concurrent.Thread.Compiler.StringLiteral = StringLiteral;
                this.Concurrent.Thread.Compiler.LShiftAssignExpression = LShiftAssignExpression;
                this.Concurrent.Thread.Compiler.SubAssignExpression = SubAssignExpression;
                this.Concurrent.Thread.Compiler.LShiftExpression = LShiftExpression;
                this.Concurrent.Thread.Compiler.ModAssignExpression = ModAssignExpression;
                this.Concurrent.Thread.Compiler.URShiftAssignExpression = URShiftAssignExpression;
                this.Concurrent.Thread.Compiler.NegExpression = NegExpression;
                this.Concurrent.Thread.Compiler.PosExpression = PosExpression;
                this.Concurrent.Thread.Compiler.AddAssignExpression = AddAssignExpression;
                this.Concurrent.Thread.Compiler.ArrayInitializer = ArrayInitializer;
                this.Concurrent.Thread.Compiler.LessThanExpression = LessThanExpression;
                this.Concurrent.Thread.Compiler.NumberLiteral = NumberLiteral;
                this.Concurrent.Thread.Compiler.StrictNotEqualExpression = StrictNotEqualExpression;
                this.Concurrent.Thread.Compiler.RShiftExpression = RShiftExpression;
                this.Concurrent.Thread.Compiler.InExpression = InExpression;
                this.Concurrent.Thread.Compiler.BitOrExpression = BitOrExpression;
                this.Concurrent.Thread.Compiler.AndExpression = AndExpression;
                this.Concurrent.Thread.Compiler.PostDecExpression = PostDecExpression;
                this.Concurrent.Thread.Compiler.ObjectInitializer = ObjectInitializer;
                this.Concurrent.Thread.Compiler.RShiftAssignExpression = RShiftAssignExpression;
                this.Concurrent.Thread.Compiler.Expression = Expression;
                this.Concurrent.Thread.Compiler.DotAccessor = DotAccessor;
                this.Concurrent.Thread.Compiler.Literal = Literal;
                this.Concurrent.Thread.Compiler.SimpleAssignExpression = SimpleAssignExpression;
                this.Concurrent.Thread.Compiler.BitXorExpression = BitXorExpression;
                this.Concurrent.Thread.Compiler.AddExpression = AddExpression;
                this.Concurrent.Thread.Compiler.GreaterThanExpression = GreaterThanExpression;
                this.Concurrent.Thread.Compiler.NotEqualExpression = NotEqualExpression;
                this.Concurrent.Thread.Compiler.PreIncExpression = PreIncExpression;
            }
        }).call(null);
        (function () {
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Compiler || (typeof this.Concurrent.Thread.Compiler != 'object' && typeof this.Concurrent.Thread.Compiler != 'function')) this.Concurrent.Thread.Compiler = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Cons || (typeof this.Data.Cons != 'object' && typeof this.Data.Cons != 'function')) this.Data.Cons = new Object();
            if (this.Concurrent.Thread.Compiler.Statement === undefined) this.Concurrent.Thread.Compiler.Statement = undefined;
            if (this.Concurrent.Thread.Compiler.EmptyStatement === undefined) this.Concurrent.Thread.Compiler.EmptyStatement = undefined;
            if (this.Concurrent.Thread.Compiler.Block === undefined) this.Concurrent.Thread.Compiler.Block = undefined;
            if (this.Concurrent.Thread.Compiler.ExpStatement === undefined) this.Concurrent.Thread.Compiler.ExpStatement = undefined;
            if (this.Concurrent.Thread.Compiler.VarStatement === undefined) this.Concurrent.Thread.Compiler.VarStatement = undefined;
            if (this.Concurrent.Thread.Compiler.IfStatement === undefined) this.Concurrent.Thread.Compiler.IfStatement = undefined;
            if (this.Concurrent.Thread.Compiler.IfElseStatement === undefined) this.Concurrent.Thread.Compiler.IfElseStatement = undefined;
            if (this.Concurrent.Thread.Compiler.DoWhileStatement === undefined) this.Concurrent.Thread.Compiler.DoWhileStatement = undefined;
            if (this.Concurrent.Thread.Compiler.WhileStatement === undefined) this.Concurrent.Thread.Compiler.WhileStatement = undefined;
            if (this.Concurrent.Thread.Compiler.ForStatement === undefined) this.Concurrent.Thread.Compiler.ForStatement = undefined;
            if (this.Concurrent.Thread.Compiler.ForVarStatement === undefined) this.Concurrent.Thread.Compiler.ForVarStatement = undefined;
            if (this.Concurrent.Thread.Compiler.ForInStatement === undefined) this.Concurrent.Thread.Compiler.ForInStatement = undefined;
            if (this.Concurrent.Thread.Compiler.ForInVarStatement === undefined) this.Concurrent.Thread.Compiler.ForInVarStatement = undefined;
            if (this.Concurrent.Thread.Compiler.ForEachStatement === undefined) this.Concurrent.Thread.Compiler.ForEachStatement = undefined;
            if (this.Concurrent.Thread.Compiler.ForEachVarStatement === undefined) this.Concurrent.Thread.Compiler.ForEachVarStatement = undefined;
            if (this.Concurrent.Thread.Compiler.ContinueStatement === undefined) this.Concurrent.Thread.Compiler.ContinueStatement = undefined;
            if (this.Concurrent.Thread.Compiler.BreakStatement === undefined) this.Concurrent.Thread.Compiler.BreakStatement = undefined;
            if (this.Concurrent.Thread.Compiler.ReturnStatement === undefined) this.Concurrent.Thread.Compiler.ReturnStatement = undefined;
            if (this.Concurrent.Thread.Compiler.WithStatement === undefined) this.Concurrent.Thread.Compiler.WithStatement = undefined;
            if (this.Concurrent.Thread.Compiler.SwitchStatement === undefined) this.Concurrent.Thread.Compiler.SwitchStatement = undefined;
            if (this.Concurrent.Thread.Compiler.CaseClause === undefined) this.Concurrent.Thread.Compiler.CaseClause = undefined;
            if (this.Concurrent.Thread.Compiler.DefaultClause === undefined) this.Concurrent.Thread.Compiler.DefaultClause = undefined;
            if (this.Concurrent.Thread.Compiler.ThrowStatement === undefined) this.Concurrent.Thread.Compiler.ThrowStatement = undefined;
            if (this.Concurrent.Thread.Compiler.TryCatchStatement === undefined) this.Concurrent.Thread.Compiler.TryCatchStatement = undefined;
            if (this.Concurrent.Thread.Compiler.TryFinallyStatement === undefined) this.Concurrent.Thread.Compiler.TryFinallyStatement = undefined;
            if (this.Concurrent.Thread.Compiler.TryCatchFinallyStatement === undefined) this.Concurrent.Thread.Compiler.TryCatchFinallyStatement = undefined;
            if (this.Concurrent.Thread.Compiler.TryCatchListStatement === undefined) this.Concurrent.Thread.Compiler.TryCatchListStatement = undefined;
            if (this.Concurrent.Thread.Compiler.TryCatchListFinallyStatement === undefined) this.Concurrent.Thread.Compiler.TryCatchListFinallyStatement = undefined;
            if (this.Concurrent.Thread.Compiler.CatchGuard === undefined) this.Concurrent.Thread.Compiler.CatchGuard = undefined;
            if (this.Concurrent.Thread.Compiler.FunctionDeclaration === undefined) this.Concurrent.Thread.Compiler.FunctionDeclaration = undefined;
            with (function () {
            with (Data.Cons) {
            with (Concurrent.Thread.Compiler) {

                    return function () {
                        var VERSION;
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Concurrent.Thread code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2006-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */


            NAMESPACE = 'Concurrent.Thread.Compiler';










            function Statement(labels, lineno, source) {
                // This is kind of abstract class.
                this.labels = labels;  // array of Identifier  # labels directly qualifying this statement
                this.lineno = lineno;  // Number (optional)    # line no. 
                this.source = source;  // String (optional)    # file-name, URL, ...etc
            }

            Statement.prototype.toString = function () {
                Kit.codeBug();
            };

                // kind of final protected method.
                // Use this like: labelsToString.call(obj, arg0, arg1 ...)
            function labelsToString() {
                var buf = [];
                for (var i = 0; i < this.labels.length; i++) {
                    buf.push(this.labels[i], ": ");
            }
                return buf.join("");
            }



            function EmptyStatement(labels, lineno, source) {
                Statement.call(this, labels, lineno, source);
            }

            var proto = EmptyStatement.prototype = new Statement();
            proto.constructor = EmptyStatement;

            proto.toString = function () {
                return labelsToString.call(this) + ";";
            };



            function Block(labels, body, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.body = body;  // cons-list of Statement
            }

            var proto = Block.prototype = new Statement();
            proto.constructor = Block;

            proto.toString = function () {
                var buf = [labelsToString.call(this), "{"];
                this.body.forEach(function (it) {
                    buf.push(it);
            });
                buf.push("}");
                return buf.join("\n");
            };



            function ExpStatement(labels, exp, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.exp = exp;  // Expression
            }

            var proto = ExpStatement.prototype = new Statement();
            proto.constructor = ExpStatement;

            proto.toString = function () {
                return labelsToString.call(this) + String(this.exp) + ";";
            };

            proto.containsFunctionCall = function () {
                return this.exp.containsFunctionCall();
            };



            function VarStatement(labels, decls, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.decls = decls;  // array of {id: Identifier,  exp: Expression or null}
            }

            var proto = VarStatement.prototype = new Statement();
            proto.constructor = VarStatement;

            proto.toString = function () {
                var buf = [];
                for (var i = 0; i < this.decls.length; i++) {
                    if (this.decls[i].exp) {
                        buf.push([this.decls[i].id, "=", this.decls[i].exp].join(""));
            }
            else {
                        buf.push(this.decls[i].id);
            }
            }
                return [labelsToString.call(this),
                         "var ",
                         buf.join(", "),
                         ";",
            ].join("");
            };

            proto.containsFunctionCall = function () {
                for (var i = 0; i < this.decls.length; i++) {
                    if (this.decls[i].exp && this.decls[i].exp.containsFunctionCall()) {
                        return true;
            }
            }
                return false;
            };



            function IfStatement(labels, cond, body, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.cond = cond;  // Expression
                this.body = body;  // Statement
            }

            var proto = IfStatement.prototype = new Statement();
            proto.constructor = IfStatement;

            proto.toString = function () {
                return [labelsToString.call(this),
                         "if (",
                         this.cond,
                         ") ",
                         this.body
            ].join("");
            };



            function IfElseStatement(labels, cond, tbody, fbody, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.cond = cond;   // Expression
                this.tbody = tbody;  // Statement
                this.fbody = fbody;  // Statement
            }

            var proto = IfElseStatement.prototype = new Statement();
            proto.constructor = IfElseStatement;

            proto.toString = function () {
                return [labelsToString.call(this),
                         "if (",
                         this.cond,
                         ") ",
                         this.tbody,
                         "\n",
                         "else ",
                         this.fbody
            ].join("");
            };



            function DoWhileStatement(labels, body, cond, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.body = body;  // Statement
                this.cond = cond;  // Expression
            }

            var proto = DoWhileStatement.prototype = new Statement();
            proto.constructor = DoWhileStatement;

            proto.toString = function () {
                return [labelsToString.call(this),
                         "do ",
                         this.body,
                         " while (",
                         this.cond,
                         ");"
            ].join("");
            };



            function WhileStatement(labels, cond, body, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.cond = cond;  // Expression
                this.body = body;  // Statement
            }

            var proto = WhileStatement.prototype = new Statement();
            proto.constructor = WhileStatement;

            proto.toString = function () {
                return [labelsToString.call(this),
                         "while (",
                         this.cond,
                         ") ",
                         this.body
            ].join("");
            };



            function ForStatement(labels, init, cond, incr, body, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.init = init;  // Expression or null
                this.cond = cond;  // Expression or null
                this.incr = incr;  // Expression or null
                this.body = body;  // Statement
            }

            var proto = ForStatement.prototype = new Statement();
            proto.constructor = ForStatement;

            proto.toString = function () {
                return [labelsToString.call(this),
                         "for (",
                         this.init ? this.init : "", "; ",
                         this.cond ? this.cond : "", "; ",
                         this.incr ? this.incr : "",
                         ") ",
                         this.body
            ].join("");
            };



            function ForVarStatement(labels, decls, cond, incr, body, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.decls = decls;  // array of {id: Identifier,  exp: Expression or null}
                this.cond = cond;   // Expression or null
                this.incr = incr;   // Expression or null
                this.body = body;   // Statement
            }

            var proto = ForVarStatement.prototype = new Statement();
            proto.constructor = ForVarStatement;

            proto.toString = function () {
                return [labelsToString.call(this),
                         "for (",
                         (this.decls.length ? new VarStatement([], this.decls) : ";"), " ",
                         this.cond ? this.cond : "", "; ",
                         this.incr ? this.incr : "",
                         ") ",
                         this.body
            ].join("");
            };



            function ForInStatement(labels, lhs, exp, body, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.lhs = lhs;   // Identifier or DotAccessor or BracketAccessor
                this.exp = exp;   // Expression
                this.body = body;  // Statement
            }

            var proto = ForInStatement.prototype = new Statement();
            proto.constructor = ForInStatement;

            proto.toString = function () {
                return [labelsToString.call(this),
                         "for (", this.lhs, " in ", this.exp, ") ",
                         this.body
            ].join("");
            };



            function ForInVarStatement(labels, decl, exp, body, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.decl = decl;  // {id: Identifier,  exp: Expression or null}
                this.exp = exp;   // Expression
                this.body = body;  // Statement
            }

            var proto = ForInVarStatement.prototype = new Statement();
            proto.constructor = ForInVarStatement;

            proto.toString = function () {
                return [labelsToString.call(this),
                         "for ( var ",
                         this.decl.exp ? String(this.decl.id) + "=" + String(this.decl.exp)
                                       : String(this.decl.id),
                         " in ",
                         this.exp,
                         ") ",
                         this.body
            ].join("");
            };


                // Mozilla extention "for each ( ... in ... )"

            function ForEachStatement(labels, lhs, exp, body, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.lhs = lhs;   // Identifier or DotAccessor or BracketAccessor
                this.exp = exp;   // Expression
                this.body = body;  // Statement
            }

            var proto = ForEachStatement.prototype = new Statement();
            proto.constructor = ForEachStatement;

            proto.toString = function () {
                return [labelsToString.call(this),
                         "for each (", this.lhs, " in ", this.exp, ") ",
                         this.body
            ].join("");
            };



            function ForEachVarStatement(labels, decl, exp, body, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.decl = decl;  // {id: Identifier,  exp: Expression or null}
                this.exp = exp;   // Expression
                this.body = body;  // Statement
            }

            var proto = ForEachVarStatement.prototype = new Statement();
            proto.constructor = ForEachVarStatement;

            proto.toString = function () {
                return [labelsToString.call(this),
                         "for each ( var ",
                         this.decl.exp ? String(this.decl.id) + "=" + String(this.decl.exp)
                                       : String(this.decl.id),
                         " in ",
                         this.exp,
                         ") ",
                         this.body
            ].join("");
            };



            function ContinueStatement(labels, target, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.target = target;  // Identifier or null
            }

            var proto = ContinueStatement.prototype = new Statement();
            proto.constructor = ContinueStatement;

            proto.toString = function () {
                var buf = [labelsToString.call(this), "continue"];
                if (this.target) buf.push(" ", this.target);
                buf.push(";");
                return buf.join("");
            };



            function BreakStatement(labels, target, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.target = target;  // Identifier or null
            }

            var proto = BreakStatement.prototype = new Statement();
            proto.constructor = BreakStatement;

            proto.toString = function () {
                var buf = [labelsToString.call(this), "break"];
                if (this.target) buf.push(" ", this.target);
                buf.push(";");
                return buf.join("");
            };



            function ReturnStatement(labels, exp, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.exp = exp;  // Expression or null
            }

            var proto = ReturnStatement.prototype = new Statement();
            proto.constructor = ReturnStatement;

            proto.toString = function () {
                return [labelsToString.call(this),
                         "return ",
                         this.exp ? this.exp : "",
                         ";"
            ].join("");
            };



            function WithStatement(labels, exp, body, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.exp = exp;   // Expression
                this.body = body;  // Statement
            }

            var proto = WithStatement.prototype = new Statement();
            proto.constructor = WithStatement;

            proto.toString = function () {
                return ["with (", this.exp, ") ", this.body].join("");
            };



            function SwitchStatement(labels, exp, clauses, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.exp = exp;      // Expression
                this.clauses = clauses;  // cons-list of (CaseClause or DefaultClause)
            }

            var proto = SwitchStatement.prototype = new Statement();
            proto.constructor = SwitchStatement;

            proto.toString = function () {
                var buf = ["switch ( ", this.exp, ") {\n"];
                this.clauses.forEach(function (it) {
                    buf.push(it, "\n");
            });
                buf.push("}");
                return buf.join("");
            };



            function CaseClause(exp, body, lineno, source) {
                this.exp = exp;     // Expression
                this.body = body;    // cons-list of Statement
                this.lineno = lineno;  // Number (optional)
                this.source = source;  // String (optional)
            }

            CaseClause.prototype.toString = function () {
                var buf = ["case ", this.exp, ":\n"];
                this.body.forEach(function (it) {
                    buf.push(it, "\n");
            });
                return buf.join("");
            };



            function DefaultClause(body, lineno, source) {
                this.body = body;    // cons-list of Statement
                this.lineno = lineno;  // Number (optional)
                this.source = source;  // String (optional)
            }

            DefaultClause.prototype.toString = function () {
                var buf = ["default:\n"];
                this.body.forEach(function (it) {
                    buf.push(it, "\n");
            });
                return buf.join("");
            };



            function ThrowStatement(labels, exp, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.exp = exp;  // Expression
            }

            var proto = ThrowStatement.prototype = new Statement();
            proto.constructor = ThrowStatement;

            proto.toString = function () {
                return [labelsToString.call(this),
                         "throw ", this.exp, ";"
            ].join("");
            };



            function TryCatchStatement(labels, tryBlock, variable, catchBlock, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.tryBlock = tryBlock;    // Block
                this.variable = variable;    // Identifier
                this.catchBlock = catchBlock;  // Block
            }

            var proto = TryCatchStatement.prototype = new Statement();
            proto.constructor = TryCatchStatement;

            proto.toString = function () {
                return [labelsToString.call(this),
                         "try ", this.tryBlock, "\n",
                         "catch (", this.variable, ") ", this.catchBlock
            ].join("");
            };



            function TryFinallyStatement(labels, tryBlock, finallyBlock, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.tryBlock = tryBlock;      // Block
                this.finallyBlock = finallyBlock;  // Block
            }

            var proto = TryFinallyStatement.prototype = new Statement();
            proto.constructor = TryFinallyStatement;

            proto.toString = function () {
                return [labelsToString.call(this),
                         "try ", this.tryBlock, "\n",
                         "finally ", this.finallyBlock
            ].join("");
            };



            function TryCatchFinallyStatement(labels, tryBlock, variable, catchBlock, finallyBlock, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.tryBlock = tryBlock;      // Block
                this.variable = variable;      // Identifier
                this.catchBlock = catchBlock;    // Block
                this.finallyBlock = finallyBlock;  // Block
            }

            var proto = TryCatchFinallyStatement.prototype = new Statement();
            proto.constructor = TryCatchFinallyStatement;

            proto.toString = function () {
                return [labelsToString.call(this),
                         "try ", this.tryBlock, "\n",
                         "catch (", this.variable, ") ", this.catchBlock, "\n",
                         "finally ", this.finallyBlock
            ].join("");
            };



            function TryCatchListStatement(labels, tryBlock, catchList, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.tryBlock = tryBlock;   // Block
                this.catchList = catchList;  // cons-list of CatchGuard
            }

            var proto = TryCatchListStatement.prototype = new Statement();
            proto.constructor = TryCatchListStatement;

            proto.toString = function () {
                var buf = [labelsToString.call(this),
                            "try ", this.tryBlock, "\n"];
                this.catchList.forEach(function (it) {
                    buf.push(it);
            });
                return buf.join("");
            };



            function TryCatchListFinallyStatement(labels, tryBlock, catchList, finallyBlock, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.tryBlock = tryBlock;      // Block
                this.catchList = catchList;     // cons-list of CatchGuard
                this.finallyBlock = finallyBlock;  // Block
            }

            var proto = TryCatchListFinallyStatement.prototype = new Statement();
            proto.constructor = TryCatchListFinallyStatement;

            proto.toString = function () {
                var buf = [labelsToString.call(this),
                            "try ", this.tryBlock, "\n"];
                this.catchList.forEach(function (it) {
                    buf.push(it);
            });
                buf.push("finally ", this.finallyBlock);
                return buf.join("");
            };



            function CatchGuard(variable, cond, block, lineno, source) {
                this.variable = variable;  // Identifier
                this.cond = cond;      // Expression or null (null means this is default catch clause)
                this.block = block;     // Block
                this.lineno = lineno;    // Number (optional)
                this.source = source;    // String (optional)
            }

            CatchGuard.prototype.toString = function () {
                var buf = ["catch ( ", this.variable];
                if (this.cond) buf.push(" if ", this.cond);
                buf.push(" )", this.block);
                return buf.join("");
            };



            function FunctionDeclaration(labels, name, params, body, lineno, source) {
                Statement.call(this, labels, lineno, source);
                this.name = name;    // Identifier
                this.params = params;  // array of Identifier
                this.body = body;    // cons-list of Statement
            }

            var proto = FunctionDeclaration.prototype = new Statement();
            proto.constructor = FunctionDeclaration;

            proto.toString = function () {
                var buf = ["function ", this.name,
                            " (", this.params.join(", "), ") {\n"];
                this.body.forEach(function (it) {
                    buf.push(it, "\n");
            });
                buf.push("}");
                return buf.join("");
            };


                        return {
                CatchGuard: CatchGuard, Block: Block, IfStatement: IfStatement, FunctionDeclaration: FunctionDeclaration, ForVarStatement: ForVarStatement, IfElseStatement: IfElseStatement, TryFinallyStatement: TryFinallyStatement, TryCatchFinallyStatement: TryCatchFinallyStatement, ThrowStatement: ThrowStatement, ForEachStatement: ForEachStatement, EmptyStatement: EmptyStatement, TryCatchStatement: TryCatchStatement, WithStatement: WithStatement, ExpStatement: ExpStatement, ReturnStatement: ReturnStatement, Statement: Statement, ForInVarStatement: ForInVarStatement, BreakStatement: BreakStatement, TryCatchListStatement: TryCatchListStatement, DoWhileStatement: DoWhileStatement, ForInStatement: ForInStatement, DefaultClause: DefaultClause, VarStatement: VarStatement, ContinueStatement: ContinueStatement, TryCatchListFinallyStatement: TryCatchListFinallyStatement, WhileStatement: WhileStatement, SwitchStatement: SwitchStatement, ForEachVarStatement: ForEachVarStatement, CaseClause: CaseClause, ForStatement: ForStatement
            };
            }();
            }
            }
            }.call(null)) {
                this.Concurrent.Thread.Compiler.CatchGuard = CatchGuard;
                this.Concurrent.Thread.Compiler.Block = Block;
                this.Concurrent.Thread.Compiler.IfStatement = IfStatement;
                this.Concurrent.Thread.Compiler.FunctionDeclaration = FunctionDeclaration;
                this.Concurrent.Thread.Compiler.ForVarStatement = ForVarStatement;
                this.Concurrent.Thread.Compiler.IfElseStatement = IfElseStatement;
                this.Concurrent.Thread.Compiler.TryFinallyStatement = TryFinallyStatement;
                this.Concurrent.Thread.Compiler.TryCatchFinallyStatement = TryCatchFinallyStatement;
                this.Concurrent.Thread.Compiler.ThrowStatement = ThrowStatement;
                this.Concurrent.Thread.Compiler.ForEachStatement = ForEachStatement;
                this.Concurrent.Thread.Compiler.EmptyStatement = EmptyStatement;
                this.Concurrent.Thread.Compiler.TryCatchStatement = TryCatchStatement;
                this.Concurrent.Thread.Compiler.WithStatement = WithStatement;
                this.Concurrent.Thread.Compiler.ExpStatement = ExpStatement;
                this.Concurrent.Thread.Compiler.ReturnStatement = ReturnStatement;
                this.Concurrent.Thread.Compiler.Statement = Statement;
                this.Concurrent.Thread.Compiler.ForInVarStatement = ForInVarStatement;
                this.Concurrent.Thread.Compiler.BreakStatement = BreakStatement;
                this.Concurrent.Thread.Compiler.TryCatchListStatement = TryCatchListStatement;
                this.Concurrent.Thread.Compiler.DoWhileStatement = DoWhileStatement;
                this.Concurrent.Thread.Compiler.ForInStatement = ForInStatement;
                this.Concurrent.Thread.Compiler.DefaultClause = DefaultClause;
                this.Concurrent.Thread.Compiler.VarStatement = VarStatement;
                this.Concurrent.Thread.Compiler.ContinueStatement = ContinueStatement;
                this.Concurrent.Thread.Compiler.TryCatchListFinallyStatement = TryCatchListFinallyStatement;
                this.Concurrent.Thread.Compiler.WhileStatement = WhileStatement;
                this.Concurrent.Thread.Compiler.SwitchStatement = SwitchStatement;
                this.Concurrent.Thread.Compiler.ForEachVarStatement = ForEachVarStatement;
                this.Concurrent.Thread.Compiler.CaseClause = CaseClause;
                this.Concurrent.Thread.Compiler.ForStatement = ForStatement;
            }
        }).call(null);
        (function () {
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Compiler || (typeof this.Concurrent.Thread.Compiler != 'object' && typeof this.Concurrent.Thread.Compiler != 'function')) this.Concurrent.Thread.Compiler = new Object();
            if (this.Concurrent.Thread.Compiler.IdentifierMap === undefined) this.Concurrent.Thread.Compiler.IdentifierMap = undefined;
            with (function () {
            with (Concurrent.Thread.Compiler) {

                    return function () {
                        var VERSION;
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Concurrent.Thread code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2006-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */


            NAMESPACE = 'Concurrent.Thread.Compiler';





            var hasOwnProperty = Object.prototype.hasOwnProperty;




            function IdentifierMap() {
                this._map = {};
            }

            var proto = IdentifierMap.prototype;


            proto.clone = function clone() {
                var c = new IdentifierMap();
                for (var i in this._map) {
                    if (hasOwnProperty.call(this._map, i)) c._map[i] = this._map[i];
            }
                return c;
            };


            proto.exists = function ( /* variable arguments */) {
                for (var i = 0; i < arguments.length; i++) {
                    var key = arguments[i];
                    if (!(key instanceof Identifier)) throw new TypeError("arguments[" + i + "] is not of type Identifier");
                    if (!hasOwnProperty.call(this._map, key.valueOf())) return false;
            }
                return true;
            };


            proto.get = function (k) {
                if (!(k instanceof Identifier)) throw new TypeError("arguments[0] is not of type Identifier");
                var s = k.valueOf();
                if (!hasOwnProperty.call(this._map, s)) return undefined;
                return this._map[s].value;
            };


            proto.put = function (k, v) {
                if (!(k instanceof Identifier)) throw new TypeError("arguments[0] is not of type Identifier");
                this._map[k.valueOf()] = { id: k, value: v };
            };


            proto.remove = function (k) {
                if (!(k instanceof Identifier)) throw new TypeError("arguments[0] is not of type Identifier");
                return delete this._map[k.valueOf()];
            };


            proto.keys = function () {
                var set = new IdentifierSet();
                for (var i in this._map) {
                    if (hasOwnProperty.call(this._map, i)) set.add(this._map[i].id);
            }
                return set;
            };


            proto.values = function () {
                var vals = [];
                for (var i in this._map) {
                    if (hasOwnProperty.call(this._map, i)) vals.push(this._map[i].value);
            }
                return vals;
            };


                        return {
                IdentifierMap: IdentifierMap
            };
            }();
            }
            }.call(null)) {
                this.Concurrent.Thread.Compiler.IdentifierMap = IdentifierMap;
            }
        }).call(null);
        (function () {
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Compiler || (typeof this.Concurrent.Thread.Compiler != 'object' && typeof this.Concurrent.Thread.Compiler != 'function')) this.Concurrent.Thread.Compiler = new Object();
            if (this.Concurrent.Thread.Compiler.TokenStream === undefined) this.Concurrent.Thread.Compiler.TokenStream = undefined;
            with (function () {
            with (Concurrent.Thread.Compiler) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Rhino code, released
                 * May 6, 1999.
                 *
                 * The Initial Developer of the Original Code is
                 * Netscape Communications Corporation.
                 * Portions created by the Initial Developer are Copyright (C) 1997-1999
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *   Roger Lawrence
                 *   Mike McCabe
                 *   Igor Bukanov
                 *   Ethan Hugg
                 *   Terry Lucas
                 *   Milen Nankov
                 *   Daisuke Maki
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * the GNU General Public License Version 2 or later (the "GPL"), in which
                 * case the provisions of the GPL are applicable instead of those above. If
                 * you wish to allow use of your version of this file only under the terms of
                 * the GPL and not to allow others to use your version of this file under the
                 * MPL, indicate your decision by deleting the provisions above and replacing
                 * them with the notice and other provisions required by the GPL. If you do
                 * not delete the provisions above, a recipient may use your version of this
                 * file under either the MPL or the GPL.
                 *
                 * ***** END LICENSE BLOCK ***** */

                /**
                 * This file is based on the file TokenStream.java in Rhino 1.6R5.
                 */





            NAMESPACE = 'Concurrent.Thread.Compiler';







                /*
                 * For chars - because we need something out-of-range
                 * to check.  (And checking EOF by exception is annoying.)
                 * Fortunatelly, U+FFFF is guaranteed not to be assigned 
                 * for any character.
                 * Note distinction from EOF token type!
                 */
            var EOF_CHAR = String.fromCharCode(0xFFFF);




            function TokenStream(parser, sourceString, lineno) {
                this.parser = parser;
                this.sourceString = String(sourceString);
                this.sourceEnd = this.sourceString.length;
                this.sourceCursor = 0;

                // stuff other than whitespace since start of line
                this.dirtyLine = false;

                this.string = "";

                this.stringBuffer = [];
                this.ungetBuffer = [];

                this.hitEOF = false;

                this.lineStart = 0;
                this.lineno = Number(lineno) || 1;
                this.lineEndChar = undefined;

                // for xml tokenizer
                this.xmlIsAttribute = false;
                this.xmlIsTagContent = false;
                this.xmlOpenTagsCount = 0;
            }

            var proto = TokenStream.prototype;


                /* This function uses the cached op, string and number fields in
                 * TokenStream; if getToken has been called since the passed token
                 * was scanned, the op or string printed may be incorrect.
                 */
            proto.tokenToString = function (token) {
                if (Token.printTrees) {
                    var name = Token.name(token);

                    switch (token) {
                    case Token.STRING:
                    case Token.REGEXP:
                    case Token.NAME:
                        return name + " `" + this.string + "'";

                    case Token.NUMBER:
                        return "NUMBER " + this.number;
            }

                    return name;
            }
                return "";
            };


            function isKeyword(s) {
                return Token.EOF != stringToKeyword(s);
            }


            var strIdMap = {
                "break": Token.BREAK,
                "case": Token.CASE,
                "catch": Token.CATCH,
                "continue": Token.CONTINUE,
                "default": Token.DEFAULT,
                "delete": Token.DELPROP,
                "do": Token.DO,
                "else": Token.ELSE,
                "export": Token.EXPORT,
                "false": Token.FALSE,
                "finally": Token.FINALLY,
                "for": Token.FOR,
                "function": Token.FUNCTION,
                "if": Token.IF,
                "in": Token.IN,
                "instanceof": Token.INSTANCEOF,
                "new": Token.NEW,
                "null": Token.NULL,
                "return": Token.RETURN,
                "switch": Token.SWITCH,
                "this": Token.THIS,
                "throw": Token.THROW,
                "true": Token.TRUE,
                "try": Token.TRY,
                "typeof": Token.TYPEOF,
                "var": Token.VAR,
                "void": Token.VOID,
                "while": Token.WHILE,
                "with": Token.WITH,
                // Future Reserved Words
                "abstract": Token.RESERVED,
                "boolean": Token.RESERVED,
                "byte": Token.RESERVED,
                "char": Token.RESERVED,
                "class": Token.RESERVED,
                "const": Token.RESERVED,
                "debugger": Token.RESERVED,
                "double": Token.RESERVED,
                "enum": Token.RESERVED,
                "extends": Token.RESERVED,
                "final": Token.RESERVED,
                "float": Token.RESERVED,
                "goto": Token.RESERVED,
                "implements": Token.RESERVED,
                "import": Token.IMPORT,
                "int": Token.RESERVED,
                "interface": Token.RESERVED,
                "long": Token.RESERVED,
                "native": Token.RESERVED,
                "package": Token.RESERVED,
                "private": Token.RESERVED,
                "protected": Token.RESERVED,
                "public": Token.RESERVED,
                "short": Token.RESERVED,
                "static": Token.RESERVED,
                "super": Token.RESERVED,
                "synchronized": Token.RESERVED,
                "throws": Token.RESERVED,
                "transient": Token.RESERVED,
                "volatile": Token.RESERVED
            };

            function stringToKeyword(name) {
                return strIdMap.hasOwnProperty(name) ? strIdMap[name] : Token.EOF;
            }


            proto.getLineno = function () { return this.lineno; };

            proto.getString = function () { return this.string; };

            proto.eof = function () { return this.hitEOF; };


            proto.getToken = function () {
                var c;

                retry:
                for (; ;) {
                // Eat whitespace, possibly sensitive to newlines.
                    for (; ;) {
                        c = this.getChar();
                        if (c === EOF_CHAR) {
                            return Token.EOF;
            } else if (c === '\n') {
                            this.dirtyLine = false;
                            return Token.EOL;
            } else if (!isSpace(c)) {
                            if (c !== '-') {
                                this.dirtyLine = true;
            }
                            break;
            }
            }

                // identifier/keyword/instanceof?
                // watch out for starting with a <backslash>
                    var identifierStart = false;
                    var isUnicodeEscapeStart = false;
                    if (c === '\\') {
                        c = this.getChar();
                        if (c === 'u') {
                            identifierStart = true;
                            isUnicodeEscapeStart = true;
                            this.stringBuffer = ["\\u"];
            } else {
                            identifierStart = false;
                            this.ungetChar(c);
                            c = '\\';
            }
            } else if (isIdentifierStart(c)) {
                        identifierStart = true;
                        this.stringBuffer = [c];
            }

                    if (identifierStart) {
                        var containsEscape = isUnicodeEscapeStart;
                        for (; ;) {
                            if (isUnicodeEscapeStart) {
                // strictly speaking we should probably push-back
                // all the bad characters if the <backslash>uXXXX
                // sequence is malformed. But since there isn't a
                // correct context(is there?) for a bad Unicode
                // escape sequence in an identifier, we can report
                // an error here.
                                for (var i = 0; i != 4; ++i) {
                                    c = this.getChar();
                                    if (isHexDigit(c)) {
                                        this.addToString(c);
            } else {
                                        this.parser.addError("msg.invalid.escape");
                                        return Token.ERROR;
            }
            }
                                isUnicodeEscapeStart = false;
            } else {
                                c = this.getChar();
                                if (c == '\\') {
                                    c = this.getChar();
                                    if (c == 'u') {
                                        this.addToString("\\u");
                                        isUnicodeEscapeStart = true;
                                        containsEscape = true;
            } else {
                                        this.parser.addError("msg.illegal.character");
                                        return Token.ERROR;
            }
            } else {
                                    if (!isIdentifierPart(c)) break;
                                    this.addToString(c);
            }
            }
            }
                        this.ungetChar(c);

                        var str = this.getStringFromBuffer();
                        if (!containsEscape) {
                // OPT we shouldn't have to make a string to
                // check if it's a keyword.

                // Return the corresponding token if it's a keyword
                            var result = stringToKeyword(str);
                            if (result != Token.EOF) return result;
            }
                        this.string = str;
                        return Token.NAME;
            }

                // is it a number?
                    if (isDigit(c) || (c === '.' && isDigit(this.peekChar()))) {
                        this.stringBuffer = [];
                        var base = 10;

                        if (c === '0') {
                            this.addToString('0');
                            c = this.getChar();
                            if (c === 'x' || c === 'X') {
                                this.addToString(c);
                                base = 16;
                                c = this.getChar();
            } else if (isDigit(c)) {
                                base = 8;
            }
            }

                        if (base === 16) {
                            while (isHexDigit(c)) {
                                this.addToString(c);
                                c = this.getChar();
            }
            } else {
                            while (isDigit(c)) {
                /*
                 * We permit 08 and 09 as decimal numbers, which
                 * makes our behavior a superset of the ECMA
                 * numeric grammar.  We might not always be so
                 * permissive, so we warn about it.
                 */
                                if (base === 8 && (c === '8' || c === '9')) {
                                    this.parser.addWarning("msg.bad.octal.literal", c == '8' ? "8" : "9");
                                    base = 10;
            }
                                this.addToString(c);
                                c = this.getChar();
            }
            }

                        if (base === 10) {
                            if (c === '.') {
                                do {
                                    this.addToString(c);
                                    c = this.getChar();
            } while (isDigit(c));
            }
                            if (c === 'e' || c === 'E') {
                                this.addToString(c);
                                c = this.getChar();
                                if (c === '+' || c === '-') {
                                    this.addToString(c);
                                    c = this.getChar();
            }
                                if (!isDigit(c)) {
                                    this.parser.addError("msg.missing.exponent");
                                    return Token.ERROR;
            }
                                do {
                                    this.addToString(c);
                                    c = this.getChar();
            } while (isDigit(c));
            }
            }
                        this.ungetChar(c);

                        this.string = this.getStringFromBuffer();
                        return Token.NUMBER;
            }

                // is it a string?
                    if (c === '"' || c === "'") {
                        var quoteChar = c;
                        this.stringBuffer = [c];
                        c = this.getChar();
                        while (c !== quoteChar) {
                            if (c === '\n' || c === EOF_CHAR) {
                                this.ungetChar(c);
                                this.parser.addError("msg.unterminated.string.lit");
                                return Token.ERROR;
            }
                            if (c === '\\') {
                                this.addToString('\\');
                                c = this.getChar();
                                if (c === '\n') {
                // Remove line terminator after escape to follow
                // SpiderMonkey and C/C++
                // But, issue warning since ECMA262-3 does not allow that.
                                    this.parser.addWarning("msg.unsafe.string.lit");
            } else {
                                    this.addToString(c);
            }
            } else {
                                this.addToString(c);
            }
                            c = this.getChar();
            }
                        this.addToString(quoteChar);
                        this.string = this.getStringFromBuffer();
                        return Token.STRING;
            }

                    switch (c.charCodeAt(0)) {
                    case 0x3B:  // ';'
                        return Token.SEMI;

                    case 0x5B:  // '['
                        return Token.LB;

                    case 0x5D:  // ']'
                        return Token.RB;

                    case 0x7B:  // '{'
                        return Token.LC;

                    case 0x7D:  // '}'
                        return Token.RC;

                    case 0x28:  // '('
                        return Token.LP;

                    case 0x29:  // ')'
                        return Token.RP;

                    case 0x2C:  // ','
                        return Token.COMMA;

                    case 0x3F:  // '?'
                        return Token.HOOK;

                    case 0x40:  // '@'
                        return Token.XMLATTR;

                    case 0x3A:  // ':'
                        if (this.matchChar(':')) {
                            return Token.COLONCOLON;
            } else {
                            return Token.COLON;
            }

                    case 0x2E:  // '.'
                        if (this.matchChar('.')) {
                            return Token.DOTDOT;
            } else if (this.matchChar('(')) {
                            return Token.DOTQUERY;
            } else {
                            return Token.DOT;
            }

                    case 0x7C:  // '|'
                        if (this.matchChar('|')) {
                            return Token.OR;
            } else if (this.matchChar('=')) {
                            return Token.ASSIGN_BITOR;
            } else {
                            return Token.BITOR;
            }

                    case 0x5E:  // '^'
                        if (this.matchChar('=')) {
                            return Token.ASSIGN_BITXOR;
            } else {
                            return Token.BITXOR;
            }

                    case 0x26:  // '&'
                        if (this.matchChar('&')) {
                            return Token.AND;
            } else if (this.matchChar('=')) {
                            return Token.ASSIGN_BITAND;
            } else {
                            return Token.BITAND;
            }

                    case 0x3D:  // '='
                        if (this.matchChar('=')) {
                            if (this.matchChar('=')) {
                                return Token.SHEQ;
            } else {
                                return Token.EQ;
            }
            } else {
                            return Token.ASSIGN;
            }

                    case 0x21:  // '!'
                        if (this.matchChar('=')) {
                            if (this.matchChar('=')) {
                                return Token.SHNE;
            } else {
                                return Token.NE;
            }
            } else {
                            return Token.NOT;
            }

                    case 0x3C:  // '<'
                /* NB:treat HTML begin-comment as comment-till-eol */
                        if (this.matchChar('!')) {
                            if (this.matchChar('-')) {
                                if (this.matchChar('-')) {
                                    this.skipLine();
                                    continue retry;
            }
                                this.ungetChar('-');
            }
                            this.ungetChar('!');
            }
                        if (this.matchChar('<')) {
                            if (this.matchChar('=')) {
                                return Token.ASSIGN_LSH;
            } else {
                                return Token.LSH;
            }
            } else {
                            if (this.matchChar('=')) {
                                return Token.LE;
            } else {
                                return Token.LT;
            }
            }

                    case 0x3E:  // '>'
                        if (this.matchChar('>')) {
                            if (this.matchChar('>')) {
                                if (this.matchChar('=')) {
                                    return Token.ASSIGN_URSH;
            } else {
                                    return Token.URSH;
            }
            } else {
                                if (this.matchChar('=')) {
                                    return Token.ASSIGN_RSH;
            } else {
                                    return Token.RSH;
            }
            }
            } else {
                            if (this.matchChar('=')) {
                                return Token.GE;
            } else {
                                return Token.GT;
            }
            }

                    case 0x2A:  // '*'
                        if (this.matchChar('=')) {
                            return Token.ASSIGN_MUL;
            } else {
                            return Token.MUL;
            }

                    case 0x2F:  // '/'
                // is it a // comment?
                        if (this.matchChar('/')) {
                            this.skipLine();
                            continue retry;
            } else if (this.matchChar('*')) {
                            for (; ;) {
                                c = this.getChar();
                                if (c === EOF_CHAR) {
                                    this.parser.addError("msg.unterminated.comment");
                                    return Token.ERROR;
            } else if (c === '*') {
                                    c = this.getChar();
                                    if (c === '/') {
                                        continue retry;
            }
            }
            }
            } else if (this.matchChar('=')) {
                            return Token.ASSIGN_DIV;
            } else {
                            return Token.DIV;
            }

                    case 0x25:  // '%'
                        if (this.matchChar('=')) {
                            return Token.ASSIGN_MOD;
            } else {
                            return Token.MOD;
            }

                    case 0x7E:  // '~'
                        return Token.BITNOT;

                    case 0x2B:  // '+'
                        if (this.matchChar('=')) {
                            return Token.ASSIGN_ADD;
            } else if (this.matchChar('+')) {
                            return Token.INC;
            } else {
                            return Token.ADD;
            }

                    case 0x2D:  // '-'
                        if (this.matchChar('=')) {
                            c = Token.ASSIGN_SUB;
            } else if (this.matchChar('-')) {
                            if (!this.dirtyLine) {
                // treat HTML end-comment after possible whitespace
                // after line start as comment-untill-eol
                                if (this.matchChar('>')) {
                                    this.skipLine();
                                    continue retry;
            }
            }
                            c = Token.DEC;
            } else {
                            c = Token.SUB;
            }
                        this.dirtyLine = true;
                        return c;

                    default:
                        parser.addError("msg.illegal.character");
                        return Token.ERROR;
            }
            }
            };



                /**
                 * Parser calls the method when it gets / or /= in literal context.
                 */
            proto.readRegExp = function (startToken) {
                if (startToken === Token.ASSIGN_DIV) {
                // Miss-scanned /=
                    this.stringBuffer = ["/="];
            } else if (startToken === Token.DIV) {
                    this.stringBuffer = ["/"];
            } else {
                    Kit.codeBug();
            }

                var c;
                while ((c = this.getChar()) !== '/') {
                    if (c === '\n' || c === EOF_CHAR) {
                        this.ungetChar(c);
                        throw this.parser.reportError("msg.unterminated.re.lit");
            }
                    if (c === '\\') {
                        this.addToString(c);
                        c = this.getChar();
            }
                    this.addToString(c);
            }
                this.addToString("/");

                while (isIdentifierPart(c = this.getChar())) {
                    this.addToString(c);
            }
                this.ungetChar(c);

                this.string = this.getStringFromBuffer();
            }


            proto.isXMLAttribute = function () {
                return this.xmlIsAttribute;
            };

            proto.getFirstXMLToken = function () {
                this.xmlOpenTagsCount = 0;
                this.xmlIsAttribute = false;
                this.xmlIsTagContent = false;
                this.ungetChar('<');
                return this.getNextXMLToken();
            };

            proto.getNextXMLToken = function () {
                this.stringBuffer = []; // remember the XML

                for (var c = this.getChar() ; c !== EOF_CHAR; c = this.getChar()) {
                    if (this.xmlIsTagContent) {
                        switch (c.charCodeAt(0)) {
                        case 0x3E:  // '>'
                            this.addToString('>');
                            this.xmlIsTagContent = false;
                            this.xmlIsAttribute = false;
                            break;
                        case 0x2F:  // '/'
                            this.addToString('/');
                            if (this.matchChar('>')) {
                                this.addToString('>');
                                this.xmlIsTagContent = false;
                                this.xmlOpenTagsCount--;
            }
                            break;
                        case 0x7B:  // '{'
                            this.ungetChar('{');
                            this.string = this.getStringFromBuffer();
                            return Token.XML;
                        case 0x27:  // "'"
                        case 0x22:  // '"'
                            this.addToString(c);
                            if (!this.readQuotedString(c)) return Token.ERROR;
                            break;
                        case 0x3D:  // '='
                            this.addToString('=');
                            this.xmlIsAttribute = true;
                            break;
                        case 0x20:  // ' '
                        case 0x09:  // '\t'
                // case 0x0D:  // '\r'  CR never comes here because of the implementation of getChar().
                        case 0x0A:  // '\n'
                            this.addToString(c);
                            break;
                        default:
                            this.addToString(c);
                            this.xmlIsAttribute = false;
                            break;
            }

                        if (!this.xmlIsTagContent && this.xmlOpenTagsCount === 0) {
                            this.string = this.getStringFromBuffer();
                            return Token.XMLEND;
            }
            } else {
                        switch (c.charCodeAt(0)) {
                        case 0x3C:  // '<'
                            this.addToString('<');
                            c = this.getChar();
                            switch (c.charCodeAt(0)) {
                            case 0x21:  // '!'
                                this.addToString('!');
                                c = this.getChar();
                                switch (c.charCodeAt(0)) {
                                case 0x2D:  // '-'
                                    if (this.getChar() === '-') {
                                        this.addToString('--');
                                        if (!this.readXmlComment()) return Token.ERROR;
            } else {
                                        this.parser.addError("msg.XML.bad.form");
                                        return Token.ERROR;
            }
                                    break;
                                case 0x5B:  // '['
                                    if (this.getChar() === 'C' &&
                                         this.getChar() === 'D' &&
                                         this.getChar() === 'A' &&
                                         this.getChar() === 'T' &&
                                         this.getChar() === 'A' &&
                                         this.getChar() === '[') {
                                        this.addToString('[CDATA[');
                                        if (!this.readCDATA()) return Token.ERROR;
            } else {
                                        this.parser.addError("msg.XML.bad.form");
                                        return Token.ERROR;
            }
                                    break;
                                default:
                                    this.ungetChar(c);
                                    if (!this.readEntity()) return Token.ERROR;
                                    break;
            }
                                break;
                            case 0x3F:  // '?'
                                this.addToString('?');
                                if (!this.readPI()) return Token.ERROR;
                                break;
                            case 0x2F:  // '/'
                // End tag
                                this.addToString('/');
                                if (this.xmlOpenTagsCount === 0) {
                                    this.parser.addError("msg.XML.bad.form");
                                    return Token.ERROR;
            }
                                this.xmlIsTagContent = true;
                                this.xmlOpenTagsCount--;
                                break;
                            default:
                // Start tag
                                this.ungetChar(c);
                                this.xmlIsTagContent = true;
                                this.xmlOpenTagsCount++;
                                break;
            }
                            break;
                        case 0x7B:  // '{'
                            this.ungetChar('{');
                            this.string = this.getStringFromBuffer();
                            return Token.XML;
                        default:
                            this.addToString(c);
                            break;
            }
            }
            }

                this.parser.addError("msg.XML.bad.form");
                return Token.ERROR;
            };

            proto.readQuotedString = function (quote) {
                for (var c = this.getChar() ; c !== EOF_CHAR; c = this.getChar()) {
                    this.addToString(c);
                    if (c === quote) return true;
            }
                parser.addError("msg.XML.bad.form");
                return false;
            };

            proto.readXmlComment = function () {
                for (var c = this.getChar() ; c !== EOF_CHAR;) {
                    this.addToString(c);
                    if (c === '-' && this.matchChar('-')) {
                        this.addToString('-');
                        if (this.matchChar('>')) {
                            this.addToString('>');
                            return true;
            } else {
                // Strictly, XMLComment MUST NOT include the sequence "--".
                // So, if the program execution is here, the source is 
                // syntactically wrong, according to ECMA367. However, we 
                // allow the sequence here, so that our syntax is super-set 
                // of the specification.
                            c = '-';
                            continue;
            }
            }
                    c = this.getChar();
            }
                this.parser.addError("msg.XML.bad.form");
                return false;
            };

            proto.readCDATA = function () {
                for (var c = this.getChar() ; c !== EOF_CHAR;) {
                    this.addToString(c);
                    if (c === ']' && this.matchChar(']')) {
                        this.addToString(']');
                        if (this.matchChar('>')) {
                            this.addToString('>');
                            return true;
            } else {
                            c = ']';
                            continue;
            }
            }
                    c = this.getChar();
            }
                this.parser.addError("msg.XML.bad.form");
                return false;
            };

            proto.readEntity = function () {
                var declTags = 1;
                for (var c = this.getChar() ; c !== EOF_CHAR; c = this.getChar()) {
                    this.addToString(c);
                    switch (c) {
                    case '<':
                        declTags++;
                        break;
                    case '>':
                        declTags--;
                        if (declTags === 0) return true;
                        break;
            }
            }
                this.parser.addError("msg.XML.bad.form");
                return false;
            };

            proto.readPI = function () {
                for (var c = this.getChar() ; c !== EOF_CHAR; c = this.getChar()) {
                    this.addToString(c);
                    if (c === '?' && this.matchChar('>')) {
                        this.addToString('>');
                        return true;
            }
            }
                this.parser.addError("msg.XML.bad.form");
                return false;
            };


            proto.getStringFromBuffer = function () {
                return this.stringBuffer.join("");
            };

            proto.addToString = function ( /* variable arguments */) {
                this.stringBuffer.push.apply(this.stringBuffer, arguments);
            };

            proto.ungetChar = function (c) {
                // can not unread past across line boundary
                if (this.ungetBuffer.length && this.ungetBuffer[this.ungetBuffer.length - 1] == '\n') Kit.codeBug();
                this.ungetBuffer.push(c);
            };

            proto.matchChar = function (test) {
                var c = this.getChar();
                if (c === test) {
                    return true;
            } else {
                    this.ungetChar(c);
                    return false;
            }
            };

            proto.peekChar = function () {
                var c = this.getChar();
                this.ungetChar(c);
                return c;
            };

            proto.getChar = function () {
                if (this.ungetBuffer.length) return this.ungetBuffer.pop();

                for (; ;) {
                    if (this.sourceCursor == this.sourceEnd) {
                        this.hitEOF = true;
                        return EOF_CHAR;
            }
                    var c = this.sourceString.charAt(this.sourceCursor++);

                    if (this.lineEndChar) {
                        if (this.lineEndChar == '\r' && c == '\n') {
                            this.lineEndChar = '\n';
                            continue;
            }
                        this.lineEndChar = undefined;
                        this.lineStart = this.sourceCursor - 1;
                        this.lineno++;
            }

                    if (isLineTerminator(c)) {
                        this.lineEndChar = c;
                        c = '\n';
            }
                    if (isFormatChar(c)) {
                        continue;
            }
                    return c;
            }
            };

            proto.skipLine = function () {
                // skip to end of line
                var c;
                while ((c = this.getChar()) != EOF_CHAR && c != '\n') { }
                this.ungetChar(c);
            };

            proto.getOffset = function () {
                var n = this.sourceCursor - this.lineStart;
                if (this.lineEndChar) { --n; }
                return n;
            };

            proto.getLine = function () {
                var lineEnd = this.sourceCursor;
                if (this.lineEndChar) {
                    --lineEnd;
            } else {
                    for (; lineEnd != this.sourceEnd; ++lineEnd) {
                        var c = this.sourceString.charAt(lineEnd);
                        if (isLineTerminator(c)) {
                            break;
            }
            }
            }
                return this.sourceString.substring(this.lineStart, lineEnd);
            };


                        return {
                TokenStream: TokenStream
            };
            }();
            }
            }.call(null)) {
                this.Concurrent.Thread.Compiler.TokenStream = TokenStream;
            }
        }).call(null);
        (function () {
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Compiler || (typeof this.Concurrent.Thread.Compiler != 'object' && typeof this.Concurrent.Thread.Compiler != 'function')) this.Concurrent.Thread.Compiler = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Cons || (typeof this.Data.Cons != 'object' && typeof this.Data.Cons != 'function')) this.Data.Cons = new Object();
            if (this.Concurrent.Thread.Compiler.CssConvert === undefined) this.Concurrent.Thread.Compiler.CssConvert = undefined;
            with (function () {
            with (Data.Cons) {
            with (Concurrent.Thread.Compiler) {

                    return function () {
                        var VERSION;
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Concurrent.Thread code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2006-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */


            NAMESPACE = 'Concurrent.Thread.Compiler';












            var Css = "Concurrent.Thread.Compiler.CssConvert";



            function CssConvert(func) {
                return func[Css]();
            }


            Statement.prototype[Css] = function () {
                Kit.codeBug("unimplemented '" + Css + "' method for: " + this);
            };

            EmptyStatement.prototype[Css] = function () {
                return this;
            };

            Block.prototype[Css] = function () {
                var head = last = cons(null, nil());
                for (var c = this.body; !c.isNil() ; c = c.cdr) {
                    last = last.cdr = cons(c.car[Css](), last.cdr);
            }
                return new Block(this.labels, head.cdr, this.lineno, this.source);
            };

            ExpStatement.prototype[Css] = function () {
                return new ExpStatement(this.labels, this.exp[Css](), this.lineno, this.source);
            };

            VarStatement.prototype[Css] = function () {
                var decls = [];
                for (var i = 0; i < this.decls.length; i++) {
                    decls[i] = {
                id: this.decls[i].id,
                exp: this.decls[i].exp ? this.decls[i].exp[Css]() : null
            };
            }
                return new VarStatement(this.labels, decls, this.lineno, this.source);
            };

            IfStatement.prototype[Css] = function () {
                return new IfStatement(this.labels, this.cond[Css](), this.body[Css](), this.lineno, this.source);
            };

            IfElseStatement.prototype[Css] = function () {
                return new IfElseStatement(this.labels, this.cond[Css](), this.tbody[Css](), this.fbody[Css](), this.lineno, this.source);
            };

            DoWhileStatement.prototype[Css] = function () {
                return new DoWhileStatement(this.labels, this.body[Css](), this.cond[Css](), this.lineno, this.source);
            };

            WhileStatement.prototype[Css] = function () {
                return new WhileStatement(this.labels, this.cond[Css](), this.body[Css](), this.lineno, this.source);
            };

            ForStatement.prototype[Css] = function () {
                return new ForStatement(
                    this.labels,
                    this.init ? this.init[Css]() : null,
                    this.cond ? this.cond[Css]() : null,
                    this.incr ? this.incr[Css]() : null,
                    this.body[Css](),
                    this.lineno,
                    this.source
                );
            };

            ForVarStatement.prototype[Css] = function () {
                var decls = [];
                for (var i = 0; i < this.decls.length; i++) {
                    decls[i] = {
                id: this.decls[i].id,
                exp: this.decls[i].exp ? this.decls[i].exp[Css]() : null
            };
            }
                return new ForVarStatement(
                    this.labels,
                    decls,
                    this.cond ? this.cond[Css]() : null,
                    this.incr ? this.incr[Css]() : null,
                    this.body[Css](),
                    this.lineno,
                    this.source
                );
            };

            ForInStatement.prototype[Css] = function () {
                return new ForInStatement(this.labels, this.lhs[Css](), this.exp[Css](), this.body[Css](), this.lineno, this.source);
            };

            ForInVarStatement.prototype[Css] = function () {
                var decl = {
                id: this.decl.id,
                exp: this.decl.exp ? this.decl.exp[Css]() : null
            };
                return new ForInVarStatement(this.labels, decl, this.exp[Css](), this.body[Css](), this.lineno, this.source);
            };

            ForEachStatement.prototype[Css] = function () {
                return new ForEachStatement(this.labels, this.lhs[Css](), this.exp[Css](), this.body[Css](), this.lineno, this.source);
            };

            ForEachVarStatement.prototype[Css] = function () {
                var decl = {
                id: this.decl.id,
                exp: this.decl.exp ? this.decl.exp[Css]() : null
            };
                return new ForEachVarStatement(this.labels, decl, this.exp[Css](), this.body[Css](), this.lineno, this.source);
            };

            ContinueStatement.prototype[Css] = function () {
                return this;
            };

            BreakStatement.prototype[Css] = function () {
                return this;
            };

            ReturnStatement.prototype[Css] = function () {
                if (!this.exp) return this;
                return new ReturnStatement(this.labels, this.exp[Css](), this.lineno, this.source);
            };

            WithStatement.prototype[Css] = function () {
                return new WithStatement(this.labels, this.exp[Css](), this.body[Css](), this.lineno, this.source);
            };

            SwitchStatement.prototype[Css] = function () {
                var head = last = cons(null, nil());
                for (var c = this.clauses; !c.isNil() ; c = c.cdr) {
                    last = last.cdr = cons(c.car[Css](), last.cdr);
            }
                return new SwitchStatement(this.labels, this.exp[Css](), head.cdr, this.lineno, this.source);
            };

            CaseClause.prototype[Css] = function () {
                var head = last = cons(null, nil());
                for (var c = this.body; !c.isNil() ; c = c.cdr) {
                    last = last.cdr = cons(c.car[Css](), last.cdr);
            }
                return new CaseClause(this.exp[Css](), head.cdr, this.lineno, this.source);
            };

            DefaultClause.prototype[Css] = function () {
                var head = last = cons(null, nil());
                for (var c = this.body; !c.isNil() ; c = c.cdr) {
                    last = last.cdr = cons(c.car[Css](), last.cdr);
            }
                return new DefaultClause(head.cdr, this.lineno, this.source);
            };

            ThrowStatement.prototype[Css] = function () {
                return new ThrowStatement(this.labels, this.exp[Css](), this.lineno, this.source);
            };

            TryCatchStatement.prototype[Css] = function () {
                return new TryCatchStatement(this.labels, this.tryBlock[Css](), this.variable, this.catchBlock[Css](), this.lineno, this.source);
            };

            TryFinallyStatement.prototype[Css] = function () {
                return new TryFinallyStatement(this.labels, this.tryBlock[Css](), this.finallyBlock[Css](), this.lineno, this.source);
            };

            TryCatchFinallyStatement.prototype[Css] = function () {
                return new TryCatchFinallyStatement(this.labels, this.tryBlock[Css](), this.variable, this.catchBlock[Css](), this.finallyBlock[Css](), this.lineno, this.source);
            };

            TryCatchListStatement.prototype[Css] = function () {
                if (this.catchList.isNil()) {  // no more catch-guard
                    var block = this.tryBlock[Css]();
                    block.labels = this.labels;
                    return block;
            } else if (this.catchList.car.cond) {  // one or more qualified catch-guard
                    var guard = this.catchList.car;
                    return new TryCatchStatement(
                        this.labels,
                        this.tryBlock[Css](),
                        guard.variable,
                        new Block([], list(
                            new IfElseStatement(
                                [],
                                guard.cond[Css](),
                                guard.block[Css](),
                                (new TryCatchListStatement(
                                    [],
                                    new Block([], list(new ThrowStatement([], guard.variable))),
                                    this.catchList.cdr,
                                    this.catchList.cdr.lineno, this.cdr.cdr.source
                                ))[Css](),
                                guard.lineno, guard.source
                            )
                        ))
                    );
            } else {  // (only one) default catch-guard
                    var guard = this.catchList.car;
                    return new TryCatchStatement(this.labels, this.tryBlock[Css](), guard.variable, guard.block[Css](), this.lineno, this.source);
            }
            };

            TryCatchListFinallyStatement.prototype[Css] = function () {
                return new TryFinallyStatement(
                    this.labels,
                    new Block([], list(
                        (new TryCatchListStatement([],
                            this.tryBlock,
                            this.catchList,
                            this.lineno,
                            this.source
                        ))[Css]()
                    ), this.lineno, this.source),
                    this.finallyBlock[Css](),
                    this.lineno, this.source
                );
            };

            FunctionDeclaration.prototype[Css] = function () {
                var head = last = cons(null, nil());
                for (var c = this.body; !c.isNil() ; c = c.cdr) {
                    last = last.cdr = cons(c.car[Css](), last.cdr);
            }
                return new FunctionDeclaration(this.labels, this.name, this.params, head.cdr, this.lineno, this.source);
            };



            Expression.prototype[Css] = Statement.prototype[Css];

            UnaryExpression.prototype[Css] = function () {
                return new this.constructor(this.exp[Css]());
            };

            BinaryExpression.prototype[Css] = function () {
                return new this.constructor(this.left[Css](), this.right[Css]());
            };

            Literal.prototype[Css] =
            Identifier.prototype[Css] =
            ThisExpression.prototype[Css] =
            Elision.prototype[Css] = function () {
                return this;
            };

            ArrayInitializer.prototype[Css] = function () {
                var elems = [];
                for (var i = 0; i < this.elems.length; i++) {
                    elems[i] = this.elems[i][Css]();
            }
                return new ArrayInitializer(elems);
            };

            ObjectInitializer.prototype[Css] = function () {
                var pairs = [];
                for (var i = 0; i < this.pairs.length; i++) {
                    pairs[i] = { prop: this.pairs[i].prop, exp: this.pairs[i].exp[Css]() };
            }
                return new ObjectInitializer(pairs);
            };

            FunctionExpression.prototype[Css] = function () {
                var head = last = cons(null, nil());
                for (var c = this.body; !c.isNil() ; c = c.cdr) {
                    last = last.cdr = cons(c.car[Css](), last.cdr);
            }
                return new FunctionExpression(this.name, this.params, head.cdr);
            };

            DotAccessor.prototype[Css] = function () {
                return new DotAccessor(this.base[Css](), this.prop);
            };

            NewExpression.prototype[Css] =
            CallExpression.prototype[Css] = function () {
                var args = [];
                for (var i = 0; i < this.args.length; i++) {
                    args[i] = this.args[i][Css]();
            }
                return new this.constructor(this.func[Css](), args);
            };

            ConditionalExpression.prototype[Css] = function () {
                return new ConditionalExpression(this.cond[Css](), this.texp[Css](), this.fexp[Css]());
            };

                        return {
                CssConvert: CssConvert
            };
            }();
            }
            }
            }.call(null)) {
                this.Concurrent.Thread.Compiler.CssConvert = CssConvert;
            }
        }).call(null);
        (function () {
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Compiler || (typeof this.Concurrent.Thread.Compiler != 'object' && typeof this.Concurrent.Thread.Compiler != 'function')) this.Concurrent.Thread.Compiler = new Object();
            if (!this.Concurrent.Thread.Compiler.IntermediateLanguage || (typeof this.Concurrent.Thread.Compiler.IntermediateLanguage != 'object' && typeof this.Concurrent.Thread.Compiler.IntermediateLanguage != 'function')) this.Concurrent.Thread.Compiler.IntermediateLanguage = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Cons || (typeof this.Data.Cons != 'object' && typeof this.Data.Cons != 'function')) this.Data.Cons = new Object();
            if (!this.Data.Cons.Util || (typeof this.Data.Cons.Util != 'object' && typeof this.Data.Cons.Util != 'function')) this.Data.Cons.Util = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Cons || (typeof this.Data.Cons != 'object' && typeof this.Data.Cons != 'function')) this.Data.Cons = new Object();
            if (this.Concurrent.Thread.Compiler.IntermediateLanguage.Function === undefined) this.Concurrent.Thread.Compiler.IntermediateLanguage.Function = undefined;
            if (this.Concurrent.Thread.Compiler.IntermediateLanguage.Block === undefined) this.Concurrent.Thread.Compiler.IntermediateLanguage.Block = undefined;
            if (this.Concurrent.Thread.Compiler.IntermediateLanguage.GotoBlock === undefined) this.Concurrent.Thread.Compiler.IntermediateLanguage.GotoBlock = undefined;
            if (this.Concurrent.Thread.Compiler.IntermediateLanguage.CallBlock === undefined) this.Concurrent.Thread.Compiler.IntermediateLanguage.CallBlock = undefined;
            if (this.Concurrent.Thread.Compiler.IntermediateLanguage.NewBlock === undefined) this.Concurrent.Thread.Compiler.IntermediateLanguage.NewBlock = undefined;
            if (this.Concurrent.Thread.Compiler.IntermediateLanguage.Statement === undefined) this.Concurrent.Thread.Compiler.IntermediateLanguage.Statement = undefined;
            if (this.Concurrent.Thread.Compiler.IntermediateLanguage.ExpStatement === undefined) this.Concurrent.Thread.Compiler.IntermediateLanguage.ExpStatement = undefined;
            if (this.Concurrent.Thread.Compiler.IntermediateLanguage.CondStatement === undefined) this.Concurrent.Thread.Compiler.IntermediateLanguage.CondStatement = undefined;
            if (this.Concurrent.Thread.Compiler.IntermediateLanguage.RecvStatement === undefined) this.Concurrent.Thread.Compiler.IntermediateLanguage.RecvStatement = undefined;
            if (this.Concurrent.Thread.Compiler.IntermediateLanguage.EnumStatement === undefined) this.Concurrent.Thread.Compiler.IntermediateLanguage.EnumStatement = undefined;
            with (function () {
            with (Data.Cons.Util) {
            with (Data.Cons) {
            with (Concurrent.Thread.Compiler.IntermediateLanguage) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Concurrent.Thread code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2006-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Concurrent.Thread.Compiler.IntermediateLanguage';














            function Function(name, params, vars, body, start) {
                this.name = name;    // Identifier | Null
                this.params = params;  // [Identifier]
                this.vars = vars;    // [Identifier]
                this.body = body;    // <Block>
                this.start = start;   // Block
            }

            Function.prototype.toString = function () {
                return ["function ", this.name, "( ", this.params.join(", "), " ) {\n",
                          "  var ", this.vars.join(", "), ";\n",
                          this.body.join("\n").replace(/^/mg, "  "),
                          "\n}"].join("");
            };



            var block_id = 0;

            function Block(scopes, body, target, exception) {
                this.id = "label" + block_id++;
                this.scopes = scopes;     // [Expression]
                this.body = body;       // <Statement>
                this.target = target;     // Block | "return" | "throw"
                this.exception = exception;  // Block | "return" | "throw"
            }

            var proto = Block.prototype;

            proto.toString = function () {
                Kit.codeBug('"toString" is not implemented for ', this.constructor);
            };

            proto.appendStatement = function ( /* variable arguments */) {
                var args = arguments;
                if (this.body.isNil()) {
                    this.body = cons(arguments[0], this.body);
                    args = Array.prototype.slice.call(arguments, 1, arguments.length);
            } else {
                    adder(this.body).apply(null, args);
            }
            };

            proto.prependStatement = function ( /* variable arguments */) {
                for (var i = arguments.length - 1; i >= 0; i--) {
                    this.body = cons(arguments[i], this.body);
            }
            };


            function stringify(b) {
                if (b instanceof Block) {
                    return b.id;
            } else {
                    return '"' + b + '"';
            }
            }



            function GotoBlock(scopes, body, arg, target, exception) {
                Block.call(this, scopes, body, target, exception);
                this.arg = arg;
            }

            var proto = GotoBlock.prototype = new Block();

            proto.constructor = GotoBlock;

            proto.toString = function () {
                return [this.id, "([", this.scopes.join(", "), "], ", stringify(this.exception), "): {\n",
                         this.body.join("\n").replace(/^/mg, "  "), "\n",
                         "  goto ", this.arg, " -> ", stringify(this.target), "\n",
                         "}"].join("");
            };



            function CallBlock(scopes, body, this_val, func, args, target, exception) {
                Block.call(this, scopes, body, target, exception);
                this.this_val = this_val;   // Expression
                this.func = func;       // Expression
                this.args = args;       // [Expression]
            }

            var proto = CallBlock.prototype = new Block();

            proto.constructor = CallBlock;

            proto.toString = function () {
                return [this.id, "([", this.scopes.join(", "), "], ", stringify(this.exception), "): {\n",
                         this.body.join("\n").replace(/^/mg, "  "), "\n",
                         "  call ", this.this_val, ".", this.func, "(", this.args.join(", "), ") -> ", stringify(this.target), "\n",
                         "}"].join("");
            };



            function NewBlock(scopes, body, func, args, target, exception) {
                Block.call(this, scopes, body, target, exception);
                this.func = func;       // Expression
                this.args = args;       // [Expression]
            }

            var proto = NewBlock.prototype = new Block();

            proto.constructor = NewBlock;

            proto.toString = function () {
                return [this.id, "([", this.scopes.join(", "), "], ", stringify(this.exception), "): {\n",
                         this.body.join("\n").replace(/^/mg, "  "), "\n",
                         "  new ", this.func, "(", this.args.join(", "), ") -> ", stringify(this.target), "\n",
                         "}"].join("");
            };




            function Statement() {
                // This is kind of interface.
            }

            Statement.prototype.toString = function () {
                Kit.codeBug('"toString" is not implemented for ', this.constructor);
            };



            function ExpStatement(e) {
                this.exp = e;  // Expression
            }

            var proto = ExpStatement.prototype = new Statement();

            proto.constructor = ExpStatement;

            proto.toString = function () {
                return this.exp + ";";
            };



            function CondStatement(c, t) {
                this.cond = c;  // Expression
                this.target = t;  // Block
            }

            var proto = CondStatement.prototype = new Statement();

            proto.constructor = CondStatement;

            proto.toString = function () {
                return ["if ", this.cond, " -> ", stringify(this.target), ";"].join("");
            };



            function RecvStatement(a) {
                this.assignee = a;  // Identifier | DotAccessor | BracketAccessor
            }

            var proto = RecvStatement.prototype = new Statement();

            proto.constructor = RecvStatement;

            proto.toString = function () {
                return ["recv ", this.assignee, ";"].join("");
            };



            function EnumStatement(e, a) {
                this.exp = e;  // Expression
                this.assignee = a;  // Identifier | DotAccessor | BracketAccessor
            }

            var proto = EnumStatement.prototype = new Statement();

            proto.constructor = EnumStatement;

            proto.toString = function () {
                return ["enum ", this.assignee, " <- ", this.exp, ";"].join("");
            };

                        return {
                Block: Block, RecvStatement: RecvStatement, GotoBlock: GotoBlock, Function: Function, NewBlock: NewBlock, ExpStatement: ExpStatement, CallBlock: CallBlock, EnumStatement: EnumStatement, Statement: Statement, CondStatement: CondStatement
            };
            }();
            }
            }
            }
            }.call(null)) {
                this.Concurrent.Thread.Compiler.IntermediateLanguage.Block = Block;
                this.Concurrent.Thread.Compiler.IntermediateLanguage.RecvStatement = RecvStatement;
                this.Concurrent.Thread.Compiler.IntermediateLanguage.GotoBlock = GotoBlock;
                this.Concurrent.Thread.Compiler.IntermediateLanguage.Function = Function;
                this.Concurrent.Thread.Compiler.IntermediateLanguage.NewBlock = NewBlock;
                this.Concurrent.Thread.Compiler.IntermediateLanguage.ExpStatement = ExpStatement;
                this.Concurrent.Thread.Compiler.IntermediateLanguage.CallBlock = CallBlock;
                this.Concurrent.Thread.Compiler.IntermediateLanguage.EnumStatement = EnumStatement;
                this.Concurrent.Thread.Compiler.IntermediateLanguage.Statement = Statement;
                this.Concurrent.Thread.Compiler.IntermediateLanguage.CondStatement = CondStatement;
            }
        }).call(null);
        (function () {
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Compiler || (typeof this.Concurrent.Thread.Compiler != 'object' && typeof this.Concurrent.Thread.Compiler != 'function')) this.Concurrent.Thread.Compiler = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Cons || (typeof this.Data.Cons != 'object' && typeof this.Data.Cons != 'function')) this.Data.Cons = new Object();
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (this.Concurrent.Thread.Compiler.CuConvert === undefined) this.Concurrent.Thread.Compiler.CuConvert = undefined;
            with (function () {
            with (Data.Cons) {
            with (Concurrent.Thread) {
            with (Concurrent.Thread.Compiler) {

                    return function () {
                        var VERSION;
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Concurrent.Thread code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2006-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */


            NAMESPACE = 'Concurrent.Thread.Compiler';



                ///@require Concurrent.Thread.Compiler.Expression
                ///@require Concurrent.Thread.Compiler.Statement

                ///@require Concurrent.Thread.Compiler.IdentifierMap

            var IL = Concurrent.Thread.Compiler.IntermediateLanguage;






            function CuConvert(func) {
                // "map" below actually represents context of conversion.
                // Essentially, it maps old-block-ID => optimized-block. But, if the
                // value of a key is of type Array, it means that the block idenfied
                // with the ID is currently in process of the conversion (that means
                // "target" link is cyclic), and that each element of the array is a
                // GotoBlock whose "target" property is to be overwritten with the
                // optimized version of the block identified with old-block-ID.
                var map = {};
                func.body.forEach(function (it) {
                    if (!map.hasOwnProperty(it.id)) {
                        unify_block(it, map);
            }
            });
                func.body = nil();
                for (var i in map) {
                    if (map.hasOwnProperty(i)) {
                        var block = map[i];
                        replace_target(block, "exception", map);
                        block.body.forEach(function (it) {
                            if (it instanceof IL.CondStatement) {
                                replace_target(it, "target", map);
            }
            });
                        func.body = cons(map[i], func.body);
            }
            }
                func.start = map[func.start.id];
                return func;
            }

            function unify_block(block, map) {
                map[block.id] = [];
                var next = block.target;
                if (next instanceof IL.Block) {
                    if (map.hasOwnProperty(next.id)) {
                        if (map[next.id] instanceof Array) {
                            map[next.id].push(block);
            } else {
                            block.target = map[next.id];
            }
            } else {
                        block.target = unify_block(next, map);
            }
            }
                var unified;
                if (can_unify(block)) {
                    next = block.target;
                    switch (next.constructor) {
                        case IL.GotoBlock:
                            unified = new IL.GotoBlock(next.scopes, next.body, next.arg, next.target, next.exception);
                            break;
                        case IL.CallBlock:
                            unified = new IL.CallBlock(next.scopes, next.body, next.this_val, next.func, next.args, next.target, next.exception);
                            break;
                        case IL.NewBlock:
                            unified = new IL.NewBlock(next.scopes, next.body, next.func, next.args, next.target, next.exception);
                            break;
                        default:
                            throw new Error("Concurrent.Thread.Compiler.CuConvert: internal error");
            }
                    unified.body = concat_list(block.body, next.body);
                    if (unified.target instanceof IL.Block && map.hasOwnProperty(unified.target.id) && map[unified.target.id] instanceof Array) {
                        map[unified.target.id].push(unified);
            }
            } else {
                    unified = block;
            }
                map[block.id].forEach(function (it) {
                    it.target = unified;
            });
                map[block.id] = unified;
                return unified;
            }

            function can_unify(block) {
                if (!(block instanceof IL.GotoBlock)) return false;
                var next = block.target;
                if (!(next instanceof IL.Block)) return false;
                if (block === next) return false;
                if (block.exception !== next.exception) return false;
                if (block.scopes.length !== next.scopes.length) return false;
                var length = block.exception.length;
                for (var i = 0; i < length; i++) {
                    if (block.scopes[i] !== next.scopes[i]) return false;
            }
                return true;
            }

            function replace_target(base, prop, map) {
                var target = base[prop];
                if (target === "return" || target === "throw") {
                    return;
            }
                if (!(target instanceof IL.Block)) {
                    throw new Error(NAMESPACE + ".CuConvert: internal error - `" + target + "' is not of type IntermediateLanguage.Block");
            }
                var target_id = target.id;
                if (map.hasOwnProperty(target_id)) {
                    base[prop] = map[target_id];
            }
            }


            function concat_list(x, y) {
                return concat_list_aux(x, concat_list_aux(nil(), y));
            }

            function concat_list_aux(list, acc) {
                if (list.isNil()) {
                    return acc;
            } else {
                    return cons(list.car, concat_list_aux(list.cdr, acc));
            }
            }

                        return {
                CuConvert: CuConvert
            };
            }();
            }
            }
            }
            }.call(null)) {
                this.Concurrent.Thread.Compiler.CuConvert = CuConvert;
            }
        }).call(null);
        (function () {
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Compiler || (typeof this.Concurrent.Thread.Compiler != 'object' && typeof this.Concurrent.Thread.Compiler != 'function')) this.Concurrent.Thread.Compiler = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Cons || (typeof this.Data.Cons != 'object' && typeof this.Data.Cons != 'function')) this.Data.Cons = new Object();
            if (!this.Data.Cons.Util || (typeof this.Data.Cons.Util != 'object' && typeof this.Data.Cons.Util != 'function')) this.Data.Cons.Util = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Cons || (typeof this.Data.Cons != 'object' && typeof this.Data.Cons != 'function')) this.Data.Cons = new Object();
            if (this.Concurrent.Thread.Compiler.CzConvert === undefined) this.Concurrent.Thread.Compiler.CzConvert = undefined;
            with (function () {
            with (Data.Cons.Util) {
            with (Data.Cons) {
            with (Concurrent.Thread.Compiler) {

                    return function () {
                        var VERSION;
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Concurrent.Thread code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2006-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */


            NAMESPACE = 'Concurrent.Thread.Compiler';






            var IL = Concurrent.Thread.Compiler.IntermediateLanguage;









            var Cz = "$Concurrent_Thread_Compiler_CzConvert";

            var PREFIX = "$Concurrent_Thread_";
            var var_this = new Identifier(PREFIX + "this");
            var var_args = new Identifier(PREFIX + "arguments");
            var var_cont = new Identifier(PREFIX + "continuation");
            var var_self = new Identifier(PREFIX + "self");
            var var_compiled = new Identifier(PREFIX + "compiled");
            var var_intermediate = new Identifier(PREFIX + "intermediate");

            var name_arguments = new Identifier("arguments");
            var name_prototype = new Identifier("prototype");
            var name_apply = new Identifier("apply");
            var name_procedure = new Identifier("procedure");
            var name_this_val = new Identifier("this_val");
            var name_exception = new Identifier("exception");

            var var_null_function = new Identifier(PREFIX + "null_function");
            var null_function = new FunctionDeclaration([], var_null_function, [], nil());




            function CzConvert(func) {
                var body = inner_function(func);
                return new FunctionExpression(
                           null,
                           [var_this, var_args, var_cont],
                           list(
                               new ReturnStatement([],
                                   new CallExpression(
                                       new DotAccessor(body, name_apply),
                                       [var_this, var_args]
                                   )
                               )
                           )
                       );
            }




            var arguments_callee = new DotAccessor(name_arguments, new Identifier("callee"));

            function inner_function(func) {
                var blocks = func.body.map(function (it) { return it[Cz](); });
                blocks = cons(var_declaration(func.vars),
                         cons(null_function,
                         cons(make_assign(var_args, name_arguments),
                         cons(make_assign(arguments_callee, var_self),
                               blocks))));
                adder(blocks)(make_return(func.start));
                return new FunctionExpression(null, func.params, blocks);
            }

            function var_declaration(vars) {
                if (!vars.length) return new EmptyStatement([]);
                var decls = [];
                vars.forEach(function (it) {
                    decls.push({ id: it, exp: null });
            });
                return new VarStatement([], decls);
            }


            function make_assign(lhs, rhs) {
                return new ExpStatement([], new SimpleAssignExpression(lhs, rhs));
            }


            var var_cont_ex = new DotAccessor(var_cont, name_exception);

            function target_to_name(b) {
                if (b instanceof IL.Block) {
                    return new Identifier(PREFIX + b.id);
            } else if (b === "return") {
                    return var_cont;
            } else if (b === "throw") {
                    return var_cont_ex;
            } else {
                    Kit.codeBug("invalid target");
            }
            }


            var undefinedExp = new VoidExpression(new Literal(0));
            var name_continuation = new Identifier("continuation");
            var name_timeout = new Identifier("timeout");
            var name_ret_val = new Identifier("ret_val");

            function make_return(continuation, ret_val) {
                return new ReturnStatement([], new ObjectInitializer([
                           { prop: name_continuation, exp: target_to_name(continuation) },
                           { prop: name_ret_val, exp: ret_val || undefinedExp },
                           { prop: name_timeout, exp: undefinedExp }
            ]));
            }


            var assign_arguments = make_assign(name_arguments, var_args);

            function make_continuation(block, body) {
                body = new Block([], body);
                for (var i = block.scopes.length - 1; i >= 0; i--) {
                    body = new WithStatement([], block.scopes[i], body);
            }
                return new VarStatement([], [{
                id: target_to_name(block),
                exp: new ObjectInitializer([
                             { prop: name_procedure, exp: new FunctionExpression(null, [var_intermediate], list(assign_arguments, body)) },
                             { prop: name_this_val, exp: new ThisExpression() },
                             { prop: name_exception, exp: target_to_name(block.exception) }
            ])
            }]);
            }



            IL.GotoBlock.prototype[Cz] = function () {
                var body = this.body.map(function (it) {
                    return it[Cz]();
            });
                body = cons(null, body);
                adder(body)(make_return(this.target, this.arg));
                return make_continuation(this, body.cdr);
            };


            var string_object = new StringLiteral('"object"');
            var string_function = new StringLiteral('"function"');

            IL.CallBlock.prototype[Cz] = function () {
                var body = this.body.map(function (it) {
                    return it[Cz]();
            });
                body = cons(null, body);
                adder(body)(new IfElseStatement([],
                    new AndExpression(
                        this.func,
                        new StrictEqualExpression(
                            new TypeofExpression(
                                new DotAccessor(this.func, var_compiled)
                            ),
                            string_function
                        )
                    ),
                    new ReturnStatement([],
                        new CallExpression(
                            new DotAccessor(this.func, var_compiled),
                            [
                                this.this_val,
                                new ArrayInitializer(this.args),
                                target_to_name(this.target)
            ]
                        )
                    ),
                    make_return(
                        this.target,
                        new CallExpression(this.func, this.args)
                    )
                ));
                return make_continuation(this, body.cdr);
            };


            IL.NewBlock.prototype[Cz] = function () {
                var body = this.body.map(function (it) {
                    return it[Cz]();
            });
                body = cons(null, body);
                /*  // Construct the following code-tree.
                    if ( CONSTRUCTOR && typeof CONSTRUCTOR.$Concurrent_Thread_compiled == "function" ) {
                    $Concurrent_Thread_null_function.prototype = CONSTRUCTOR.prototype;
                    $Concurrent_Thread_this = new $Concurrent_Thread_null_function();
                    return CONSTRUCTOR.$Concurrent_Thread_compiled(
                               $Concurrent_Thread_this,
                               [ARG1, ARG2, ...],
                               { procedure: function($Concurrent_Thread_intermediate){
                                if ( !($Concurrent_Thread_intermediate && (typeof $Concurrent_Thread_intermediate === "object" || typeof $Concurrent_Thread_intermediate === "function") )
                                  $Concurrent_Thread_intermediate = $Concurrent_Thread_this;
                                $Concurrent_Thread_this = null;  // encourages GC
                                   return { continuation: CONTINUATION,
                                            ret_val     : $Concurrent_Thread_intermediate,
                                            timeout     : void 0                          };
                               }, this_val: this, exception: EXCEPTION }
                           );
                    } else {
                        return { continuation: CONTINUATION,
                                 ret_val     : new CONSTRUCTOR(ARG1, ARG2...),
                                 timeout     : void 0
                               };
                    } 
                 */
                adder(body)(new IfElseStatement([],
                    new AndExpression(
                        this.func,
                        new StrictEqualExpression(
                            new TypeofExpression(
                                new DotAccessor(this.func, var_compiled)
                            ),
                            string_function
                        )
                    ),
                    new Block([],
                        list(
                            make_assign(new DotAccessor(var_null_function, name_prototype),
                                         new DotAccessor(this.func, name_prototype)),
                            make_assign(var_this, new NewExpression(var_null_function, [])),
                            new ReturnStatement([],
                                new CallExpression(
                                    new DotAccessor(this.func, var_compiled),
                                    [
                                        var_this,
                                        new ArrayInitializer(this.args),
                                        new ObjectInitializer([
                                            {
                prop: name_procedure, exp: new FunctionExpression(null, [var_intermediate], list(
                                                new IfStatement([],
                                                    new NotExpression(
                                                        new AndExpression(
                                                            var_intermediate,
                                                            new OrExpression(
                                                                new StrictEqualExpression(new TypeofExpression(var_intermediate), string_object),
                                                                new StrictEqualExpression(new TypeofExpression(var_intermediate), string_function)
                                                            )
                                                        )
                                                    ),
                                                    make_assign(var_intermediate, var_this)
                                                ),
                                                make_assign(var_this, new NullLiteral()),
                                                make_return(this.target, var_intermediate)
                                            ))
            },
                                            { prop: name_this_val, exp: new ThisExpression() },
                                            { prop: name_exception, exp: target_to_name(this.exception) }
            ])
            ]
                                )
                            )
                        )
                    ),
                    make_return(this.target, new NewExpression(this.func, this.args))
                ));
                return make_continuation(this, body.cdr);
            };


            IL.ExpStatement.prototype[Cz] = function () {
                return new ExpStatement([], this.exp);
            };


            IL.CondStatement.prototype[Cz] = function () {
                return new IfStatement([], this.cond, make_return(this.target));
            };


            IL.RecvStatement.prototype[Cz] = function () {
                return make_assign(this.assignee, var_intermediate);
            };


            var name_push = new Identifier("push");

            IL.EnumStatement.prototype[Cz] = function () {
                return new Block([], list(
                    make_assign(var_this, new ArrayInitializer([])),
                    new ForInStatement([], var_intermediate, this.exp,
                        new ExpStatement([],
                            new CallExpression(
                                new DotAccessor(var_this, name_push),
                                [var_intermediate]
                            )
                        )
                    ),
                    make_assign(this.assignee, var_this),
                    make_assign(var_this, new NullLiteral())
                ));
            };

                        return {
                CzConvert: CzConvert
            };
            }();
            }
            }
            }
            }.call(null)) {
                this.Concurrent.Thread.Compiler.CzConvert = CzConvert;
            }
        }).call(null);
        (function () {
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Compiler || (typeof this.Concurrent.Thread.Compiler != 'object' && typeof this.Concurrent.Thread.Compiler != 'function')) this.Concurrent.Thread.Compiler = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Cons || (typeof this.Data.Cons != 'object' && typeof this.Data.Cons != 'function')) this.Data.Cons = new Object();
            if (!this.Data.Cons.Util || (typeof this.Data.Cons.Util != 'object' && typeof this.Data.Cons.Util != 'function')) this.Data.Cons.Util = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Error || (typeof this.Data.Error != 'object' && typeof this.Data.Error != 'function')) this.Data.Error = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Cons || (typeof this.Data.Cons != 'object' && typeof this.Data.Cons != 'function')) this.Data.Cons = new Object();
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (this.Concurrent.Thread.Compiler.CfConvert === undefined) this.Concurrent.Thread.Compiler.CfConvert = undefined;
            if (this.Concurrent.Thread.Compiler.CyclicExceptionHandlerError === undefined) this.Concurrent.Thread.Compiler.CyclicExceptionHandlerError = undefined;
            with (function () {
            with (Data.Cons.Util) {
            with (Data.Cons) {
            with (Data.Error) {
            with (Concurrent.Thread) {
            with (Concurrent.Thread.Compiler) {

                    return function () {
                        var VERSION;
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Concurrent.Thread code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2006-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */


            NAMESPACE = 'Concurrent.Thread.Compiler';








            var IL = Concurrent.Thread.Compiler.IntermediateLanguage;












            var Cf = "$Concurrent_Thread_Compiler_Cf";


            function CfConvert(func) {
                var cache = new IdentifierMap();
                var start = CfTarget(func.start, cache);
                var cache2 = new IdentifierMap();
                cache.values().forEach(function (it) {
                    cache2.put(new Identifier(it.id), it);
            });
                var body = cons(null, nil());
                append = adder(body);
                cacheToList(cache2).forEach(function (it) {
                    return append(cache2.get(it));
            });
                return new IL.Function(func.name, func.params, func.vars, body.cdr, start);
            }


            function cacheToList(cache) {
                // Resolves exception-dependency and sort blocks in valid order.
                var blocks = [];
                var depends = new IdentifierMap();
                cache.values().forEach(function (it) {
                    blocks.push(it);
                    depends.put(
                        new Identifier(it.id),
                        it.exception instanceof IL.Block ? new Identifier(it.exception.id) : undefined
                    );
            });
                return check_cyclic(depends);
            }



            var CyclicExceptionHandlerError = Error.extend(
                function ($super, message) { $super(message); },
                { name: NAMESPACE + ".CyclicExceptionHandlerError" }
            );

            function check_cyclic(depends) {
                var ok = {};
                function traverse(id, path) {
                    if (ok[id]) return "OK";
                    var next = depends.get(id);
                    if (!next) {
                        ok[id] = true;
                        path.push(id);
                        return "OK";
            }
                    path.forEach(function (it) {
                        if (it.valueOf() == id.valueOf()) {
                            throw new CyclicExceptionHandlerError("cyclic exception handler: " + path.concat([id]).join(" -> "));
            }
            });
                    path.push(id);
                    traverse(next, path);
                    ok[id] = true;
                    return "OK";
            }
                var result = [];
                depends.keys().forEach(function (it) {
                    var path = [];
                    traverse(it, path);
                    result = path.concat(result);
            });
                return result.reverse();
            }


            function CfTarget(b, cache) {
                if (b === "return" || b === "throw") return b;
                if (cache.get(new Identifier(b.id))) return cache.get(new Identifier(b.id));
                return b[Cf](cache);
            }


            IL.GotoBlock.prototype[Cf] = function (cache) {
                var block = new IL.GotoBlock();
                cache.put(new Identifier(this.id), block);
                block.scopes = this.scopes.map(function (it) { return it[Cf](cache); });
                block.body = this.body.map(function (it) { return it[Cf](cache); });
                block.arg = this.arg[Cf](cache);
                block.target = CfTarget(this.target, cache);
                block.exception = CfTarget(this.exception, cache);
                return block;
            };

            IL.CallBlock.prototype[Cf] = function (cache) {
                var block = new IL.CallBlock();
                cache.put(new Identifier(this.id), block);
                block.scopes = this.scopes.map(function (it) { return it[Cf](cache); });
                block.body = this.body.map(function (it) { return it[Cf](cache); });
                block.this_val = this.this_val[Cf](cache);
                block.func = this.func[Cf](cache);
                block.args = this.args.map(function (it) { return it[Cf](cache); });
                block.target = CfTarget(this.target, cache);
                block.exception = CfTarget(this.exception, cache);
                return block;
            };

            IL.NewBlock.prototype[Cf] = function (cache) {
                var block = new IL.NewBlock();
                cache.put(new Identifier(this.id), block);
                block.scopes = this.scopes.map(function (it) { return it[Cf](cache); });
                block.body = this.body.map(function (it) { return it[Cf](cache); });
                block.func = this.func[Cf](cache);
                block.args = this.args.map(function (it) { return it[Cf](cache); });
                block.target = CfTarget(this.target, cache);
                block.exception = CfTarget(this.exception, cache);
                return block;
            };


            IL.ExpStatement.prototype[Cf] = function (cache) {
                return new IL.ExpStatement(
                    this.exp[Cf](cache)
                );
            };

            IL.CondStatement.prototype[Cf] = function (cache) {
                return new IL.CondStatement(
                    this.cond[Cf](cache),
                    CfTarget(this.target, cache)
                );
            };

            IL.RecvStatement.prototype[Cf] = function (cache) {
                return new IL.RecvStatement(
                    this.assignee[Cf](cache)
                );
            };

            IL.EnumStatement.prototype[Cf] = function (cache) {
                return new IL.EnumStatement(
                    this.exp[Cf](cache),
                    this.assignee[Cf](cache)
                );
            };


            Expression.prototype[Cf] = function (cache) {
                return this;
            };

            UnaryExpression.prototype[Cf] = function (cache) {
                return new this.constructor(this.exp[Cf](cache));
            };

            BinaryExpression.prototype[Cf] = function (cache) {
                return new this.constructor(this.left[Cf](cache), this.right[Cf](cache));
            };

            ArrayInitializer.prototype[Cf] = function (cache) {
                return new ArrayInitializer(this.elems.map(function (it) {
                    return it[Cf](cache);
            }));
            };

            FunctionExpression.prototype[Cf] = function (cache) {
                return prepareTree(this);
            };

            ObjectInitializer.prototype[Cf] = function (cache) {
                return new ObjectInitializer(this.pairs.map(function (it) {
                    return { prop: it.prop, exp: it.exp[Cf](cache) };
            }));
            };

            DotAccessor.prototype[Cf] = function (cache) {
                return new DotAccessor(this.base[Cf](cache), this.prop);
            };

            ConditionalExpression.prototype[Cf] = function (cache) {
                return new ConditionalExpression(
                    this.cond[Cf](cache),
                    this.texp[Cf](cache),
                    this.fexp[Cf](cache)
                );
            };


                        return {
                CfConvert: CfConvert, CyclicExceptionHandlerError: CyclicExceptionHandlerError
            };
            }();
            }
            }
            }
            }
            }
            }.call(null)) {
                this.Concurrent.Thread.Compiler.CfConvert = CfConvert;
                this.Concurrent.Thread.Compiler.CyclicExceptionHandlerError = CyclicExceptionHandlerError;
            }
        }).call(null);
        (function () {
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Compiler || (typeof this.Concurrent.Thread.Compiler != 'object' && typeof this.Concurrent.Thread.Compiler != 'function')) this.Concurrent.Thread.Compiler = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Error || (typeof this.Data.Error != 'object' && typeof this.Data.Error != 'function')) this.Data.Error = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Cons || (typeof this.Data.Cons != 'object' && typeof this.Data.Cons != 'function')) this.Data.Cons = new Object();
            if (this.Concurrent.Thread.Compiler.Parser === undefined) this.Concurrent.Thread.Compiler.Parser = undefined;
            with (function () {
            with (Data.Cons) {
            with (Data) {
            with (Data.Error) {
            with (Concurrent.Thread.Compiler) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Rhino code, released
                 * May 6, 1999.
                 *
                 * The Initial Developer of the Original Code is
                 * Netscape Communications Corporation.
                 * Portions created by the Initial Developer are Copyright (C) 1997-1999
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *   Mike Ang
                 *   Igor Bukanov
                 *   Yuh-Ruey Chen
                 *   Ethan Hugg
                 *   Terry Lucas
                 *   Mike McCabe
                 *   Milen Nankov
                 *   Daisuke Maki
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * the GNU General Public License Version 2 or later (the "GPL"), in which
                 * case the provisions of the GPL are applicable instead of those above. If
                 * you wish to allow use of your version of this file only under the terms of
                 * the GPL and not to allow others to use your version of this file under the
                 * MPL, indicate your decision by deleting the provisions above and replacing
                 * them with the notice and other provisions required by the GPL. If you do
                 * not delete the provisions above, a recipient may use your version of this
                 * file under either the MPL or the GPL.
                 *
                 * ***** END LICENSE BLOCK ***** */

                /**
                 * This file is based on the file Parser.java in Rhino 1.6R5.
                 */





            NAMESPACE = 'Concurrent.Thread.Compiler';





















                // TokenInformation flags : flaggedTokenBuffer stores them together
                // with token type
            var CLEAR_TI_MASK = 0xFFFF;   // mask to clear token information bits
            var TI_AFTER_EOL = 1 << 16;  // first token of the source line
            var TI_CHECK_LABEL = 1 << 17;  // indicates to check for label


                // Exception to unwind
            var ParserException = Exception.extend(
                function ($super, message) { $super(message); },
                { name: NAMESPACE + ".ParserException" }
            );

                // Exception to return statement-label
            function LabelException(label) {
                this.label = label;  // Identifier
            }


                // default error reporter
            var defaultReporter = new ErrorReporter();
            defaultReporter.error = function (message, line, lineSource, lineOffset) {
                throw new SyntaxError("(" + line + ", " + lineOffset + "): " + message + "\nline: " + lineSource);
            };



            function Parser(errorReporter) {
                this.errorReporter = errorReporter instanceof ErrorReporter
                                             ? errorReporter : defaultReporter;
                this.ts = undefined;  // TokenStream
                this.source = undefined;  // String       # file-name, URL, ...etc
                this.flaggedTokenBuffer = null;       // Stack
                this.syntaxErrorCount = 0;
                this.nestingOfFunction = 0;
                // The following are per function variables and should be saved/restored
                // during function parsing.
                this.nestingOfLoop = 0;
                this.nestingOfSwitch = 0;
                this.allLabelSet = null;  // contains all labels in current scope
                this.loopLabelSet = null;  // contains only labels qualifying IterationStatement in current scope
            }

            var proto = Parser.prototype;


            proto.getMessage = function (messageId  /* optional args */) {
                //!! fake implementation
                return messageId;
            };

            proto.addWarning = function (messageId  /* optional args */) {
                this.errorReporter.warning(this.getMessage.apply(this, arguments),
                                           this.ts.getLineno(),
                                           this.ts.getLine(),
                                           this.ts.getOffset());
            };

            proto.addError = function (messageId  /* optional args */) {
                ++this.syntaxErrorCount;
                this.errorReporter.error(this.getMessage.apply(this, arguments),
                                         this.ts.getLineno(),
                                         this.ts.getLine(),
                                         this.ts.getOffset());
            };

            proto.reportError = function (messageId  /* optional args */) {
                this.addError.apply(this, arguments);
                // Throw a ParserException exception to unwind the recursive descent
                // parse.
                throw new ParserException();
            };


            proto.peekToken = function () {
                var tt;
                if (this.flaggedTokenBuffer.isEmpty()) {
                    tt = this.ts.getToken();
                    if (tt === Token.EOL) {
                        do {
                            tt = this.ts.getToken();
            } while (tt === Token.EOL);
                        tt |= TI_AFTER_EOL;
            }
                    this.flaggedTokenBuffer.push(tt);
            } else {
                    tt = this.flaggedTokenBuffer.peek();
            }
                return tt & CLEAR_TI_MASK;
            };

            proto.peekFlaggedToken = function () {
                this.peekToken();
                return this.flaggedTokenBuffer.peek();
            };

            proto.consumeToken = function () {
                this.flaggedTokenBuffer.pop();
            };

            proto.nextToken = function () {
                var tt = this.peekToken();
                this.consumeToken();
                return tt;
            };

            proto.nextFlaggedToken = function () {
                this.peekToken();
                var ttFlagged = this.flaggedTokenBuffer.peek();
                this.consumeToken();
                return ttFlagged;
            };

            proto.matchToken = function (toMatch) {
                if (this.peekToken() !== toMatch) return false;
                this.consumeToken();
                return true;
            };

            proto.peekTokenOrEOL = function () {
                var tt = this.peekToken();
                // Check for last peeked token flags
                if (this.flaggedTokenBuffer.peek() & TI_AFTER_EOL) return Token.EOL;
                return tt;
            };

                // Since we need to backtrack to properly parse "default xml namespace"
                // in switch-statement.
            proto.ungetToken = function (token) {
                this.flaggedTokenBuffer.push(token);
            };

            proto.setCheckForLabel = function () {
                var tt = this.flaggedTokenBuffer.pop();
                if ((tt & CLEAR_TI_MASK) !== Token.NAME) throw Kit.codeBug();
                this.flaggedTokenBuffer.push(tt | TI_CHECK_LABEL);
            };

            proto.mustMatchToken = function (toMatch, messageId  /* optional args */) {
                if (!this.matchToken(toMatch)) {
                    var args = [];
                    for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
                    this.reportError.apply(this, args);
            }
            };

            proto.eof = function () {
                return this.ts.eof();
            };

            proto.insideFunction = function () {
                return this.nestingOfFunction !== 0;
            };

            proto.insideLoop = function () {
                return this.nestingOfLoop !== 0;
            };

            proto.enterLoop = function (labels) {
                for (var i = 0; i < labels.length; i++) this.loopLabelSet.add(labels[i]);
                this.nestingOfLoop++;
            };

            proto.exitLoop = function (labels) {
                for (var i = 0; i < labels.length; i++) this.loopLabelSet.remove(labels[i]);
                this.nestingOfLoop--;
            };


            proto.parse = function (sourceString, lineno, source) {
                this.ts = new TokenStream(this, sourceString, lineno);
                this.source = source;  // optional
                this.flaggedTokenBuffer = new Stack();
                this.syntaxErrorCount = 0;
                this.nestingOfFunction = 0;
                this.nestingOfLoop = 0;
                this.nestingOfSwitch = 0;
                this.allLabelSet = new IdentifierSet();
                this.loopLabelSet = new IdentifierSet();

                try {
                    var body = this.statements();
                    this.mustMatchToken(Token.EOF, "msg.syntax");
            } catch (e) {
                    if (e instanceof ParserException) {
                // Ignore it.
            } else {
                // Maybe stack overflow.
                //!!fake implementation
                        throw e;
            }
            }

                if (this.syntaxErrorCount) {
                    var msg = "msg.got.syntax.errors";
                    this.addError(msg);
                    throw new SyntaxError(this.getMessage("msg.got.syntax.errors"));
            }

                this.ts = null; // It helps GC
                return body;
            };


            proto.statements = function () {
                var head, cell;
                cell = head = cons(null, nil());
                bodyLoop: for (; ;) {
                    var n;
                    switch (this.peekToken()) {
                      case Token.ERROR:
                      case Token.EOF:
                      case Token.RC:
                        break bodyLoop;
                      case Token.FUNCTION:  // save the stack
                        this.consumeToken();
                        n = this.functionDecl([]);
                        break;
                      default:
                        n = this.statement();
                        break;
            }
                    cell = cell.cdr = cons(n, cell.cdr);
            }
                return head.cdr;
            };


            proto.functionDecl = function (labels) {
                var baseLineno = this.ts.getLineno();  // line number where source starts
                this.mustMatchToken(Token.NAME, "msg.no.func.name");
                var name = new Identifier(this.ts.getString());
                var params = this.parameterList();
                var body = this.functionBody();
                return new FunctionDeclaration(labels, name, params, body, baseLineno, this.source);
            };

            proto.functionExpr = function () {
                var name = null;
                if (this.matchToken(Token.NAME)) name = new Identifier(this.ts.getString());
                var params = this.parameterList();
                var body = this.functionBody();
                return new FunctionExpression(name, params, body);
            };

            proto.parameterList = function () {
                this.mustMatchToken(Token.LP, "msg.no.paren.parms");
                if (this.matchToken(Token.RP)) return [];
                var params = [];
                var exists = new IdentifierSet();
                do {
                    this.mustMatchToken(Token.NAME, "msg.no.parm");
                    var p = new Identifier(this.ts.getString());
                    if (exists.contains(p)) this.addWarning("msg.dup.parms", s);
                    params.push(p);
                    exists.add(p);
            } while (this.matchToken(Token.COMMA));
                this.mustMatchToken(Token.RP, "msg.no.paren.after.parms");
                return params;
            };

            proto.functionBody = function () {
                this.mustMatchToken(Token.LC, "msg.no.brace.body");

                var saveAllLabel = this.allLabelSet;
                var saveLoopLabel = this.loopLabelSet;
                var saveLoop = this.nestingOfLoop;
                var saveSwitch = this.nestingOfSwitch;
                this.allLabelSet = new IdentifierSet();
                this.loopLabelSet = new IdentifierSet();
                this.nestingOfLoop = 0;
                this.nestingOfSwitch = 0;
                this.nestingOfFunction++;
                try {
                    var body = this.statements();
            } catch (e) {
                    if (e instanceof ParserException) {
                // Ignore it
            } else {
                        throw e;
            }
            } finally {
                    this.allLabelSet = saveAllLabel;
                    this.loopLabelSet = saveLoopLabel;
                    this.nestingOfLoop = saveLoop;
                    this.nestingOfSwitch = saveSwitch;
                    this.nestingOfFunction--;
            }

                this.mustMatchToken(Token.RC, "msg.no.brace.after.body");
                return body;
            };


            proto.statement = function () {
                try {
                    var n = this.statementHelper([]);
                    if (n != null) return n;
            } catch (e) {
                    if (e instanceof ParserException) {
                // Ignore it.
            } else {
                        throw e;
            }
            }

                // skip to end of statement
                guessingStatementEnd: for (; ;) {
                    var tt = this.peekTokenOrEOL();
                    this.consumeToken();
                    switch (tt) {
                      case Token.ERROR:
                      case Token.EOF:
                      case Token.EOL:
                      case Token.SEMI:
                        break guessingStatementEnd;
            }
            }
                return null;
            };

            proto.statementHelper = function (labels) {
                var statement = null;
                switch (this.peekToken()) {
                  case Token.IF: {
                    this.consumeToken();
                    var lineno = this.ts.getLineno();
                    var cond = this.condition();
                    var tstat = this.statement();
                    if (this.matchToken(Token.ELSE)) {
                        return new IfElseStatement(labels, cond, tstat, this.statement(), lineno, this.source);
            } else {
                        return new IfStatement(labels, cond, tstat, lineno, this.source);
            }
            }

                  case Token.SWITCH: {
                    this.consumeToken();
                    var lineno = this.ts.getLineno();
                    this.mustMatchToken(Token.LP, "msg.no.paren.switch");
                    var exp = this.expr(false);
                    this.mustMatchToken(Token.RP, "msg.no.paren.after.switch");
                    this.mustMatchToken(Token.LC, "msg.no.brace.switch");
                    var switchStatement = new SwitchStatement(labels, exp, nil(), lineno, this.source);
                    var clauses = cons(nil(), nil());
                    var last = clauses;
                    this.nestingOfSwitch++;
                    try {
                        var hasDefault = false;
                switchLoop: for (; ;) {
                            var lineno = this.ts.getLineno();
                            var caseExpression;
                            switch (this.nextToken()) {
                              case Token.RC:
                                break switchLoop;
                              case Token.CASE:
                                caseExpression = this.expr(false);
                                this.mustMatchToken(Token.COLON, "msg.no.colon.case");
                                break;
                              case Token.DEFAULT:
                                if (hasDefault) this.reportError("msg.double.switch.default");
                                hasDefault = true;
                                caseExpression = null;
                                this.mustMatchToken(Token.COLON, "msg.no.colon.case");
                                break;
                              default:
                                this.reportError("msg.bad.switch");
                                break switchLoop;
            }
                            var c = caseExpression
                                      ? new CaseClause(caseExpression, this.statementsInSwitch(), lineno, this.source)
                                      : new DefaultClause(this.statementsInSwitch(), lineno, this.source);
                            last = last.cdr = cons(c, last.cdr);
            }
            } finally {
                        this.nestingOfSwitch--;
            }
                    switchStatement.clauses = clauses.cdr;
                    return switchStatement;
            }

                  case Token.WHILE: {
                    this.consumeToken();
                    var lineno = this.ts.getLineno();
                    this.enterLoop(labels);
                    try {
                        return new WhileStatement(labels, this.condition(), this.statement(), lineno, this.source);
            } finally {
                        this.exitLoop(labels);
            }
            }

                  case Token.DO: {
                    this.consumeToken();
                    var lineno = this.ts.getLineno();
                    this.enterLoop(labels);
                    try {
                        var body = this.statement();
            } finally {
                        this.exitLoop(labels);
            }
                    this.mustMatchToken(Token.WHILE, "msg.no.while.do");
                    var cond = this.condition();
                // Always auto-insert semicon to follow SpiderMonkey:
                // It is required by EMAScript but is ignored by the rest of
                // world, see bug 238945
                    this.matchToken(Token.SEMI);
                    return new DoWhileStatement(labels, body, cond, lineno, this.source);
            }

                  case Token.FOR: {
                    this.consumeToken();
                    var lineno = this.ts.getLineno();

                    var init;  // init is also foo in 'foo in Object'
                    var cond;  // cond is also object in 'foo in Object'
                    var incr = null;
                    var body;

                    var isForEach = false;
                    var isForIn = false;
                    var isVar = false;

                // See if this is a for each () instead of just a for ()
                    if (this.matchToken(Token.NAME)) {
                        if (this.ts.getString() === "each") {
                            isForEach = true;
            } else {
                            this.reportError("msg.no.paren.for");
            }
            }

                    this.mustMatchToken(Token.LP, "msg.no.paren.for");

                    var tt = this.peekToken();
                    if (tt === Token.SEMI) {
                        init = null;
            } else {
                        if (tt === Token.VAR) {
                // set init to a var list or initial
                            this.consumeToken();    // consume the 'var' token
                            init = this.variables(true);
                            isVar = true;
            }
            else {
                            init = this.expr(true);
            }
            }

                    if (this.matchToken(Token.IN)) {
                        isForIn = true;
                // 'cond' is the object over which we're iterating
                        cond = this.expr(false);
            } else {  // ordinary for loop
                        this.mustMatchToken(Token.SEMI, "msg.no.semi.for");
                        if (this.peekToken() === Token.SEMI) {
                // no loop condition
                            cond = null;
            } else {
                            cond = this.expr(false);
            }

                        this.mustMatchToken(Token.SEMI, "msg.no.semi.for.cond");
                        if (this.peekToken() === Token.RP) {
                            incr = null;
            } else {
                            incr = this.expr(false);
            }
            }

                    this.mustMatchToken(Token.RP, "msg.no.paren.for.ctrl");

                    this.enterLoop(labels);
                    try {
                        body = this.statement();
            } finally {
                        this.exitLoop(labels);
            }

                    if (!isForIn) {
                // Although SpiderMonkey doesn't allow "for each ( ...; ...; ... )",
                // Rhino1.6R5 allowed it. We follow Rhino's position here.
                        if (isVar) return new ForVarStatement(labels, init, cond, incr, body, lineno, this.source);
            else return new ForStatement(labels, init, cond, incr, body, lineno, this.source);
            } else {
                        if (isVar) {
                // Check if init (var declarations) contains only one.
                            if (init.length != 1) this.reportError("msg.mult.index");
                            if (isForEach) return new ForEachVarStatement(labels, init[0], cond, body, lineno, this.source);
            else return new ForInVarStatement(labels, init[0], cond, body, lineno, this.source);
            } else {
                // Check if init (an expression left-hand-side of "in") has lvalue.
                            if (!init.hasLvalue()) this.reportError("msg.bad.for.in.lhs");
                            if (isForEach) return new ForEachStatement(labels, init, cond, body, lineno, this.source);
            else return new ForInStatement(labels, init, cond, body, lineno, this.source);
            }
            }
            }

                  case Token.TRY: {
                    this.consumeToken();
                    var lineno = this.ts.getLineno();

                // Although ECMA262-3 requires a block here, Rhino1.6R5 allows any kind of statement.
                // We follow Rhino's style, but issue warning when a statement is not a block.
                    var tryBlock = this.statement();
                    if (!(tryBlock instanceof Block)) {
                        this.addWarning("msg.no.brace.tryblock");
                        tryBlock = new Block([], cons(tryBlock, nil()), tryBlock.lineno, tryBlock.source);
            }

                    var catchList;
                    var cell = catchList = cons(null, nil());
                    var sawDefaultCatch = false;
                    var peek = this.peekToken();
                    if (peek === Token.CATCH) {
                        while (this.matchToken(Token.CATCH)) {
                            if (sawDefaultCatch) this.reportError("msg.catch.unreachable");
                            var line = this.ts.getLineno();
                            this.mustMatchToken(Token.LP, "msg.no.paren.catch");
                            this.mustMatchToken(Token.NAME, "msg.bad.catchcond");
                            var variable = new Identifier(this.ts.getString());

                            var cond = null;
                            if (this.matchToken(Token.IF)) {
                                cond = this.expr(false);
            } else {
                                sawDefaultCatch = true;
            }

                            this.mustMatchToken(Token.RP, "msg.bad.catchcond");
                            this.mustMatchToken(Token.LC, "msg.no.brace.catchblock");
                            var block = new Block([], this.statements(), line, this.source);
                            this.mustMatchToken(Token.RC, "msg.no.brace.after.body");

                            var clause = new CatchGuard(variable, cond, block, line, this.source);
                            cell = cell.cdr = cons(clause, cell.cdr);
            }
            } else if (peek !== Token.FINALLY) {
                        this.mustMatchToken(Token.FINALLY, "msg.try.no.catchfinally");
            }
                    catchList = catchList.cdr;

                    var finallyBlock = null;
                    if (this.matchToken(Token.FINALLY)) {
                // Rhino also allows any kind of statement here.
                        finallyBlock = this.statement();
                        if (!(finallyBlock instanceof Block)) {
                            this.addWarning("msg.no.brace.finallyblock");
                            finallyBlock = new Block([], cons(finallyBlock, nil()), finallyBlock.lineno, finallyBlock.source);
            }
            }

                    return finallyBlock
                             ? new TryCatchListFinallyStatement(labels, tryBlock, catchList, finallyBlock, lineno, this.source)
                             : new TryCatchListStatement(labels, tryBlock, catchList, lineno, this.source);
            }

                  case Token.THROW: {
                    this.consumeToken();
                    if (this.peekTokenOrEOL() === Token.EOL) {
                // ECMAScript does not allow new lines before throw expression,
                // see bug 256617
                        this.reportError("msg.bad.throw.eol");
            }

                    var lineno = this.ts.getLineno();
                    statement = new ThrowStatement(labels, this.expr(false), lineno, this.source);
                    break;
            }

                  case Token.BREAK: {
                    this.consumeToken();
                    var lineno = this.ts.getLineno();
                    var target = this.matchJumpLabelName(Token.BREAK);
                    if (target == null) {
                        if (!this.nestingOfLoop && !this.nestingOfSwitch) this.reportError("msg.bad.break");
            }
                    statement = new BreakStatement(labels, target, lineno, this.source);
                    break;
            }

                  case Token.CONTINUE: {
                    this.consumeToken();
                    var lineno = this.ts.getLineno();
                    var target = this.matchJumpLabelName(Token.CONTINUE);
                    if (target == null) {
                        if (!this.nestingOfLoop) reportError("msg.continue.outside");
            }
                    statement = new ContinueStatement(labels, target, lineno, this.source);
                    break;
            }

                  case Token.WITH: {
                    this.consumeToken();
                    var lineno = this.ts.getLineno();
                    this.mustMatchToken(Token.LP, "msg.no.paren.with");
                    var exp = this.expr(false);
                    this.mustMatchToken(Token.RP, "msg.no.paren.after.with");
                    var body = this.statement();
                    return new WithStatement(labels, exp, body, lineno, this.source);
            }

                  case Token.VAR: {
                    this.consumeToken();
                    statement = new VarStatement(labels, this.variables(false), lineno, this.source);
                    break;
            }

                  case Token.RETURN: {
                    if (!this.insideFunction()) this.reportError("msg.bad.return");
                    this.consumeToken();
                    var lineno = this.ts.getLineno();
                    var exp;
                /* This is ugly, but we don't want to require a semicolon. */
                    switch (this.peekTokenOrEOL()) {
                      case Token.SEMI:
                      case Token.RC:
                      case Token.EOF:
                      case Token.EOL:
                      case Token.ERROR:
                        exp = null;
                        break;
                      default:
                        exp = this.expr(false);
            }
                    statement = new ReturnStatement(labels, exp, lineno, this.source);
                    break;
            }

                  case Token.LC:
                    this.consumeToken();
                    var block = new Block(labels, this.statements(), lineno, this.source);
                    this.mustMatchToken(Token.RC, "msg.no.brace.block");
                    return block;

                  case Token.ERROR:
                // Fall thru, to have a node for error recovery to work on
                  case Token.SEMI:
                    this.consumeToken();
                    return new EmptyStatement(labels, lineno, this.source);

                  case Token.FUNCTION: {
                    this.consumeToken();
                    return this.functionDecl(labels);
            }

                  case Token.DEFAULT: {
                    this.consumeToken();
                    this.reportError("msg.XML.not.available");
            }

                  case Token.NAME: {
                    var lineno = this.ts.getLineno();
                    this.setCheckForLabel();
                    try {
                        statement = new ExpStatement(labels, this.expr(false), lineno, this.source);
            } catch (e) {
                        if (e instanceof LabelException) {
                // Label found!
                            if (this.allLabelSet.contains(e.label)) this.reportError("msg.dup.label");
                            this.allLabelSet.add(e.label);
                            labels.push(e.label);
                            try {
                                statement = this.statementHelper(labels);
            } finally {
                                this.allLabelSet.remove(e.label);
            }
                            return statement;
            } else {
                            throw e;
            }
            }
                    break;
            }

                  default: {
                    var lineno = this.ts.getLineno();
                    statement = new ExpStatement(labels, this.expr(false), lineno, this.source);
                    break;
            }
            }

                switch (this.peekTokenOrEOL()) {
                  case Token.SEMI:
                // Consume ';' as a part of statement
                    this.consumeToken();
                    break;
                  case Token.ERROR:
                  case Token.EOF:
                  case Token.EOL:
                  case Token.RC:
                // Autoinsert ;
                    break;
                  default:
                // Report error if no EOL or autoinsert ; otherwise
                    this.reportError("msg.no.semi.stmt");
            }

                return statement;
            };

            proto.condition = function () {
                this.mustMatchToken(Token.LP, "msg.no.paren.cond");
                var exp = this.expr(false);
                this.mustMatchToken(Token.RP, "msg.no.paren.after.cond");
                if (exp instanceof SimpleAssignExpression) this.addWarning("msg.assign.cond");
                return exp;
            };

                // match a NAME; return null if no match.
            proto.matchJumpLabelName = function (token) {
                if (this.peekTokenOrEOL() !== Token.NAME) return null;
                var label = new Identifier(this.ts.getString());
                this.consumeToken();
                switch (token) {
                  case Token.CONTINUE:
                    if (!this.loopLabelSet.contains(label)) {
                        this.reportError("msg.undef.label");
            }
                    break;
                  case Token.BREAK:
                    if (!this.allLabelSet.contains(label)) {
                        this.reportError("msg.undef.label");
            }
                    break;
                  default:
                    throw Kit.codeBug();
            }
                return label;
            };

            proto.statementsInSwitch = function () {
                var head, cell;
                head = cell = cons(null, nil());
                clauseLoop: for (; ;) {
                    switch (this.peekToken()) {
                      case Token.ERROR:
                      case Token.EOF:
                      case Token.RC:
                      case Token.CASE:
                        break clauseLoop;
                      case Token.DEFAULT:
                        this.consumeToken();
                        var tt = this.peekToken();
                        this.ungetToken(Token.DEFAULT);
                        if (tt === Token.COLON) break clauseLoop;
                // fall thru
                      default:
                        cell = cell.cdr = cons(this.statement(), cell.cdr);
            }
            }
                return head.cdr;
            };

            proto.variables = function (inForInit) {
                var decls = [];
                for (; ;) {
                    this.mustMatchToken(Token.NAME, "msg.bad.var");
                    var name = new Identifier(this.ts.getString());
                    var init = this.matchToken(Token.ASSIGN)
                                 ? this.assignExpr(inForInit)
                                 : null;
                    decls.push({ id: name, exp: init });
                    if (!this.matchToken(Token.COMMA)) break;
            }
                return decls;
            };


            proto.expr = function (inForInit) {
                var exp = this.assignExpr(inForInit);
                while (this.matchToken(Token.COMMA)) {
                    exp = new CommaExpression(exp, this.assignExpr(inForInit));
            }
                return exp;
            };


            proto.assignExpr = function (inForInit) {
                var exp = this.condExpr(inForInit);
                var tt = this.peekToken();
                if (tt < Token.FIRST_ASSIGN || Token.LAST_ASSIGN < tt) return exp;

                if (!exp.hasLvalue()) this.reportError("msg.bad.assign.left");

                switch (this.nextToken()) {
                  case Token.ASSIGN:
                    return new SimpleAssignExpression(exp, this.assignExpr(inForInit));
                  case Token.ASSIGN_BITOR:
                    return new BitOrAssignExpression(exp, this.assignExpr(inForInit));
                  case Token.ASSIGN_BITXOR:
                    return new BitXorAssignExpression(exp, this.assignExpr(inForInit));
                  case Token.ASSIGN_BITAND:
                    return new BitAndAssignExpression(exp, this.assignExpr(inForInit));
                  case Token.ASSIGN_LSH:
                    return new LShiftAssignExpression(exp, this.assignExpr(inForInit));
                  case Token.ASSIGN_RSH:
                    return new RShiftAssignExpression(exp, this.assignExpr(inForInit));
                  case Token.ASSIGN_URSH:
                    return new URShiftAssignExpression(exp, this.assignExpr(inForInit));
                  case Token.ASSIGN_ADD:
                    return new AddAssignExpression(exp, this.assignExpr(inForInit));
                  case Token.ASSIGN_SUB:
                    return new SubAssignExpression(exp, this.assignExpr(inForInit));
                  case Token.ASSIGN_MUL:
                    return new MulAssignExpression(exp, this.assignExpr(inForInit));
                  case Token.ASSIGN_DIV:
                    return new DivAssignExpression(exp, this.assignExpr(inForInit));
                  case Token.ASSIGN_MOD:
                    return new ModAssignExpression(exp, this.assignExpr(inForInit));
                  default:
                    throw Kit.codeBug();
            }
            };


            proto.condExpr = function (inForInit) {
                var exp = this.orExpr(inForInit);
                if (!this.matchToken(Token.HOOK)) return exp;
                var ifTrue = this.assignExpr(false);
                this.mustMatchToken(Token.COLON, "msg.no.colon.cond");
                var ifFalse = this.assignExpr(inForInit);
                return new ConditionalExpression(exp, ifTrue, ifFalse);
            };


            proto.orExpr = function (inForInit) {
                var exp = this.andExpr(inForInit);
                while (this.matchToken(Token.OR)) {
                    exp = new OrExpression(exp, this.andExpr(inForInit));
            }
                return exp;
            };


            proto.andExpr = function (inForInit) {
                var exp = this.bitOrExpr(inForInit);
                while (this.matchToken(Token.AND)) {
                    exp = new AndExpression(exp, this.bitOrExpr(inForInit));
            }
                return exp;
            };


            proto.bitOrExpr = function (inForInit) {
                var exp = this.bitXorExpr(inForInit);
                while (this.matchToken(Token.BITOR)) {
                    exp = new BitOrExpression(exp, this.bitXorExpr(inForInit));
            }
                return exp;
            };


            proto.bitXorExpr = function (inForInit) {
                var exp = this.bitAndExpr(inForInit);
                while (this.matchToken(Token.BITXOR)) {
                    exp = new BitXorExpression(exp, this.bitAndExpr(inForInit));
            }
                return exp;
            };


            proto.bitAndExpr = function (inForInit) {
                var exp = this.eqExpr(inForInit);
                while (this.matchToken(Token.BITAND)) {
                    exp = new BitAndExpression(exp, this.eqExpr(inForInit));
            }
                return exp;
            };


            proto.eqExpr = function (inForInit) {
                var exp = this.relExpr(inForInit);
                for (; ;) {
                    var constructor;
                    switch (this.peekToken()) {
                      case Token.EQ:
                        constructor = EqualExpression;
                        break;
                      case Token.NE:
                         constructor = NotEqualExpression;
                        break;
                      case Token.SHEQ:
                        constructor = StrictEqualExpression;
                        break;
                      case Token.SHNE:
                        constructor = StrictNotEqualExpression;
                        break;
                      default:
                        return exp;
            }
                    this.consumeToken();
                    exp = new constructor(exp, this.relExpr(inForInit));
            }
            };


            proto.relExpr = function (inForInit) {
                var exp = this.shiftExpr();
                for (; ;) {
                    var constructor;
                    switch (this.peekToken()) {
                      case Token.IN:
                        if (inForInit) return exp;
                        constructor = InExpression;
                        break;
                      case Token.INSTANCEOF:
                        constructor = InstanceofExpression;
                        break;
                      case Token.LE:
                        constructor = LessEqualExpression;
                        break;
                      case Token.LT:
                        constructor = LessThanExpression;
                        break;
                      case Token.GE:
                        constructor = GreaterEqualExpression;
                        break;
                      case Token.GT:
                        constructor = GreaterThanExpression;
                        break;
                      default:
                        return exp;
            }
                    this.consumeToken();
                    exp = new constructor(exp, this.shiftExpr());
            }
            };


            proto.shiftExpr = function () {
                var exp = this.addExpr();
                for (; ;) {
                    var constructor;
                    switch (this.peekToken()) {
                      case Token.LSH:
                        constructor = LShiftExpression;
                        break;
                      case Token.RSH:
                        constructor = RShiftExpression;
                        break;
                      case Token.URSH:
                        constructor = URShiftExpression;
                        break;
                      default:
                        return exp;
            }
                    this.consumeToken();
                    exp = new constructor(exp, this.addExpr());
            }
            };


            proto.addExpr = function () {
                var exp = this.mulExpr();
                for (; ;) {
                    var constructor;
                    switch (this.peekToken()) {
                      case Token.ADD:
                        constructor = AddExpression;
                        break;
                      case Token.SUB:
                        constructor = SubExpression;
                        break;
                      default:
                        return exp;
            }
                    this.consumeToken();
                    exp = new constructor(exp, this.mulExpr());
            }
            };


            proto.mulExpr = function () {
                var exp = this.unaryExpr();
                for (; ;) {
                    var constructor;
                    switch (this.peekToken()) {
                      case Token.MUL:
                        constructor = MulExpression;
                        break;
                      case Token.DIV:
                        constructor = DivExpression;
                        break;
                      case Token.MOD:
                        constructor = ModExpression;
                        break;
                      default:
                        return exp;
            }
                    this.consumeToken();
                    exp = new constructor(exp, this.unaryExpr());
            }
            };


            proto.unaryExpr = function () {
                var constructor;
                var needLvalue = null;
                switch (this.peekToken()) {
                  case Token.VOID:
                    constructor = VoidExpression;
                    break;
                  case Token.NOT:
                    constructor = NotExpression;
                    break;
                  case Token.BITNOT:
                    constructor = BitNotExpression;
                    break;
                  case Token.TYPEOF:
                    constructor = TypeofExpression;
                    break;
                  case Token.ADD:
                    constructor = PosExpression;
                    break;
                  case Token.SUB:
                    constructor = NegExpression;
                    break;
                  case Token.INC:
                    constructor = PreIncExpression;
                    needLvalue = "msg.bad.incr";
                    break;
                case Token.DEC:
                    constructor = PreDecExpression;
                    needLvalue = "msg.bad.decr";
                    break;
                case Token.DELPROP:
                    constructor = DeleteExpression;
                    break;
                default:
                    var exp = this.memberExpr(true);
                // Don't look across a newline boundary for a postfix incop.
                    switch (this.peekTokenOrEOL()) {
                      case Token.INC:
                        if (!exp.hasLvalue()) this.reportError("msg.bad.incr");
                        this.consumeToken();
                        return new PostIncExpression(exp);
                      case Token.DEC:
                        if (!exp.hasLvalue()) this.reportError("msg.bad.decr");
                        this.consumeToken();
                        return new PostDecExpression(exp);
                      default:
                        return exp;
            }
            }
                this.consumeToken();
                var exp = this.unaryExpr();
                if (needLvalue && !exp.hasLvalue()) this.reportError(needLvalue);
                return new constructor(exp);
            };


            proto.argumentList = function () {
                if (this.matchToken(Token.RP)) return [];
                var args = [];
                do {
                    args.push(this.assignExpr(false));
            } while (this.matchToken(Token.COMMA));
                this.mustMatchToken(Token.RP, "msg.no.paren.arg");
                return args;
            };


            proto.memberExpr = function (allowCallSyntax) {
                var base;
                if (this.matchToken(Token.NEW)) {
                    var func = this.memberExpr(false);
                    var args = this.matchToken(Token.LP)
                                 ? this.argumentList()
                                 : [];
                    base = new NewExpression(func, args);
            } else {
                    base = this.primaryExpr();
            }
                return this.memberExprTail(allowCallSyntax, base);
            }


            proto.memberExprTail = function (allowCallSyntax, base) {
                tailLoop: for (; ;) {
                    switch (this.peekToken()) {
                      case Token.DOTDOT:
                        this.reportError("msg.XML.not.available");

                      case Token.DOT: {
                        this.consumeToken();
                        switch (this.nextToken()) {
                          case Token.NAME:
                            base = new DotAccessor(base, new Identifier(this.ts.getString()));
                            break;
                          case Token.MUL:
                            this.reportError("msg.XML.not.available");
                          case Token.XMLATTR:
                            this.reportError("msg.XML.not.available");
                          default:
                            this.reportError("msg.no.name.after.dot");
            }
            }
                      break;

                      case Token.DOTQUERY:
                        this.reportError("msg.XML.not.available");

                      case Token.LB:
                        this.consumeToken();
                        base = new BracketAccessor(base, this.expr(false));
                        this.mustMatchToken(Token.RB, "msg.no.bracket.index");
                        break;

                      case Token.LP:
                        if (!allowCallSyntax) break tailLoop;
                        this.consumeToken();
                        base = new CallExpression(base, this.argumentList());
                        break;

                      default:
                        break tailLoop;
            }
            }
                return base;
            };


            proto.primaryExpr = function () {
                var exp;
                var ttFlagged = this.nextFlaggedToken();
                var tt = ttFlagged & CLEAR_TI_MASK;
                switch (tt) {

                  case Token.FUNCTION:
                    return this.functionExpr();

                  case Token.LB: {
                    var elems = [];
                elemLoop: for (; ;) {
                        switch (this.peekToken()) {
                          case Token.RB:
                            this.consumeToken();
                            break elemLoop;
                          case Token.COMMA:
                            while (this.matchToken(Token.COMMA)) {
                                elems.push(new Elision());
            }
                            break;
                          default:
                            elems.push(this.assignExpr(false));
                            if (this.matchToken(Token.COMMA)) {
                                continue elemLoop;
            } else if (this.matchToken(Token.RB)) {
                                break elemLoop;
            } else {
                                this.reportError("msg.no.bracket.arg");
            }
            }
            }
                    return new ArrayInitializer(elems);
            }

                  case Token.LC: {
                    var pairs = [];
                commaloop: do {
                        var prop;
                        switch (this.peekToken()) {
                          case Token.NAME:
                            this.consumeToken();
                            prop = new Identifier(this.ts.getString());
                            break;
                          case Token.STRING:
                            this.consumeToken();
                            prop = new StringLiteral(this.ts.getString());
                            break;
                          case Token.NUMBER:
                            this.consumeToken();
                            prop = new NumberLiteral(this.ts.getString());
                            break;
                          case Token.RC:
                // trailing comma is OK.
                            break commaloop;
                        default:
                            this.reportError("msg.bad.prop");
                            break commaloop;
            }
                        this.mustMatchToken(Token.COLON, "msg.no.colon.prop");
                        pairs.push({ prop: prop, exp: this.assignExpr(false) });
            } while (this.matchToken(Token.COMMA));
                    this.mustMatchToken(Token.RC, "msg.no.brace.prop");
                    return new ObjectInitializer(pairs);
            }

                  case Token.LP:
                    var exp = this.expr(false);
                    this.mustMatchToken(Token.RP, "msg.no.paren");
                    return exp;

                  case Token.XMLATTR:
                    this.reportError("msg.XML.not.available");

                  case Token.NAME:
                    var name = new Identifier(this.ts.getString());
                    if (ttFlagged & TI_CHECK_LABEL) {
                        if (this.matchToken(Token.COLON)) throw new LabelException(name);
            }
                    return name;

                  case Token.NUMBER:
                    return new NumberLiteral(this.ts.getString());

                  case Token.STRING:
                    return new StringLiteral(this.ts.getString());

                  case Token.DIV:
                  case Token.ASSIGN_DIV:
                // Got / or /= which should be treated as regexp in fact
                    this.ts.readRegExp(tt);
                    return new RegExpLiteral(this.ts.getString());

                  case Token.NULL:
                    return new NullLiteral();

                  case Token.THIS:
                    return new ThisExpression();

                  case Token.TRUE:
                    return new TrueLiteral();

                  case Token.FALSE:
                    return new FalseLiteral();

                  case Token.RESERVED:
                    this.reportError("msg.reserved.id");
                    break;

                  case Token.ERROR:
                /* the scanner or one of its subroutines reported the error. */
                    break;

                  case Token.EOF:
                    this.reportError("msg.unexpected.eof");
                    break;

                  default:
                    this.reportError("msg.syntax");
                    break;
            }
                return null;    // should never reach here
            }



                        return {
                Parser: Parser
            };
            }();
            }
            }
            }
            }
            }.call(null)) {
                this.Concurrent.Thread.Compiler.Parser = Parser;
            }
        }).call(null);
        (function () {
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Compiler || (typeof this.Concurrent.Thread.Compiler != 'object' && typeof this.Concurrent.Thread.Compiler != 'function')) this.Concurrent.Thread.Compiler = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Functional || (typeof this.Data.Functional != 'object' && typeof this.Data.Functional != 'function')) this.Data.Functional = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Cons || (typeof this.Data.Cons != 'object' && typeof this.Data.Cons != 'function')) this.Data.Cons = new Object();
            if (this.Concurrent.Thread.Compiler.CsConvert === undefined) this.Concurrent.Thread.Compiler.CsConvert = undefined;
            with (function () {
            with (Data.Functional) {
            with (Data.Cons) {
            with (Concurrent.Thread.Compiler) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Concurrent.Thread code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2006-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Concurrent.Thread.Compiler';








            var IL = Concurrent.Thread.Compiler.IntermediateLanguage;








            var Cs = "Concurrent.Thread.Compiler.CsConvert";
            var STACK_VAR = "$Concurrent_Thread_stack";

            var undefinedExp = new VoidExpression(new NumberLiteral(0));
            var emptyLabel = new Identifier("");

            function isStackVar(v) {
                return v instanceof Identifier
                    && v.valueOf().match(/^$Concurrent_Thread_stack/);
            }


            function Context() {
                this.stackVars = [];
                this.contBreak = new IdentifierMap();
                this.contContinue = new IdentifierMap();
                this.contReturn = "return";
                this.contThrow = "throw";
                this.scopes = [];
            }

            var proto = Context.prototype;

            proto.getStackVar = function (n) {
                n = Math.floor(n);
                if (isNaN(n) || n < 0) Kit.codeBug("must be integer greater than zero");
                for (var i = this.stackVars.length; i <= n; i++) {
                    this.stackVars[i] = new Identifier(STACK_VAR + i);
            }
                return this.stackVars[n];
            };

            proto.putBreakLabels = function (labels, target) {
                if (!labels.length) return this.contBreak;
                var restore = this.contBreak;
                this.contBreak = this.contBreak.clone();
                for (var i = 0; i < labels.length; i++) {
                    this.contBreak.put(labels[i], target);
            }
                return restore;
            };

            proto.putBreakAndContinueLabels = function (labels, breakTarget, continueTarget) {
                if (!labels.length) {
                    return {
                contBreak: this.contBreak,
                contContinue: this.contContinue
            };
            }
                var restore = {
                contBreak: this.contBreak,
                contContinue: this.contContinue
            };
                this.contBreak = this.contBreak.clone();
                this.contContinue = this.contContinue.clone();
                for (var i = 0; i < labels.length; i++) {
                    this.contBreak.put(labels[i], breakTarget);
                    this.contContinue.put(labels[i], continueTarget);
            }
                return restore;
            };

            proto.getScopes = function () {
                return this.scopes.slice(0, this.scopes.length);
            };

            proto.pushScope = function ( /* variable args */) {
                return this.scopes.push.apply(this.scopes, arguments);
            };

            proto.popScope = function () {
                return this.scopes.pop();
            };

            proto.makeGotoBlock = function (arg, target) {
                return new IL.GotoBlock(this.getScopes(), nil(), arg, target, this.contThrow);
            };




            function CsConvert(func) {
                var context = new Context();
                var last_block = new IL.GotoBlock([], nil(), undefinedExp, "return", "throw");
                func.body = CsStatements(func.body, list(last_block), context, 0);
                func.start = func.body.car;
                func.vars = func.vars.concat(context.stackVars);
                return func;
            }


            function CsStatements(stmts, follows, ctxt, sttop) {
                if (stmts.isNil()) return follows;
                follows = CsStatements(stmts.cdr, follows, ctxt, sttop);
                return stmts.car[Cs](follows, ctxt, sttop);
            }

            function CsReference(exp, ctxt, sttop, rest) {  // Expression -> Context -> Int -> (Expression -> <Block>) -> <Block>
                if (exp instanceof DotAccessor) {
                    var e = new DotAccessor(ctxt.getStackVar(sttop), exp.prop);
                    var follows = rest(e, sttop + 1);
                    return exp.base[Cs](follows, ctxt, sttop);
            } else if (exp instanceof BracketAccessor) {
                    var e = new BracketAccessor(ctxt.getStackVar(sttop), ctxt.getStackVar(sttop + 1));
                    var follows = rest(e, sttop + 2);
                    follows = exp.right[Cs](follows, ctxt, sttop + 1);
                    return exp.left[Cs](follows, ctxt, sttop);
            } else if (exp instanceof Identifier) {
                    return rest(exp, sttop);
            } else {
                    var follows = rest(ctxt.getStackVar(sttop), sttop + 1);
                    return exp[Cs](follows, ctxt, sttop);
            }
            }



            EmptyStatement.prototype[Cs] = function (follows, ctxt, sttop) {
                return follows;
            };

            Block.prototype[Cs] = function (follows, ctxt, sttop) {
                var restore = ctxt.putBreakLabels(this.labels, follows.car);
                follows = cons(ctxt.makeGotoBlock(undefinedExp, follows.car), follows);
                try {
                    return CsStatements(this.body, follows, ctxt, sttop);
            } finally {
                    ctxt.contBreak = restore;
            }
            };

            ExpStatement.prototype[Cs] = function (follows, ctxt, sttop) {
                return this.exp[Cs](follows, ctxt, sttop, true);
            };


            IfStatement.prototype[Cs] = function (follows, ctxt, sttop) {
                var next_block = follows.car;
                follows = cons(ctxt.makeGotoBlock(undefinedExp, next_block), follows);
                var restore = ctxt.putBreakLabels(this.labels, next_block);
                try {
                    follows = this.body[Cs](follows, ctxt, sttop);
                    follows.car.prependStatement(new IL.CondStatement(new NotExpression(ctxt.getStackVar(sttop)), next_block));
                    return this.cond[Cs](follows, ctxt, sttop);
            } finally {
                    ctxt.contBreak = restore;
            }
            };

            IfElseStatement.prototype[Cs] = function (follows, ctxt, sttop) {
                var next_block = follows.car;
                follows = cons(ctxt.makeGotoBlock(undefinedExp, next_block), follows);
                var restore = ctxt.putBreakLabels(this.labels, next_block);
                try {
                    follows = this.tbody[Cs](follows, ctxt, sttop);
                    var true_block = follows.car;
                    follows = cons(ctxt.makeGotoBlock(undefinedExp, next_block), follows);
                    follows = this.fbody[Cs](follows, ctxt, sttop);
                    follows.car.prependStatement(new IL.CondStatement(ctxt.getStackVar(sttop), true_block));
                    return this.cond[Cs](follows, ctxt, sttop);
            } finally {
                    ctxt.contBreak = restore;
            }
            };


            DoWhileStatement.prototype[Cs] = function (follows, ctxt, sttop) {
                var next_block = follows.car;
                var first_block = ctxt.makeGotoBlock(undefinedExp, null);
                follows = cons(ctxt.makeGotoBlock(undefinedExp, next_block), follows);
                if (this.cond.containsFunctionCall()) {
                    follows.car.prependStatement(new IL.CondStatement(ctxt.getStackVar(sttop), first_block));
                    follows = this.cond[Cs](follows, ctxt, sttop);
            } else {
                    follows.car.prependStatement(new IL.CondStatement(this.cond, first_block));
            }
                var continue_block = follows.car;
                follows = cons(ctxt.makeGotoBlock(undefinedExp, follows.car), follows);
                var restore = ctxt.putBreakAndContinueLabels(this.labels.concat(emptyLabel), next_block, continue_block);
                try {
                    follows = this.body[Cs](follows, ctxt, sttop);
            } finally {
                    ctxt.contBreak = restore.contBreak;
                    ctxt.contContinue = restore.contContinue;
            }
                first_block.target = follows.car;
                return cons(ctxt.makeGotoBlock(undefinedExp, first_block),
                             cons(first_block, follows));
            };

            WhileStatement.prototype[Cs] = function (follows, ctxt, sttop) {
                var next_block = follows.car;
                var first_block = ctxt.makeGotoBlock(undefinedExp, null);
                follows = cons(ctxt.makeGotoBlock(undefinedExp, first_block), follows);
                var restore = ctxt.putBreakAndContinueLabels(this.labels.concat(emptyLabel), next_block, first_block);
                try {
                    follows = this.body[Cs](follows, ctxt, sttop);
            } finally {
                    ctxt.contBreak = restore.contBreak;
                    ctxt.contContinue = restore.contContinue;
            }
                if (this.cond.containsFunctionCall()) {
                    follows.car.prependStatement(new IL.CondStatement(new NotExpression(ctxt.getStackVar(sttop)), next_block));
                    follows = this.cond[Cs](follows, ctxt, sttop);
            } else {
                    follows.car.prependStatement(new IL.CondStatement(new NotExpression(this.cond), next_block));
            }
                first_block.target = follows.car;
                return cons(ctxt.makeGotoBlock(undefinedExp, first_block),
                             cons(first_block, follows));
            };

            ForStatement.prototype[Cs] = function (follows, ctxt, sttop) {
                var next_block = follows.car;
                var last_block = ctxt.makeGotoBlock(undefinedExp, null);
                follows = cons(last_block, follows);
                if (this.incr) follows = this.incr[Cs](follows, ctxt, sttop, true);
                var incr_block = follows.car;
                follows = cons(ctxt.makeGotoBlock(undefinedExp, follows.car), follows);
                var restore = ctxt.putBreakAndContinueLabels(this.labels.concat(emptyLabel), next_block, incr_block);
                try {
                    follows = this.body[Cs](follows, ctxt, sttop);
            } finally {
                    ctxt.contBreak = restore.contBreak;
                    ctxt.contContinue = restore.contContinue;
            }
                if (this.cond) {
                    if (this.cond.containsFunctionCall()) {
                        follows.car.prependStatement(new IL.CondStatement(new NotExpression(ctxt.getStackVar(sttop)), next_block));
                        follows = this.cond[Cs](follows, ctxt, sttop);
            } else {
                        follows.car.prependStatement(new IL.CondStatement(new NotExpression(this.cond), next_block));
            }
            }
                last_block.target = follows.car;
                follows = cons(ctxt.makeGotoBlock(undefinedExp, follows.car), follows);
                if (this.init) {
                    follows = this.init[Cs](follows, ctxt, sttop, true);
            }
                return follows;
            };

            ForInStatement.prototype[Cs] = function (follows, ctxt, sttop) {
                if (!this.lhs.hasLvalue()) Kit.codeBug('for-in requires lvalue on the left hand side of "in": ' + this);
                var next_block = follows.car;
                var loop_block = ctxt.makeGotoBlock(undefinedExp, null);
                follows = cons(ctxt.makeGotoBlock(undefinedExp, loop_block), follows);
                var restore = ctxt.putBreakAndContinueLabels(this.labels.concat(emptyLabel), next_block, loop_block);
                try {
                    follows = this.body[Cs](follows, ctxt, sttop + 2);
            } finally {
                    ctxt.contBreak = restore.contBreak;
                    ctxt.contContinue = restore.contContinue;
            }
                if (this.lhs.containsFunctionCall()) {
                    follows = CsReference(this.lhs, ctxt, sttop + 2, function (exp) {
                        follows.car.prependStatement(make_assign(
                            exp,
                            new BracketAccessor(
                                ctxt.getStackVar(sttop),
                                new PostIncExpression(ctxt.getStackVar(sttop + 1))
                            )
                        ));
                        return follows;
            });
            } else {
                    follows.car.prependStatement(make_assign(
                        this.lhs,
                        new BracketAccessor(
                            ctxt.getStackVar(sttop),
                            new PostIncExpression(ctxt.getStackVar(sttop + 1))
                        )
                    ));
            }
                follows.car.prependStatement(new IL.CondStatement(
                    new GreaterEqualExpression(
                        ctxt.getStackVar(sttop + 1),
                        new DotAccessor(ctxt.getStackVar(sttop), new Identifier("length"))
                    ),
                    next_block
                ));
                loop_block.target = follows.car;
                follows = cons(loop_block, follows);
                follows = cons(ctxt.makeGotoBlock(undefinedExp, loop_block), follows);
                follows.car.prependStatement(make_assign(ctxt.getStackVar(sttop + 1), new NumberLiteral(0)));
                if (this.exp.containsFunctionCall()) {
                    follows.car.prependStatement(new IL.EnumStatement(ctxt.getStackVar(sttop), ctxt.getStackVar(sttop)));
                    follows = this.exp[Cs](follows, ctxt, sttop);
            } else {
                    follows.car.prependStatement(new IL.EnumStatement(this.exp, ctxt.getStackVar(sttop)));
            }
                return follows;
            };


            ContinueStatement.prototype[Cs] = function (follows, ctxt, sttop) {
                return cons(
                    ctxt.makeGotoBlock(
                        undefinedExp,
                        ctxt.contContinue.get(this.target ? this.target : emptyLabel)
                    ),
                    follows
                );
            };

            BreakStatement.prototype[Cs] = function (follows, ctxt, sttop) {
                var restore = ctxt.putBreakLabels(this.labels, follows.car);
                try {
                    return cons(
                        ctxt.makeGotoBlock(
                            undefinedExp,
                            ctxt.contBreak.get(this.target ? this.target : emptyLabel)
                        ),
                        follows
                    );
            } finally {
                    ctxt.contBreak = restore;
            }
            };

            ReturnStatement.prototype[Cs] = function (follows, ctxt, sttop) {
                if (this.exp) {
                    if (this.exp.containsFunctionCall()) {
                        follows = cons(ctxt.makeGotoBlock(ctxt.getStackVar(sttop), ctxt.contReturn), follows);
                        return this.exp[Cs](follows, ctxt, sttop);
            } else {
                        return cons(ctxt.makeGotoBlock(this.exp, ctxt.contReturn), follows);
            }
            } else {
                    return cons(ctxt.makeGotoBlock(undefinedExp, ctxt.contReturn), follows);
            }
            };


            WithStatement.prototype[Cs] = function (follows, ctxt, sttop) {
                var next_block = follows.car;
                var restore = ctxt.putBreakLabels(this.labels, next_block);
                try {
                    ctxt.pushScope(ctxt.getStackVar(sttop));
                    try {
                        follows = cons(ctxt.makeGotoBlock(undefinedExp, next_block), follows);
                        follows = this.body[Cs](follows, ctxt, sttop + 1);
            } finally {
                        ctxt.popScope();
            }
                    follows = cons(ctxt.makeGotoBlock(undefinedExp, follows.car), follows);
                    return this.exp[Cs](follows, ctxt, sttop);
            } finally {
                    ctxt.contBreak = restore;
            }
            };


            SwitchStatement.prototype[Cs] = function (follows, ctxt, sttop) {
                var next_block = follows.car;
                var restore = ctxt.putBreakLabels(this.labels.concat(emptyLabel), next_block);
                try {
                    var default_target = next_block;
                    var cond_and_target = this.clauses.reverse().map(function (clause) {
                        follows = cons(ctxt.makeGotoBlock(undefinedExp, follows.car), follows);
                        follows = CsStatements(clause.body, follows, ctxt, sttop);
                        var clause_block = follows.car;
                        if (clause instanceof DefaultClause) {
                            default_target = clause_block;
                            ignore();
            } else {
                            return { cond: clause.exp, target: clause_block };
            }
            });
                    follows = cons(ctxt.makeGotoBlock(undefinedExp, default_target), follows);
                    cond_and_target.forEach(function (it) {
                        if (it.cond.containsFunctionCall()) {
                            follows.car.prependStatement(
                                new IL.CondStatement(
                                    new StrictEqualExpression(ctxt.getStackVar(sttop), ctxt.getStackVar(sttop + 1)),
                                    it.target
                                )
                            );
                            follows = it.cond[Cs](follows, ctxt, sttop + 1);
            } else {
                            follows.car.prependStatement(
                                new IL.CondStatement(
                                    new StrictEqualExpression(ctxt.getStackVar(sttop), it.cond),
                                    it.target
                                )
                            );
            }
            });
                    return this.exp[Cs](follows, ctxt, sttop);
            } finally {
                    ctxt.contBreak = restore;
            }
            };


            ThrowStatement.prototype[Cs] = function (follows, ctxt, sttop) {
                if (this.exp.containsFunctionCall()) {
                    follows = cons(ctxt.makeGotoBlock(ctxt.getStackVar(sttop), ctxt.contThrow), follows);
                    return this.exp[Cs](follows, ctxt, sttop);
            } else {
                    return cons(ctxt.makeGotoBlock(this.exp, ctxt.contThrow), follows);
            }
            };

            TryCatchStatement.prototype[Cs] = function (follows, ctxt, sttop) {
                var next_block = follows.car;
                follows = cons(ctxt.makeGotoBlock(undefinedExp, next_block), follows);
                var restore = ctxt.putBreakLabels(this.labels, next_block);
                try {
                    follows = this.catchBlock[Cs](follows, ctxt, sttop);
                    follows.car.prependStatement(new IL.RecvStatement(this.variable));
                    var storeContThrow = ctxt.contThrow;
                    ctxt.contThrow = follows.car;
                    try {
                        follows = cons(ctxt.makeGotoBlock(undefinedExp, next_block), follows);
                        return this.tryBlock[Cs](follows, ctxt, sttop);
            } finally {
                        ctxt.contThrow = storeContThrow;
            }
            } finally {
                    ctxt.contBreak = restore;
            }
            };

            TryFinallyStatement.prototype[Cs] = function (follows, ctxt, sttop) {
                var next_block = follows.car;
                follows = cons(ctxt.makeGotoBlock(undefinedExp, next_block), follows);
                var restoreBreak = ctxt.putBreakLabels(this.labels, next_block);
                try {
                    var self = this;

                    var contBreak = new IdentifierMap();
                    ctxt.contBreak.keys().forEach(function (label) {
                        follows = cons(ctxt.makeGotoBlock(undefinedExp, ctxt.contBreak.get(label)), follows);
                        follows = self.finallyBlock[Cs](follows, ctxt, sttop);
                        contBreak.put(label, follows.car);
            });

                    var contContinue = new IdentifierMap();
                    ctxt.contContinue.keys().forEach(function (label) {
                        follows = cons(ctxt.makeGotoBlock(undefinedExp, ctxt.contContinue.get(label)), follows);
                        follows = self.finallyBlock[Cs](follows, ctxt, sttop);
                        contContinue.put(label, follows.car);
            });

                    follows = cons(ctxt.makeGotoBlock(ctxt.getStackVar(sttop), ctxt.contReturn), follows);
                    follows = this.finallyBlock[Cs](follows, ctxt, sttop + 1);
                    follows.car.prependStatement(new IL.RecvStatement(ctxt.getStackVar(sttop)));
                    var contReturn = follows.car;

                    follows = cons(ctxt.makeGotoBlock(ctxt.getStackVar(sttop), ctxt.contThrow), follows);
                    follows = this.finallyBlock[Cs](follows, ctxt, sttop + 1);
                    follows.car.prependStatement(new IL.RecvStatement(ctxt.getStackVar(sttop)));
                    var contThrow = follows.car;

                    follows = cons(ctxt.makeGotoBlock(undefinedExp, next_block), follows);
                    follows = this.finallyBlock[Cs](follows, ctxt, sttop);

                    var restoreContinue = ctxt.contContinue;
                    var restoreReturn = ctxt.contReturn;
                    var restoreThrow = ctxt.contThrow;
                    ctxt.contBreak = contBreak;
                    ctxt.contContinue = contContinue;
                    ctxt.contReturn = contReturn;
                    ctxt.contThrow = contThrow;
                    try {
                        return this.tryBlock[Cs](follows, ctxt, sttop);
            } finally {
                        ctxt.contContinue = restoreContinue;
                        ctxt.contReturn = restoreReturn;
                        ctxt.contThrow = restoreThrow;
            }
            } finally {
                    ctxt.contBreak = restoreBreak;
            }
            };



            function make_assign(left, right) {
                return new IL.ExpStatement(new SimpleAssignExpression(left, right));
            }

            function prepend_exp(exp, follows, ctxt, sttop, is_void) {
                follows.car.prependStatement(
                    is_void ? new IL.ExpStatement(exp)
                            : make_assign(ctxt.getStackVar(sttop), exp)
                );
                return follows;
            }

            Expression.prototype[Cs] = function (follows, ctxt, sttop, is_void) {
                return prepend_exp(this, follows, ctxt, sttop, is_void);
            };

            ArrayInitializer.prototype[Cs] = function (follows, ctxt, sttop, is_void) {
                for (var asis_from = this.elems.length - 1; asis_from >= 0; asis_from--) {
                    if (this.elems[asis_from].containsFunctionCall()) break;
            }
                asis_from++;
                var elems = [];
                for (var i = 0; i < asis_from; i++) {
                    elems[i] = ctxt.getStackVar(sttop + i);
            }
                for (; i < this.elems.length; i++) {
                    elems[i] = this.elems[i];
            }
                follows = prepend_exp(new ArrayInitializer(elems), follows, ctxt, sttop, is_void);
                for (var i = asis_from - 1; i >= 0; i--) {
                    follows = this.elems[i][Cs](follows, ctxt, sttop + i);
            }
                return follows;
            };

            ObjectInitializer.prototype[Cs] = function (follows, ctxt, sttop, is_void) {
                for (var asis_from = this.pairs.length - 1; asis_from >= 0; asis_from--) {
                    if (this.pairs[asis_from].exp.containsFunctionCall()) break;
            }
                asis_from++;
                var pairs = [];
                for (var i = 0; i < asis_from; i++) {
                    pairs[i] = { prop: this.pairs[i].prop, exp: ctxt.getStackVar(sttop + i) };
            }
                for (; i < this.pairs.length; i++) {
                    pairs[i] = this.pairs[i];
            }
                follows = prepend_exp(new ObjectInitializer(pairs), follows, ctxt, sttop, is_void);
                for (var i = asis_from - 1; i >= 0; i--) {
                    follows = this.pairs[i].exp[Cs](follows, ctxt, sttop + i);
            }
                return follows;
            };

            UnaryExpression.prototype[Cs] = function (follows, ctxt, sttop, is_void) {
                if (this.exp.containsFunctionCall()) {
                    follows = prepend_exp(new this.constructor(ctxt.getStackVar(sttop)), follows, ctxt, sttop, is_void);
                    return this.exp[Cs](follows, ctxt, sttop);
            } else {
                    return Expression.prototype[Cs].apply(this, arguments);
            }
            };

            BinaryExpression.prototype[Cs] = function (follows, ctxt, sttop, is_void) {
                if (this.right.containsFunctionCall()) {
                    follows = prepend_exp(new this.constructor(ctxt.getStackVar(sttop), ctxt.getStackVar(sttop + 1)), follows, ctxt, sttop, is_void);
                    follows = this.right[Cs](follows, ctxt, sttop + 1);
                    return this.left[Cs](follows, ctxt, sttop);
            } else if (this.left.containsFunctionCall()) {
                    follows = prepend_exp(new this.constructor(ctxt.getStackVar(sttop), this.right), follows, ctxt, sttop, is_void);
                    return this.left[Cs](follows, ctxt, sttop);
            } else {
                    return Expression.prototype[Cs].apply(this, arguments);
            }
            };

            DotAccessor.prototype[Cs] = function (follows, ctxt, sttop, is_void) {
                if (this.base.containsFunctionCall()) {
                    follows = prepend_exp(new DotAccessor(ctxt.getStackVar(sttop), this.prop), follows, ctxt, sttop, is_void);
                    return this.base[Cs](follows, ctxt, sttop);
            } else {
                    return Expression.prototype[Cs].apply(this, arguments);
            }
            };

            CallExpression.prototype[Cs] = function (follows, ctxt, sttop, is_void) {
                var self = this;
                return CsReference(this.func, ctxt, sttop, function (func, sttop2) {
                    for (var asis_from = self.args.length - 1; asis_from >= 0; asis_from--) {
                        if (self.args[asis_from].containsFunctionCall()) break;
            }
                    asis_from++;
                    var args = [];
                    for (var i = 0; i < asis_from; i++) {
                        args[i] = ctxt.getStackVar(sttop2 + i);
            }
                    for (; i < self.args.length; i++) {
                        args[i] = self.args[i];
            }
                    if (!is_void) follows.car.prependStatement(new IL.RecvStatement(ctxt.getStackVar(sttop)));
                    follows = cons(new IL.CallBlock(
                                        ctxt.getScopes(),
                                        nil(),
                                        func instanceof DotAccessor ? func.base :
                                        func instanceof BracketAccessor ? func.left : new NullLiteral(),
                                        func,
                                        args,
                                        follows.car,
                                        ctxt.contThrow
                                    ), follows);
                    for (var i = asis_from - 1; i >= 0; i--) {
                        follows = self.args[i][Cs](follows, ctxt, sttop2 + i);
            }
                    return follows;
            });
            };

            NewExpression.prototype[Cs] = function (follows, ctxt, sttop, is_void) {
                for (var asis_from = this.args.length - 1; asis_from >= 0; asis_from--) {
                    if (this.args[asis_from].containsFunctionCall()) break;
            }
                asis_from++;
                var args = [];
                for (var i = 0; i < asis_from; i++) {
                    args[i] = ctxt.getStackVar(sttop + 1 + i);
            }
                for (; i < this.args.length; i++) {
                    args[i] = this.args[i];
            }
                if (!is_void) follows.car.prependStatement(new IL.RecvStatement(ctxt.getStackVar(sttop)));
                follows = cons(new IL.NewBlock(
                                    ctxt.getScopes(),
                                    nil(),
                                    ctxt.getStackVar(sttop),
                                    args,
                                    follows.car,
                                    ctxt.contThrow
                                ), follows);
                for (var i = asis_from - 1; i >= 0; i--) {
                    follows = this.args[i][Cs](follows, ctxt, sttop + 1 + i);
            }
                this.func[Cs](follows, ctxt, sttop);
                return follows;
            };

            AssignExpression.prototype[Cs] = function (follows, ctxt, sttop, is_void) {
                var self = this;
                if (this.right.containsFunctionCall()) {
                    return CsReference(this.left, ctxt, sttop, function (left, sttop2) {
                        follows = prepend_exp(new self.constructor(left, ctxt.getStackVar(sttop2)), follows, ctxt, sttop, is_void);
                        return self.right[Cs](follows, ctxt, sttop2);
            });
            } else if (this.left.containsFunctionCall()) {
                    return CsReference(this.left, ctxt, sttop, function (left, sttop2) {
                        return prepend_exp(new self.constructor(left, self.right), follows, ctxt, sttop, is_void);
            });
            } else {
                    return Expression.prototype[Cs].apply(this, arguments);
            }
            };

            AndExpression.prototype[Cs] = function (follows, ctxt, sttop) {
                if (this.right.containsFunctionCall()) {
                    var next_block = follows.car;
                    follows = cons(ctxt.makeGotoBlock(undefinedExp, next_block), follows);
                    follows = this.right[Cs](follows, ctxt, sttop);
                    follows.car.prependStatement(new IL.CondStatement(new NotExpression(ctxt.getStackVar(sttop)), next_block));
                    return this.left[Cs](follows, ctxt, sttop);
            } else if (this.left.containsFunctionCall()) {
                    follows.car.prependStatement(make_assign(ctxt.getStackVar(sttop), new AndExpression(ctxt.getStackVar(sttop), this.right)));
                    return this.left[Cs](follows, ctxt, sttop);
            } else {
                    return Expression.prototype[Cs].apply(this, arguments);
            }
            };

            OrExpression.prototype[Cs] = function (follows, ctxt, sttop) {
                if (this.right.containsFunctionCall()) {
                    var next_block = follows.car;
                    follows = cons(ctxt.makeGotoBlock(undefinedExp, next_block), follows);
                    follows = this.right[Cs](follows, ctxt, sttop);
                    follows.car.prependStatement(new IL.CondStatement(ctxt.getStackVar(sttop), next_block));
                    return this.left[Cs](follows, ctxt, sttop);
            } else if (this.left.containsFunctionCall()) {
                    follows.car.prependStatement(make_assign(ctxt.getStackVar(sttop), new OrExpression(ctxt.getStackVar(sttop), this.right)));
                    return this.left[Cs](follows, ctxt, sttop);
            } else {
                    return Expression.prototype[Cs].apply(this, arguments);
            }
            };

            ConditionalExpression.prototype[Cs] = function (follows, ctxt, sttop) {
                if (this.texp.containsFunctionCall() || this.fexp.containsFunctionCall()) {
                    var next_block = follows.car;
                    follows = cons(ctxt.makeGotoBlock(undefinedExp, next_block), follows);
                    follows = this.texp[Cs](follows, ctxt, sttop);
                    var true_block = follows.car;
                    follows = cons(ctxt.makeGotoBlock(undefinedExp, next_block), follows);
                    follows = this.fexp[Cs](follows, ctxt, sttop);
                    follows.car.prependStatement(new IL.CondStatement(ctxt.getStackVar(sttop), true_block));
                    return this.cond[Cs](follows, ctxt, sttop);
            } else if (this.cond.containsFunctionCall()) {
                    follows.car.prependStatement(make_assign(ctxt.getStackVar(sttop), new ConditionalExpression(ctxt.getStackVar(sttop), this.texp, this.fexp)));
                    return this.cond[Cs](follows, ctxt, sttop);
            } else {
                    return Expression.prototype[Cs].apply(this, arguments);
            }
            };

                        return {
                CsConvert: CsConvert
            };
            }();
            }
            }
            }
            }.call(null)) {
                this.Concurrent.Thread.Compiler.CsConvert = CsConvert;
            }
        }).call(null);
        (function () {
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Compiler || (typeof this.Concurrent.Thread.Compiler != 'object' && typeof this.Concurrent.Thread.Compiler != 'function')) this.Concurrent.Thread.Compiler = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Cons || (typeof this.Data.Cons != 'object' && typeof this.Data.Cons != 'function')) this.Data.Cons = new Object();
            if (!this.Data.Cons.Util || (typeof this.Data.Cons.Util != 'object' && typeof this.Data.Cons.Util != 'function')) this.Data.Cons.Util = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Cons || (typeof this.Data.Cons != 'object' && typeof this.Data.Cons != 'function')) this.Data.Cons = new Object();
            if (this.Concurrent.Thread.Compiler.CvConvert === undefined) this.Concurrent.Thread.Compiler.CvConvert = undefined;
            with (function () {
            with (Data.Cons.Util) {
            with (Data.Cons) {
            with (Concurrent.Thread.Compiler) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Concurrent.Thread code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2006-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Concurrent.Thread.Compiler';












            var IL = IntermediateLanguage;


            var Cv = "$Concurrent_Thread_Compiler_CvConvert";



            function CvConvert(func) {
                var vars = new IdentifierSet()
                function add_vars( /* variable arguments */) {
                    return vars.add.apply(vars, arguments);
            }
                var decls = cons(null, nil());
                var add_decls = adder(decls);
                for (var c = func.body; !c.isNil() ; c = c.cdr) {
                    c.car = c.car[Cv](add_vars, add_decls);
            }
                return new IL.Function(func.name, func.params, vars.toArray(), concat(decls, func.body).cdr);
            }



            Statement.prototype[Cv] = function (add_vars, add_decls) {
                return this;
            };


            Block.prototype[Cv] = function (add_vars, add_decls) {
                for (var c = this.body; !c.isNil() ; c = c.cdr) {
                    c.car = c.car[Cv](add_vars, add_decls);
            }
                return this;
            };


            VarStatement.prototype[Cv] = function (add_vars, add_decls) {
                var assigns = [];
                for (var i = 0; i < this.decls.length; i++) {
                    add_vars(this.decls[i].id);
                    if (this.decls[i].exp) {
                        assigns.push(new SimpleAssignExpression(this.decls[i].id, this.decls[i].exp));
            }
            }
                if (!assigns.length) {
                    return new EmptyStatement([], this.lineno, this.source);
            } else {
                    var exp = assigns[0];
                    for (var i = 1; i < assigns.length; i++) {
                        exp = new CommaExpression(exp, assigns[i]);
            }
                    return new ExpStatement([], exp, this.lineno, this.source);
            }
            };


            IfStatement.prototype[Cv] = function (add_vars, add_decls) {
                this.body = this.body[Cv](add_vars, add_decls);
                return this;
            };


            IfElseStatement.prototype[Cv] = function (add_vars, add_decls) {
                this.tbody = this.tbody[Cv](add_vars, add_decls);
                this.fbody = this.fbody[Cv](add_vars, add_decls);
                return this;
            };


            DoWhileStatement.prototype[Cv] = IfStatement.prototype[Cv];


            WhileStatement.prototype[Cv] = IfStatement.prototype[Cv];


            ForStatement.prototype[Cv] = IfStatement.prototype[Cv];


            ForVarStatement.prototype[Cv] = function (add_vars, add_decls) {
                var init = (new VarStatement([], this.decls))[Cv](add_vars, add_decls);
                if (init instanceof EmptyStatement) {
                    init = null;
            } else {
                    init = init.exp;
            }
                return new ForStatement(this.labels, init, this.cond, this.incr, this.body[Cv](add_vars, add_decls), this.lineno, this.source);
            };


            ForInStatement.prototype[Cv] = IfStatement.prototype[Cv];


            ForInVarStatement.prototype[Cv] = function (add_vars, add_decls) {
                add_vars(this.decl.id);
                var for_in = new ForInStatement(this.labels, this.decl.id, this.exp, this.body[Cv](add_vars, add_decls), this.lineno, this.source);
                if (this.decl.exp) {
                    return new Block([], list(
                        new ExpStatement([], new SimpleAssignExpression(this.decl.id, this.decl.exp), this.lineno, this.source),
                        for_in
                    ), this.lineno, this.source);
            } else {
                    return for_in;
            }
            };


            ForEachStatement.prototype[Cv] = IfStatement.prototype[Cv];


            ForEachVarStatement.prototype[Cv] = ForInVarStatement.prototype[Cv];


            WithStatement.prototype[Cv] = IfStatement.prototype[Cv];


            SwitchStatement.prototype[Cv] = function (add_vars, add_decls) {
                for (var c = this.clauses; !c.isNil() ; c = c.cdr) {
                    c.car = c.car[Cv](add_vars, add_decls);
            }
                return this;
            };


            CaseClause.prototype[Cv] = Block.prototype[Cv];


            DefaultClause.prototype[Cv] = Block.prototype[Cv];


            TryCatchStatement.prototype[Cv] = function (add_vars, add_decls) {
                add_vars(this.variable);
                this.tryBlock = this.tryBlock[Cv](add_vars, add_decls);
                this.catchBlock = this.catchBlock[Cv](add_vars, add_decls);
                return this;
            };


            TryFinallyStatement.prototype[Cv] = function (add_vars, add_decls) {
                this.tryBlock = this.tryBlock[Cv](add_vars, add_decls);
                this.finallyBlock = this.finallyBlock[Cv](add_vars, add_decls);
                return this;
            };


            TryCatchFinallyStatement.prototype[Cv] = function (add_vars, add_decls) {
                add_vars(this.variable);
                this.tryBlock = this.tryBlock[Cv](add_vars, add_decls);
                this.catchBlock = this.catchBlock[Cv](add_vars, add_decls);
                this.finallyBlock = this.finallyBlock[Cv](add_vars, add_decls);
                return this;
            };


            FunctionDeclaration.prototype[Cv] = function (add_vars, add_decls) {
                add_vars(this.name);
                add_decls(new ExpStatement(
                    [],
                    new SimpleAssignExpression(
                        this.name,
                        new FunctionExpression(null, this.params, this.body)
                    ),
                    this.lineno,
                    this.source
                ));
                return new EmptyStatement([]);
            };


                        return {
                CvConvert: CvConvert
            };
            }();
            }
            }
            }
            }.call(null)) {
                this.Concurrent.Thread.Compiler.CvConvert = CvConvert;
            }
        }).call(null);
        (function () {
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Compiler || (typeof this.Concurrent.Thread.Compiler != 'object' && typeof this.Concurrent.Thread.Compiler != 'function')) this.Concurrent.Thread.Compiler = new Object();
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Cons || (typeof this.Data.Cons != 'object' && typeof this.Data.Cons != 'function')) this.Data.Cons = new Object();
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (this.Concurrent.Thread.compile === undefined) this.Concurrent.Thread.compile = undefined;
            if (this.Concurrent.Thread.CACHE_LIMIT === undefined) this.Concurrent.Thread.CACHE_LIMIT = undefined;
            if (this.Concurrent.Thread.prepare === undefined) this.Concurrent.Thread.prepare = undefined;
            if (this.Concurrent.Thread.prepareTree === undefined) this.Concurrent.Thread.prepareTree = undefined;
            with (function () {
            with (Data.Cons) {
            with (Concurrent.Thread.Compiler) {
            with (Concurrent.Thread) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Concurrent.Thread code.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2006-2007
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Concurrent.Thread';















            var IL = Concurrent.Thread.Compiler.IntermediateLanguage;






            var PREFIX = "$Concurrent_Thread_";
            var var_self = new Identifier(PREFIX + "self");
            var var_compiled = new Identifier(PREFIX + "compiled");



            function compile(f) {
                return eval(prepare(f));
            }



            CACHE_LIMIT = 50;
            var prepare_cache = {};
            var cache_history = [];


            function prepare(f) {
                if (typeof f != "function") throw new TypeError("argument must be a function");
                f = f.toString();
                var c = prepare_cache[f];
                if (c) return c;
                c = prepareTree(parseFunction(f)).toString();
                while (cache_history.length >= CACHE_LIMIT && cache_history.length > 0) {  // avoid endless loop
                    delete prepare_cache[cache_history.shift()];
            }
                if (CACHE_LIMIT >= 1) {
                    prepare_cache[f] = c;
                    cache_history.push(f);
            }
                return c;
            }

            function parseFunction(f) {
                var stmts = (new Parser()).parse("(" + f + ");");
                if (!(stmts.car instanceof ExpStatement)) throw new Error("not exp-statement!");
                if (!(stmts.car.exp instanceof FunctionExpression)) throw new Error("not function-expression!");
                return stmts.car.exp;
            }



            function prepareTree(f) {
                if (!(f instanceof FunctionExpression)) Kit.codeBug("not FunctionalExpression");
                var name = f.name;
                f.name = null;
                var g = CssConvert(f);
                g = CvConvert(g);
                g = CsConvert(g);
                g = CuConvert(g);
                g = CfConvert(g);
                g = CzConvert(g);
                return new CallExpression(
                    new FunctionExpression(null, [], list(
                        new VarStatement([], [{ id: var_self, exp: f }]),
                        name ? new VarStatement([], [{ id: name, exp: var_self }]) : new EmptyStatement([]),
                        new ExpStatement([], new SimpleAssignExpression(new DotAccessor(var_self, var_compiled), g)),
                        new ReturnStatement([], var_self)
                    )),
                    []
                );
                /* Constructs the following structure:
                    "(function(){",
                    "  var $Concurrent_Thread_self = ", f, ";",
                    name  ?  "var " + name + " = " + "$Concurrent_Thread_self;"  :  "",
                    "  $Concurrent_Thread_self.$Concurrent_Thread_compiled = ", func, ";",
                    "  return $Concurrent_Thread_self;",
                    "})()"
                */
            }


                        return {
                compile: compile, prepareTree: prepareTree, prepare: prepare
            };
            }();
            }
            }
            }
            }.call(null)) {
                this.Concurrent.Thread.compile = compile;
                this.Concurrent.Thread.prepareTree = prepareTree;
                this.Concurrent.Thread.prepare = prepare;
            }
        }).call(null);
        (function () {
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Compiler || (typeof this.Concurrent.Thread.Compiler != 'object' && typeof this.Concurrent.Thread.Compiler != 'function')) this.Concurrent.Thread.Compiler = new Object();
            with (function () {
            with (Concurrent.Thread.Compiler) {

                    return function () {
                        var VERSION;
                        var NAMESPACE;




            NAMESPACE = 'Concurrent.Thread.Compiler';



            WebBrowser.ScriptExecuter.register("text/x-script.multithreaded-js", function (src) {
                eval(compile(src)).async(null);
            });

            function compile(src) {
                var prog = (new Parser).parse(src);
                prog = new FunctionExpression(null, [], prog);
                prog = CssConvert(prog);
                prog = CvConvert(prog);
                prog = CsConvert(prog);
                prog = CfConvert(prog);
                prog.vars.forEach(function (it) {
                // Incredibly, window does not have hasOwnProperty method on IE!!
                    if (!Object.prototype.hasOwnProperty.call(window, it)) window[it] = undefined;
            });
                prog.vars = [];
                prog = CzConvert(prog);
                return [
                    "1, function(){",
                    "    var $Concurrent_Thread_self = function(){};",
                    "    $Concurrent_Thread_self.$Concurrent_Thread_compiled = ", prog, ";",
                    "    return $Concurrent_Thread_self;",
                    "}()"
            ].join("");
            }

                        return {

            };
            }();
            }
            }.call(null)) {
            }
        }).call(null);
        (function () {
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Continuation || (typeof this.Concurrent.Thread.Continuation != 'object' && typeof this.Concurrent.Thread.Continuation != 'function')) this.Concurrent.Thread.Continuation = new Object();
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (this.Concurrent.Thread.Generator === undefined) this.Concurrent.Thread.Generator = undefined;
            with (function () {
            with (Concurrent.Thread.Continuation) {
            with (Concurrent) {
            with (Concurrent.Thread) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;

                /* ***** BEGIN LICENSE BLOCK *****
                 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
                 *
                 * The contents of this file are subject to the Mozilla Public License Version
                 * 1.1 (the "License"); you may not use this file except in compliance with
                 * the License. You may obtain a copy of the License at
                 * http://www.mozilla.org/MPL/
                 *
                 * Software distributed under the License is distributed on an "AS IS" basis,
                 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
                 * for the specific language governing rights and limitations under the
                 * License.
                 *
                 * The Original Code is Concurrent.Thread.Generator module.
                 *
                 * The Initial Developer of the Original Code is
                 * Daisuke Maki.
                 * Portions created by the Initial Developer are Copyright (C) 2008
                 * the Initial Developer. All Rights Reserved.
                 *
                 * Contributor(s):
                 *
                 * Alternatively, the contents of this file may be used under the terms of
                 * either the GNU General Public License Version 2 or later (the "GPL"), or
                 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
                 * in which case the provisions of the GPL or the LGPL are applicable instead
                 * of those above. If you wish to allow use of your version of this file only
                 * under the terms of either the GPL or the LGPL, and not to allow others to
                 * use your version of this file under the terms of the MPL, indicate your
                 * decision by deleting the provisions above and replace them with the notice
                 * and other provisions required by the GPL or the LGPL. If you do not delete
                 * the provisions above, a recipient may use your version of this file under
                 * the terms of any one of the MPL, the GPL or the LGPL.
                 *
                 * ***** END LICENSE BLOCK ***** */



            NAMESPACE = 'Concurrent.Thread';











            function Generator(f) {
                if (typeof f != "function") throw new TypeError("not a function");
                if (typeof f.$Concurrent_Thread_compiled != "function") f = Thread.compile(f);
                this._mutex = new Mutex();
                this._cont_caller = null;
                this._buf = null;
                this._got = false;

                var self = this;

                var generate = eval(Thread.prepare(function (x) {
                    self._buf = x;
                    self._got = true;
                    try {
                        self._cont_iter = currentContinuation();
                        self._cont_caller();
            } catch (e) {
                        self._cont_iter = null;
                        if (e instanceof ContinuationCalledException) {
                            return;  // resume iteration
            } else {
                            throw e;
            }
            }
                // execution never reaches here
            }));

                this._cont_iter = eval(Thread.prepare(function () {
                    f(generate);
                    self._got = false;
                    self._cont_iter = null;  // null means that the iteration function has finished
                    self._cont_caller();
            }));
            }


            var proto = Generator.prototype;


            proto.hasNext = function () {
                // This definition is called when generator is used in non-converted context.
                // The implementation is quite tricky and strongly dependent on the internal
                // implementation of Concurrent.Thread.

                if (!this._mutex.isAcquirable()) this._mutex.acquire();  // must throw an error
                if (this._got) return true;
                if (!this._cont_iter) return false;

                var is_called = false;
                this._cont_caller = eval(Thread.prepare(function () {
                    is_called = true;
                    Thread.stop();
            }));

                var triplet = Thread.create(this._cont_iter)._triplet;
                triplet.timeout = void 0;
                while (1) {
                    while (triplet.timeout === void 0) {
                        try {
                            triplet = triplet.continuation.procedure.call(
                                          triplet.continuation.this_val, triplet.ret_val
                                     );
            } catch (e) {
                            if (e instanceof NoContinuationException) {
                                return this._got;
            } else if (e instanceof NoExceptionHandlerException) {
                                throw e.thrown;
            } else {
                                triplet.continuation = triplet.continuation.exception;
                                triplet.ret_val = e;
            }
            }
            }
                    if (is_called) {
                        break;
            } else {
                        triplet.continuation = triplet.continuation.exception;
                        triplet.ret_val = new Error("can't suspend in non-converted context");
            }
            }
                this._cont_caller = null;
                return this._got;
            };


            proto.hasNext.$Concurrent_Thread_compiled = eval(Thread.prepare(
                function () {
                    this._mutex.acquire();
                    try {
                        if (this._got) return true;
                        if (!this._cont_iter) return false;
                        try {
                            this._cont_caller = currentContinuation();
                            this._cont_iter();
            } catch (e) {
                            this._cont_caller = null;
                            if (e instanceof ContinuationCalledException) {
                                return this._got;
            } else {
                                throw e;
            }
            }
            } finally {
                        this._mutex.release();
            }
                // execution never reaches here
            }
            )).$Concurrent_Thread_compiled;


            proto.next = eval(Thread.prepare(
                function () {
                    if (this.hasNext()) {
                        var x = this._buf;
                        this._buf = void 0;
                        this._got = false;
                        return x;
            } else {
                        return void 0;
            }
            }
            ));

                        return {
                Generator: Generator
            };
            }();
            }
            }
            }
            }.call(null)) {
                this.Concurrent.Thread.Generator = Generator;
            }
        }).call(null);
        (function () {
            if (!this.WebBrowser || (typeof this.WebBrowser != 'object' && typeof this.WebBrowser != 'function')) this.WebBrowser = new Object();
            if (!this.WebBrowser.GUI || (typeof this.WebBrowser.GUI != 'object' && typeof this.WebBrowser.GUI != 'function')) this.WebBrowser.GUI = new Object();
            if (!this.WebBrowser.GUI.Event || (typeof this.WebBrowser.GUI.Event != 'object' && typeof this.WebBrowser.GUI.Event != 'function')) this.WebBrowser.GUI.Event = new Object();
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.Event || (typeof this.Concurrent.Thread.Event != 'object' && typeof this.Concurrent.Thread.Event != 'function')) this.Concurrent.Thread.Event = new Object();
            if (!this.Util || (typeof this.Util != 'object' && typeof this.Util != 'function')) this.Util = new Object();
            if (!this.Util.Arrayize || (typeof this.Util.Arrayize != 'object' && typeof this.Util.Arrayize != 'function')) this.Util.Arrayize = new Object();
            if (this.Concurrent.Thread.Event.waitFor === undefined) this.Concurrent.Thread.Event.waitFor = undefined;
            if (this.Concurrent.Thread.Event.select === undefined) this.Concurrent.Thread.Event.select = undefined;
            with (function () {
            with (Util.Arrayize) {
            with (WebBrowser.GUI.Event) {
            with (Concurrent) {
            with (Concurrent.Thread.Event) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;



            NAMESPACE = 'Concurrent.Thread.Event';
















            var waitFor = eval(Concurrent.Thread.prepare(
                function waitFor(target, type, options) {
                    var arg = {};
                    for (var i in options) arg[i] = options[i];
                    arg.target = target;
                    arg.type = type;
                    return select(arg);
            }
            ));



            var select = eval(Concurrent.Thread.prepare(
                function select( /* variable args */) {
                    try {
                        var signal = {};
                        set_handlers(arrayize(arguments), signal);
                        Concurrent.Thread.stop();
            } catch (e) {
                        if (e === signal) {
                            return signal.event;
            } else {
                            throw e;
            }
            }
            }
            ));


            function set_handlers(args, signal) {
                var self = Concurrent.Thread.self();

                args = args.map(function (arg) {
                    if (!arg.target || typeof arg.target !== "object") {
                        throw new TypeError("not a object: " + target);
            }
                    return {
                target: arg.target,
                type: String(arg.type),
                useCapture: Boolean(arg.useCapture),
                preventDefault: Boolean(arg.preventDefault),
                stopPropagation: Boolean(arg.stopPropagation)
            };
            });

                var lsn_ids = args.map(function (arg) {
                    function handler(e) {
                        if (arg.preventDefault) e.preventDefault();
                        if (arg.stopPropagation) e.stopPropagation();
                        lsn_ids.forEach(function (id) {
                            detach(id);
            });
                // IE invalidates event properties after leaving the event handler.
                // So, we pass a copy of the current event object (but DO NOT copy its methods).
                        var evt = {};
                        for (var i in e) {
                            if (typeof e[i] !== "function") evt[i] = e[i];
            }
                        signal.event = evt;
                        self.notify(signal);
            }
                    return attach(arg.target, arg.type, handler, arg.useCapture);
            });
            }

                        return {
                waitFor: waitFor, select: select
            };
            }();
            }
            }
            }
            }
            }.call(null)) {
                this.Concurrent.Thread.Event.waitFor = waitFor;
                this.Concurrent.Thread.Event.select = select;
            }
        }).call(null);
        (function () {
            if (!this.Data || (typeof this.Data != 'object' && typeof this.Data != 'function')) this.Data = new Object();
            if (!this.Data.Error || (typeof this.Data.Error != 'object' && typeof this.Data.Error != 'function')) this.Data.Error = new Object();
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent || (typeof this.Concurrent != 'object' && typeof this.Concurrent != 'function')) this.Concurrent = new Object();
            if (!this.Concurrent.Thread || (typeof this.Concurrent.Thread != 'object' && typeof this.Concurrent.Thread != 'function')) this.Concurrent.Thread = new Object();
            if (!this.Concurrent.Thread.JSON || (typeof this.Concurrent.Thread.JSON != 'object' && typeof this.Concurrent.Thread.JSON != 'function')) this.Concurrent.Thread.JSON = new Object();
            if (!this.Concurrent.Thread.JSON.RPC || (typeof this.Concurrent.Thread.JSON.RPC != 'object' && typeof this.Concurrent.Thread.JSON.RPC != 'function')) this.Concurrent.Thread.JSON.RPC = new Object();
            if (!this.JSON || (typeof this.JSON != 'object' && typeof this.JSON != 'function')) this.JSON = new Object();
            if (!this.Util || (typeof this.Util != 'object' && typeof this.Util != 'function')) this.Util = new Object();
            if (!this.Util.Arrayize || (typeof this.Util.Arrayize != 'object' && typeof this.Util.Arrayize != 'function')) this.Util.Arrayize = new Object();
            if (this.Concurrent.Thread.JSON.RPC.bind === undefined) this.Concurrent.Thread.JSON.RPC.bind = undefined;
            if (this.Concurrent.Thread.JSON.RPC.JSONRPCError === undefined) this.Concurrent.Thread.JSON.RPC.JSONRPCError = undefined;
            with (function () {
            with (Data.Error) {
            with (Util.Arrayize) {
            with (JSON) {
            with (Concurrent) {
            with (Concurrent.Thread.JSON.RPC) {

                    return function () {
                        var VERSION = '0.0.0';
                        var NAMESPACE;



            NAMESPACE = 'Concurrent.Thread.JSON.RPC';

















            function bind(opts) {
                if (!(opts instanceof Object)) throw new TypeError("argument for " + NAMESPACE + ".bind must be a hash.");
                var request = opts.request;
                if (request != null) {
                    if (!String(request).match(/^(?:GET|POST)$/i)) throw new Error('"request" option must be "GET" or "POST".');
            } else {
                    request = "POST";
            }
                var params = opts.params;
                if (params != null) {
                    if (!String(params).match(/^(?:Named|Positioned)$/i)) throw new Error('"params" option must be "Named" or "Positioned".');
            } else {
                    params = "Named";
            }
                var body;
                if (request.match(/^POST$/i)) {
                    if (params.match(/^Named$/i)) {
                        body = makeNamedPost(opts.url, opts.method);
            } else {
                        body = makePositionedPost(opts.url, opts.method);
            }
            } else {
                    if (params.match(/^Named$/i)) {
                        body = makeNamedGet(opts.url, opts.method);
            } else {
                        body = makePositionedGet(opts.url, opts.method);
            }
            }
                var with_pre;
                var pre = opts.preprocess;
                if (pre != null) {
                    if (typeof pre != "function") throw new TypeError('"preprocess" option must be function');
                    with_pre = eval(Thread.prepare(function () {
                        return body.apply(this, pre.apply(this, arguments));
            }));
            } else {
                    with_pre = body;
            }
                var post = opts.postprocess;
                if (post != null) {
                    if (typeof post != "function") throw new TypeError('"preprocess" option must be function');
                    return eval(Thread.prepare(function () {
                        return post(with_pre.apply(this, arguments));
            }));
            } else {
                    return with_pre;
            }
            }


            var COMMON_HEADERS = [
                'User-Agent', 'Concurrent.Thread.JSON.RPC',
                'Accept', 'application/json'
            ];

            var POST_HEADERS = COMMON_HEADERS.concat(
                'Content-type', 'application/json'
            );

            function makeNamedPost(url, method) {
                return eval(Thread.prepare(
                    function ( /* variable arguments */) {
                        var res = Thread.Http.post(url, dump({
                version: "1.1",
                method: method,
                params: args2params(arguments)
            }), POST_HEADERS);
                        res = eval("(" + res.responseText + ")");
                        if (res.error) throw new JSONRPCError(res.error);
                        return res.result;
            }
                ));
            };

            function makePositionedPost(url, method) {
                return eval(Thread.prepare(
                    function ( /* variable arguments */) {
                        var res = Thread.Http.post(url, dump({
                version: "1.1",
                method: method,
                params: arrayize(arguments)
            }), POST_HEADERS);
                        res = eval("(" + res.responseText + ")");
                        if (res.error) throw new JSONRPCError(res.error);
                        return res.result;
            }
                ));
            };

            function makeNamedGet(url, method) {
                url = url.replace(/\/+$/, "") + "/" + encodeURIComponent(method) + "?";
                return eval(Thread.prepare(
                    function ( /* variable arguments */) {
                        var res = Thread.Http.get(url + params2query(args2params(arguments)), COMMON_HEADERS);
                        res = eval("(" + res.responseText + ")");
                        if (res.error) throw new JSONRPCError(res.error);
                        return res.result;
            }
                ));
            };

            function makePositionedGet(url, method) {
                url = url.replace(/\/+$/, "") + "/" + encodeURIComponent(method) + "?";
                return eval(Thread.prepare(
                    function ( /* variable arguments */) {
                        arguments[arguments.length] = {};
                        arguments.length++;
                        var res = Thread.Http.get(url + params2query(args2params(arguments)), COMMON_HEADERS);
                        res = eval("(" + res.responseText + ")");
                        if (res.error) throw new JSONRPCError(res.error);
                        return res.result;
            }
                ));
            };

            function args2params(args) {
                var params = {};
                if (args.length) {
                    var hash = args[args.length - 1];
                    if (!(hash instanceof Object)) throw new Error("the last argument must be a hash");
                    for (var i in hash) {
                        if (hash.hasOwnProperty(i)) params[i] = hash[i];
            }
                    for (var i = 0; i < args.length - 1; i++) {
                        params[i] = args[i];
            }
            }
                return params;
            }

            function params2query(params) {
                var query = [];
                for (var i in params) {
                    if (!params.hasOwnProperty(i)) continue;
                    if (params[i] instanceof Array) {
                        var arr = params[i];
                        for (var j = 0; j < arr.length; j++) {
                            query.push(encodeURIComponent(i) + "=" + encodeURIComponent(arr[j]));
            }
            } else {
                        query.push(encodeURIComponent(i) + "=" + encodeURIComponent(params[i]));
            }
            }
                return query.join("&");
            }



            var JSONRPCError = Error.extend(
                function ($super, e) {
                    if (e instanceof Object) {
                        $super(e.message);
                        for (var i in e) this[i] = e[i];
            } else {
                        $super(e);
            }
            },
                { name: NAMESPACE + ".JSONRPCError" }
            );

                        return {
                JSONRPCError: JSONRPCError, bind: bind
            };
            }();
            }
            }
            }
            }
            }
            }.call(null)) {
                this.Concurrent.Thread.JSON.RPC.JSONRPCError = JSONRPCError;
                this.Concurrent.Thread.JSON.RPC.bind = bind;
            }
        }).call(null);

    </script>
    <!--<script type="text/javascript" src="http://61.147.119.252:8088/Scripts/jquery.metadata.js"></script>-->
    <script>

        (function ($) {



            $.extend({

                metadata: {

                    defaults: {

                        type: 'class',

                        name: 'metadata',

                        cre: /({.*})/,

                        single: 'metadata'

                    },

                    setType: function (type, name) {

                        this.defaults.type = type;

                        this.defaults.name = name;

                    },

                    get: function (elem, opts) {

                        var settings = $.extend({}, this.defaults, opts);

                        // check for empty string in single property

                        if (!settings.single.length) settings.single = 'metadata';



                        var data = $.data(elem, settings.single);

                        // returned cached data if it already exists

                        if (data) return data;



                        data = "{}";



                        if (settings.type == "class") {

                            var m = settings.cre.exec(elem.className);

                            if (m)

                                data = m[1];

                        } else if (settings.type == "elem") {

                            if (!elem.getElementsByTagName)

                                return undefined;

                            var e = elem.getElementsByTagName(settings.name);

                            if (e.length)

                                data = $.trim(e[0].innerHTML);

                        } else if (elem.getAttribute != undefined) {

                            var attr = elem.getAttribute(settings.name);

                            if (attr)

                                data = attr;

                        }



                        if (data.indexOf('{') < 0)

                            data = "{" + data + "}";



                        data = eval("(" + data + ")");



                        $.data(elem, settings.single, data);

                        return data;

                    }

                }

            });



            /**
             
             * Returns the metadata object for the first member of the jQuery object.
             
             *
             
             * @name metadata
             
             * @descr Returns element's metadata object
             
             * @param Object opts An object contianing settings to override the defaults
             
             * @type jQuery
             
             * @cat Plugins/Metadata
             
             */

            $.fn.metadata = function (opts) {

                return $.metadata.get(this[0], opts);

            };



        })(jQuery);


    </script>
    <!--<script type="text/javascript" src="http://61.147.119.252:8088/jqwidgets/jqxcore.js"></script>-->
    <script>
        /*
jQWidgets v3.0.3 (2013-Oct-01)
Copyright (c) 2011-2013 jQWidgets.
License: http://jqwidgets.com/license/
*/

        (function (a) { a.jqx = a.jqx || {}; a.jqx.define = function (b, c, d) { b[c] = function () { if (this.baseType) { this.base = new b[this.baseType](); this.base.defineInstance() } this.defineInstance() }; b[c].prototype.defineInstance = function () { }; b[c].prototype.base = null; b[c].prototype.baseType = undefined; if (d && b[d]) { b[c].prototype.baseType = d } }; a.jqx.invoke = function (e, d) { if (d.length == 0) { return } var f = typeof (d) == Array || d.length > 0 ? d[0] : d; var c = typeof (d) == Array || d.length > 1 ? Array.prototype.slice.call(d, 1) : a({}).toArray(); while (e[f] == undefined && e.base != null) { e = e.base } if (e[f] != undefined && a.isFunction(e[f])) { return e[f].apply(e, c) } if (typeof f == "string") { var b = f.toLowerCase(); if (e[b] != undefined && a.isFunction(e[b])) { return e[b].apply(e, c) } } return }; a.jqx.hasProperty = function (c, b) { if (typeof (b) == "object") { for (var e in b) { var d = c; while (d) { if (d.hasOwnProperty(e)) { return true } if (d.hasOwnProperty(e.toLowerCase())) { return true } d = d.base } return false } } else { while (c) { if (c.hasOwnProperty(b)) { return true } if (c.hasOwnProperty(b.toLowerCase())) { return true } c = c.base } } return false }; a.jqx.hasFunction = function (e, d) { if (d.length == 0) { return false } if (e == undefined) { return false } var f = typeof (d) == Array || d.length > 0 ? d[0] : d; var c = typeof (d) == Array || d.length > 1 ? Array.prototype.slice.call(d, 1) : {}; while (e[f] == undefined && e.base != null) { e = e.base } if (e[f] && a.isFunction(e[f])) { return true } if (typeof f == "string") { var b = f.toLowerCase(); if (e[b] && a.isFunction(e[b])) { return true } } return false }; a.jqx.isPropertySetter = function (c, b) { if (b.length == 1 && typeof (b[0]) == "object") { return true } if (b.length == 2 && typeof (b[0]) == "string" && !a.jqx.hasFunction(c, b)) { return true } return false }; a.jqx.validatePropertySetter = function (f, d, b) { if (!a.jqx.propertySetterValidation) { return true } if (d.length == 1 && typeof (d[0]) == "object") { for (var e in d[0]) { var g = f; while (!g.hasOwnProperty(e) && g.base) { g = g.base } if (!g || !g.hasOwnProperty(e)) { if (!b) { var c = g.hasOwnProperty(e.toString().toLowerCase()); if (!c) { throw "Invalid property: " + e } else { return true } } return false } } return true } if (d.length != 2) { if (!b) { throw "Invalid property: " + d.length >= 0 ? d[0] : "" } return false } while (!f.hasOwnProperty(d[0]) && f.base) { f = f.base } if (!f || !f.hasOwnProperty(d[0])) { if (!b) { throw "Invalid property: " + d[0] } return false } return true }; a.jqx.set = function (c, b) { if (b.length == 1 && typeof (b[0]) == "object") { a.each(b[0], function (d, e) { var f = c; while (!f.hasOwnProperty(d) && f.base != null) { f = f.base } if (f.hasOwnProperty(d)) { a.jqx.setvalueraiseevent(f, d, e) } else { if (f.hasOwnProperty(d.toLowerCase())) { a.jqx.setvalueraiseevent(f, d.toLowerCase(), e) } else { if (a.jqx.propertySetterValidation) { throw "jqxCore: invalid property '" + d + "'" } } } }) } else { if (b.length == 2) { while (!c.hasOwnProperty(b[0]) && c.base) { c = c.base } if (c.hasOwnProperty(b[0])) { a.jqx.setvalueraiseevent(c, b[0], b[1]) } else { if (c.hasOwnProperty(b[0].toLowerCase())) { a.jqx.setvalueraiseevent(c, b[0].toLowerCase(), b[1]) } else { if (a.jqx.propertySetterValidation) { throw "jqxCore: invalid property '" + b[0] + "'" } } } } } }; a.jqx.setvalueraiseevent = function (c, d, e) { var b = c[d]; c[d] = e; if (!c.isInitialized) { return } if (c.propertyChangedHandler != undefined) { c.propertyChangedHandler(c, d, b, e) } if (c.propertyChangeMap != undefined && c.propertyChangeMap[d] != undefined) { c.propertyChangeMap[d](c, d, b, e) } }; a.jqx.get = function (e, d) { if (d == undefined || d == null) { return undefined } if (e.propertyMap) { var c = e.propertyMap(d); if (c != null) { return c } } if (e.hasOwnProperty(d)) { return e[d] } if (e.hasOwnProperty(d.toLowerCase())) { return e[d.toLowerCase()] } var b = undefined; if (typeof (d) == Array) { if (d.length != 1) { return undefined } b = d[0] } else { if (typeof (d) == "string") { b = d } } while (!e.hasOwnProperty(b) && e.base) { e = e.base } if (e) { return e[b] } return undefined }; a.jqx.serialize = function (e) { var b = ""; if (a.isArray(e)) { b = "["; for (var d = 0; d < e.length; d++) { if (d > 0) { b += ", " } b += a.jqx.serialize(e[d]) } b += "]" } else { if (typeof (e) == "object") { b = "{"; var c = 0; for (var d in e) { if (c++ > 0) { b += ", " } b += d + ": " + a.jqx.serialize(e[d]) } b += "}" } else { b = e.toString() } } return b }; a.jqx.propertySetterValidation = true; a.jqx.jqxWidgetProxy = function (g, c, b) { var d = a(c); var f = a.data(c, g); if (f == undefined) { return undefined } var e = f.instance; if (a.jqx.hasFunction(e, b)) { return a.jqx.invoke(e, b) } if (a.jqx.isPropertySetter(e, b)) { if (a.jqx.validatePropertySetter(e, b)) { a.jqx.set(e, b); return undefined } } else { if (typeof (b) == "object" && b.length == 0) { return } else { if (typeof (b) == "object" && b.length == 1 && a.jqx.hasProperty(e, b[0])) { return a.jqx.get(e, b[0]) } else { if (typeof (b) == "string" && a.jqx.hasProperty(e, b[0])) { return a.jqx.get(e, b) } } } } throw "jqxCore: Invalid parameter '" + a.jqx.serialize(b) + "' does not exist."; return undefined }; a.jqx.jqxWidget = function (b, d, j) { var c = false; try { jqxArgs = Array.prototype.slice.call(j, 0) } catch (h) { jqxArgs = "" } try { c = window.MSApp != undefined } catch (h) { } var g = b; var f = ""; if (d) { f = "_" + d } a.jqx.define(a.jqx, "_" + g, f); a.fn[g] = function () { var e = Array.prototype.slice.call(arguments, 0); var k = null; if (e.length == 0 || (e.length == 1 && typeof (e[0]) == "object")) { if (this.length == 0) { if (this.selector) { throw new Error("Invalid jQuery Selector - " + this.selector + "! Please, check whether the used ID or CSS Class name is correct.") } else { throw new Error("Invalid jQuery Selector! Please, check whether the used ID or CSS Class name is correct.") } } return this.each(function () { var o = a(this); var n = this; var q = a.data(n, g); if (q == null) { q = {}; q.element = n; q.host = o; q.instance = new a.jqx["_" + g](); if (n.id == "") { n.id = a.jqx.utilities.createId() } q.instance.get = q.instance.set = q.instance.call = function () { var r = Array.prototype.slice.call(arguments, 0); return a.jqx.jqxWidgetProxy(g, n, r) }; a.data(n, g, q); a.data(n, "jqxWidget", q.instance); var p = new Array(); var l = q.instance; while (l) { l.isInitialized = false; p.push(l); l = l.base } p.reverse(); p[0].theme = ""; a.jqx.jqxWidgetProxy(g, this, e); for (var m in p) { l = p[m]; if (m == 0) { l.host = o; l.element = n; l.WinJS = c } if (l != undefined) { if (l.createInstance != null) { if (c) { MSApp.execUnsafeLocalFunction(function () { l.createInstance(e) }) } else { l.createInstance(e) } } } } for (var m in p) { if (p[m] != undefined) { p[m].isInitialized = true } } if (c) { MSApp.execUnsafeLocalFunction(function () { q.instance.refresh(true) }) } else { q.instance.refresh(true) } k = this } else { a.jqx.jqxWidgetProxy(g, this, e) } }) } else { if (this.length == 0) { if (this.selector) { throw new Error("Invalid jQuery Selector - " + this.selector + "! Please, check whether the used ID or CSS Class name is correct.") } else { throw new Error("Invalid jQuery Selector! Please, check whether the used ID or CSS Class name is correct.") } } this.each(function () { var l = a.jqx.jqxWidgetProxy(g, this, e); if (k == null) { k = l } }) } return k }; try { a.extend(a.jqx["_" + g].prototype, Array.prototype.slice.call(j, 0)[0]) } catch (h) { } a.extend(a.jqx["_" + g].prototype, { toThemeProperty: function (e, k) { if (this.theme == "") { return e } if (k != null && k) { return e + "-" + this.theme } return e + " " + e + "-" + this.theme } }); a.jqx["_" + g].prototype.refresh = function () { if (this.base) { this.base.refresh() } }; a.jqx["_" + g].prototype.createInstance = function () { }; a.jqx["_" + g].prototype.propertyChangeMap = {}; a.jqx["_" + g].prototype.addHandler = function (m, k, e, l) { switch (k) { case "mousewheel": if (window.addEventListener) { if (a.jqx.browser.mozilla) { m[0].addEventListener("DOMMouseScroll", e, false) } else { m[0].addEventListener("mousewheel", e, false) } return false } break; case "mousemove": if (window.addEventListener && !l) { m[0].addEventListener("mousemove", e, false); return false } break } if (l == undefined || l == null) { if (m.on) { m.on(k, e) } else { m.bind(k, e) } } else { if (m.on) { m.on(k, l, e) } else { m.bind(k, l, e) } } }; a.jqx["_" + g].prototype.removeHandler = function (l, k, e) { switch (k) { case "mousewheel": if (window.removeEventListener) { if (a.jqx.browser.mozilla) { l[0].removeEventListener("DOMMouseScroll", e, false) } else { l[0].removeEventListener("mousewheel", e, false) } return false } break; case "mousemove": if (e) { if (window.removeEventListener) { l[0].removeEventListener("mousemove", e, false) } } break } if (k == undefined) { if (l.off) { l.off() } else { l.unbind() } return } if (e == undefined) { if (l.off) { l.off(k) } else { l.unbind(k) } } else { if (l.off) { l.off(k, e) } else { l.unbind(k, e) } } } }; a.jqx.utilities = a.jqx.utilities || {}; a.extend(a.jqx.utilities, { scrollBarSize: 15, touchScrollBarSize: 10, createId: function () { var b = function () { return (((1 + Math.random()) * 65536) | 0).toString(16).substring(1) }; return "jqxWidget" + b() + b() }, setTheme: function (f, g, e) { if (typeof e === "undefined") { return } var h = e[0].className.split(" "), b = [], j = [], d = e.children(); for (var c = 0; c < h.length; c += 1) { if (h[c].indexOf(f) >= 0) { if (f.length > 0) { b.push(h[c]); j.push(h[c].replace(f, g)) } else { j.push(h[c] + "-" + g) } } } this._removeOldClasses(b, e); this._addNewClasses(j, e); for (var c = 0; c < d.length; c += 1) { this.setTheme(f, g, a(d[c])) } }, _removeOldClasses: function (d, c) { for (var b = 0; b < d.length; b += 1) { c.removeClass(d[b]) } }, _addNewClasses: function (d, c) { for (var b = 0; b < d.length; b += 1) { c.addClass(d[b]) } }, getOffset: function (b) { var d = a.jqx.mobile.getLeftPos(b[0]); var c = a.jqx.mobile.getTopPos(b[0]); return { top: c, left: d } }, resize: function (d, m, l, k) { if (k === undefined) { k = true } var g = -1; var f = this; var c = function (o) { if (!f.hiddenWidgets) { return -1 } var p = -1; for (var n = 0; n < f.hiddenWidgets.length; n++) { if (o.id) { if (f.hiddenWidgets[n].id == o.id) { p = n; break } } else { if (f.hiddenWidgets[n].id == o[0].id) { p = n; break } } } return p }; if (this.resizeHandlers) { for (var e = 0; e < this.resizeHandlers.length; e++) { if (d.id) { if (this.resizeHandlers[e].id == d.id) { g = e; break } } else { if (this.resizeHandlers[e].id == d[0].id) { g = e; break } } } if (l === true) { if (g != -1) { this.resizeHandlers.splice(g, 1) } if (this.resizeHandlers.length == 0) { var j = a(window); if (j.off) { j.off("resize.jqx"); j.off("orientationchange.jqx"); j.off("orientationchanged.jqx") } else { j.unbind("resize.jqx"); j.unbind("orientationchange.jqx"); j.unbind("orientationchanged.jqx") } this.resizeHandlers = null } var b = c(d); if (b != -1 && this.hiddenWidgets) { this.hiddenWidgets.splice(b, 1) } return } } else { if (l === true) { var b = c(d); if (b != -1 && this.hiddenWidgets) { this.hiddenWidgets.splice(b, 1) } return } } var f = this; var h = function (n, o) { if (!f.resizeHandlers) { return } var p = function (t, r) { var s = t.widget.parents().length; var q = r.widget.parents().length; try { if (s < q) { return -1 } if (s > q) { return 1 } } catch (u) { var v = u } return 0 }; f.hiddenWidgets = new Array(); f.resizeHandlers.sort(p); a.each(f.resizeHandlers, function (s, v) { var u = this.widget.data(); if (!u) { return true } if (!u.jqxWidget) { return true } var t = u.jqxWidget.width; var q = u.jqxWidget.height; var r = false; if (t != null && t.toString().indexOf("%") != -1) { r = true } if (q != null && q.toString().indexOf("%") != -1) { r = true } if (a.jqx.isHidden(this.widget)) { if (c(this.widget) === -1) { f.hiddenWidgets.push(this) } } else { if (n === undefined || n !== true) { if (r) { this.callback(o); if (f.hiddenWidgets.indexOf(this) >= 0) { f.hiddenWidgets.splice(f.hiddenWidgets.indexOf(this), 1) } } } } }); if (f.hiddenWidgets.length > 0) { f.hiddenWidgets.sort(p); if (f.__resizeInterval) { clearInterval(f.__resizeInterval) } f.__resizeInterval = setInterval(function () { var q = false; var r = new Array(); a.each(f.hiddenWidgets, function (s, t) { if (a.jqx.isHidden(this.widget)) { q = true; r.push(this) } else { this.callback(o) } }); f.hiddenWidgets = r; if (!q) { clearInterval(f.__resizeInterval) } }, 100) } }; if (!this.resizeHandlers) { this.resizeHandlers = new Array(); var j = a(window); if (j.on) { j.on("resize.jqx", function (n) { h(null, "resize") }); j.on("orientationchange.jqx", function (n) { h(null, "orientationchange") }); j.on("orientationchanged.jqx", function (n) { h(null, "orientationchange") }) } else { j.bind("resize.jqx", function (n) { h(null, "orientationchange") }); j.bind("orientationchange.jqx", function (n) { h(null, "orientationchange") }); j.bind("orientationchanged.jqx", function (n) { h(null, "orientationchange") }) } } if (k) { if (g === -1) { this.resizeHandlers.push({ id: d[0].id, widget: d, callback: m }) } } if (a.jqx.isHidden(d) && k === true) { h(true) } }, html: function (c, d) { if (!a(c).on) { return a(c).html(d) } try { return jQuery.access(c, function (s) { var f = c[0] || {}, m = 0, j = c.length; if (s === undefined) { return f.nodeType === 1 ? f.innerHTML.replace(rinlinejQuery, "") : undefined } var r = /<(?:script|style|link)/i, n = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video", h = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi, p = /<([\w:]+)/, g = /<(?:script|object|embed|option|style)/i, k = new RegExp("<(?:" + n + ")[\\s/>]", "i"), q = /^\s+/, t = { option: [1, "<select multiple='multiple'>", "</select>"], legend: [1, "<fieldset>", "</fieldset>"], thead: [1, "<table>", "</table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], area: [1, "<map>", "</map>"], _default: [0, "", ""] }; if (typeof s === "string" && !r.test(s) && (jQuery.support.htmlSerialize || !k.test(s)) && (jQuery.support.leadingWhitespace || !q.test(s)) && !t[(p.exec(s) || ["", ""])[1].toLowerCase()]) { s = s.replace(h, "<$1></$2>"); try { for (; m < j; m++) { f = this[m] || {}; if (f.nodeType === 1) { jQuery.cleanData(f.getElementsByTagName("*")); f.innerHTML = s } } f = 0 } catch (o) { } } if (f) { c.empty().append(s) } }, null, d, arguments.length) } catch (b) { return a(c).html(d) } }, hasTransform: function (d) { var c = ""; c = d.css("transform"); if (c == "" || c == "none") { c = d.parents().css("transform"); if (c == "" || c == "none") { var b = a.jqx.utilities.getBrowser(); if (b.browser == "msie") { c = d.css("-ms-transform"); if (c == "" || c == "none") { c = d.parents().css("-ms-transform") } } else { if (b.browser == "chrome") { c = d.css("-webkit-transform"); if (c == "" || c == "none") { c = d.parents().css("-webkit-transform") } } else { if (b.browser == "opera") { c = d.css("-o-transform"); if (c == "" || c == "none") { c = d.parents().css("-o-transform") } } else { if (b.browser == "mozilla") { c = d.css("-moz-transform"); if (c == "" || c == "none") { c = d.parents().css("-moz-transform") } } } } } } else { return c != "" && c != "none" } } if (c == "" || c == "none") { c = a(document.body).css("transform") } return c != "" && c != "none" && c != null }, getBrowser: function () { var c = navigator.userAgent.toLowerCase(); var b = /(chrome)[ \/]([\w.]+)/.exec(c) || /(webkit)[ \/]([\w.]+)/.exec(c) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(c) || /(msie) ([\w.]+)/.exec(c) || c.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(c) || []; var d = { browser: b[1] || "", version: b[2] || "0" }; d[b[1]] = b[1]; return d } }); a.jqx.browser = a.jqx.utilities.getBrowser(); a.jqx.isHidden = function (d) { try { var b = d[0].offsetWidth, e = d[0].offsetHeight; if (b === 0 || e === 0) { return true } else { return false } } catch (c) { return false } }; a.jqx.ariaEnabled = true; a.jqx.aria = function (c, e, d) { if (!a.jqx.ariaEnabled) { return } if (e == undefined) { a.each(c.aria, function (g, h) { var k = !c.base ? c.host.attr(g) : c.base.host.attr(g); if (k != undefined && !a.isFunction(k)) { var j = k; switch (h.type) { case "number": j = new Number(k); if (isNaN(j)) { j = k } break; case "boolean": j = k == "true" ? true : false; break; case "date": j = new Date(k); if (j == "Invalid Date" || isNaN(j)) { j = k } break } c[h.name] = j } else { var k = c[h.name]; if (a.isFunction(k)) { k = c[h.name]() } if (k == undefined) { k = "" } try { !c.base ? c.host.attr(g, k.toString()) : c.base.host.attr(g, k.toString()) } catch (f) { } } }) } else { try { if (c.host) { if (!c.base) { if (c.host) { if (c.element.setAttribute) { c.element.setAttribute(e, d.toString()) } else { c.host.attr(e, d.toString()) } } else { c.attr(e, d.toString()) } } else { if (c.base.host) { c.base.host.attr(e, d.toString()) } else { c.attr(e, d.toString()) } } } else { if (c.setAttribute) { c.setAttribute(e, d.toString()) } } } catch (b) { } } }; if (!Array.prototype.indexOf) { Array.prototype.indexOf = function (c) { var b = this.length; var d = Number(arguments[1]) || 0; d = (d < 0) ? Math.ceil(d) : Math.floor(d); if (d < 0) { d += b } for (; d < b; d++) { if (d in this && this[d] === c) { return d } } return -1 } } a.jqx.mobile = a.jqx.mobile || {}; a.jqx.position = function (b) { var e = parseInt(b.pageX); var d = parseInt(b.pageY); if (a.jqx.mobile.isTouchDevice()) { var c = a.jqx.mobile.getTouches(b); var f = c[0]; e = parseInt(f.pageX); d = parseInt(f.pageY) } return { left: e, top: d } }; a.extend(a.jqx.mobile, { _touchListener: function (h, f) { var b = function (j, l) { var k = document.createEvent("MouseEvents"); k.initMouseEvent(j, l.bubbles, l.cancelable, l.view, l.detail, l.screenX, l.screenY, l.clientX, l.clientY, l.ctrlKey, l.altKey, l.shiftKey, l.metaKey, l.button, l.relatedTarget); k._pageX = l.pageX; k._pageY = l.pageY; return k }; var g = { mousedown: "touchstart", mouseup: "touchend", mousemove: "touchmove" }; var d = b(g[h.type], h); h.target.dispatchEvent(d); var c = h.target["on" + g[h.type]]; if (typeof c === "function") { c(h) } }, setMobileSimulator: function (c, e) { if (this.isTouchDevice()) { return } this.simulatetouches = true; if (e == false) { this.simulatetouches = false } var d = { mousedown: "touchstart", mouseup: "touchend", mousemove: "touchmove" }; var b = this; if (window.addEventListener) { var f = function () { for (var g in d) { if (c.addEventListener) { c.removeEventListener(g, b._touchListener); c.addEventListener(g, b._touchListener, false) } } }; if (a.jqx.browser.msie) { f() } else { f() } } }, isTouchDevice: function () { if (this.touchDevice != undefined) { return this.touchDevice } var b = "Browser CodeName: " + navigator.appCodeName + ""; b += "Browser Name: " + navigator.appName + ""; b += "Browser Version: " + navigator.appVersion + ""; b += "Platform: " + navigator.platform + ""; b += "User-agent header: " + navigator.userAgent + ""; if (b.indexOf("Android") != -1) { return true } if (b.indexOf("IEMobile") != -1) { return true } if (b.indexOf("Windows Phone") != -1) { return true } if (b.indexOf("WPDesktop") != -1) { return true } if (b.indexOf("ZuneWP7") != -1) { return true } if (b.indexOf("BlackBerry") != -1 && b.indexOf("Mobile Safari") != -1) { return true } if (b.indexOf("ipod") != -1) { return true } if (b.indexOf("nokia") != -1 || b.indexOf("Nokia") != -1) { return true } if (b.indexOf("Chrome/17") != -1) { return false } if (b.indexOf("CrOS") != -1) { return false } if (b.indexOf("Opera") != -1 && b.indexOf("Mobi") == -1 && b.indexOf("Mini") == -1 && b.indexOf("Platform: Win") != -1) { return false } if (b.indexOf("Opera") != -1 && b.indexOf("Mobi") != -1 && b.indexOf("Opera Mobi") != -1) { return true } var c = { ios: "i(?:Pad|Phone|Pod)(?:.*)CPU(?: iPhone)? OS ", android: "(Android |HTC_|Silk/)", blackberry: "BlackBerry(?:.*)Version/", rimTablet: "RIM Tablet OS ", webos: "(?:webOS|hpwOS)/", bada: "Bada/" }; try { if (this.touchDevice != undefined) { return this.touchDevice } this.touchDevice = false; for (i in c) { if (c.hasOwnProperty(i)) { prefix = c[i]; match = b.match(new RegExp("(?:" + prefix + ")([^\\s;]+)")); if (match) { if (i.toString() == "blackberry") { this.touchDevice = false; return false } this.touchDevice = true; return true } } } if (navigator.platform.toLowerCase().indexOf("win") != -1) { this.touchDevice = false; return false } document.createEvent("TouchEvent"); this.touchDevice = true; return this.touchDevice } catch (d) { this.touchDevice = false; return false } }, getLeftPos: function (b) { var c = b.offsetLeft; while ((b = b.offsetParent) != null) { if (b.tagName != "HTML") { c += b.offsetLeft; if (document.all) { c += b.clientLeft } } } return c }, getTopPos: function (c) { var e = c.offsetTop; var b = a(c).coord(); while ((c = c.offsetParent) != null) { if (c.tagName != "HTML") { e += (c.offsetTop - c.scrollTop); if (document.all) { e += c.clientTop } } } var d = navigator.userAgent.toLowerCase(); var f = (d.indexOf("windows phone") != -1 || d.indexOf("WPDesktop") != -1 || d.indexOf("ZuneWP7") != -1 || d.indexOf("msie 9") != -1 || d.indexOf("msie 11") != -1 || d.indexOf("msie 10") != -1) && d.indexOf("touch") != -1; if (f) { return b.top } if (this.isSafariMobileBrowser()) { if (this.isSafari4MobileBrowser() && this.isIPadSafariMobileBrowser()) { return e } if (d.indexOf("version/7") != -1) { return b.top } e = e + a(window).scrollTop() } return e }, isChromeMobileBrowser: function () { var c = navigator.userAgent.toLowerCase(); var b = c.indexOf("android") != -1; return b }, isOperaMiniMobileBrowser: function () { var c = navigator.userAgent.toLowerCase(); var b = c.indexOf("opera mini") != -1 || c.indexOf("opera mobi") != -1; return b }, isOperaMiniBrowser: function () { var c = navigator.userAgent.toLowerCase(); var b = c.indexOf("opera mini") != -1; return b }, isNewSafariMobileBrowser: function () { var c = navigator.userAgent.toLowerCase(); var b = c.indexOf("ipad") != -1 || c.indexOf("iphone") != -1 || c.indexOf("ipod") != -1; b = b && (c.indexOf("version/5") != -1); return b }, isSafari4MobileBrowser: function () { var c = navigator.userAgent.toLowerCase(); var b = c.indexOf("ipad") != -1 || c.indexOf("iphone") != -1 || c.indexOf("ipod") != -1; b = b && (c.indexOf("version/4") != -1); return b }, isWindowsPhone: function () { var c = navigator.userAgent.toLowerCase(); var b = (c.indexOf("windows phone") != -1 || c.indexOf("WPDesktop") != -1 || c.indexOf("ZuneWP7") != -1 || c.indexOf("msie 9") != -1 || c.indexOf("msie 11") != -1 || c.indexOf("msie 10") != -1) && c.indexOf("touch") != -1; return b }, isSafariMobileBrowser: function () { var c = navigator.userAgent.toLowerCase(); var b = c.indexOf("ipad") != -1 || c.indexOf("iphone") != -1 || c.indexOf("ipod") != -1; return b }, isIPadSafariMobileBrowser: function () { var c = navigator.userAgent.toLowerCase(); var b = c.indexOf("ipad") != -1; return b }, isMobileBrowser: function () { var c = navigator.userAgent.toLowerCase(); var b = c.indexOf("ipad") != -1 || c.indexOf("iphone") != -1 || c.indexOf("android") != -1; return b }, getTouches: function (b) { if (b.originalEvent) { if (b.originalEvent.touches && b.originalEvent.touches.length) { return b.originalEvent.touches } else { if (b.originalEvent.changedTouches && b.originalEvent.changedTouches.length) { return b.originalEvent.changedTouches } } } if (!b.touches) { b.touches = new Array(); b.touches[0] = b.originalEvent != undefined ? b.originalEvent : b; if (b.originalEvent != undefined && b.pageX) { b.touches[0] = b } if (b.type == "mousemove") { b.touches[0] = b } } return b.touches }, getTouchEventName: function (b) { if (this.isWindowsPhone()) { if (b.toLowerCase().indexOf("start") != -1) { return "MSPointerDown" } if (b.toLowerCase().indexOf("move") != -1) { return "MSPointerMove" } if (b.toLowerCase().indexOf("end") != -1) { return "MSPointerUp" } } else { return b } }, dispatchMouseEvent: function (b, f, d) { if (this.simulatetouches) { return } var c = document.createEvent("MouseEvent"); c.initMouseEvent(b, true, true, f.view, 1, f.screenX, f.screenY, f.clientX, f.clientY, false, false, false, false, 0, null); if (d != null) { d.dispatchEvent(c) } }, getRootNode: function (b) { while (b.nodeType !== 1) { b = b.parentNode } return b }, setTouchScroll: function (b, c) { if (!this.enableScrolling) { this.enableScrolling = [] } this.enableScrolling[c] = b }, touchScroll: function (d, y, g, D, b, k) { if (d == null) { return } var B = this; var t = 0; var j = 0; var l = 0; var u = 0; var m = 0; var n = 0; if (!this.scrolling) { this.scrolling = [] } this.scrolling[D] = false; var h = false; var q = a(d); var v = ["select", "input", "textarea"]; var c = 0; var e = 0; if (!this.enableScrolling) { this.enableScrolling = [] } this.enableScrolling[D] = true; var D = D; var C = this.getTouchEventName("touchstart") + ".touchScroll"; var p = this.getTouchEventName("touchend") + ".touchScroll"; var A = this.getTouchEventName("touchmove") + ".touchScroll"; var c = function (E) { if (!B.enableScrolling[D]) { return true } if (a.inArray(E.target.tagName.toLowerCase(), v) !== -1) { return } var F = B.getTouches(E); var G = F[0]; if (F.length == 1) { B.dispatchMouseEvent("mousedown", G, B.getRootNode(G.target)) } h = false; j = G.pageY; m = G.pageX; if (B.simulatetouches) { j = G._pageY; m = G._pageX } B.scrolling[D] = true; t = 0; u = 0; return true }; if (q.on) { q.on(C, c) } else { q.bind(C, c) } var x = function (J) { if (!B.enableScrolling[D]) { return true } if (!B.scrolling[D]) { return true } var L = B.getTouches(J); if (L.length > 1) { return true } var H = L[0].pageY; var I = L[0].pageX; if (B.simulatetouches) { H = L[0]._pageY; I = L[0]._pageX } var E = H - j; var F = I - m; e = H; touchHorizontalEnd = I; l = E - t; n = F - u; h = true; t = E; u = F; g(-n * 1, -l * 1, F, E, J); var G = b != null ? b[0].style.display != "none" : true; var K = k != null ? k[0].style.display != "none" : true; if (G || K) { if ((n !== 0 && G) || (l !== 0 && K)) { J.preventDefault(); J.stopPropagation(); if (J.preventManipulation) { J.preventManipulation() } return false } } }; if (q.on) { q.on(A, x) } else { q.bind(A, x) } if (this.simulatetouches) { var o = a(window).on != undefined || a(window).bind; var z = function (E) { B.scrolling[D] = false }; a(window).on != undefined ? a(document).on("mouseup.touchScroll", z) : a(document).bind("mouseup.touchScroll", z); if (window.frameElement) { if (window.top != null) { var r = function (E) { B.scrolling[D] = false }; if (window.top.document) { a(window.top.document).on ? a(window.top.document).on("mouseup", r) : a(window.top.document).bind("mouseup", r) } } } var s = a(document).on != undefined || a(document).bind; var w = function (E) { if (!B.scrolling[D]) { return true } B.scrolling[D] = false; var G = B.getTouches(E)[0], F = B.getRootNode(G.target); B.dispatchMouseEvent("mouseup", G, F); B.dispatchMouseEvent("click", G, F) }; a(document).on != undefined ? a(document).on("touchend", w) : a(document).bind("touchend", w) } var f = function (E) { if (!B.enableScrolling[D]) { return true } var G = B.getTouches(E)[0]; if (!B.scrolling[D]) { return true } B.scrolling[D] = false; if (h) { B.dispatchMouseEvent("mouseup", G, F) } else { var G = B.getTouches(E)[0], F = B.getRootNode(G.target); B.dispatchMouseEvent("mouseup", G, F); B.dispatchMouseEvent("click", G, F); return true } }; q.on ? q.on(p + " touchcancel.touchScroll", f) : q.bind(p + " touchcancel.touchScroll", f) } }); a.jqx.cookie = a.jqx.cookie || {}; a.extend(a.jqx.cookie, { cookie: function (e, f, c) { if (arguments.length > 1 && String(f) !== "[object Object]") { c = jQuery.extend({}, c); if (f === null || f === undefined) { c.expires = -1 } if (typeof c.expires === "number") { var h = c.expires, d = c.expires = new Date(); d.setDate(d.getDate() + h) } f = String(f); return (document.cookie = [encodeURIComponent(e), "=", c.raw ? f : encodeURIComponent(f), c.expires ? "; expires=" + c.expires.toUTCString() : "", c.path ? "; path=" + c.path : "", c.domain ? "; domain=" + c.domain : "", c.secure ? "; secure" : ""].join("")) } c = f || {}; var b, g = c.raw ? function (j) { return j } : decodeURIComponent; return (b = new RegExp("(?:^|; )" + encodeURIComponent(e) + "=([^;]*)").exec(document.cookie)) ? g(b[1]) : null } }); a.jqx.string = a.jqx.string || {}; a.extend(a.jqx.string, { replace: function (f, d, e) { if (d === e) { return this } var b = f; var c = b.indexOf(d); while (c != -1) { b = b.replace(d, e); c = b.indexOf(d) } return b }, contains: function (b, c) { if (b == null || c == null) { return false } return b.indexOf(c) != -1 }, containsIgnoreCase: function (b, c) { if (b == null || c == null) { return false } return b.toUpperCase().indexOf(c.toUpperCase()) != -1 }, equals: function (b, c) { if (b == null || c == null) { return false } b = this.normalize(b); if (c.length == b.length) { return b.slice(0, c.length) == c } return false }, equalsIgnoreCase: function (b, c) { if (b == null || c == null) { return false } b = this.normalize(b); if (c.length == b.length) { return b.toUpperCase().slice(0, c.length) == c.toUpperCase() } return false }, startsWith: function (b, c) { if (b == null || c == null) { return false } return b.slice(0, c.length) == c }, startsWithIgnoreCase: function (b, c) { if (b == null || c == null) { return false } return b.toUpperCase().slice(0, c.length) == c.toUpperCase() }, normalize: function (b) { if (b.charCodeAt(b.length - 1) == 65279) { b = b.substring(0, b.length - 1) } return b }, endsWith: function (b, c) { if (b == null || c == null) { return false } b = this.normalize(b); return b.slice(-c.length) == c }, endsWithIgnoreCase: function (b, c) { if (b == null || c == null) { return false } b = this.normalize(b); return b.toUpperCase().slice(-c.length) == c.toUpperCase() } }); a.extend(jQuery.easing, { easeOutBack: function (f, g, e, k, j, h) { if (h == undefined) { h = 1.70158 } return k * ((g = g / j - 1) * g * ((h + 1) * g + h) + 1) + e }, easeInQuad: function (f, g, e, j, h) { return j * (g /= h) * g + e }, easeInOutCirc: function (f, g, e, j, h) { if ((g /= h / 2) < 1) { return -j / 2 * (Math.sqrt(1 - g * g) - 1) + e } return j / 2 * (Math.sqrt(1 - (g -= 2) * g) + 1) + e }, easeInOutSine: function (f, g, e, j, h) { return -j / 2 * (Math.cos(Math.PI * g / h) - 1) + e }, easeInCubic: function (f, g, e, j, h) { return j * (g /= h) * g * g + e }, easeOutCubic: function (f, g, e, j, h) { return j * ((g = g / h - 1) * g * g + 1) + e }, easeInOutCubic: function (f, g, e, j, h) { if ((g /= h / 2) < 1) { return j / 2 * g * g * g + e } return j / 2 * ((g -= 2) * g * g + 2) + e }, easeInSine: function (f, g, e, j, h) { return -j * Math.cos(g / h * (Math.PI / 2)) + j + e }, easeOutSine: function (f, g, e, j, h) { return j * Math.sin(g / h * (Math.PI / 2)) + e }, easeInOutSine: function (f, g, e, j, h) { return -j / 2 * (Math.cos(Math.PI * g / h) - 1) + e } }) })(jQuery); (function (b) { b.extend(jQuery.event.special, { close: { noBubble: true }, open: { noBubble: true }, expand: { noBubble: true }, collapse: { noBubble: true }, tabclick: { noBubble: true }, selected: { noBubble: true }, expanded: { noBubble: true }, collapsed: { noBubble: true }, valuechanged: { noBubble: true }, expandedItem: { noBubble: true }, collapsedItem: { noBubble: true }, expandingItem: { noBubble: true }, collapsingItem: { noBubble: true } }); b.fn.extend({ ischildof: function (f) { var d = b(this).parents().get(); for (var c = 0; c < d.length; c++) { if (typeof f != "string") { var e = d[c]; if (f !== undefined) { if (e == f[0]) { return true } } } else { if (f !== undefined) { if (b(d[c]).is(f)) { return true } } } } return false } }); var a = this.originalVal = b.fn.val; b.fn.val = function (d) { if (typeof d == "undefined") { if (b(this).hasClass("jqx-widget")) { var c = b(this).data().jqxWidget; if (c && c.val) { return c.val() } } return a.call(this) } else { if (b(this).hasClass("jqx-widget")) { var c = b(this).data().jqxWidget; if (c && c.val) { if (arguments.length != 2) { return c.val(d) } else { return c.val(d, arguments[1]) } } } return a.call(this, d) } }; b.fn.coord = function (o) { var e, k, j = { top: 0, left: 0 }, f = this[0], m = f && f.ownerDocument; if (!m) { return } e = m.documentElement; if (!jQuery.contains(e, f)) { return j } if (typeof f.getBoundingClientRect !== undefined) { j = f.getBoundingClientRect() } var d = function (p) { return jQuery.isWindow(p) ? p : p.nodeType === 9 ? p.defaultView || p.parentWindow : false }; k = d(m); var h = 0; var c = 0; var g = navigator.userAgent.toLowerCase(); var n = g.indexOf("ipad") != -1 || g.indexOf("iphone") != -1; if (n) { h = 2 } if (true == o) { if (b(document.body).css("position") != "static") { var l = b(document.body).coord(); h = -l.left; c = -l.top } } return { top: c + j.top + (k.pageYOffset || e.scrollTop) - (e.clientTop || 0), left: h + j.left + (k.pageXOffset || e.scrollLeft) - (e.clientLeft || 0) } } })(jQuery);
    </script>
    <!--<script type="text/javascript" src="http://61.147.119.252:8088/jqwidgets/jqxsplitter.js"></script>-->
    <script>
        /*
jQWidgets v3.0.3 (2013-Oct-01)
Copyright (c) 2011-2013 jQWidgets.
License: http://jqwidgets.com/license/
*/

        (function (a) { a.jqx.jqxWidget("jqxSplitter", "", {}); a.extend(a.jqx._jqxSplitter.prototype, { defineInstance: function () { this.width = 300; this.height = 300; this.panels = []; this.orientation = "vertical"; this.disabled = false; this.splitBarSize = 5; this.touchSplitBarSize = 15; this.panel1 = null; this.panel2 = null; this._eventsMap = { mousedown: a.jqx.mobile.getTouchEventName("touchstart"), mouseup: a.jqx.mobile.getTouchEventName("touchend"), mousemove: a.jqx.mobile.getTouchEventName("touchmove"), mouseenter: "mouseenter", mouseleave: "mouseleave" }; this._isTouchDevice = false; this._isNested = false; this.resizable = true; this.touchMode = "auto"; this.showSplitBar = true; this.initContent = null; this._events = ["resize", "expanded", "collapsed", "resizeStart", "layout"] }, createInstance: function () { this.render() }, _initOverlay: function (b) { if (this.overlay || b == "undefined") { this.overlay.remove(); this.overlay = null } else { if (b == true) { this.overlay = a("<div style='z-index: 100; background: #fff;'></div>"); this.overlay.css("opacity", 0.01); this.overlay.css("position", "absolute"); this.overlay.appendTo(a(document.body)); var c = this.host.coord(); this.overlay.css("left", "0px"); this.overlay.css("top", "0px"); this.overlay.width(a(window).width()); this.overlay.height(a(window).height()); this.overlay.addClass("jqx-disableselect"); if (this.orientation == "horizontal") { this.overlay.css("cursor", "row-resize") } else { this.overlay.css("cursor", "col-resize") } } } }, _startDrag: function (b) { if (b.target == this.splitBarButton[0] || this.disabled) { return true } if (this.panels[0].collapsed || this.panels[1].collapsed || !this.resizable) { return true } if (this.overlay == null) { this._dragging = true; this._initOverlay(true); this._dragStart = a.jqx.position(b); return false } return true }, _drag: function (b) { if (this.panels[0].collapsed || this.panels[1].collapsed || this.disabled) { return true } if (!this._dragging) { return true } var i = this.orientation == "horizontal" ? "top" : "left"; var k = this.orientation == "vertical" ? "width" : "height"; this._position = a.jqx.position(b); if (this.overlay && !this._splitBarClone) { if (Math.abs(this._position[i] - this._dragStart[i]) >= 3) { var m = this.splitBar.coord(); this._cloneStart = { left: m.left, top: m.top }; this._splitBarClone = this._createSplitBarClone(); this._raiseEvent(3, { panels: this.panels }); return } } if (this._splitBarClone) { var j, c; var n = this.host[k](); var d = n / 100; var f = 1 / d; var h = 0; var l = this._splitBarClone[k]() + 2; var g = parseInt(this.host.coord()[i]); var e = this._position[i] - this._dragStart[i] + this._cloneStart[i] - g; if (h > e) { e = h } if (e > n + h - l) { e = n + h - l } j = this.panels[0].min; c = this.panels[1].min; if (c.toString().indexOf("%") != -1) { c = parseFloat(c) * d } if (j.toString().indexOf("%") != -1) { j = parseFloat(j) * d } this._splitBarClone.removeClass(this.toThemeProperty("jqx-splitter-splitbar-invalid")); if (e < j) { this._splitBarClone.addClass(this.toThemeProperty("jqx-splitter-splitbar-invalid")); e = j } if (e > n + h - l - c) { this._splitBarClone.addClass(this.toThemeProperty("jqx-splitter-splitbar-invalid")); e = n + h - l - c } this._splitBarClone.css(i, e); if (b.preventDefault) { b.preventDefault() } if (b.stopPropagation) { b.stopPropagation() } return false } return true }, _resize: function () { var h = this.orientation == "horizontal" ? "height" : "width"; var f = this.orientation == "horizontal" ? "top" : "left"; var c = this._splitBarClone.css(f); var b = this.host[h](); var e = b / 100; var d = 1 / e; var g = this.panels[0].size; if (g.toString().indexOf("%") != -1) { this.panels[0].size = parseFloat(c) * d + "%" } else { this.panels[0].size = parseFloat(c) } this._layoutPanels(); this._raiseEvent(0, { panels: this.panels }) }, _stopDrag: function () { if (this._dragging) { this._initOverlay() } this._dragging = false; if (this._splitBarClone) { if (this.panels[0].collapsed || this.panels[1].collapsed || this.disabled) { return true } this._resize(); this._splitBarClone.remove(); this._splitBarClone = null } }, _createSplitBarClone: function () { var b = this.splitBar.clone(); b.fadeTo(0, 0.7); b.css("z-index", 99999); if (this.orientation == "vertical") { b.css("cursor", "col-resize") } else { b.css("cursor", "row-resize") } this.host.append(b); return b }, _eventName: function (b) { if (this._isTouchDevice) { return this._eventsMap[b] } else { return b } }, _addHandlers: function () { var c = this; a.jqx.utilities.resize(this.host, function () { c._layoutPanels() }); this.addHandler(this.splitBar, "dragstart." + this.element.id, function (e) { return false }); if (this.splitBarButton) { this.addHandler(this.splitBarButton, "click." + this.element.id, function () { var e = function (f) { if (!f.collapsed) { c.collapse() } else { c.expand() } }; if (c.panels[0].collapsible) { e(c.panels[0]) } else { if (c.panels[1].collapsible) { e(c.panels[1]) } } }); this.addHandler(this.splitBarButton, this._eventName("mouseenter"), function () { c.splitBarButton.addClass(c.toThemeProperty("jqx-splitter-collapse-button-hover")); c.splitBarButton.addClass(c.toThemeProperty("jqx-fill-state-hover")) }); this.addHandler(this.splitBarButton, this._eventName("mouseleave"), function () { c.splitBarButton.removeClass(c.toThemeProperty("jqx-splitter-collapse-button-hover")); c.splitBarButton.removeClass(c.toThemeProperty("jqx-fill-state-hover")) }) } this.addHandler(a(document), this._eventName("mousemove") + "." + this.element.id, function (e) { return c._drag(e) }); this.addHandler(a(document), this._eventName("mouseup") + "." + this.element.id, function () { return c._stopDrag() }); this.addHandler(this.splitBar, this._eventName("mousedown"), function (e) { return c._startDrag(e) }); this.addHandler(this.splitBar, this._eventName("mouseenter"), function () { if (c.resizable && !c.disabled) { c.splitBar.addClass(c.toThemeProperty("jqx-splitter-splitbar-hover")); c.splitBar.addClass(c.toThemeProperty("jqx-fill-state-hover")) } }); this.addHandler(this.splitBar, this._eventName("mouseleave"), function () { if (c.resizable && !c.disabled) { c.splitBar.removeClass(c.toThemeProperty("jqx-splitter-splitbar-hover")); c.splitBar.removeClass(c.toThemeProperty("jqx-fill-state-hover")) } }); if (document.referrer != "" || window.frameElement) { if (window.top != null && window.top != window.self) { var d = null; if (window.parent && document.referrer) { d = document.referrer } if (d && d.indexOf(document.location.host) != -1) { var b = function (e) { c._stopDrag() }; if (window.top.document.addEventListener) { window.top.document.addEventListener("mouseup", b, false) } else { if (window.top.document.attachEvent) { window.top.document.attachEvent("onmouseup", b) } } } } } }, _removeHandlers: function () { this.removeHandler(a(window), "resize." + this.element.id); if (this.splitBarButton) { this.removeHandler(this.splitBarButton, "click." + this.element.id); this.removeHandler(this.splitBarButton, this._eventName("mouseenter")); this.removeHandler(this.splitBarButton, this._eventName("mouseleave")) } this.removeHandler(a(document), this._eventName("mousemove") + "." + this.element.id); this.removeHandler(a(document), this._eventName("mouseup") + "." + this.element.id); if (this.splitBar) { this.removeHandler(this.splitBar, "dragstart." + this.element.id); this.removeHandler(this.splitBar, this._eventName("mousedown")); this.removeHandler(this.splitBar, this._eventName("mouseenter")); this.removeHandler(this.splitBar, this._eventName("mouseleave")) } }, render: function () { if (this.splitBar) { this.splitBar.remove() } var c = this.host.children(); if (c.length != 2) { throw "Invalid HTML Structure! jqxSplitter requires 1 container DIV tag and 2 nested DIV tags." } if (c.length == 2) { var e = c[0].className.split(" "); var b = c[1].className.split(" "); if (e.indexOf("jqx-reset") != -1 && e.indexOf("jqx-splitter") != -1 && e.indexOf("jqx-widget") != -1) { throw "Invalid HTML Structure! Nested jqxSplitter cannot be initialized from a Splitter Panel. You need to add a new DIV tag inside the Splitter Panel and initialize the nested jqxSplitter from it!" } if (b.indexOf("jqx-reset") != -1 && b.indexOf("jqx-splitter") != -1 && b.indexOf("jqx-widget") != -1) { throw "Invalid HTML Structure! Nested jqxSplitter cannot be initialized from a Splitter Panel. You need to add a new DIV tag inside the Splitter Panel and initialize the nested jqxSplitter from it!" } } if (this.host.parent().length > 0 && this.host.parent()[0].className.indexOf("jqx-splitter") != -1) { if (this.element.className.indexOf("jqx-splitter-panel") != -1) { throw "Invalid HTML Structure! Nested jqxSplitter cannot be initialized from a Splitter Panel. You need to add a new DIV tag inside the Splitter Panel and initialize the nested jqxSplitter from it!" } this._isNested = true; if (this.width == 300) { this.width = "100%" } if (this.height == 300) { this.height = "100%" } if (this.width == "100%" && this.height == "100%") { this.host.addClass("jqx-splitter-nested"); if (this.host.parent()[0].className.indexOf("jqx-splitter-panel") != -1) { this.host.parent().addClass("jqx-splitter-panel-nested") } } } this._hasBorder = (this.host.hasClass("jqx-hideborder") == false) || this.element.style.borderTopWidth != ""; this._removeHandlers(); this._isTouchDevice = a.jqx.mobile.isTouchDevice(); this._validate(); this.panel1.css("left", "0px"); this.panel1.css("top", "0px"); this.panel2.css("left", "0px"); this.panel2.css("top", "0px"); this.splitBar = a("<div><div></div></div>"); if (!this.resizable) { this.splitBar.css("cursor", "default") } this.splitBarButton = this.splitBar.find("div:last"); this._setTheme(); this.splitBar.insertAfter(this.panel1); this._arrange(); if (this.panels[0].collapsible == false && this.panels[1].collapsible == false) { this.splitBarButton.hide() } var d = this; this._addHandlers(); if (this.initContent) { this.initContent() } if (this.disabled) { this.disable() } }, _hiddenParent: function () { return a.jqx.isHidden(this.host) }, _setTheme: function () { this.panel1.addClass(this.toThemeProperty("jqx-widget-content")); this.panel2.addClass(this.toThemeProperty("jqx-widget-content")); this.panel1.addClass(this.toThemeProperty("jqx-splitter-panel")); this.panel2.addClass(this.toThemeProperty("jqx-splitter-panel")); this.panel1.addClass(this.toThemeProperty("jqx-reset")); this.panel2.addClass(this.toThemeProperty("jqx-reset")); this.host.addClass(this.toThemeProperty("jqx-reset")); this.host.addClass(this.toThemeProperty("jqx-splitter")); this.host.addClass(this.toThemeProperty("jqx-widget")); this.host.addClass(this.toThemeProperty("jqx-widget-content")); this.splitBar.addClass(this.toThemeProperty("jqx-splitter-splitbar-" + this.orientation)); this.splitBar.addClass(this.toThemeProperty("jqx-fill-state-normal")); this.splitBarButton.addClass(this.toThemeProperty("jqx-splitter-collapse-button-" + this.orientation)); this.splitBarButton.addClass(this.toThemeProperty("jqx-fill-state-pressed")) }, _validate: function () { var b = this.host.children(); if (b.length != 2) { throw "Invalid HTML Structure! jqxSplitter requires two nested DIV tags!" } if (this.panels && !this.panels[1]) { if (!this.panels[0]) { this.panels = [{ size: "50%" }, { size: "50%" }] } else { this.panels[1] = {} } } else { if (this.panels == undefined) { this.panels = [{ size: "50%" }, { size: "50%" }] } } var b = this.host.children(); this.panel1 = this.panels[0].element = a(b[0]); this.panel2 = this.panels[1].element = a(b[1]); this.panel1[0].style.minWidth = ""; this.panel1[0].style.maxWidth = ""; this.panel2[0].style.minWidth = ""; this.panel2[0].style.maxWidth = ""; a.each(this.panels, function () { if (this.min == undefined) { this.min = 0 } if (this.size == undefined) { this.size = 0 } if (this.size < 0) { this.size = 0 } if (this.min < 0) { this.min = 0 } if (this.collapsible == undefined) { this.collapsible = true } if (this.collapsed == undefined) { this.collapsed = false } if (this.size != 0) { if (this.size.toString().indexOf("%") == -1) { if (parseInt(this.min) > parseInt(this.size)) { this.min = this.size } } else { if (this.min.toString().indexOf("%") != -1) { if (parseInt(this.min) > parseInt(this.size)) { this.min = this.size } } } } }) }, _arrange: function () { if (this.width != null) { var d = this.width; if (typeof d != "string") { d = parseInt(this.width) + "px" } this.host.css("width", d) } if (this.height != null) { var b = this.height; if (typeof b != "string") { b = parseInt(this.height) + "px" } this.host.css("height", b) } this._splitBarSize = !this._isTouchDevice ? this.splitBarSize : this.touchSplitBarSize; if (!this.showSplitBar) { this._splitBarSize = 0; this.splitBar.hide() } var c = this.orientation == "horizontal" ? "width" : "height"; this.splitBar.css(c, "100%"); this.panel1.css(c, "100%"); this.panel2.css(c, "100%"); if (this.orientation == "horizontal") { this.splitBar.height(this._splitBarSize) } else { this.splitBar.width(this._splitBarSize) } if (this.orientation === "vertical") { this.splitBarButton.width(this._splitBarSize); this.splitBarButton.height(45) } else { this.splitBarButton.height(this._splitBarSize); this.splitBarButton.width(45) } this.splitBarButton.css("position", "relative"); if (this.orientation === "vertical") { this.splitBarButton.css("top", "50%"); this.splitBarButton.css("left", "0"); this.splitBarButton.css("margin-top", "-23px"); this.splitBarButton.css("margin-left", "-0px") } else { this.splitBarButton.css("left", "50%"); this.splitBarButton.css("top", "0"); this.splitBarButton.css("margin-left", "-23px"); this.splitBarButton.css("margin-top", "-0px") } this._layoutPanels() }, collapse: function () { if (this.disabled) { return } var b = -1; this.panels[0].collapsed = this.panels[1].collapsed = false; this.panels[0].element[0].style.visibility = "inherit"; this.panels[1].element[0].style.visibility = "inherit"; if (this.panels[0].collapsible) { b = 0 } else { if (this.panels[1].collapsible) { b = 1 } } if (b != -1) { this.panels[b].collapsed = true; this.panels[b].element[0].style.visibility = "hidden"; this.splitBar.addClass(this.toThemeProperty("jqx-splitter-splitbar-collapsed")); this._layoutPanels(); this._raiseEvent(2, { index: b, panels: this.panels }); this._raiseEvent(0, { panels: this.panels }) } }, expand: function () { if (this.disabled) { return } var b = -1; this.panels[0].collapsed = this.panels[1].collapsed = false; this.panels[0].element[0].style.visibility = "inherit"; this.panels[1].element[0].style.visibility = "inherit"; if (this.panels[0].collapsible) { b = 0 } else { if (this.panels[1].collapsible) { b = 1 } } if (b != -1) { this.panels[b].collapsed = false; this.panels[b].element[0].style.visibility = "inherit"; this.splitBar.removeClass(this.toThemeProperty("jqx-splitter-splitbar-collapsed")); this._layoutPanels(); this._raiseEvent(1, { index: b, panels: this.panels }); this._raiseEvent(0, { panels: this.panels }) } }, disable: function () { this.disabled = true; this.host.addClass(this.toThemeProperty("jqx-fill-state-disabled")); this.splitBar.addClass(this.toThemeProperty("jqx-splitter-splitbar-collapsed")); this.splitBarButton.addClass(this.toThemeProperty("jqx-splitter-splitbar-collapsed")) }, enable: function () { this.disabled = false; this.host.removeClass(this.toThemeProperty("jqx-fill-state-disabled")); this.splitBar.removeClass(this.toThemeProperty("jqx-splitter-splitbar-collapsed")); this.splitBarButton.removeClass(this.toThemeProperty("jqx-splitter-splitbar-collapsed")) }, refresh: function (b) { if (b != true) { this._arrange() } }, propertyChangedHandler: function (b, c, e, d) { if (c === "panels" || c === "orientation" || c === "showSplitBar") { b.render(); return } if (c === "touchMode") { b._isTouchDevice = d } if (c === "disabled") { if (d) { b.disable() } else { b.enable() } } else { if (c === "theme") { a.jqx.utilities.setTheme(e, d, b.host) } else { b.refresh() } } }, _layoutPanels: function () { var j = this; var q = this.orientation == "horizontal" ? "height" : "width"; var t = this.orientation == "horizontal" ? "top" : "left"; var l, r, e, u; var m = parseInt(this._splitBarSize) + 2; if (!this.showSplitBar) { m = 0 } var i = this.host[q](); var k = i / 100; var s = 1 / k; var p = s * m; var h = this.panel1; var g = this.panel2; var n = this.panels[0].size; if (this.panels[0].collapsed) { e = true } if (this.panels[1].collapsed) { u = true } l = this.panels[0].min; r = this.panels[1].min; if (r.toString().indexOf("%") != -1) { r = parseFloat(r) * k } if (l.toString().indexOf("%") != -1) { l = parseFloat(l) * k } if (this._isNested && this._isTouchDevice) { if (this.orientation == "horizontal") { h.width(this.host.width()); g.width(this.host.width()) } else { h.height(this.host.height()); g.height(this.host.height()) } } var f = function () { var w = j.panel1[q](); if (j.splitBar[0].style[t] != w + "px") { var x = w; if (j.orientation == "vertical") { j.splitBar[0].style.borderLeftColor = ""; j.splitBar[0].style.borderRightColor = ""; j.splitBarButton.width(j._splitBarSize); j.splitBarButton.css("left", "0px") } else { j.splitBar[0].style.borderTopColor = ""; j.splitBar[0].style.borderBottomColor = ""; j.splitBarButton.height(j._splitBarSize); j.splitBarButton.css("top", "0px") } if (j._hasBorder) { if (i - m == w) { if (j.orientation == "vertical") { j.splitBar[0].style.borderRightColor = "transparent"; j.splitBarButton.width(j._splitBarSize + 1) } else { j.splitBar[0].style.borderBottomColor = "transparent"; j.splitBarButton.height(j._splitBarSize + 1) } } else { if (w == 0) { if (j.orientation == "vertical") { j.splitBar[0].style.borderLeftColor = "transparent"; j.splitBarButton.width(j._splitBarSize + 1); j.splitBarButton.css("left", "-1px") } else { j.splitBar[0].style.borderTopColor = "transparent"; j.splitBarButton.height(j._splitBarSize + 1); j.splitBarButton.css("top", "-1px") } } } } j.splitBar.css(t, x + "px") } if (j.panel2[0].style[t] != w + m + "px") { j.panel2.css(t, w + m + "px") } }; if (e) { var b = Math.max(r, i - m); h[q](0); g[q](b) } else { if (u) { var b = Math.max(l, i - m); g[q](0); h[q](b) } else { if (n.toString().indexOf("%") != -1) { var c = 100 - parseFloat(n); h.css(q, parseFloat(n) + "%"); c -= p; g.css(q, c + "%"); var d = g[q](); if (d < r) { var b = d - r; var o = b * s; n = parseFloat(n) + parseFloat(o); var c = 100 - parseFloat(n); h.css(q, parseFloat(n) + "%"); c -= p; g.css(q, c + "%") } var v = h[q](); if (v < l) { var o = l * s; h.css(q, parseFloat(o) + "%") } } else { var d = i - n - m; if (h[0].style[q] != n + "px") { h[q](n) } if (g[0].style[q] != d + "px") { g[q](d) } if (d < r) { n += d - r; g[q](r); h[q](n) } if (n < l) { h[q](l) } } } } f(); this._raiseEvent(4, { panels: this.panels }) }, destroy: function () { this._removeHandlers(); this.host.remove() }, _raiseEvent: function (d, f) { var e = new a.Event(this._events[d]); e.owner = this; e.args = f; var c = this.orientation == "vertical" ? "width" : "height"; var b = new Array(); b[0] = {}; b[1] = {}; b[0].size = this.panel1[c](); b[1].size = this.panel2[c](); b[0].min = this.panels[0].min; b[1].min = this.panels[1].min; b[0].collapsible = this.panels[0].collapsible; b[1].collapsible = this.panels[1].collapsible; b[0].collapsed = this.panels[0].collapsed; b[1].collapsed = this.panels[1].collapsed; e.args.panels = b; return this.host.trigger(e) } }) }(jQuery));
    </script>
     <!--<script type="text/javascript" src="http://61.147.119.252:8088/jqwidgets/jqxnumberinput.js"></script>-->
    <script>
        /*
jQWidgets v3.0.3 (2013-Oct-01)
Copyright (c) 2011-2013 jQWidgets.
License: http://jqwidgets.com/license/
*/

        (function (a) { a.jqx.jqxWidget("jqxNumberInput", "", {}); a.extend(a.jqx._jqxNumberInput.prototype, { defineInstance: function () { this.value = null; this.decimal = 0; this.min = -99999999; this.max = 99999999; this.width = null; this.validationMessage = "Invalid value"; this.height = 50; this.textAlign = "right"; this.readOnly = false; this.promptChar = "_"; this.decimalDigits = 2; this.decimalSeparator = "."; this.groupSeparator = ","; this.groupSize = 3; this.symbol = ""; this.symbolPosition = "left"; this.digits = 8; this.negative = false; this.negativeSymbol = "-"; this.disabled = false; this.inputMode = "advanced"; this.spinButtons = false; this.spinButtonsWidth = 18; this.spinButtonsStep = 1; this.autoValidate = true; this.spinMode = "advanced"; this.touchMode = "auto"; this.rtl = false; this.events = ["valuechanged", "textchanged", "mousedown", "mouseup", "keydown", "keyup", "keypress", "change"]; this.aria = { "aria-valuenow": { name: "decimal", type: "number" }, "aria-valuemin": { name: "min", type: "number" }, "aria-valuemax": { name: "max", type: "number" }, "aria-disabled": { name: "disabled", type: "boolean" } }; this.invalidArgumentExceptions = ["invalid argument exception"] }, createInstance: function (b) { var c = this.host.attr("value"); if (c != undefined) { this.decimal = c } if (this.value != null) { this.decimal = this.value } this.render() }, _doTouchHandling: function () { var e = this; var g = e.savedValue; if (!e.parsing) { e.parsing = true } if (e.parsing) { if (e.numberInput.val() && e.numberInput.val().indexOf("-") == 0) { e.setvalue("negative", true) } else { e.setvalue("negative", false) } var f = e.numberInput.val(); for (var c = 0; c < f.length - 1; c++) { var d = f.substring(c, c + 1); if (isNaN(parseFloat(d)) && d != e.symbol && d != "%" && d != "$" && d != "." && d != "," && d != "-") { e.numberInput[0].value = g; e.parsing = false; return } } e.ValueString = e.GetValueString(e.numberInput.val(), e.decimalSeparator, e.decimalSeparator != ""); e.ValueString = new Number(e.ValueString).toFixed(e.decimalDigits); e._parseDecimalInSimpleMode(); e.decimal = e.ValueString; var b = e.getvalue("negative"); if (b) { e.decimal = "-" + e.ValueString } e.parsing = false } }, render: function () { this.host.attr({ role: "spinbutton" }); this.host.attr("data-role", "input"); a.jqx.aria(this); a.jqx.aria(this, "aria-multiline", false); var f = this; a.jqx.utilities.resize(this.host, function () { f._render() }); if (this.officeMode || (this.theme && this.theme.indexOf("office") != -1)) { if (this.spinButtonsWidth == 18) { this.spinButtonsWidth = 15 } } if (a.jqx.mobile.isTouchDevice() || this.touchMode === true) { this.inputMode = "textbox"; this.spinMode = "simple" } if (this.decimalSeparator == "") { this.decimalSeparator = " " } this.host.addClass(this.toThemeProperty("jqx-input")); this.host.addClass(this.toThemeProperty("jqx-rc-all")); this.host.addClass(this.toThemeProperty("jqx-widget")); this.host.addClass(this.toThemeProperty("jqx-widget-content")); this.host.addClass(this.toThemeProperty("jqx-numberinput")); if (this.spinButtons) { this._spinButtons() } else { this.numberInput = a("<input autocomplete='off' type='textarea'/>").appendTo(this.host); this.numberInput.addClass(this.toThemeProperty("jqx-input-content")); this.numberInput.addClass(this.toThemeProperty("jqx-widget-content")) } var d = this.host.attr("name"); if (!d) { d = this.element.id } this.numberInput.attr("name", d); if (a.jqx.mobile.isTouchDevice() || this.touchMode === true || this.inputMode == "textbox") { var f = this; f.savedValue = ""; this.addHandler(this.numberInput, "focus", function () { f.savedValue = f.numberInput[0].value }); this.addHandler(this.numberInput, "change", function () { f._doTouchHandling() }) } var h = a.data(this.host[0], "jqxNumberInput"); h.jqxNumberInput = this; var f = this; this.removeHandler(this.host, "loadContent"); this.addHandler(this.host, "loadContent", function (n) { f._render() }); if (this.host.parents("form").length > 0) { this.removeHandler(this.host.parents("form"), "loadContent"); this.addHandler(this.host.parents("form"), "reset", function () { setTimeout(function () { f.setDecimal(0) }, 10) }) } this.propertyChangeMap.disabled = function (n, q, o, r) { if (r) { n.numberInput.addClass(c.toThemeProperty("jqx-input-disabled")); n.numberInput.attr("disabled", true) } else { n.host.removeClass(c.toThemeProperty("jqx-input-disabled")); n.numberInput.attr("disabled", false) } if (n.spinButtons && n.host.jqxRepeatButton) { n.upbutton.jqxRepeatButton({ disabled: r }); n.downbutton.jqxRepeatButton({ disabled: r }) } }; if (this.disabled) { this.numberInput.addClass(this.toThemeProperty("jqx-input-disabled")); this.numberInput.attr("disabled", true); this.host.addClass(this.toThemeProperty("jqx-fill-state-disabled")) } this.selectedText = ""; this.decimalSeparatorPosition = -1; var l = this.element.id; var e = this.element; var c = this; this.oldValue = this._value(); this.items = new Array(); var g = this.value; var b = this.decimal; this._initializeLiterals(); this._render(); this.setDecimal(b); var f = this; setTimeout(function () { f._render(false) }, 100); this._addHandlers() }, refresh: function (b) { if (!b) { this._render() } }, wheel: function (d, c) { var e = 0; if (!d) { d = window.event } if (d.originalEvent && d.originalEvent.wheelDelta) { d.wheelDelta = d.originalEvent.wheelDelta } if (d.wheelDelta) { e = d.wheelDelta / 120 } else { if (d.detail) { e = -d.detail / 3 } } if (e) { var b = c._handleDelta(e); if (d.preventDefault) { d.preventDefault() } if (d.originalEvent != null) { d.originalEvent.mouseHandled = true } if (d.stopPropagation != undefined) { d.stopPropagation() } if (b) { b = false; d.returnValue = b; return b } else { return false } } if (d.preventDefault) { d.preventDefault() } d.returnValue = false }, _handleDelta: function (b) { if (b < 0) { this.spinDown() } else { this.spinUp() } return true }, _addHandlers: function () { var b = this; this.addHandler(this.numberInput, "mousedown", function (d) { return b._raiseEvent(2, d) }); this._mousewheelfunc = this._mousewheelfunc || function (d) { if (!b.editcell) { b.wheel(d, b); return false } }; this.removeHandler(this.host, "mousewheel", this._mousewheelfunc); this.addHandler(this.host, "mousewheel", this._mousewheelfunc); var c = ""; this.addHandler(this.numberInput, "focus", function (d) { a.data(b.numberInput, "selectionstart", b._selection().start); b.host.addClass(b.toThemeProperty("jqx-fill-state-focus")); if (b.spincontainer) { b.spincontainer.addClass(b.toThemeProperty("jqx-numberinput-focus")) } c = b.numberInput.val() }); this.addHandler(this.numberInput, "blur", function (e) { if (b.inputMode == "simple") { b._exitSimpleInputMode(e, b, false, c) } if (b.autoValidate) { var f = parseFloat(b.decimal); var d = b.getvalue("negative"); if (d && b.decimal > 0) { f = -parseFloat(b.decimal) } if (f > b.max) { b._disableSetSelection = true; b.setDecimal(b.max); b._disableSetSelection = false } if (f < b.min) { b._disableSetSelection = true; b.setDecimal(b.min); b._disableSetSelection = false } } b.host.removeClass(b.toThemeProperty("jqx-fill-state-focus")); if (b.spincontainer) { b.spincontainer.removeClass(b.toThemeProperty("jqx-numberinput-focus")) } if (b.numberInput.val() != c) { b._raiseEvent(7, e); a.jqx.aria(b, "aria-valuenow", b.decimal); b.element.value = b.decimal } return true }); this.addHandler(this.numberInput, "mouseup", function (d) { return b._raiseEvent(3, d) }); this.addHandler(this.numberInput, "keydown", function (d) { return b._raiseEvent(4, d) }); this.addHandler(this.numberInput, "keyup", function (d) { return b._raiseEvent(5, d) }); this.addHandler(this.numberInput, "keypress", function (d) { return b._raiseEvent(6, d) }) }, focus: function () { try { this.numberInput.focus() } catch (b) { } }, _removeHandlers: function () { var b = this; this.removeHandler(this.numberInput, "mousedown"); var c = a.jqx.mobile.isOperaMiniMobileBrowser(); if (c) { this.removeHandler(a(document), "click." + this.element.id, b._exitSimpleInputMode, b) } this.removeHandler(this.numberInput, "focus"); this.removeHandler(this.numberInput, "blur"); this.removeHandler(this.numberInput, "mouseup"); this.removeHandler(this.numberInput, "keydown"); this.removeHandler(this.numberInput, "keyup"); this.removeHandler(this.numberInput, "keypress") }, _spinButtons: function () { if (this.host.jqxRepeatButton) { if (!this.numberInput) { this.numberInput = a("<input autocomplete='off' style='position: relative; float: left;' type='textarea'/>"); this.numberInput.appendTo(this.host); this.numberInput.addClass(this.toThemeProperty("jqx-input-content")); this.numberInput.addClass(this.toThemeProperty("jqx-widget-content")) } else { this.numberInput.css("float", "left") } if (this.spincontainer) { if (this.upbutton) { this.upbutton.jqxRepeatButton("destroy") } if (this.downbutton) { this.downbutton.jqxRepeatButton("destroy") } this.spincontainer.remove() } this.spincontainer = a('<div style="float: right; height: 100%; overflow: hidden; position: relative;"></div>'); if (this.rtl) { this.spincontainer.css("float", "right"); this.numberInput.css("float", "right") } this.host.append(this.spincontainer); this.upbutton = a('<div style="overflow: hidden; padding: 0px; margin-left: -1px; position: relative;"><div></div></div>'); this.spincontainer.append(this.upbutton); this.upbutton.jqxRepeatButton({ overrideTheme: true, disabled: this.disabled, roundedCorners: "top-right" }); this.downbutton = a('<div style="overflow: hidden; padding: 0px; margin-left: -1px; position: relative;"><div></div></div>'); this.spincontainer.append(this.downbutton); this.downbutton.jqxRepeatButton({ overrideTheme: true, disabled: this.disabled, roundedCorners: "bottom-right" }); var d = this; this.downbutton.addClass(this.toThemeProperty("jqx-fill-state-normal")); this.upbutton.addClass(this.toThemeProperty("jqx-fill-state-normal")); this.upbutton.addClass(this.toThemeProperty("jqx-rc-tr")); this.downbutton.addClass(this.toThemeProperty("jqx-rc-br")); this.addHandler(this.downbutton, "mouseup", function (e) { if (!d.disabled) { d.downbutton.removeClass(d.toThemeProperty("jqx-fill-state-pressed")); d._downArrow.removeClass(d.toThemeProperty("jqx-icon-arrow-down-selected")) } }); this.addHandler(this.upbutton, "mouseup", function (e) { if (!d.disabled) { d.upbutton.removeClass(d.toThemeProperty("jqx-fill-state-pressed")); d._upArrow.removeClass(d.toThemeProperty("jqx-icon-arrow-up-selected")) } }); this.removeHandler(a(document), "mouseup." + this.element.id); this.addHandler(a(document), "mouseup." + this.element.id, function (e) { d.upbutton.removeClass(d.toThemeProperty("jqx-fill-state-pressed")); d._upArrow.removeClass(d.toThemeProperty("jqx-icon-arrow-up-selected")); d.downbutton.removeClass(d.toThemeProperty("jqx-fill-state-pressed")); d._downArrow.removeClass(d.toThemeProperty("jqx-icon-arrow-down-selected")) }); this.addHandler(this.downbutton, "mousedown", function (e) { if (!d.disabled) { if (a.jqx.browser.msie && a.jqx.browser.version < 9) { d._inputSelection = d._selection() } d.downbutton.addClass(d.toThemeProperty("jqx-fill-state-pressed")); d._downArrow.addClass(d.toThemeProperty("jqx-icon-arrow-down-selected")); e.preventDefault(); e.stopPropagation(); return false } }); this.addHandler(this.upbutton, "mousedown", function (e) { if (!d.disabled) { if (a.jqx.browser.msie && a.jqx.browser.version < 9) { d._inputSelection = d._selection() } d.upbutton.addClass(d.toThemeProperty("jqx-fill-state-pressed")); d._upArrow.addClass(d.toThemeProperty("jqx-icon-arrow-up-selected")); e.preventDefault(); e.stopPropagation(); return false } }); this.addHandler(this.upbutton, "mouseenter", function (e) { d.upbutton.addClass(d.toThemeProperty("jqx-fill-state-hover")); d._upArrow.addClass(d.toThemeProperty("jqx-icon-arrow-up-hover")) }); this.addHandler(this.upbutton, "mouseleave", function (e) { d.upbutton.removeClass(d.toThemeProperty("jqx-fill-state-hover")); d._upArrow.removeClass(d.toThemeProperty("jqx-icon-arrow-up-hover")) }); this.addHandler(this.downbutton, "mouseenter", function (e) { d.downbutton.addClass(d.toThemeProperty("jqx-fill-state-hover")); d._downArrow.addClass(d.toThemeProperty("jqx-icon-arrow-down-hover")) }); this.addHandler(this.downbutton, "mouseleave", function (e) { d.downbutton.removeClass(d.toThemeProperty("jqx-fill-state-hover")); d._downArrow.removeClass(d.toThemeProperty("jqx-icon-arrow-down-hover")) }); this.upbutton.css("border-width", "0px"); this.downbutton.css("border-width", "0px"); if (this.disabled) { this.upbutton[0].disabled = true; this.downbutton[0].disabled = true } else { this.upbutton[0].disabled = false; this.downbutton[0].disabled = false } this.spincontainer.addClass(this.toThemeProperty("jqx-input")); this.spincontainer.addClass(this.toThemeProperty("jqx-rc-r")); this.spincontainer.css("border-width", "0px"); if (!this.rtl) { this.spincontainer.css("border-left-width", "1px") } else { this.spincontainer.css("border-right-width", "1px") } this._upArrow = this.upbutton.find("div"); this._downArrow = this.downbutton.find("div"); this._upArrow.addClass(this.toThemeProperty("jqx-icon-arrow-up")); this._downArrow.addClass(this.toThemeProperty("jqx-icon-arrow-down")); this._upArrow.addClass(this.toThemeProperty("jqx-input-icon")); this._downArrow.addClass(this.toThemeProperty("jqx-input-icon")); var d = this; this._upArrow.hover(function () { if (!d.disabled) { d._upArrow.addClass(d.toThemeProperty("jqx-icon-arrow-up-hover")) } }, function () { d._upArrow.removeClass(d.toThemeProperty("jqx-icon-arrow-up-hover")) }); this._downArrow.hover(function () { if (!d.disabled) { d._downArrow.addClass(d.toThemeProperty("jqx-icon-arrow-down-hover")) } }, function () { d._downArrow.removeClass(d.toThemeProperty("jqx-icon-arrow-down-hover")) }); var b = a.jqx.mobile.isTouchDevice(); var c = "click"; if (b) { c = a.jqx.mobile.getTouchEventName("touchstart") } this.addHandler(this.downbutton, c, function (e) { if (!b) { if (d._selection().start == 0) { d._setSelectionStart(d.numberInput.val().length) } if (a.jqx.browser.msie && a.jqx.browser.version < 9) { d._setSelectionStart(d._inputSelection.start) } } else { e.preventDefault(); e.stopPropagation() } d.spinDown(); return false }); this.addHandler(this.upbutton, c, function (e) { if (!b) { if (d._selection().start == 0) { d._setSelectionStart(d.numberInput.val().length) } if (a.jqx.browser.msie && a.jqx.browser.version < 9) { d._setSelectionStart(d._inputSelection.start) } } else { e.preventDefault(); e.stopPropagation() } d.spinUp(); return false }) } else { throw new Error("jqxNumberInput: Missing reference to jqxbuttons.js.") } }, spinDown: function () { var o = this; if (o.spinMode == "none") { return } var b = this.getvalue("negative"); var t = b ? -1 : 0; if (a.jqx.mobile.isTouchDevice() || this.inputMode == "textbox") { o._doTouchHandling() } if (!o.disabled) { var r = this._selection(); var q = this.decimal; var l = this.getDecimal(); if (l < this.min) { l = this.min; this.setDecimal(this.min); this._setSelectionStart(r.start); this.spinDown(); return } else { if (l > this.max) { l = this.max; this.setDecimal(this.max); this._setSelectionStart(r.start); this.spinDown(); return } } if (o.spinButtonsStep < 0) { o.spinButtonsStep = 1 } var d = parseInt(o.decimal) + o.spinButtonsStep; d = d.toString().length; var f = t + d <= o.digits; if (o.spinMode != "advanced") { if (l - o.spinButtonsStep >= o.min && f) { var v = 1; for (g = 0; g < o.decimalDigits; g++) { v = v * 10 } var e = (v * l) - (v * o.spinButtonsStep); e = e / v; e = this._parseDecimalValueToEditorValue(e); o.setDecimal(e) } } else { var s = this._getspindecimal(); var n = this._getSeparatorPosition(); var l = parseFloat(s.decimal); if (o.spinButtonsStep < 0) { o.spinButtonsStep = 1 } var d = parseInt(l) + o.spinButtonsStep; d = d.toString().length; var f = t + d <= o.digits; var v = 1; var c = s.decimal.indexOf("."); if (c != -1) { var h = s.decimal.length - c - 1; var v = 1; for (var g = 0; g < h; g++) { v = v * 10 } l -= new Number(o.spinButtonsStep / v); l = l.toFixed(h); var c = l.toString().indexOf("."); if (c == -1) { l = l.toString() + "." } var u = l.toString() + s.afterdecimal; u = new Number(u); u = u.toFixed(o.decimalDigits); if (u >= o.min) { u = this._parseDecimalValueToEditorValue(u); o.setDecimal(u) } } else { if (l - o.spinButtonsStep >= o.min && f) { var e = (v * l) - (v * o.spinButtonsStep); e = e / v; var u = e.toString() + s.afterdecimal; if (u >= o.min) { u = this._parseDecimalValueToEditorValue(u); o.setDecimal(u) } } } } if (u == undefined || this.inputMode != "simple") { this._setSelectionStart(r.start); o.savedValue = o.numberInput[0].value; return } u = this.decimal.toString(); var b = this.getvalue("negative"); if (t == 0 && b) { this._setSelectionStart(r.start + 1) } else { if ((u != undefined && (q == undefined || q.toString().length == u.length))) { this._setSelectionStart(r.start) } else { if (b) { this._setSelectionStart(r.start + 1) } else { this._setSelectionStart(r.start - 1) } } } } }, _getspindecimal: function () { var q = this._selection(); var r = ""; var n = this._getSeparatorPosition(); var t = this._getVisibleItems(); var e = this._getHiddenPrefixCount(); var s = this.numberInput.val(); if (this.numberInput.val().length == q.start && q.length == 0) { this._setSelection(q.start, q.start + 1); q = this._selection() } var l = this.inputMode != "advanced"; for (var c = 0; c < q.start; c++) { if (l) { var o = s.substring(c, c + 1); var h = (!isNaN(parseInt(o))); if (h) { r += o } if (o == this.decimalSeparator) { r += o } continue } if (t[c].canEdit && t[c].character != this.promptChar) { r += t[c].character } else { if (!t[c].canEdit && this.decimalSeparatorPosition != -1 && t[c] == t[this.decimalSeparatorPosition - e]) { if (r.length == 0) { r = "0" } r += t[c].character } } } var g = ""; for (var c = q.start; c < t.length; c++) { if (l) { var o = s.substring(c, c + 1); var h = (!isNaN(parseInt(o))); if (h) { g += o } if (o == this.decimalSeparator) { g += o } continue } if (t[c].canEdit && t[c].character != this.promptChar) { g += t[c].character } else { if (!t[c].canEdit && this.decimalSeparatorPosition != -1 && t[c] == t[this.decimalSeparatorPosition - e]) { g += t[c].character } } } var b = this.getvalue("negative"); var f = b ? "-" + this._parseDecimalValue(r).toString() : this._parseDecimalValue(r).toString(); return { decimal: f, afterdecimal: this._parseDecimalValue(g) } }, _parseDecimalValue: function (c) { if (this.decimalSeparator != ".") { var d = c.toString().indexOf(this.decimalSeparator); if (d >= 0) { var b = c.toString().substring(0, d) + "." + c.toString().substring(d + 1); return b } } return c }, _parseDecimalValueToEditorValue: function (c) { if (this.decimalSeparator != ".") { var d = c.toString().indexOf("."); if (d >= 0) { var b = c.toString().substring(0, d) + this.decimalSeparator + c.toString().substring(d + 1); return b } } return c }, spinUp: function () { var q = this; if (q.spinMode == "none") { return } if (a.jqx.mobile.isTouchDevice() || this.inputMode == "textbox") { q._doTouchHandling() } var b = this.getvalue("negative"); var u = b ? -1 : 0; if (!q.disabled) { var s = this._selection(); var r = q.decimal; var n = q.getDecimal(); if (n < this.min) { n = this.min; this.setDecimal(this.min); this._setSelectionStart(s.start); this.spinUp(); return } else { if (n > this.max) { n = this.max; this.setDecimal(this.max); this._setSelectionStart(s.start); this.spinUp(); return } } if (q.spinButtonsStep < 0) { q.spinButtonsStep = 1 } var d = parseInt(q.decimal) + q.spinButtonsStep; d = d.toString().length; var g = u + d <= q.digits; if (q.spinMode != "advanced") { if (n + q.spinButtonsStep <= q.max && g) { var w = 1; for (var l = 0; l < q.decimalDigits; l++) { w = w * 10 } var f = (w * n) + (w * q.spinButtonsStep); f = f / w; f = this._parseDecimalValueToEditorValue(f); q.setDecimal(f) } } else { var t = this._getspindecimal(); var o = this._getSeparatorPosition(); var n = parseFloat(t.decimal); if (q.spinButtonsStep < 0) { q.spinButtonsStep = 1 } var d = parseInt(n) + q.spinButtonsStep; d = d.toString().length; var g = u + d <= q.digits; var w = 1; var c = t.decimal.indexOf("."); if (c != -1) { var h = t.decimal.length - c - 1; var w = 1; for (var l = 0; l < h; l++) { w = w * 10 } n += new Number(q.spinButtonsStep / w); n = n.toFixed(h); var c = n.toString().indexOf("."); if (c == -1) { n = n.toString() + "." } var v = n.toString() + t.afterdecimal; v = new Number(v); v = v.toFixed(q.decimalDigits); var e = new Number(v).toFixed(q.decimalDigits); if (e <= q.max) { v = this._parseDecimalValueToEditorValue(v); q.setDecimal(v) } else { v = undefined } } else { if (n + q.spinButtonsStep <= q.max && g) { var f = (w * n) + (w * q.spinButtonsStep); f = f / w; var v = f.toString() + t.afterdecimal; var e = new Number(v).toFixed(q.decimalDigits); if (e <= q.max) { v = this._parseDecimalValueToEditorValue(v); if (b && v.indexOf("-") == -1) { if (t.decimal != "-0") { v = "-" + v } } q.setDecimal(v) } else { v = undefined } } } } if (v == undefined || this.inputMode != "simple") { this._setSelectionStart(s.start); q.savedValue = q.numberInput[0].value; return } v = this.decimal.toString(); var b = this.getvalue("negative"); if (u == -1 && !b) { this._setSelectionStart(-1 + s.start) } else { if ((v != undefined && (r == undefined || r.toString().length == v.length))) { this._setSelectionStart(s.start) } else { if (b) { this._setSelectionStart(-1 + s.start) } else { this._setSelectionStart(1 + s.start) } } } } }, _exitSimpleInputMode: function (b, o, h, d) { if (o == undefined) { o = b.data } if (o == null) { return } if (h == undefined) { if (b.target != null && o.element != null) { if ((b.target.id != undefined && b.target.id.toString().length > 0 && o.host.find("#" + b.target.id).length > 0) || b.target == o.element) { return } } var f = o.host.offset(); var e = f.left; var g = f.top; var c = o.host.width(); var n = o.host.height(); var q = a(b.target).offset(); if (q.left >= e && q.left <= e + c) { if (q.top >= g && q.top <= g + n) { return } } } if (a.jqx.mobile.isOperaMiniBrowser()) { o.numberInput.attr("readonly", true) } if (o.disabled || o.readOnly) { return } var l = a.data(o.numberInput, "simpleInputMode"); if (l == null) { return } a.data(o.numberInput, "simpleInputMode", null); this._parseDecimalInSimpleMode(); return false }, _getDecimalInSimpleMode: function () { var d = this.decimal; if (this.decimalSeparator != ".") { var b = d.toString().indexOf(this.decimalSeparator); if (b > 0) { var c = d.toString().substring(0, b); var d = c + "." + d.toString().substring(b + 1) } } return d }, _parseDecimalInSimpleMode: function (d) { var o = this; var b = o.getvalue("negative"); var e = this.ValueString; if (e == undefined) { e = this.GetValueString(this.numberInput.val(), this.decimalSeparator, this.decimalSeparator != "") } if (this.decimalSeparator != ".") { var g = e.toString().indexOf("."); if (g > 0) { var f = e.toString().substring(0, g); var c = f + this.decimalSeparator + e.toString().substring(g + 1); e = c } } var h = b ? "-" : ""; if (this.symbolPosition == "left") { h += this.symbol } var l = this.digits % this.groupSize; if (l == 0) { l = this.groupSize } var n = e.toString(); h += n; if (this.symbolPosition == "right") { h += this.symbol } if (d != false) { o.numberInput.val(h) } }, _enterSimpleInputMode: function (f, d) { if (d == undefined) { d = f.data } var e = this._selection(); if (d == null) { return } var c = d.getvalue("negative"); var b = d.decimal; if (c) { if (b > 0) { b = -b } } d.numberInput.val(b); a.data(d.numberInput, "simpleInputMode", true); if (a.jqx.mobile.isOperaMiniBrowser()) { d.numberInput.attr("readonly", false) } this._parseDecimalInSimpleMode(); this._setSelectionStart(e.start) }, setvalue: function (b, c) { if (this[b] != undefined) { if (b == "decimal") { this._setDecimal(c) } else { this[b] = c; this.propertyChangedHandler(this, b, c, c) } } }, getvalue: function (b) { if (b == "decimal") { if (this.negative != undefined && this.negative == true) { return -Math.abs(this[b]) } } if (b in this) { return this[b] } return null }, _getString: function () { var c = ""; for (var b = 0; b < this.items.length; b++) { var d = this.items[b].character; c += d } return c }, _literal: function (d, b, c, e) { return { character: d, regex: b, canEdit: c, isSeparator: e } }, _initializeLiterals: function () { if (this.inputMode == "textbox") { return } var h = 0; var e = this.negativeSymbol.length; for (var d = 0; d < e; d++) { var g = this.negativeSymbol.substring(d, d + 1); var n = ""; var b = false; var o = null; if (this.negative) { o = this._literal(g, n, b, false) } else { o = this._literal("", n, b, false) } this.items[h] = o; h++ } var c = this.symbol.length; if (this.symbolPosition == "left") { for (d = 0; d < c; d++) { var g = this.symbol.substring(d, d + 1); var n = ""; var b = false; var o = this._literal(g, n, b, false); this.items[h] = o; h++ } } var f = this.digits % this.groupSize; if (f == 0) { f = this.groupSize } for (var d = 0; d < this.digits; d++) { var g = this.promptChar; var n = "\\d"; var b = true; var o = this._literal(g, n, b, false); this.items[h] = o; h++; if (d < this.digits - 1 && this.groupSeparator != undefined && this.groupSeparator.length > 0) { f--; if (f == 0) { f = this.groupSize; var l = this._literal(this.groupSeparator, "", false, false); this.items[h] = l; h++ } } else { if (d == this.digits - 1) { o.character = 0 } } } this.decimalSeparatorPosition = -1; if (this.decimalDigits != undefined && this.decimalDigits > 0) { var g = this.decimalSeparator; if (g.length == 0) { g = "." } var o = this._literal(g, "", false, true); this.items[h] = o; this.decimalSeparatorPosition = h; h++; for (var d = 0; d < this.decimalDigits; d++) { var r = 0; var n = "\\d"; var q = this._literal(r, n, true, false); this.items[h] = q; h++ } } if (this.symbolPosition == "right") { for (var d = 0; d < c; d++) { var g = this.symbol.substring(d, d + 1); var n = ""; var b = false; var o = this._literal(g, n, b); this.items[h] = o; h++ } } }, _match: function (c, b) { var d = new RegExp(b, "i"); return d.test(c) }, _raiseEvent: function (f, w) { var v = this.events[f]; var n = {}; n.owner = this; if (this.host.css("display") == "none") { return true } var u = w.charCode ? w.charCode : w.keyCode ? w.keyCode : 0; var x = true; var t = this.readOnly; var o = this; if (f == 3 || f == 2) { if (!this.disabled) { if (this.inputMode != "simple" && this.inputMode != "textbox") { this._handleMouse(w) } else { return true } } } if (f == 0) { var d = this.getvalue("decimal"); if ((this.max < d) || (this.min > d)) { this.host.addClass(this.toThemeProperty("jqx-input-invalid")) } else { this.host.removeClass(this.toThemeProperty("jqx-input-invalid")); this.host.addClass(this.toThemeProperty("jqx-input")); this.host.addClass(this.toThemeProperty("jqx-rc-all")) } } var c = new jQuery.Event(v); c.owner = this; n.value = this.getvalue("decimal"); n.text = this.numberInput.val(); c.args = n; x = this.host.trigger(c); var o = this; if (this.inputMode == "textbox") { return x } if (this.inputMode != "simple") { if (f == 4) { if (t || this.disabled) { return false } x = o._handleKeyDown(w, u) } else { if (f == 5) { if (t || this.disabled) { x = false } } else { if (f == 6) { if (t || this.disabled) { return false } x = o._handleKeyPress(w, u) } } } } else { if (f == 4 || f == 5 || f == 6) { if (a.jqx.mobile.isTouchDevice() || this.touchMode === true) { return true } if (t || this.disabled) { return false } var g = String.fromCharCode(u); var q = parseInt(g); var h = true; if (!w.ctrlKey && !w.shiftKey) { if (u >= 65 && u <= 90) { h = false } } if (f == 6 && a.jqx.browser.opera != undefined) { if (u == 8) { return false } } if (h) { if (f == 4) { h = o._handleSimpleKeyDown(w, u) } if (u == 189 || u == 45 || u == 109 || u == 173) { var s = o._selection(); if (f == 4) { var b = o.getvalue("negative"); if (b == false) { o.setvalue("negative", true) } else { o.setvalue("negative", false) } o._parseDecimalInSimpleMode(); o._setSelectionStart(s.start); h = false } } if (!a.jqx.browser.msie) { var l = w; if ((l.ctrlKey && u == 99) || (l.ctrlKey && u == 67) || (l.ctrlKey && u == 122) || (l.ctrlKey && u == 90) || (l.ctrlKey && u == 118) || (l.ctrlKey && u == 86) || (l.shiftKey && u == 45)) { if (f == 6 && a.jqx.browser.webkit) { o._handleSimpleKeyDown(w, u) } return false } } if ((w.ctrlKey && u == 97) || (w.ctrlKey && u == 65)) { return true } if (f == 6 && h) { var r = this._isSpecialKey(u); return r } } return h } } return x }, GetSelectionInValue: function (h, g, f, e) { var c = 0; for (i = 0; i < g.length; i++) { if (i >= h) { break } var d = g.substring(i, i + 1); var b = (!isNaN(parseInt(d))); if (b || (e && g.substring(i, i + 1) == f)) { c++ } } return c }, GetSelectionLengthInValue: function (g, h, f, e) { var c = 0; for (i = 0; i < f.length; i++) { if (i >= g + h) { break } var d = f.substring(i, i + 1); var b = (!isNaN(parseInt(d))); if (h > 0 && i >= g && b || (i >= g && f[i].toString() == e)) { c++ } } return c }, GetInsertTypeByPositionInValue: function (e, g, h, f) { var c = "before"; var b = this.GetValueString(h, g, f); var d = this.GetDigitsToSeparator(0, b, g); if (e > d) { c = "after" } return c }, RemoveRange: function (f, e, q, g, w, b) { var h = this.digits; var r = f; var x = e; var c = 0; var s = this.decimal; var B = this._selection(); var q = this.numberInput.val(); var g = this.decimalSeparator; var l = g != ""; if (x == 0 && this.ValueString.length < this.decimalPossibleChars - 1) { return c } var y = this.GetSeparatorPositionInText(g, q); if (!w) { y = this.GetSeparatorPositionInText(g, q) } if (y < 0 && !l && q.length > 1) { y = q.length } if (y == -1) { y = q.length } var d = l ? 1 : 0; if (e < 2 && b == true) { var A = this.ValueString.length - this.decimalDigits - d; if ((A) == h && f + e < y) { x++ } } var n = ""; for (var v = 0; v < q.length; v++) { if (v < r || v >= r + x) { n += q.substring(v, v + 1); continue } else { var u = q.substring(v, v + 1); if (u == g) { n += g; continue } else { var u = q.substring(v, v + 1); if (v > y) { n += "0"; continue } } } var u = q.substring(v, v + 1); var t = (!isNaN(parseInt(u))); if (t) { c++ } } if (n.length == 0) { n = "0" } if (w) { this.numberInput.val(n) } else { this.ValueString = n } var o = n.substring(0, 1); if (o == g && isNaN(parseInt(o))) { var z = "0" + n; n = z } this.ValueString = this.GetValueString(n, g, l); this.decimal = this.ValueString; this._parseDecimalInSimpleMode(); this._setSelectionStart(r); return c }, InsertDigit: function (v, B) { if (typeof this.digits != "number") { this.digits = parseInt(this.digits) } if (typeof this.decimalDigits != "number") { this.decimalDigits = parseInt(this.decimalDigits) } var l = 1 + this.digits; var C = this._selection(); var q = this.getvalue("negative"); var d = false; if (C.start == 0 && this.symbol != "" && this.symbolPosition == "left") { this._setSelectionStart(C.start + 1); C = this._selection(); d = true } if ((q && d) || (q && !d && C.start == 0)) { this._setSelectionStart(C.start + 1); C = this._selection() } var z = this.numberInput.val().substring(C.start, C.start + 1); var s = this.numberInput.val(); var g = this.decimalSeparator; var n = g != "" && this.decimalDigits > 0; if (z == this.symbol && this.symbolPosition == "right") { if (this.decimalDigits == 0) { this.ValueString = this.GetValueString(s, g, n); if (this.ValueString.length >= l) { return } } else { return } } this.ValueString = this.GetValueString(s, g, n); var y = this.ValueString; if (this.decimalDigits > 0 && B >= y.length) { B = y.length - 1 } var t = ""; if (B < y.length) { t = y.substring(B, B + 1) } var h = false; var A = false; var e = this.GetInsertTypeByPositionInValue(B, g, s, n); if (e == "after") { h = true } var b = n ? 1 : 0; if (t != g && (this.ValueString.length - this.decimalDigits - b) >= l - 1) { h = true } var u = false; var w = n ? 1 : 0; if (!h && this.ValueString && this.ValueString.length >= this.digits + this.decimalDigits + w) { return } if (h && t != g) { if (u) { B++ } var r = y.substring(0, B); if (r.length == y.length) { if (this.ValueString.length >= this.digits + this.decimalDigits + w) { return } } var x = v; var c = ""; if (B + 1 < y.length) { c = y.substring(B + 1) } var o = r + x + c; this.ValueString = o } else { var r = y.substring(0, B); var x = v; var c = y.substring(B); var o = r + x + c; if (y.substring(0, 1) == "0") { o = x + y.substring(1); if (t == g) { this._setSelectionStart(C.start - 1); C = this._selection() } } this.ValueString = o } if (q) { this.decimal = -this.ValueString } else { this.decimal = this.ValueString } this._parseDecimalInSimpleMode(); var f = C.start; f += 1; this._setSelectionStart(f); this.value = this.decimal; this._raiseEvent(0, this.value); this._raiseEvent(1, this.numberInput.val()) }, GetStringToSeparator: function (h, f, e) { var d = ""; var b = f; var g = this.GetSeparatorPositionInText(f, h); var c = h.subString(0, g); d = this.GetValueString(c, f, e); return d }, GetSeparatorPositionInText: function (c, d) { var b = -1; for (i = 0; i < d.length; i++) { if (d.substring(i, i + 1) == c) { b = i; break } } return b }, GetValueString: function (h, g, f) { var d = ""; for (var c = 0; c < h.length; c++) { var e = h.substring(c, c + 1); var b = (!isNaN(parseInt(e))); if (b) { d += e } if (e == g) { d += g } } return d }, Backspace: function () { var d = this._selection(); var e = this._selection(); var f = this.numberInput.val(); if (d.start == 0 && d.length == 0) { return } this.isBackSpace = true; var c = f.substring[d.start, d.start + 1]; var b = (!isNaN(parseInt(c))); if (d.start > 0 && d.length == 0) { this._setSelectionStart(d.start - 1); var d = this._selection() } this.Delete(); this._setSelectionStart(e.start - 1); this.isBackSpace = false }, Delete: function (c) { var e = this._selection(); var g = this.numberInput.val(); var f = e.start; var h = e.length; h = Math.max(h, 1); this.ValueString = this.GetValueString(g, this.decimalSeparator, this.decimalSeparator != ""); this.RemoveRange(e.start, h, this.ValueString, ".", false); var d = this.ValueString.substring(0, 1); var b = (!isNaN(parseInt(d))); if (!b) { this.ValueString = "0" + this.ValueString } this.decimal = this.ValueString; this._parseDecimalInSimpleMode(); this._setSelectionStart(f); this.value = this.decimal; this._raiseEvent(0, this.value); this._raiseEvent(1, this.numberInput.val()) }, insertsimple: function (d) { var l = this._selection(); var n = this.numberInput.val(); if (l.start == n.length && this.decimalDigits > 0) { return } var b = this.decimal; var g = this.decimalSeparator; this.ValueString = this.GetValueString(n, g, g != ""); var h = this.GetSelectionInValue(l.start, n, g, g != ""); var e = this.GetSelectionLengthInValue(l.start, l.length, n, g); var f = this.GetDigitsToSeparator(0, this.ValueString, g); var c = false; if (this.decimalDigits > 0 && h >= this.ValueString.length) { h-- } this.RemoveRange(l.start, e, this.ValueString, g, false, true); this.InsertDigit(d, h, l) }, GetDigitsToSeparator: function (c, b, d) { if (d == undefined) { d = "." } if (b.indexOf(d) < 0) { return b.length } for (i = 0; i < b.length; i++) { if (b.substring(i, i + 1) == d) { c = i; break } } return c }, _handleSimpleKeyDown: function (h, t) { var s = this._selection(); if (s.start >= 0 && s.start < this.items.length) { var c = String.fromCharCode(t) } if (this.rtl && t == 37) { var b = h.shiftKey; var d = b ? 1 : 0; if (b) { this._setSelection(s.start + 1 - d, s.start + s.length + 1) } else { this._setSelection(s.start + 1 - d, s.start + 1) } return false } else { if (this.rtl && t == 39) { var b = h.shiftKey; var d = b ? 1 : 0; if (b) { this._setSelection(s.start - 1, s.length + d + s.start - 1) } else { this._setSelection(s.start - 1, s.start - 1) } return false } } if (t == 8) { this.Backspace(); return false } if (t == 190 || t == 110) { var g = this.GetSeparatorPositionInText(this.decimalSeparator, this.numberInput.val()); this._setSelectionStart(g + 1); return false } if (t == 188) { var r = this.numberInput.val(); for (f = s.start; f < r.length; f++) { if (r[f] == this.groupSeparator) { this._setSelectionStart(1 + f); break } } return false } if ((h.ctrlKey && t == 99) || (h.ctrlKey && t == 67)) { var s = this._selection(); var u = ""; var q = this.numberInput.val(); if (s.start > 0 || s.length > 0) { for (var f = s.start; f < s.end; f++) { u += q.substring(f, f + 1) } } if (a.jqx.browser.msie) { window.clipboardData.setData("Text", u) } this.savedText = u; return false } if ((h.ctrlKey && t == 122) || (h.ctrlKey && t == 90)) { return false } if ((h.ctrlKey && t == 118) || (h.ctrlKey && t == 86) || (h.shiftKey && t == 45)) { if (this.savedText != null && this.savedText.length > 0) { for (var f = 0; f < this.savedText.length; f++) { var n = parseInt(this.savedText.substring(f, f + 1)); if (!isNaN(n)) { this.insertsimple(n) } } } return false } var c = String.fromCharCode(t); var n = parseInt(c); if (t >= 96 && t <= 105) { n = t - 96; t = t - 48 } if (!isNaN(n)) { var l = this; this.insertsimple(n); return false } if (t == 46) { this.Delete(); return false } if (t == 38) { this.spinUp(); return false } else { if (t == 40) { this.spinDown(); return false } } var o = this._isSpecialKey(t); if (!a.jqx.browser.mozilla) { return true } return o }, _getEditRange: function () { var c = 0; var b = 0; for (i = 0; i < this.items.length; i++) { if (this.items[i].canEdit) { c = i; break } } for (i = this.items.length - 1; i >= 0; i--) { if (this.items[i].canEdit) { b = i; break } } return { start: c, end: b } }, _getVisibleItems: function () { var b = new Array(); var c = 0; for (i = 0; i < this.items.length; i++) { if (this.items[i].character.toString().length > 0) { b[c] = this.items[i]; c++ } } return b }, _hasEmptyVisibleItems: function () { var b = this._getVisibleItems(); for (i = 0; i < b.length; i++) { if (b[i].canEdit && b[i].character == this.promptChar) { return true } } return false }, _getFirstVisibleNonEmptyIndex: function () { var b = this._getVisibleItems(); for (i = 0; i < b.length; i++) { if (b[i].canEdit && b[i].character != this.promptChar) { return i } } }, _handleMouse: function (f, b) { var d = this._selection(); if (d.length <= 1) { var c = this._getFirstVisibleNonEmptyIndex(); if (d.start < c) { this._setSelectionStart(c) } } }, _insertKey: function (l) { this.numberInput[0].focus(); var d = String.fromCharCode(l); var e = parseInt(d); if (isNaN(e)) { return } var q = 0; for (i = 0; i < this.items.length; i++) { if (this.items[i].character.length == 0) { q++ } } var g = this._selection(); var b = this; if (g.start >= 0 && g.start <= this.items.length) { var f = false; var h = this._getFirstVisibleNonEmptyIndex(); if (g.start < h && g.length == 0) { if (!isNaN(d) || d == " ") { this._setSelectionStart(h); g = this._selection() } } var c = this._getFirstEditableItemIndex(); var o = this._getLastEditableItemIndex(); var n = this._getVisibleItems(); a.each(n, function (x, B) { if (g.start > x && x != n.length - 1) { return } var E = n[x]; if (x > o) { E = n[o] } if (isNaN(d) || d == " ") { return } if (!E.canEdit) { return } var A = b._getSeparatorPosition(); if (b._match(d, E.regex)) { if (!f && g.length > 0) { for (j = g.start + q; j < g.end + q; j++) { if (b.items[j].canEdit) { if (j > A) { b.items[j].character = "0" } else { b.items[j].character = b.promptChar } } } var D = b._getString(); f = true } var A = b._getSeparatorPosition(); var y = b._hasEmptyVisibleItems(); if (g.start <= A && y) { var v = x; if (b.decimalSeparatorPosition == -1 && g.start == A) { v = x + 1 } var u = ""; for (p = 0; p < v; p++) { if (n[p].canEdit && n[p].character != b.promptChar) { u += n[p].character } } u += d; var w = b.decimal < 1 ? 1 : 0; if (g.start == A && b.decimalSeparatorPosition != -1) { u += b.decimalSeparator; w = 0 } for (p = v + w; p < n.length; p++) { if (n[p].character == b.decimalSeparator && n[p].isSeparator) { u += n[p].character } else { if (n[p].canEdit && n[p].character != b.promptChar) { u += n[p].character } } } if (b.decimalSeparator != ".") { u = b._parseDecimalValue(u) } u = parseFloat(u).toString(); u = new Number(u); u = u.toFixed(b.decimalDigits); if (b.decimalSeparator != ".") { u = b._parseDecimalValueToEditorValue(u) } b.setvalue("decimal", u); var D = b._getString(); if (g.end < A) { b._setSelectionStart(g.end + w) } else { b._setSelectionStart(g.end) } if (g.length >= 1) { b._setSelectionStart(g.end) } if (g.length == b.numberInput.val().length) { var r = b._moveCaretToDecimalSeparator(); var C = b.decimalSeparatorPosition >= 0 ? 1 : 0; b._setSelectionStart(r - C) } } else { if (g.start < A || g.start > A) { if (b.numberInput.val().length == g.start && b.decimalSeparatorPosition != -1) { return false } else { if (b.numberInput.val().length == g.start && b.decimalSeparatorPosition == -1 && !y) { return false } } var u = ""; var s = false; for (p = 0; p < x; p++) { if (n[p].canEdit && n[p].character != b.promptChar) { u += n[p].character } if (n[p].character == b.decimalSeparator && n[p].isSeparator) { u += n[p].character; s = true } } u += d; var w = b.decimal < 1 ? 1 : 0; if (!s && g.start == A - 1) { u += b.decimalSeparator; s = true } for (p = x + 1; p < n.length; p++) { if (!s && n[p].character == b.decimalSeparator && n[p].isSeparator) { u += n[p].character } else { if (n[p].canEdit && n[p].character != b.promptChar) { u += n[p].character } } } b.setvalue("decimal", u); var D = b._getString(); if (b.decimalSeparatorPosition < 0 && E == n[o]) { b._setSelectionStart(x); return false } var z = D.indexOf(b.symbol); var t = !b.getvalue("negative") ? 0 : 1; if (z <= t) { z = D.length } if (g.start < z) { b._setSelectionStart(x + 1) } else { b._setSelectionStart(x) } if (g.length >= 1) { } if (g.length == b.numberInput.val().length) { var r = b._moveCaretToDecimalSeparator(); b._setSelectionStart(r - 1) } } } return false } }) } }, _handleKeyPress: function (h, d) { var f = this._selection(); var b = this; if ((h.ctrlKey && d == 97) || (h.ctrlKey && d == 65)) { return true } if (d == 8) { if (f.start > 0) { b._setSelectionStart(f.start) } return false } if (d == 46) { if (f.start < this.items.length) { b._setSelectionStart(f.start) } return false } if (d == 45 || d == 173 || d == 109 || d == 189) { var c = this.getvalue("negative"); if (c == false) { this.setvalue("negative", true) } else { this.setvalue("negative", false) } } if (a.jqx.browser.msie) { this._insertKey(d) } var g = this._isSpecialKey(d); return g }, _deleteSelectedText: function () { var d = this._selection(); var c = ""; var f = this._getSeparatorPosition(); var b = this._getVisibleItems(); var e = this._getHiddenPrefixCount(); if (this.numberInput.val().length == d.start && d.length == 0) { this._setSelection(d.start, d.start + 1); d = this._selection() } for (i = 0; i < d.start; i++) { if (b[i].canEdit && b[i].character != this.promptChar) { c += b[i].character } else { if (!b[i].canEdit && this.decimalSeparatorPosition != -1 && b[i] == b[this.decimalSeparatorPosition - e]) { if (c.length == 0) { c = "0" } c += b[i].character } } } for (i = d.start; i < d.end; i++) { if (i > f && this.decimalSeparatorPosition != -1) { if (b[i].canEdit && b[i].character != this.promptChar) { c += "0" } } else { if (!b[i].canEdit && this.decimalSeparatorPosition != -1 && b[i] == b[this.decimalSeparatorPosition - e]) { if (c.length == 0) { c = "0" } c += b[i].character } } } for (i = d.end; i < b.length; i++) { if (b[i].canEdit && b[i].character != this.promptChar) { c += b[i].character } else { if (!b[i].canEdit && this.decimalSeparatorPosition != -1 && b[i] == b[this.decimalSeparatorPosition - e]) { if (c.length == 0) { c = "0" } c += b[i].character } } } this.setvalue("decimal", c); return d.length > 0 }, _restoreInitialState: function () { var b = parseInt(this.decimalDigits); if (b > 0) { b += 2 } for (k = this.items.length - 1; k > this.items.length - 1 - b; k--) { if (this.items[k].canEdit && this.items[k].character == this.promptChar) { this.items[k].character = 0 } } }, clear: function () { this.setDecimal(0) }, clearDecimal: function () { if (this.inputMode == "textbox") { this.numberInput.val(); return } for (var b = 0; b < this.items.length; b++) { if (this.items[b].canEdit) { this.items[b].character = this.promptChar } } this._restoreInitialState() }, _saveSelectedText: function () { var c = this._selection(); var d = ""; var b = this._getVisibleItems(); if (c.start > 0 || c.length > 0) { for (i = c.start; i < c.end; i++) { if (b[i].canEdit && b[i].character != this.promptChar) { d += b[i].character } else { if (b[i].isSeparator) { d += b[i].character } } } } if (a.jqx.browser.msie) { window.clipboardData.setData("Text", d) } return d }, _pasteSelectedText: function () { var f = this._selection(); var h = ""; var c = 0; this.selectedText = a.data(document.body, "jqxSelection"); if (window.clipboardData) { var d = window.clipboardData.getData("Text"); if (d != this.selectedText && d.length > 0) { this.selectedText = window.clipboardData.getData("Text"); if (this.selectedText == null || this.selectedText == undefined) { return } } } var e = f.start; var n = this._getVisibleItems(); if (this.selectedText != null) { for (var l = 0; l < this.selectedText.length; l++) { var b = parseInt(this.selectedText[l]); if (!isNaN(b)) { var g = 48 + b; this._insertKey(g) } } } }, _getHiddenPrefixCount: function () { var b = 0; if (!this.negative) { b++ } if (this.symbolPosition == "left") { for (i = 0; i < this.symbol.length; i++) { if (this.symbol.substring(i, i + 1) == "") { b++ } } } return b }, _getEditableItem: function () { var b = this._selection(); for (i = 0; i < this.items.length; i++) { if (i < b.start) { if (this.items[i].canEdit && this.items[i].character != this.promptChar) { return this.items[i] } } } return null }, _getEditableItems: function () { var c = new Array(); var b = 0; for (i = 0; i < this.items.length; i++) { if (this.items[i].canEdit) { c[b] = this.items[i]; b++ } } return c }, _getValidSelectionStart: function (b) { for (i = this.items.length - 1; i >= 0; i--) { if (this.items[i].canEdit && this.items[i].character != this.promptChar) { return i } } return -1 }, _getEditableItemIndex: function (c) { var e = this._selection(); var f = this._getHiddenPrefixCount(); var b = this._getVisibleItems(); var d = e.start; var g = -1; for (i = 0; i < d; i++) { if (i < b.length && b[i].canEdit) { g = i + f } } if (g == -1 && e.length > 0) { d = e.end; for (i = 0; i < d; i++) { if (i < b.length && b[i].canEdit) { g = i + f; break } } } return g }, _getEditableItemByIndex: function (b) { for (k = 0; k < this.items.length; k++) { if (k > b) { if (this.items[k].canEdit && this.items[k].character != this.promptChar) { return k } } } return -1 }, _getFirstEditableItemIndex: function () { var b = this._getVisibleItems(); for (m = 0; m < b.length; m++) { if (b[m].character != this.promptChar && b[m].canEdit && b[m].character != "0") { return m } } return -1 }, _getLastEditableItemIndex: function () { var b = this._getVisibleItems(); for (m = b.length - 1; m >= 0; m--) { if (b[m].character != this.promptChar && b[m].canEdit) { return m } } return -1 }, _moveCaretToDecimalSeparator: function () { for (i = this.items.length - 1; i >= 0; i--) { if (this.items[i].character == this.decimalSeparator && this.items[i].isSeparator) { if (!this.negative) { this._setSelectionStart(i); return i } else { this._setSelectionStart(i + 1); return i } break } } return this.numberInput.val().length }, _handleBackspace: function () { var e = this._selection(); var f = this._getHiddenPrefixCount(); var b = this._getEditableItemIndex() - f; if (b >= 0) { if (e.length == 0 && b != -1) { this._setSelection(b, b + 1) } var g = e.start > this._getSeparatorPosition() + 1 && this.decimalSeparatorPosition > 0; if (g) { e = this._selection() } var d = this._deleteSelectedText(); if (e.length < 1 || g) { this._setSelectionStart(e.start) } else { if (e.length >= 1) { this._setSelectionStart(e.end) } } if (e.length == this.numberInput.val().length) { var c = this._moveCaretToDecimalSeparator(); this._setSelectionStart(c - 1) } } else { this._setSelectionStart(e.start) } }, _handleKeyDown: function (f, q) { var o = this._selection(); if (this.rtl && q == 37) { var b = f.shiftKey; var d = b ? 1 : 0; if (b) { this._setSelection(o.start + 1 - d, o.start + o.length + 1) } else { this._setSelection(o.start + 1 - d, o.start + 1) } return false } else { if (this.rtl && q == 39) { var b = f.shiftKey; var d = b ? 1 : 0; if (b) { this._setSelection(o.start - 1, o.length + d + o.start - 1) } else { this._setSelection(o.start - 1, o.start - 1) } return false } } if ((f.ctrlKey && q == 97) || (f.ctrlKey && q == 65)) { return true } if ((f.ctrlKey && q == 120) || (f.ctrlKey && q == 88)) { this.selectedText = this._saveSelectedText(f); a.data(document.body, "jqxSelection", this.selectedText); this._handleBackspace(); return false } if ((f.ctrlKey && q == 99) || (f.ctrlKey && q == 67)) { this.selectedText = this._saveSelectedText(f); a.data(document.body, "jqxSelection", this.selectedText); return false } if ((f.ctrlKey && q == 122) || (f.ctrlKey && q == 90)) { return false } if ((f.ctrlKey && q == 118) || (f.ctrlKey && q == 86) || (f.shiftKey && q == 45)) { this._pasteSelectedText(); return false } if (o.start >= 0 && o.start < this.items.length) { var c = String.fromCharCode(q); var s = this.items[o.start] } if (q == 8) { this._handleBackspace(); return false } if (q == 190 || q == 110) { this._moveCaretToDecimalSeparator(); return false } if (q == 188) { var n = this.numberInput.val(); for (i = o.start; i < n.length; i++) { if (n[i] == this.groupSeparator) { this._setSelectionStart(1 + i); break } } return false } if (a.jqx.browser.msie == null) { var c = String.fromCharCode(q); var h = parseInt(c); if (q >= 96 && q <= 105) { h = q - 96; q = q - 48 } if (!isNaN(h)) { var g = this; g._insertKey(q); return false } } if (q == 46) { var r = this._getVisibleItems(); if (o.start < r.length) { var d = r[o.start].canEdit == false ? 2 : 1; if (o.length == 0) { this._setSelection(o.start + d, o.start + d + o.length) } this._handleBackspace(); if (new Number(this.decimal) < 1 || o.start > this._getSeparatorPosition()) { this._setSelectionStart(o.end + d) } else { if (o.start + 1 < this.decimalSeparatorPosition) { this._setSelectionStart(o.end + d) } } } return false } if (q == 38) { this.spinUp(); return false } else { if (q == 40) { this.spinDown(); return false } } var l = this._isSpecialKey(q); if (!a.jqx.browser.mozilla) { return true } return l }, _isSpecialKey: function (b) { if (b != 8 && b != 9 && b != 13 && b != 35 && b != 36 && b != 37 && b != 39 && b != 27 && b != 46) { return false } return true }, _selection: function () { try { if ("selectionStart" in this.numberInput[0]) { var g = this.numberInput[0]; var h = g.selectionEnd - g.selectionStart; return { start: g.selectionStart, end: g.selectionEnd, length: h, text: g.value } } else { var d = document.selection.createRange(); if (d == null) { return { start: 0, end: g.value.length, length: 0 } } var c = this.numberInput[0].createTextRange(); var f = c.duplicate(); c.moveToBookmark(d.getBookmark()); f.setEndPoint("EndToStart", c); var h = d.text.length; return { start: f.text.length, end: f.text.length + d.text.length, length: h, text: d.text } } } catch (b) { return { start: 0, end: 0, length: 0 } } }, _setSelection: function (f, b) { if (this._disableSetSelection == true) { return } var e = a.jqx.mobile.isTouchDevice(); if (e || this.touchMode == true) { return } try { if ("selectionStart" in this.numberInput[0]) { this.numberInput[0].focus(); this.numberInput[0].setSelectionRange(f, b) } else { var c = this.numberInput[0].createTextRange(); c.collapse(true); c.moveEnd("character", b); c.moveStart("character", f); c.select() } } catch (d) { } }, _setSelectionStart: function (b) { this._setSelection(b, b); a.data(this.numberInput, "selectionstart", b) }, _render: function (f) { var c = parseInt(this.host.css("border-left-width")); var h = parseInt(this.host.css("border-left-width")); var g = parseInt(this.host.css("border-left-width")); var d = parseInt(this.host.css("border-left-width")); this.numberInput.css("padding-top", "0px"); this.numberInput.css("padding-bottom", "0px"); this.host.height(this.height); this.host.width(this.width); var e = this.host.width(); var o = this.host.height(); this.numberInput.css({ "border-left-width": 0, "border-right-width": 0, "border-bottom-width": 0, "border-top-width": 0 }); this.numberInput.css("text-align", this.textAlign); var q = this.numberInput.css("font-size"); this.numberInput.css("height", parseInt(q) + 4 + "px"); this.numberInput.css("width", e - 2); var n = o - 2 * g - parseInt(q) - 2; if (isNaN(n)) { n = 0 } if (n < 0) { n = 0 } if (this.spinButtons && this.spincontainer) { e -= parseInt(this.spinButtonsWidth - 2); var l = a.jqx.mobile.isTouchDevice(); if (!l && this.touchMode !== true) { this.spincontainer.width(this.spinButtonsWidth); this.upbutton.width(this.spinButtonsWidth + 2); this.downbutton.width(this.spinButtonsWidth + 2); this.upbutton.height("50%"); this.downbutton.height("50%"); this.spincontainer.width(this.spinButtonsWidth) } else { this.spincontainer.width(2 * (this.spinButtonsWidth)); e -= this.spinButtonsWidth; this.upbutton.height("100%"); this.downbutton.height("100%"); this.downbutton.css("float", "left"); this.upbutton.css("float", "right"); this.upbutton.width(this.spinButtonsWidth); this.downbutton.width(1 + this.spinButtonsWidth) } this._upArrow.height("100%"); this._downArrow.height("100%"); this.numberInput.css("width", e - 6); this.numberInput.css("margin-right", "2px") } var b = n / 2; if (a.jqx.browser.msie && a.jqx.browser.version < 8) { b = n / 4 } this.numberInput.css("padding-left", "0px"); this.numberInput.css("padding-right", "0px"); this.numberInput.css("padding-top", Math.round(b) + "px"); this.numberInput.css("padding-bottom", Math.round(b) + "px"); if (f == undefined || f == true) { this.numberInput.val(this._getString()); if (this.inputMode != "advanced") { this._parseDecimalInSimpleMode() } } }, destroy: function () { this._removeHandlers(); this.host.remove() }, inputValue: function (b) { if (b === undefined) { return this._value() } this.propertyChangedHandler(this, "value", this._value, b); this._refreshValue(); return this }, _value: function () { var b = this.numberInput.val(); return b }, val: function (b) { if (b != undefined && typeof b != "object") { this.setDecimal(b) } else { return this.getDecimal() } }, getDecimal: function () { if (this.inputMode == "simple") { this._parseDecimalInSimpleMode(false); this.decimal = this._getDecimalInSimpleMode(this.decimal) } if (this.decimal == "") { return 0 } var b = this.getvalue("negative"); if (b && this.decimal > 0) { return -parseFloat(this.decimal) } return parseFloat(this.decimal) }, setDecimal: function (d) { var b = d; if (this.decimalSeparator != ".") { d = d.toString(); var f = d.indexOf("."); if (f != -1) { var c = d.substring(0, f); var e = d.substring(f + 1); d = c + this.decimalSeparator + e } if (d < 0) { this.setvalue("negative", true) } else { this.setvalue("negative", false) } this._setDecimal(d) } else { if (d < 0) { this.setvalue("negative", true) } else { this.setvalue("negative", false) } this._setDecimal(Math.abs(d)) } if (b == null) { this.numberInput.val("") } }, _setDecimal: function (r) { if (r == null || r == undefined) { r = 0 } if (r.toString().indexOf("e") != -1) { r = 0 } this.clearDecimal(); var s = r.toString(); var t = ""; var b = ""; var d = true; if (s.length == 0) { s = "0" } for (var g = 0; g < s.length; g++) { if (s.substring(g, g + 1) == this.decimalSeparator) { d = false; continue } if (d) { t += s.substring(g, g + 1) } else { b += s.substring(g, g + 1) } } if (t.length > 0) { t = parseFloat(t).toString() } var o = this.digits; if (o < t.length) { t = t.substr(0, o) } var f = 0; var q = this._getSeparatorPosition(); var n = this._getHiddenPrefixCount(); q = q + n; for (var g = q; g >= 0; g--) { if (g < this.items.length && this.items[g].canEdit) { if (f < t.length) { this.items[g].character = t.substring(t.length - f - 1, t.length - f); f++ } } } f = 0; for (var g = q; g < this.items.length; g++) { if (this.items[g].canEdit) { if (f < b.length) { this.items[g].character = b.substring(f, f + 1); f++ } } } this._refreshValue(); if (this.decimalSeparator == ".") { this.ValueString = new Number(r).toFixed(this.decimalDigits) } else { var l = r.toString().indexOf(this.decimalSeparator); if (l > 0) { var h = r.toString().substring(0, l); var e = h + "." + r.toString().substring(l + 1); this.ValueString = new Number(e).toFixed(this.decimalDigits) } else { this.ValueString = new Number(r).toFixed(this.decimalDigits) } } if (this.inputMode != "advanced") { this._parseDecimalInSimpleMode(); this._raiseEvent(1, this.ValueString) } if (this.inputMode == "textbox") { this.decimal = this.ValueString; var c = this.getvalue("negative"); if (c) { this.decimal = "-" + this.ValueString } } var r = this.val(); if (r < this.min || r > this.max) { this.host.addClass("jqx-input-invalid") } else { this.host.removeClass("jqx-input-invalid") } }, _getSeparatorPosition: function () { var b = this._getHiddenPrefixCount(); if (this.decimalSeparatorPosition > 0) { return this.decimalSeparatorPosition - b } return this.items.length - b }, _setTheme: function () { this.host.removeClass(); this.host.addClass(this.toThemeProperty("jqx-input")); this.host.addClass(this.toThemeProperty("jqx-rc-all")); this.host.addClass(this.toThemeProperty("jqx-widget")); this.host.addClass(this.toThemeProperty("jqx-widget-content")); this.host.addClass(this.toThemeProperty("jqx-numberinput")); if (this.spinButtons) { this.downbutton.removeClass(); this.upbutton.removeClass(); this.downbutton.addClass(this.toThemeProperty("jqx-scrollbar-button-state-normal")); this.upbutton.addClass(this.toThemeProperty("jqx-scrollbar-button-state-normal")); this._upArrow.removeClass(); this._downArrow.removeClass(); this._upArrow.addClass(this.toThemeProperty("jqx-icon-arrow-up")); this._downArrow.addClass(this.toThemeProperty("jqx-icon-arrow-down")) } this.numberInput.removeClass(); this.numberInput.addClass(this.toThemeProperty("jqx-input-content")) }, propertyChangedHandler: function (c, d, g, f) { if (d == "digits" || d == "groupSize" || d == "decimalDigits") { if (f < 0) { throw new Exception(this.invalidArgumentExceptions[0]) } } if (d === "theme") { a.jqx.utilities.setTheme(g, f, c.host) } if (d == "digits") { if (f != g) { c.digits = parseInt(f) } } if (d == "min" || d == "max") { a.jqx.aria(c, "aria-value" + d, f.toString()); c._refreshValue() } if (d == "decimalDigits") { if (f != g) { c.decimalDigits = parseInt(f) } } if (d == "decimalSeparator" || d == "digits" || d == "symbol" || d == "symbolPosition" || d == "groupSize" || d == "groupSeparator" || d == "decimalDigits" || d == "negativeSymbol") { var b = c.decimal; if (d == "decimalSeparator" && f == "") { f = " " } if (g != f) { var e = c._selection(); c.items = new Array(); c._initializeLiterals(); c.value = c._getString(); c._refreshValue(); c._setDecimal(b) } } if (d == "rtl") { if (c.rtl) { if (c.spincontainer) { c.spincontainer.css("float", "right"); c.spincontainer.css("border-right-width", "1px") } c.numberInput.css("float", "right") } else { if (c.spincontainer) { c.spincontainer.css("float", "right"); c.spincontainer.css("border-right-width", "1px") } c.numberInput.css("float", "left") } } if (d == "spinButtons") { if (c.spincontainer) { if (!f) { c.spincontainer.css("display", "none") } else { c.spincontainer.css("display", "block") } c._render() } else { c._spinButtons() } } if (d === "touchMode") { c.inputMode = "textbox"; c.spinMode = "simple"; c.render() } if (d == "negative" && c.inputMode == "advanced") { var e = c._selection(); var h = 0; if (f) { c.items[0].character = c.negativeSymbol[0]; h = 1 } else { c.items[0].character = ""; h = -1 } c._refreshValue(); if (c.isInitialized) { c._setSelection(e.start + h, e.end + h) } } if (d == "decimal") { c.value = f; c.setDecimal(f) } if (d === "value") { c.value = f; c.setDecimal(f); c._raiseEvent(1, f) } if (d == "textAlign") { c.textAlign = f; c._render() } if (d == "disabled") { c.numberInput.attr("disabled", f); if (c.disabled) { c.host.addClass(c.toThemeProperty("jqx-fill-state-disabled")) } else { c.host.removeClass(c.toThemeProperty("jqx-fill-state-disabled")) } a.jqx.aria(c, "aria-disabled", f.toString()) } if (d == "readOnly") { c.readOnly = f } if (d == "promptChar") { for (i = 0; i < c.items.length; i++) { if (c.items[i].character == c.promptChar) { c.items[i].character = f } } c.promptChar = f } if (d == "width") { c.width = f; c._render() } else { if (d == "height") { c.height = f; c._render() } } }, _value: function () { var b = this.value; return b }, _refreshValue: function () { var g = this.value; var b = 0; if (this.inputMode === "textbox") { return } this.value = this._getString(); g = this.value; var f = ""; for (var c = 0; c < this.items.length; c++) { var e = this.items[c]; if (e.canEdit && e.character != this.promptChar) { f += e.character } if (c == this.decimalSeparatorPosition) { f += "." } } this.decimal = f; var d = false; if (this.oldValue !== g) { this.oldValue = g; this._raiseEvent(0, g); d = true } if (this.inputMode != "simple") { this.numberInput.val(g); if (d) { this._raiseEvent(1, g) } } if (g == null) { this.numberInput.val("") } } }) })(jQuery);
    </script>
    <!--<script type="text/javascript" src="http://61.147.119.252:8088/jqwidgets/jqxbuttons.js"></script>-->
    <script>
        /*
jQWidgets v3.0.3 (2013-Oct-01)
Copyright (c) 2011-2013 jQWidgets.
License: http://jqwidgets.com/license/
*/

        (function (a) { a.jqx.cssroundedcorners = function (b) { var c = { all: "jqx-rc-all", top: "jqx-rc-t", bottom: "jqx-rc-b", left: "jqx-rc-l", right: "jqx-rc-r", "top-right": "jqx-rc-tr", "top-left": "jqx-rc-tl", "bottom-right": "jqx-rc-br", "bottom-left": "jqx-rc-bl" }; for (prop in c) { if (!c.hasOwnProperty(prop)) { continue } if (b == prop) { return c[prop] } } }; a.jqx.jqxWidget("jqxButton", "", {}); a.extend(a.jqx._jqxButton.prototype, { defineInstance: function () { this.cursor = "arrow"; this.roundedCorners = "all"; this.disabled = false; this.height = null; this.width = null; this.overrideTheme = false; this.enableHover = true; this.rtl = false; this._ariaDisabled = false; this.aria = { "aria-disabled": { name: "disabled", type: "boolean" } } }, createInstance: function (d) { var b = this; this._setSize(); if (!this._ariaDisabled) { this.host.attr("role", "button") } if (!this.overrideTheme) { this.host.addClass(this.toThemeProperty(a.jqx.cssroundedcorners(this.roundedCorners))); this.host.addClass(this.toThemeProperty("jqx-button")); this.host.addClass(this.toThemeProperty("jqx-widget")) } this.isTouchDevice = a.jqx.mobile.isTouchDevice(); if (!this._ariaDisabled) { a.jqx.aria(this) } if (this.cursor != "arrow") { if (!this.disabled) { this.host.css({ cursor: this.cursor }) } else { this.host.css({ cursor: "arrow" }) } } this.addHandler(this.host, "mouseenter mouseleave mousedown focus blur", function (g) { switch (g.type) { case "mouseenter": if (!this.isTouchDevice) { if (!b.disabled && b.enableHover) { b.isMouseOver = true; b.refresh() } } break; case "mouseleave": if (!this.isTouchDevice) { if (!b.disabled && b.enableHover) { b.isMouseOver = false; b.refresh() } } break; case "mousedown": if (!b.disabled) { b.isPressed = true; b.refresh() } break; case "focus": if (!b.disabled) { b.isFocused = true; b.refresh() } break; case "blur": if (!b.disabled) { b.isFocused = false; b.refresh() } break } }); this.mouseupfunc = function (g) { if (!b.disabled) { b.isPressed = false; b.refresh() } }; this.addHandler(a(document), "mouseup.button" + this.element.id, this.mouseupfunc); try { if (document.referrer != "" || window.frameElement) { if (window.top != null && window.top != window.self) { var f = ""; if (window.parent && document.referrer) { f = document.referrer } if (f.indexOf(document.location.host) != -1) { var e = function (g) { b.isPressed = false; b.refresh() }; if (window.top.document) { this.addHandler(a(window.top.document), "mouseup", e) } } } } } catch (c) { } this.propertyChangeMap.roundedCorners = function (g, i, h, j) { g.refresh() }; this.propertyChangeMap.width = function (g, i, h, j) { g._setSize(); g.refresh() }; this.propertyChangeMap.height = function (g, i, h, j) { g._setSize(); g.refresh() }; this.propertyChangeMap.disabled = function (g, i, h, j) { if (h != j) { g.host[0].disabled = j; g.refresh(); if (!j) { g.host.css({ cursor: g.cursor }) } else { g.host.css({ cursor: "arrow" }) } a.jqx.aria(g, "aria-disabled", g.disabled) } }; this.propertyChangeMap.rtl = function (g, i, h, j) { if (h != j) { g.refresh() } }; this.propertyChangeMap.theme = function (g, i, h, j) { g.host.removeClass(); g.host.addClass(g.toThemeProperty("jqx-button")); g.host.addClass(g.toThemeProperty("jqx-widget")); if (!g.overrideTheme) { g.host.addClass(g.toThemeProperty(a.jqx.cssroundedcorners(g.roundedCorners))) } g._oldCSSCurrent = null; g.refresh() } }, val: function () { var b = this.host.find("input"); if (b.length > 0) { if (arguments.length == 0 || typeof (value) == "object") { return b.val() } b.val(value); this.refresh(); return b.val() } if (arguments.length == 0 || typeof (value) == "object") { return this.element.value } this.element.value = arguments[0]; this.refresh() }, _setSize: function () { if (this.width != null && (this.width.toString().indexOf("px") != -1 || this.width.toString().indexOf("%") != -1)) { this.host.css("width", this.width) } else { if (this.width != undefined && !isNaN(this.width)) { this.host.css("width", this.width) } } if (this.height != null && (this.height.toString().indexOf("px") != -1 || this.height.toString().indexOf("%") != -1)) { this.host.css("height", parseInt(this.height) + 2) } else { if (this.height != undefined && !isNaN(this.height)) { this.host.css("height", parseInt(this.height) + 2) } } }, _removeHandlers: function () { this.removeHandler(this.host, "selectstart"); this.removeHandler(this.host, "click"); this.removeHandler(this.host, "focus"); this.removeHandler(this.host, "blur"); this.removeHandler(this.host, "mouseenter"); this.removeHandler(this.host, "mouseleave"); this.removeHandler(this.host, "mousedown"); this.removeHandler(a(document), "mouseup.button" + this.element.id, this.mouseupfunc); this.mouseupfunc = null; delete this.mouseupfunc }, focus: function () { this.host.focus() }, destroy: function () { this._removeHandlers(); this.host.removeClass(); this.host.removeData(); this.host.remove(); delete this.set; delete this.get; delete this.call }, render: function () { this.refresh() }, refresh: function () { if (this.overrideTheme) { return } var d = this.toThemeProperty("jqx-fill-state-focus"); var h = this.toThemeProperty("jqx-fill-state-disabled"); var b = this.toThemeProperty("jqx-fill-state-normal"); var g = this.toThemeProperty("jqx-fill-state-hover"); var e = this.toThemeProperty("jqx-fill-state-pressed"); var f = this.toThemeProperty("jqx-fill-state-pressed"); var c = ""; this.host[0].disabled = this.disabled; if (this.disabled) { c = h } else { if (this.isMouseOver && !this.isTouchDevice) { if (this.isPressed) { c = f } else { c = g } } else { if (this.isPressed) { c = e } else { c = b } } } if (this.isFocused) { c += " " + d } if (c != this._oldCSSCurrent) { if (this._oldCSSCurrent) { this.host.removeClass(this._oldCSSCurrent) } this.host.addClass(c); this._oldCSSCurrent = c } if (this.rtl) { this.host.addClass(this.toThemeProperty("jqx-rtl")); this.host.css("direction", "rtl") } } }); a.jqx.jqxWidget("jqxLinkButton", "", {}); a.extend(a.jqx._jqxLinkButton.prototype, { defineInstance: function () { this.disabled = false; this.height = null; this.width = null; this.rtl = false; this.href = null }, createInstance: function (d) { var c = this; this.host.onselectstart = function () { return false }; this.host.attr("role", "button"); var b = this.height || this.host.height(); var e = this.width || this.host.width(); this.href = this.host.attr("href"); this.target = this.host.attr("target"); this.content = this.host.text(); this.element.innerHTML = ""; this.host.append("<input type='button' class='jqx-wrapper'/>"); var f = this.host.find("input"); f.addClass(this.toThemeProperty("jqx-reset")); f.width(e); f.height(b); f.val(this.content); this.host.find("tr").addClass(this.toThemeProperty("jqx-reset")); this.host.find("td").addClass(this.toThemeProperty("jqx-reset")); this.host.find("tbody").addClass(this.toThemeProperty("jqx-reset")); this.host.css("color", "inherit"); this.host.addClass(this.toThemeProperty("jqx-link")); f.css({ width: e }); f.css({ height: b }); var g = d == undefined ? {} : d[0] || {}; f.jqxButton(g); if (this.disabled) { this.host[0].disabled = true } this.propertyChangeMap.disabled = function (h, j, i, k) { c.host[0].disabled = k }; this.addHandler(f, "click", function (h) { if (!this.disabled) { c.onclick(h) } return false }) }, onclick: function (b) { if (this.target != null) { window.open(this.href, this.target) } else { window.location = this.href } } }); a.jqx.jqxWidget("jqxRepeatButton", "jqxButton", {}); a.extend(a.jqx._jqxRepeatButton.prototype, { defineInstance: function () { this.delay = 50 }, createInstance: function (e) { var c = this; var d = a.jqx.mobile.isTouchDevice(); var b = !d ? "mouseup." + this.base.element.id : "touchend." + this.base.element.id; var f = !d ? "mousedown." + this.base.element.id : "touchstart." + this.base.element.id; this.addHandler(a(document), b, function (g) { if (c.timeout != null) { clearTimeout(c.timeout); c.timeout = null; c.refresh() } if (c.timer != undefined) { clearInterval(c.timer); c.timer = null; c.refresh() } }); this.addHandler(this.base.host, f, function (g) { if (c.timer != null) { clearInterval(c.timer) } c.timeout = setTimeout(function () { clearInterval(c.timer); c.timer = setInterval(function (h) { c.ontimer(h) }, c.delay) }, 150) }); this.mousemovefunc = function (g) { if (!d) { if (g.which == 0) { if (c.timer != null) { clearInterval(c.timer); c.timer = null } } } }; this.addHandler(this.base.host, "mousemove", this.mousemovefunc) }, destroy: function () { var c = a.jqx.mobile.isTouchDevice(); var b = !c ? "mouseup." + this.base.element.id : "touchend." + this.base.element.id; var d = !c ? "mousedown." + this.base.element.id : "touchstart." + this.base.element.id; this.removeHandler(this.base.host, "mousemove", this.mousemovefunc); this.removeHandler(this.base.host, d); this.removeHandler(a(document), b); this.timer = null; delete this.mousemovefunc; delete this.timer; this.base.destroy(); delete this }, stop: function () { clearInterval(this.timer); this.timer = null }, ontimer: function (b) { var b = new jQuery.Event("click"); if (this.base != null && this.base.host != null) { this.base.host.trigger(b) } } }); a.jqx.jqxWidget("jqxToggleButton", "jqxButton", {}); a.extend(a.jqx._jqxToggleButton.prototype, { defineInstance: function () { this.toggled = false; this.aria = { "aria-checked": { name: "toggled", type: "boolean" }, "aria-disabled": { name: "disabled", type: "boolean" } } }, createInstance: function (c) { var b = this; this.base.overrideTheme = true; this.isTouchDevice = a.jqx.mobile.isTouchDevice(); a.jqx.aria(this); this.propertyChangeMap.toggled = function (d, f, e, g) { d.refresh() }; this.propertyChangeMap.disabled = function (d, f, e, g) { b.base.disabled = g; d.refresh() }; this.addHandler(this.base.host, "click", function (d) { if (!b.base.disabled) { b.toggle() } }); if (!this.isTouchDevice) { this.addHandler(this.base.host, "mouseenter", function (d) { if (!b.base.disabled) { b.refresh() } }); this.addHandler(this.base.host, "mouseleave", function (d) { if (!b.base.disabled) { b.refresh() } }) } this.addHandler(this.base.host, "mousedown", function (d) { if (!b.base.disabled) { b.refresh() } }); this.addHandler(a(document), "mouseup", function (d) { if (!b.base.disabled) { b.refresh() } }) }, _removeHandlers: function () { this.removeHandler(this.base.host, "click"); this.removeHandler(this.base.host, "mouseenter"); this.removeHandler(this.base.host, "mouseleave"); this.removeHandler(this.base.host, "mousedown"); this.removeHandler(a(document), "mouseup") }, toggle: function () { this.toggled = !this.toggled; this.refresh(); a.jqx.aria(this, "aria-checked", this.toggled) }, unCheck: function () { this.toggled = false; this.refresh() }, check: function () { this.toggled = true; this.refresh() }, refresh: function () { var g = this.base.toThemeProperty("jqx-fill-state-disabled"); var b = this.base.toThemeProperty("jqx-fill-state-normal"); var f = this.base.toThemeProperty("jqx-fill-state-hover"); var d = this.base.toThemeProperty("jqx-fill-state-pressed"); var e = this.base.toThemeProperty("jqx-fill-state-pressed"); var c = ""; this.base.host[0].disabled = this.base.disabled; if (this.base.disabled) { c = g } else { if (this.base.isMouseOver && !this.isTouchDevice) { if (this.base.isPressed || this.toggled) { c = e } else { c = f } } else { if (this.base.isPressed || this.toggled) { c = d } else { c = b } } } if (this.base.host.hasClass(g) && g != c) { this.base.host.removeClass(g) } if (this.base.host.hasClass(b) && b != c) { this.base.host.removeClass(b) } if (this.base.host.hasClass(f) && f != c) { this.base.host.removeClass(f) } if (this.base.host.hasClass(d) && d != c) { this.base.host.removeClass(d) } if (this.base.host.hasClass(e) && e != c) { this.base.host.removeClass(e) } if (!this.base.host.hasClass(c)) { this.base.host.addClass(c) } } }) })(jQuery);
    </script>
    <!--<script type="text/javascript" src="http://61.147.119.252:8088/jqwidgets/jqxscrollbar.js"></script>-->
    <script>
        /*
jQWidgets v3.0.3 (2013-Oct-01)
Copyright (c) 2011-2013 jQWidgets.
License: http://jqwidgets.com/license/
*/

        (function (a) { a.jqx.jqxWidget("jqxScrollBar", "", {}); a.extend(a.jqx._jqxScrollBar.prototype, { defineInstance: function () { this.height = null; this.width = null; this.vertical = false; this.min = 0; this.max = 1000; this.value = this.min; this.step = 10; this.largestep = 50; this.thumbMinSize = 10; this.thumbSize = 0; this.thumbStep = "auto"; this.roundedCorners = "all"; this.showButtons = true; this.disabled = false; this.touchMode = "auto"; this.touchModeStyle = "auto"; this.thumbTouchSize = 0; this._triggervaluechanged = true; this.rtl = false; this.areaDownCapture = false; this.areaUpCapture = false; this._initialLayout = false }, createInstance: function (b) { this.render() }, render: function () { this._mouseup = new Date(); var b = this; var c = "<div id='jqxScrollOuterWrap' style='width:100%; height: 100%; align:left; border: 0px; valign:top; position: relative;'><div id='jqxScrollWrap' style='width:100%; height: 100%; left: 0px; top: 0px; align:left; valign:top; position: absolute;'><div id='jqxScrollBtnUp' style='align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='jqxScrollAreaUp' style='align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='jqxScrollThumb' style='align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='jqxScrollAreaDown' style='align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='jqxScrollBtnDown' style='align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div></div></div>"; if (b.WinJS) { MSApp.execUnsafeLocalFunction(function () { WinJS.Utilities.setInnerHTMLUnsafe(this.element, c) }) } else { this.element.innerHTML = c } if (this.width != undefined && parseInt(this.width) > 0) { this.host.width(parseInt(this.width)) } if (this.height != undefined && parseInt(this.height) > 0) { this.host.height(parseInt(this.height)) } this.isPercentage = false; if (this.width != null && this.width.toString().indexOf("%") != -1) { this.host.width(this.width); this.isPercentage = true } if (this.height != null && this.height.toString().indexOf("%") != -1) { this.host.height(this.height); this.isPercentage = true } if (this.isPercentage) { var d = this; a.jqx.utilities.resize(this.host, function () { d._arrange() }, false) } this.thumbCapture = false; this.btnUp = this.host.find("#jqxScrollBtnUp"); this.btnDown = this.host.find("#jqxScrollBtnDown"); this.btnThumb = this.host.find("#jqxScrollThumb"); this.areaUp = this.host.find("#jqxScrollAreaUp"); this.arrowUp = a("<div></div>"); this.arrowUp.appendTo(this.btnUp); this.arrowDown = a("<div></div>"); this.arrowDown.appendTo(this.btnDown); this.areaDown = this.host.find("#jqxScrollAreaDown"); this.scrollWrap = this.host.find("#jqxScrollWrap"); this.scrollOuterWrap = this.host.find("#jqxScrollOuterWrap"); this.btnUp[0].id = "jqxScrollBtnUp" + this.element.id; this.btnDown[0].id = "jqxScrollBtnDown" + this.element.id; this.btnThumb[0].id = "jqxScrollThumb" + this.element.id; this.areaUp[0].id = "jqxScrollAreaUp" + this.element.id; this.areaDown[0].id = "jqxScrollAreaDown" + this.element.id; this.scrollWrap[0].id = "jqxScrollWrap" + this.element.id; this.scrollOuterWrap[0].id = "jqxScrollOuterWrap" + this.element.id; if (!this.host.jqxRepeatButton) { throw new Error("jqxScrollBar: Missing reference to jqxbuttons.js."); return } this.btnUp.jqxRepeatButton({ _ariaDisabled: true, overrideTheme: true, disabled: this.disabled }); this.btnDown.jqxRepeatButton({ _ariaDisabled: true, overrideTheme: true, disabled: this.disabled }); this.btnDownInstance = a.data(this.btnDown[0], "jqxRepeatButton").instance; this.btnUpInstance = a.data(this.btnUp[0], "jqxRepeatButton").instance; this.areaUp.jqxRepeatButton({ _ariaDisabled: true, overrideTheme: true }); this.areaDown.jqxRepeatButton({ _ariaDisabled: true, overrideTheme: true }); this.btnThumb.jqxButton({ _ariaDisabled: true, overrideTheme: true, disabled: this.disabled }); this.propertyChangeMap.value = function (e, g, f, h) { if (!(isNaN(h))) { if (f != h) { e.setPosition(parseFloat(h), true) } } }; this.propertyChangeMap.width = function (e, g, f, h) { if (e.width != undefined && parseInt(e.width) > 0) { e.host.width(parseInt(e.width)); e._arrange() } }; this.propertyChangeMap.height = function (e, g, f, h) { if (e.height != undefined && parseInt(e.height) > 0) { e.host.height(parseInt(e.height)); e._arrange() } }; this.propertyChangeMap.theme = function (e, g, f, h) { e.setTheme() }; this.propertyChangeMap.max = function (e, g, f, h) { if (!(isNaN(h))) { if (f != h) { e.max = parseInt(h); if (e.min > e.max) { e.max = e.min + 1 } e._arrange(); e.setPosition(e.value) } } }; this.propertyChangeMap.min = function (e, g, f, h) { if (!(isNaN(h))) { if (f != h) { e.min = parseInt(h); if (e.min > e.max) { e.max = e.min + 1 } e._arrange(); e.setPosition(e.value) } } }; this.propertyChangeMap.disabled = function (e, g, f, h) { if (f != h) { if (h) { e.host.addClass(e.toThemeProperty("jqx-fill-state-disabled")) } else { e.host.removeClass(e.toThemeProperty("jqx-fill-state-disabled")) } e.btnUp.jqxRepeatButton("disabled", e.disabled); e.btnDown.jqxRepeatButton("disabled", e.disabled); e.btnThumb.jqxButton("disabled", e.disabled) } }; this.propertyChangeMap.touchMode = function (e, g, f, h) { if (f != h) { e._updateTouchBehavior(); if (h === true) { e.showButtons = false; e.refresh() } else { if (h === false) { e.showButtons = true; e.refresh() } } } }; this.buttonUpCapture = false; this.buttonDownCapture = false; this._updateTouchBehavior(); this.setPosition(this.value); this._addHandlers(); this.setTheme() }, _updateTouchBehavior: function () { this.isTouchDevice = a.jqx.mobile.isTouchDevice(); if (this.touchMode == true) { if (a.jqx.browser.msie && a.jqx.browser.version < 9) { this.setTheme(); return } this.isTouchDevice = true; a.jqx.mobile.setMobileSimulator(this.btnThumb[0]); this._removeHandlers(); this._addHandlers(); this.setTheme() } else { if (this.touchMode == false) { this.isTouchDevice = false } } }, _addHandlers: function () { var d = this; if (d.isTouchDevice) { this.addHandler(this.btnThumb, a.jqx.mobile.getTouchEventName("touchend"), function (h) { var i = d.vertical ? d.toThemeProperty("jqx-scrollbar-thumb-state-pressed") : d.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal"); var j = d.toThemeProperty("jqx-fill-state-pressed"); d.btnThumb.removeClass(i); d.btnThumb.removeClass(j); if (!d.disabled) { d.handlemouseup(d, h) } }); this.addHandler(this.btnThumb, a.jqx.mobile.getTouchEventName("touchstart"), function (h) { if (!d.disabled) { if (d.touchMode == true) { h.clientX = h.originalEvent.clientX; h.clientY = h.originalEvent.clientY } else { var i = h; if (i.originalEvent.touches && i.originalEvent.touches.length) { h.clientX = i.originalEvent.touches[0].clientX; h.clientY = i.originalEvent.touches[0].clientY } else { h.clientX = h.originalEvent.clientX; h.clientY = h.originalEvent.clientY } } d.handlemousedown(h) } }); a.jqx.mobile.touchScroll(this.element, d.max, function (n, m, i, h, j) { if (d.host.css("visibility") == "visible") { if (d.touchMode == true) { j.clientX = j.originalEvent.clientX; j.clientY = j.originalEvent.clientY } else { var l = j; if (l.originalEvent.touches && l.originalEvent.touches.length) { j.clientX = l.originalEvent.touches[0].clientX; j.clientY = l.originalEvent.touches[0].clientY } else { j.clientX = j.originalEvent.clientX; j.clientY = j.originalEvent.clientY } } var k = d.vertical ? d.toThemeProperty("jqx-scrollbar-thumb-state-pressed") : d.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal"); d.btnThumb.addClass(k); d.btnThumb.addClass(d.toThemeProperty("jqx-fill-state-pressed")); d.handlemousemove(j) } }, d.element.id) } this.addHandler(this.btnUp, "click", function (i) { var h = d.step; if (d.rtl && !d.vertical) { h = -d.step } if (d.buttonUpCapture && !d.isTouchDevice) { if (!d.disabled) { d.setPosition(d.value - h) } } else { if (!d.disabled && d.isTouchDevice) { d.setPosition(d.value - h) } } }); this.addHandler(this.btnDown, "click", function (i) { var h = d.step; if (d.rtl && !d.vertical) { h = -d.step } if (d.buttonDownCapture && !d.isTouchDevice) { if (!d.disabled) { d.setPosition(d.value + h) } } else { if (!d.disabled && d.isTouchDevice) { d.setPosition(d.value + h) } } }); if (!this.isTouchDevice) { try { if (document.referrer != "" || window.frameElement) { if (window.top != null && window.top != window.self) { var g = null; if (window.parent && document.referrer) { g = document.referrer } if (g && g.indexOf(document.location.host) != -1) { var f = function (h) { if (!d.disabled) { d.handlemouseup(d, h) } }; if (window.top.document.addEventListener) { window.top.document.addEventListener("mouseup", f, false) } else { if (window.top.document.attachEvent) { window.top.document.attachEvent("onmouseup", f) } } } } } } catch (e) { } this.addHandler(this.btnDown, "mouseup", function (i) { if (!d.btnDownInstance.base.disabled && d.buttonDownCapture) { d.buttonDownCapture = false; d.btnDown.removeClass(d.toThemeProperty("jqx-scrollbar-button-state-pressed")); d.btnDown.removeClass(d.toThemeProperty("jqx-fill-state-pressed")); d._removeArrowClasses("pressed", "down"); d.handlemouseup(d, i); var h = d.step; if (d.rtl && !d.vertical) { h = -d.step } d.setPosition(d.value + h); return false } }); this.addHandler(this.btnUp, "mouseup", function (i) { if (!d.btnUpInstance.base.disabled && d.buttonUpCapture) { d.buttonUpCapture = false; d.btnUp.removeClass(d.toThemeProperty("jqx-scrollbar-button-state-pressed")); d.btnUp.removeClass(d.toThemeProperty("jqx-fill-state-pressed")); d._removeArrowClasses("pressed", "up"); d.handlemouseup(d, i); var h = d.step; if (d.rtl && !d.vertical) { h = -d.step } d.setPosition(d.value - h); return false } }); this.addHandler(this.btnDown, "mousedown", function (h) { if (!d.btnDownInstance.base.disabled) { d.buttonDownCapture = true; d.btnDown.addClass(d.toThemeProperty("jqx-fill-state-pressed")); d.btnDown.addClass(d.toThemeProperty("jqx-scrollbar-button-state-pressed")); d._addArrowClasses("pressed", "down"); return false } }); this.addHandler(this.btnUp, "mousedown", function (h) { if (!d.btnUpInstance.base.disabled) { d.buttonUpCapture = true; d.btnUp.addClass(d.toThemeProperty("jqx-fill-state-pressed")); d.btnUp.addClass(d.toThemeProperty("jqx-scrollbar-button-state-pressed")); d._addArrowClasses("pressed", "up"); return false } }) } var c = "click"; if (this.isTouchDevice) { c = a.jqx.mobile.getTouchEventName("touchend") } this.addHandler(this.areaUp, c, function (i) { if (!d.disabled) { var h = d.largestep; if (d.rtl && !d.vertical) { h = -d.largestep } d.setPosition(d.value - h); return false } }); this.addHandler(this.areaDown, c, function (i) { if (!d.disabled) { var h = d.largestep; if (d.rtl && !d.vertical) { h = -d.largestep } d.setPosition(d.value + h); return false } }); this.addHandler(this.areaUp, "mousedown", function (h) { if (!d.disabled) { d.areaUpCapture = true; return false } }); this.addHandler(this.areaDown, "mousedown", function (h) { if (!d.disabled) { d.areaDownCapture = true; return false } }); this.addHandler(this.btnThumb, "mousedown", function (h) { if (!d.disabled) { d.handlemousedown(h) } return false }); this.addHandler(this.btnThumb, "dragstart", function (h) { return false }); this.addHandler(a(document), "mouseup." + this.element.id, function (h) { if (!d.disabled) { d.handlemouseup(d, h) } }); if (!this.isTouchDevice) { this.mousemoveFunc = function (h) { if (!d.disabled) { d.handlemousemove(h) } }; this.addHandler(a(document), "mousemove." + this.element.id, this.mousemoveFunc); this.addHandler(a(document), "mouseleave." + this.element.id, function (h) { if (!d.disabled) { d.handlemouseleave(h) } }); this.addHandler(a(document), "mouseenter." + this.element.id, function (h) { if (!d.disabled) { d.handlemouseenter(h) } }); if (!d.disabled) { this.addHandler(this.btnUp, "mouseenter", function () { if (!d.disabled && !d.btnUpInstance.base.disabled && d.touchMode != true) { d.btnUp.addClass(d.toThemeProperty("jqx-scrollbar-button-state-hover")); d.btnUp.addClass(d.toThemeProperty("jqx-fill-state-hover")); d._addArrowClasses("hover", "up") } }); this.addHandler(this.btnUp, "mouseleave", function () { if (!d.disabled && !d.btnUpInstance.base.disabled && d.touchMode != true) { d.btnUp.removeClass(d.toThemeProperty("jqx-scrollbar-button-state-hover")); d.btnUp.removeClass(d.toThemeProperty("jqx-fill-state-hover")); d._removeArrowClasses("hover", "up") } }); var b = d.toThemeProperty("jqx-scrollbar-thumb-state-hover"); if (!d.vertical) { b = d.toThemeProperty("jqx-scrollbar-thumb-state-hover-horizontal") } this.addHandler(this.btnThumb, "mouseenter", function () { if (!d.disabled && d.touchMode != true) { d.btnThumb.addClass(b); d.btnThumb.addClass(d.toThemeProperty("jqx-fill-state-hover")) } }); this.addHandler(this.btnThumb, "mouseleave", function () { if (!d.disabled && d.touchMode != true) { d.btnThumb.removeClass(b); d.btnThumb.removeClass(d.toThemeProperty("jqx-fill-state-hover")) } }); this.addHandler(this.btnDown, "mouseenter", function () { if (!d.disabled && !d.btnDownInstance.base.disabled && d.touchMode != true) { d.btnDown.addClass(d.toThemeProperty("jqx-scrollbar-button-state-hover")); d.btnDown.addClass(d.toThemeProperty("jqx-fill-state-hover")); d._addArrowClasses("hover", "down") } }); this.addHandler(this.btnDown, "mouseleave", function () { if (!d.disabled && !d.btnDownInstance.base.disabled && d.touchMode != true) { d.btnDown.removeClass(d.toThemeProperty("jqx-scrollbar-button-state-hover")); d.btnDown.removeClass(d.toThemeProperty("jqx-fill-state-hover")); d._removeArrowClasses("hover", "down") } }) } } }, destroy: function () { var b = this.btnUp; var f = this.btnDown; var d = this.btnThumb; var c = this.scrollWrap; var g = this.areaUp; var e = this.areaDown; e.removeClass(); g.removeClass(); f.removeClass(); b.removeClass(); d.removeClass(); b.jqxRepeatButton("destroy"); f.jqxRepeatButton("destroy"); g.jqxRepeatButton("destroy"); e.jqxRepeatButton("destroy"); d.jqxButton("destroy"); this._removeHandlers(); this.host.removeClass(); this.host.removeData(); this.host.remove(); this.host = null; this.btnUp = null; this.btnDown = null; this.scrollWrap = null; this.areaUp = null; this.areaDown = null; this.scrollOuterWrap = null; delete this.scrollOuterWrap; delete this.scrollWrap; delete this.btnDown; delete this.areaDown; delete this.areaUp; delete this.btnDown; delete this.btnUp }, _removeHandlers: function () { this.removeHandler(this.btnUp, "mouseenter"); this.removeHandler(this.btnDown, "mouseenter"); this.removeHandler(this.btnThumb, "mouseenter"); this.removeHandler(this.btnUp, "mouseleave"); this.removeHandler(this.btnDown, "mouseleave"); this.removeHandler(this.btnThumb, "mouseleave"); this.removeHandler(this.btnUp, "click"); this.removeHandler(this.btnDown, "click"); this.removeHandler(this.btnDown, "mouseup"); this.removeHandler(this.btnUp, "mouseup"); this.removeHandler(this.btnDown, "mousedown"); this.removeHandler(this.btnUp, "mousedown"); this.removeHandler(this.areaUp, "mousedown"); this.removeHandler(this.areaDown, "mousedown"); this.removeHandler(this.areaUp, "click"); this.removeHandler(this.areaDown, "click"); this.removeHandler(this.btnThumb, "mousedown"); this.removeHandler(this.btnThumb, "dragstart"); this.removeHandler(a(document), "mouseup." + this.element.id); if (!this.mousemoveFunc) { this.removeHandler(a(document), "mousemove." + this.element.id) } else { this.removeHandler(a(document), "mousemove." + this.element.id, this.mousemoveFunc) } this.removeHandler(a(document), "mouseleave." + this.element.id); this.removeHandler(a(document), "mouseenter." + this.element.id); var b = this }, _addArrowClasses: function (c, b) { if (c == "pressed") { c = "selected" } if (c != "") { c = "-" + c } if (this.vertical) { if (b == "up" || b == undefined) { this.arrowUp.addClass(this.toThemeProperty("jqx-icon-arrow-up" + c)) } if (b == "down" || b == undefined) { this.arrowDown.addClass(this.toThemeProperty("jqx-icon-arrow-down" + c)) } } else { if (b == "up" || b == undefined) { this.arrowUp.addClass(this.toThemeProperty("jqx-icon-arrow-left" + c)) } if (b == "down" || b == undefined) { this.arrowDown.addClass(this.toThemeProperty("jqx-icon-arrow-right" + c)) } } }, _removeArrowClasses: function (c, b) { if (c == "pressed") { c = "selected" } if (c != "") { c = "-" + c } if (this.vertical) { if (b == "up" || b == undefined) { this.arrowUp.removeClass(this.toThemeProperty("jqx-icon-arrow-up" + c)) } if (b == "down" || b == undefined) { this.arrowDown.removeClass(this.toThemeProperty("jqx-icon-arrow-down" + c)) } } else { if (b == "up" || b == undefined) { this.arrowUp.removeClass(this.toThemeProperty("jqx-icon-arrow-left" + c)) } if (b == "down" || b == undefined) { this.arrowDown.removeClass(this.toThemeProperty("jqx-icon-arrow-right" + c)) } } }, setTheme: function () { var o = this.btnUp; var m = this.btnDown; var p = this.btnThumb; var e = this.scrollWrap; var g = this.areaUp; var h = this.areaDown; var f = this.arrowUp; var i = this.arrowDown; this.scrollWrap[0].className = this.toThemeProperty("jqx-reset"); this.scrollOuterWrap[0].className = this.toThemeProperty("jqx-reset"); var k = this.toThemeProperty("jqx-reset"); this.areaDown[0].className = k; this.areaUp[0].className = k; var d = this.toThemeProperty("jqx-scrollbar") + " " + this.toThemeProperty("jqx-widget") + " " + this.toThemeProperty("jqx-widget-content"); this.element.className = d; m[0].className = this.toThemeProperty("jqx-scrollbar-button-state-normal"); o[0].className = this.toThemeProperty("jqx-scrollbar-button-state-normal"); var q = ""; if (this.vertical) { f[0].className = k + " " + this.toThemeProperty("jqx-icon-arrow-up"); i[0].className = k + " " + this.toThemeProperty("jqx-icon-arrow-down"); q = this.toThemeProperty("jqx-scrollbar-thumb-state-normal") } else { f[0].className = k + " " + this.toThemeProperty("jqx-icon-arrow-left"); i[0].className = k + " " + this.toThemeProperty("jqx-icon-arrow-right"); q = this.toThemeProperty("jqx-scrollbar-thumb-state-normal-horizontal") } q += " " + this.toThemeProperty("jqx-fill-state-normal"); p[0].className = q; if (this.disabled) { e.addClass(this.toThemeProperty("jqx-fill-state-disabled")); e.removeClass(this.toThemeProperty("jqx-scrollbar-state-normal")) } else { e.addClass(this.toThemeProperty("jqx-scrollbar-state-normal")); e.removeClass(this.toThemeProperty("jqx-fill-state-disabled")) } if (this.roundedCorners == "all") { this.host.addClass(this.toThemeProperty("jqx-rc-all")); if (this.vertical) { var j = a.jqx.cssroundedcorners("top"); j = this.toThemeProperty(j); o.addClass(j); var c = a.jqx.cssroundedcorners("bottom"); c = this.toThemeProperty(c); m.addClass(c) } else { var n = a.jqx.cssroundedcorners("left"); n = this.toThemeProperty(n); o.addClass(n); var l = a.jqx.cssroundedcorners("right"); l = this.toThemeProperty(l); m.addClass(l) } } else { var b = a.jqx.cssroundedcorners(this.roundedCorners); b = this.toThemeProperty(b); elBtnUp.addClass(b); elBtnDown.addClass(b) } var b = a.jqx.cssroundedcorners(this.roundedCorners); b = this.toThemeProperty(b); if (!p.hasClass(b)) { p.addClass(b) } if (this.isTouchDevice && this.touchModeStyle != false) { this.showButtons = false; p.addClass(this.toThemeProperty("jqx-scrollbar-thumb-state-normal-touch")) } }, isScrolling: function () { if (this.thumbCapture == undefined || this.buttonDownCapture == undefined || this.buttonUpCapture == undefined || this.areaDownCapture == undefined || this.areaUpCapture == undefined) { return false } return this.thumbCapture || this.buttonDownCapture || this.buttonUpCapture || this.areaDownCapture || this.areaUpCapture }, handlemousedown: function (c) { if (this.thumbCapture == undefined || this.thumbCapture == false) { this.thumbCapture = true; var b = this.btnThumb; if (b != null) { b.addClass(this.toThemeProperty("jqx-fill-state-pressed")); if (this.vertical) { b.addClass(this.toThemeProperty("jqx-scrollbar-thumb-state-pressed")) } else { b.addClass(this.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal")) } } } this.dragStartX = c.clientX; this.dragStartY = c.clientY; this.dragStartValue = this.value }, toggleHover: function (c, b) { }, refresh: function () { this._arrange() }, _setElementPosition: function (c, b, d) { if (!isNaN(b)) { if (parseInt(c[0].style.left) != parseInt(b)) { c[0].style.left = b + "px" } } if (!isNaN(d)) { if (parseInt(c[0].style.top) != parseInt(d)) { c[0].style.top = d + "px" } } }, _setElementTopPosition: function (b, c) { if (!isNaN(c)) { b[0].style.top = c + "px" } }, _setElementLeftPosition: function (c, b) { if (!isNaN(b)) { c[0].style.left = b + "px" } }, handlemouseleave: function (e) { var b = this.btnUp; var d = this.btnDown; if (this.buttonDownCapture || this.buttonUpCapture) { b.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")); d.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")); this._removeArrowClasses("pressed") } if (this.thumbCapture != true) { return } var c = this.btnThumb; var f = this.vertical ? this.toThemeProperty("jqx-scrollbar-thumb-state-pressed") : this.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal"); c.removeClass(f); c.removeClass(this.toThemeProperty("jqx-fill-state-pressed")) }, handlemouseenter: function (e) { var b = this.btnUp; var d = this.btnDown; if (this.buttonUpCapture) { b.addClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")); b.addClass(this.toThemeProperty("jqx-fill-state-pressed")); this._addArrowClasses("pressed", "up") } if (this.buttonDownCapture) { d.addClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")); d.addClass(this.toThemeProperty("jqx-fill-state-pressed")); this._addArrowClasses("pressed", "down") } if (this.thumbCapture != true) { return } var c = this.btnThumb; if (this.vertical) { c.addClass(this.toThemeProperty("jqx-scrollbar-thumb-state-pressed")) } else { c.addClass(this.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal")) } c.addClass(this.toThemeProperty("jqx-fill-state-pressed")) }, handlemousemove: function (b) { var i = this.btnUp; var e = this.btnDown; var d = 0; if (e == null || i == null) { return } if (i != null && e != null && this.buttonDownCapture != undefined && this.buttonUpCapture != undefined) { if (this.buttonDownCapture && b.which == d) { e.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")); e.removeClass(this.toThemeProperty("jqx-fill-state-pressed")); this._removeArrowClasses("pressed", "down"); this.buttonDownCapture = false } else { if (this.buttonUpCapture && b.which == d) { i.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")); i.removeClass(this.toThemeProperty("jqx-fill-state-pressed")); this._removeArrowClasses("pressed", "up"); this.buttonUpCapture = false } } } if (this.thumbCapture != true) { return false } var k = this.btnThumb; if (b.which == d && !this.isTouchDevice) { this.thumbCapture = false; this._arrange(); var j = this.vertical ? this.toThemeProperty("jqx-scrollbar-thumb-state-pressed") : this.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal"); k.removeClass(j); k.removeClass(this.toThemeProperty("jqx-fill-state-pressed")); return true } if (b.preventDefault != undefined) { b.preventDefault() } if (b.originalEvent != null) { b.originalEvent.mouseHandled = true } if (b.stopPropagation != undefined) { b.stopPropagation() } var l = 0; try { if (!this.vertical) { l = b.clientX - this.dragStartX } else { l = b.clientY - this.dragStartY } var f = this._btnAndThumbSize; if (!this._btnAndThumbSize) { f = (this.vertical) ? i.height() + e.height() + k.height() : i.width() + e.width() + k.width() } var g = (this.max - this.min) / (this.scrollBarSize - f); if (this.thumbStep == "auto") { l *= g } else { l *= g; if (Math.abs(this.dragStartValue + l - this.value) >= parseInt(this.thumbStep)) { var c = Math.round(parseInt(l) / this.thumbStep) * this.thumbStep; if (this.rtl && !this.vertical) { this.setPosition(this.dragStartValue - c) } else { this.setPosition(this.dragStartValue + c) } return false } else { return false } } var c = l; if (this.rtl && !this.vertical) { c = -l } this.setPosition(this.dragStartValue + c) } catch (h) { alert(h) } return false }, handlemouseup: function (d, g) { var c = false; if (this.thumbCapture) { this.thumbCapture = false; var e = this.btnThumb; var h = this.vertical ? this.toThemeProperty("jqx-scrollbar-thumb-state-pressed") : this.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal"); e.removeClass(h); e.removeClass(this.toThemeProperty("jqx-fill-state-pressed")); c = true; this._mouseup = new Date() } this.areaDownCapture = this.areaUpCapture = false; if (this.buttonUpCapture || this.buttonDownCapture) { var b = this.btnUp; var f = this.btnDown; this.buttonUpCapture = false; this.buttonDownCapture = false; b.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")); f.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")); b.removeClass(this.toThemeProperty("jqx-fill-state-pressed")); f.removeClass(this.toThemeProperty("jqx-fill-state-pressed")); this._removeArrowClasses("pressed"); c = true; this._mouseup = new Date() } if (c) { if (g.preventDefault != undefined) { g.preventDefault() } if (g.originalEvent != null) { g.originalEvent.mouseHandled = true } if (g.stopPropagation != undefined) { g.stopPropagation() } } }, setPosition: function (b, g) { var d = this.element; if (b == undefined || b == NaN) { b = this.min } if (b >= this.max) { b = this.max } if (b < this.min) { b = this.min } if (this.value !== b || g == true) { if (b == this.max) { var c = new jQuery.Event("complete"); this.host.trigger(c) } var f = this.value; if (this._triggervaluechanged) { var e = new jQuery.Event("valuechanged"); e.previousValue = this.value; e.currentValue = b } this.value = b; this._positionelements(); if (this._triggervaluechanged) { this.host.trigger(e) } if (this.valuechanged) { this.valuechanged({ currentValue: this.value, previousvalue: f }) } } return b }, _getThumbSize: function (b) { var d = this.max - this.min; var c = 0; if (d > 1) { c = (b / (d + b) * b) } else { if (d == 1) { c = b } } if (this.thumbSize > 0) { c = this.thumbSize } if (c < this.thumbMinSize) { c = this.thumbMinSize } return Math.min(c, b) }, _positionelements: function () { var g = this.element; var n = this.areaUp; var e = this.areaDown; var h = this.btnUp; var f = this.btnDown; var o = this.btnThumb; var b = this.scrollWrap; var p = this._height ? this._height : this.host.height(); var c = this._width ? this._width : this.host.width(); var l = (!this.vertical) ? p : c; if (!this.showButtons) { l = 0 } var m = (!this.vertical) ? c : p; this.scrollBarSize = m; var d = this._getThumbSize(m - 2 * l); d = Math.round(d); if (d < this.thumbMinSize) { d = this.thumbMinSize } if (p == NaN || p < 10) { p = 10 } if (c == NaN || c < 10) { c = 10 } l += 2; this.btnSize = l; var i = this._btnAndThumbSize; if (!this._btnAndThumbSize) { var i = (this.vertical) ? 2 * this.btnSize + o.outerHeight() : 2 * this.btnSize + o.outerWidth(); i = Math.round(i) } var k = (m - i) / (this.max - this.min) * (this.value - this.min); if (this.rtl && !this.vertical) { k = (m - i) / (this.max - this.min) * (this.max - this.value - this.min) } k = Math.round(k); if (k < 0) { k = 0 } if (this.vertical) { var j = m - k - i; if (j < 0) { j = 0 } e[0].style.height = j + "px"; n[0].style.height = k + "px"; this._setElementTopPosition(n, l); this._setElementTopPosition(o, l + k); this._setElementTopPosition(e, l + k + d) } else { n[0].style.width = k + "px"; e[0].style.width = m - k - i + "px"; this._setElementLeftPosition(n, l); this._setElementLeftPosition(o, l + k); this._setElementLeftPosition(e, 2 + l + k + d) } }, _arrange: function () { if (this._initialLayout) { this._initialLayout = false; return } var d = this.element; var g = this.areaUp; var r = this.areaDown; var c = this.btnUp; var k = this.btnDown; var s = this.btnThumb; var n = this.scrollWrap; var l = parseInt(this.element.style.height); var o = parseInt(this.element.style.width); if (this.isPercentage) { var l = this.host.height(); var o = this.host.width() } if (isNaN(l)) { l = 0 } if (isNaN(o)) { o = 0 } this._width = o; this._height = l; var b = (!this.vertical) ? l : o; if (!this.showButtons) { b = 0 } c[0].style.width = b + "px"; c[0].style.height = b + "px"; k[0].style.width = b + "px"; k[0].style.height = b + "px"; if (this.vertical) { n[0].style.width = o + 2 + "px" } else { n[0].style.height = l + 2 + "px" } this._setElementPosition(c, 0, 0); var q = b + 2; if (this.vertical) { this._setElementPosition(k, 0, l - q) } else { this._setElementPosition(k, o - q, 0) } var e = (!this.vertical) ? o : l; this.scrollBarSize = e; var h = this._getThumbSize(e - 2 * b); h = Math.round(h); if (h < this.thumbMinSize) { h = this.thumbMinSize } var m = false; if (this.isTouchDevice && this.touchModeStyle != false) { m = true } if (!this.vertical) { s[0].style.width = h + "px"; s[0].style.height = l + "px"; if (m && this.thumbTouchSize !== 0) { s.css({ height: this.thumbTouchSize + "px" }); s.css("margin-top", (this.host.height() - this.thumbTouchSize) / 2) } } else { s[0].style.width = o + "px"; s[0].style.height = h + "px"; if (m && this.thumbTouchSize !== 0) { s.css({ width: this.thumbTouchSize + "px" }); s.css("margin-left", (this.host.width() - this.thumbTouchSize) / 2) } } if (l == NaN || l < 10) { l = 10 } if (o == NaN || o < 10) { o = 10 } b += 2; this.btnSize = b; var f = (this.vertical) ? 2 * this.btnSize + (2 + parseInt(s[0].style.height)) : 2 * this.btnSize + (2 + parseInt(s[0].style.width)); f = Math.round(f); this._btnAndThumbSize = f; var u = (e - f) / (this.max - this.min) * (this.value - this.min); if (this.rtl && !this.vertical) { u = (e - f) / (this.max - this.min) * (this.max - this.value - this.min) } u = Math.round(u); if (u === -Infinity || u == Infinity) { u = 0 } if (isNaN(u)) { u = 0 } if (u < 0) { u = 0 } if (this.vertical) { var t = (e - u - f); if (t < 0) { t = 0 } r[0].style.height = t + "px"; r[0].style.width = o + "px"; g[0].style.height = u + "px"; g[0].style.width = o + "px"; var i = parseInt(this.element.style.height); if (this.isPercentage) { i = this.host.height() } s[0].style.visibility = "inherit"; if (i - 3 * parseInt(b) < 0) { s[0].style.visibility = "hidden" } else { if (i < f) { s[0].style.visibility = "hidden" } else { if (this.element.style.visibility == "visible") { s[0].style.visibility = "inherit" } } } this._setElementPosition(g, 0, b); this._setElementPosition(s, 0, b + u); this._setElementPosition(r, 0, b + u + h) } else { if (u > 0) { g[0].style.width = u + "px" } if (l > 0) { g[0].style.height = l + "px" } var j = (e - u - f); if (j < 0) { j = 0 } r[0].style.width = j + "px"; r[0].style.height = l + "px"; var p = parseInt(this.element.style.width); if (this.isPercentage) { p = this.host.width() } s[0].style.visibility = "inherit"; if (p - 3 * parseInt(b) < 0) { s[0].style.visibility = "hidden" } else { if (p < f) { s[0].style.visibility = "hidden" } else { if (this.element.style.visibility == "visible") { s[0].style.visibility = "inherit" } } } this._setElementPosition(g, b, 0); this._setElementPosition(s, b + u, 0); this._setElementPosition(r, 2 + b + u + h, 0) } } }) })(jQuery);
    </script>
    <!--<script type="text/javascript" src="http://61.147.119.252:8088/jqwidgets/jqxlistbox.js"></script>-->
    <script>
        /*
jQWidgets v3.0.3 (2013-Oct-01)
Copyright (c) 2011-2013 jQWidgets.
License: http://jqwidgets.com/license/
*/

        (function (a) { a.jqx.jqxWidget("jqxListBox", "", {}); a.extend(a.jqx._jqxListBox.prototype, { defineInstance: function () { this.disabled = false; this.width = null; this.height = null; this.items = new Array(); this.multiple = false; this.selectedIndex = -1; this.selectedIndexes = new Array(); this.source = null; this.scrollBarSize = a.jqx.utilities.scrollBarSize; this.enableHover = true; this.enableSelection = true; this.visualItems = new Array(); this.groups = new Array(); this.equalItemsWidth = true; this.itemHeight = -1; this.visibleItems = new Array(); this.emptyGroupText = "Group"; this.checkboxes = false; this.hasThreeStates = false; this.autoHeight = false; this.autoItemsHeight = false; this.roundedcorners = true; this.touchMode = "auto"; this.displayMember = ""; this.valueMember = ""; this.searchMode = "startswithignorecase"; this.incrementalSearch = true; this.incrementalSearchDelay = 1000; this.incrementalSearchKeyDownDelay = 300; this.allowDrag = false; this.allowDrop = true; this.dropAction = "default"; this.touchModeStyle = "auto"; this.keyboardNavigation = true; this.enableMouseWheel = true; this.multipleextended = false; this.emptyString = "null"; this.rtl = false; this.rendered = null; this.renderer = null; this.dragStart = null; this.dragEnd = null; this.ready = null; this._checkForHiddenParent = true; this.aria = { "aria-disabled": { name: "disabled", type: "boolean" } }; this.events = ["select", "unselect", "change", "checkChange", "dragStart", "dragEnd", "bindingComplete"] }, createInstance: function (b) { if (this.width == null) { this.width = 200 } if (this.height == null) { this.height = 200 } this.render(); var c = this; a.jqx.utilities.resize(this.host, function () { c._updateSize() }, false, this._checkForHiddenParent) }, render: function () { this.element.innerHTML = ""; var b = this; var d = this.element.className; d += " " + this.toThemeProperty("jqx-listbox"); d += " " + this.toThemeProperty("jqx-reset"); d += " " + this.toThemeProperty("jqx-rc-all"); d += " " + this.toThemeProperty("jqx-widget"); d += " " + this.toThemeProperty("jqx-widget-content"); this.element.className = d; var h = false; if (this.width != null && this.width.toString().indexOf("%") != -1) { this.host.width(this.width); h = true } if (this.height != null && this.height.toString().indexOf("%") != -1) { this.host.height(this.height); if (this.host.height() == 0) { this.host.height(200) } h = true } if (this.width != null && this.width.toString().indexOf("px") != -1) { this.host.width(this.width) } else { if (this.width != undefined && !isNaN(this.width)) { this.element.style.width = parseInt(this.width) + "px" } } if (this.height != null && this.height.toString().indexOf("px") != -1) { this.host.height(this.height) } else { if (this.height != undefined && !isNaN(this.height)) { this.element.style.height = parseInt(this.height) + "px" } } if (this.multiple || this.multipleextended || this.checkboxes) { a.jqx.aria(this, "aria-multiselectable", true) } else { a.jqx.aria(this, "aria-multiselectable", false) } var c = a("<div style='-webkit-appearance: none; background: transparent; outline: none; width:100%; height: 100%; align:left; border: 0px; padding: 0px; margin: 0px; left: 0px; top: 0px; valign:top; position: relative;'><div style='-webkit-appearance: none; border: none; background: transparent; outline: none; width:100%; height: 100%; padding: 0px; margin: 0px; align:left; left: 0px; top: 0px; valign:top; position: relative;'><div id='listBoxContent' style='-webkit-appearance: none; border: none; background: transparent; outline: none; border: none; padding: 0px; overflow: hidden; margin: 0px; align:left; valign:top; left: 0px; top: 0px; position: absolute;'/><div id='verticalScrollBar" + this.element.id + "' style='visibility: inherit; align:left; valign:top; left: 0px; top: 0px; position: absolute;'/><div id='horizontalScrollBar" + this.element.id + "' style='visibility: inherit; align:left; valign:top; left: 0px; top: 0px; position: absolute;'/><div id='bottomRight' style='align:left; valign:top; left: 0px; top: 0px; border: none; position: absolute;'/></div></div>"); if (this._checkForHiddenParent) { this._addInput(); if (!this.host.attr("tabIndex")) { this.host.attr("tabIndex", 1) } } this.host.attr("role", "listbox"); if (this.checkboxes && !this.host.jqxCheckBox) { throw new Error("jqxListBox: Missing reference to jqxcheckbox.js.") } this.host.append(c); var f = this.host.find("#verticalScrollBar" + this.element.id); if (!this.host.jqxButton) { throw new Error("jqxListBox: Missing reference to jqxbuttons.js."); return } if (!f.jqxScrollBar) { throw new Error("jqxListBox: Missing reference to jqxscrollbar.js."); return } var g = parseInt(this.host.height()) / 2; if (g == 0) { g = 10 } this.vScrollBar = f.jqxScrollBar({ _initialLayout: true, vertical: true, rtl: this.rtl, theme: this.theme, touchMode: this.touchMode, largestep: g }); var e = this.host.find("#horizontalScrollBar" + this.element.id); this.hScrollBar = e.jqxScrollBar({ _initialLayout: true, vertical: false, rtl: this.rtl, touchMode: this.touchMode, theme: this.theme }); this.content = this.host.find("#listBoxContent"); this.content[0].id = "listBoxContent" + this.element.id; this.bottomRight = this.host.find("#bottomRight").addClass(this.toThemeProperty("jqx-listbox-bottomright")); this.bottomRight[0].id = "bottomRight" + this.element.id; this.vScrollInstance = a.data(this.vScrollBar[0], "jqxScrollBar").instance; this.hScrollInstance = a.data(this.hScrollBar[0], "jqxScrollBar").instance; if (this.isTouchDevice()) { if (!(a.jqx.browser.msie && a.jqx.browser.version < 9)) { var i = a("<div class='overlay' style='z-index: 99; -webkit-appearance: none; border: none; background: black; opacity: 0.01; outline: none; border: none; padding: 0px; overflow: hidden; margin: 0px; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div>"); this.content.parent().append(i); this.overlayContent = this.host.find(".overlay") } } this._updateTouchScrolling(); this.host.addClass("jqx-disableselect"); if (this.host.jqxDragDrop) { jqxListBoxDragDrop() } }, _highlight: function (b, c) { var d = c.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&"); return b.replace(new RegExp("(" + d + ")", "ig"), function (e, f) { return "<b>" + f + "</b>" }) }, _addInput: function () { var b = this.host.attr("name"); if (!b) { b = this.element.id } else { this.host.attr("name", "") } this.input = a("<input type='hidden'/>"); this.host.append(this.input); this.input.attr("name", b) }, _updateTouchScrolling: function () { var b = this; if (this.isTouchDevice()) { b.enableHover = false; var c = this.overlayContent ? this.overlayContent : this.content; this.removeHandler(a(c), a.jqx.mobile.getTouchEventName("touchstart") + ".touchScroll"); this.removeHandler(a(c), a.jqx.mobile.getTouchEventName("touchmove") + ".touchScroll"); this.removeHandler(a(c), a.jqx.mobile.getTouchEventName("touchend") + ".touchScroll"); this.removeHandler(a(c), "touchcancel.touchScroll"); a.jqx.mobile.touchScroll(c, b.vScrollInstance.max, function (f, e) { if (b.vScrollBar.css("visibility") != "hidden") { var d = b.vScrollInstance.value; b.vScrollInstance.setPosition(d + e); b._lastScroll = new Date() } if (b.hScrollBar.css("visibility") != "hidden") { var d = b.hScrollInstance.value; b.hScrollInstance.setPosition(d + f); b._lastScroll = new Date() } }, this.element.id, this.hScrollBar, this.vScrollBar); if (b.vScrollBar.css("visibility") != "visible" && b.hScrollBar.css("visibility") != "visible") { a.jqx.mobile.setTouchScroll(false, this.element.id) } else { a.jqx.mobile.setTouchScroll(true, this.element.id) } this._arrange() } }, isTouchDevice: function () { var b = a.jqx.mobile.isTouchDevice(); if (this.touchMode == true) { if (this.touchDevice) { return true } if (a.jqx.browser.msie && a.jqx.browser.version < 9) { return false } this.touchDevice = true; b = true; a.jqx.mobile.setMobileSimulator(this.element) } else { if (this.touchMode == false) { b = false } } if (b && this.touchModeStyle != false) { this.scrollBarSize = a.jqx.utilities.touchScrollBarSize } if (b) { this.host.addClass(this.toThemeProperty("jqx-touch")) } return b }, beginUpdate: function () { this.updatingListBox = true }, endUpdate: function () { this.updatingListBox = false; this._addItems(); this._renderItems() }, beginUpdateLayout: function () { this.updating = true }, resumeUpdateLayout: function () { this.updating = false; this.vScrollInstance.value = 0; this._render(false) }, propertyChangedHandler: function (b, c, e, d) { if (this.isInitialized == undefined || this.isInitialized == false) { return } if (c == "itemHeight") { b.refresh() } if (c == "source" || c == "checkboxes") { if (d == null && e && e.unbindBindingUpdate) { e.unbindBindingUpdate(b.element.id); e.unbindDownloadComplete(b.element.id) } b.clearSelection(); b.refresh() } if (c == "scrollBarSize" || c == "equalItemsWidth") { if (d != e) { b._updatescrollbars() } } if (c == "disabled") { b._renderItems(); b.vScrollBar.jqxScrollBar({ disabled: d }); b.hScrollBar.jqxScrollBar({ disabled: d }) } if (c == "touchMode" || c == "rtl") { b._removeHandlers(); b.vScrollBar.jqxScrollBar({ touchMode: d }); b.hScrollBar.jqxScrollBar({ touchMode: d }); if (c == "touchMode") { if (!(a.jqx.browser.msie && a.jqx.browser.version < 9)) { var g = a("<div class='overlay' style='z-index: 99; -webkit-appearance: none; border: none; background: black; opacity: 0.01; outline: none; border: none; padding: 0px; overflow: hidden; margin: 0px; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div>"); b.content.parent().append(g); b.overlayContent = b.host.find(".overlay") } } b._updateTouchScrolling(); b._addHandlers(); b._render(false) } if (!this.updating) { if (c == "width" || c == "height") { b._updateSize() } } if (c == "theme") { if (e != d) { b.hScrollBar.jqxScrollBar({ theme: b.theme }); b.vScrollBar.jqxScrollBar({ theme: b.theme }); b.host.removeClass(); b.host.addClass(b.toThemeProperty("jqx-listbox")); b.host.addClass(b.toThemeProperty("jqx-widget")); b.host.addClass(b.toThemeProperty("jqx-widget-content")); b.host.addClass(b.toThemeProperty("jqx-reset")); b.host.addClass(b.toThemeProperty("jqx-rc-all")); b.refresh() } } if (c == "selectedIndex") { b.clearSelection(); b.selectIndex(d, true) } if (c == "displayMember" || c == "valueMember") { if (e != d) { var f = b.selectedIndex; b.refresh(); b.selectedIndex = f; b.selectedIndexes[f] = f } b._renderItems() } if (c == "autoHeight") { if (e != d) { b._render(false) } else { b._updatescrollbars(); b._renderItems() } } }, loadFromSelect: function (i) { if (i == null) { return } var c = "#" + i; var f = a(c); if (f.length > 0) { var e = f.find("option"); var b = f.find("optgroup"); var d = 0; var h = -1; var g = new Array(); a.each(e, function () { var k = b.find(this).length > 0; var m = null; if (this.text != this.value && (this.label == null || this.label == "")) { this.label = this.text } var l = { disabled: this.disabled, value: this.value, label: this.label, title: this.title, originalItem: this }; var j = a.jqx.browser.msie && a.jqx.browser.version < 8; if (j) { if (l.value == "" && this.text != null && this.text.length > 0) { l.value = this.text } } if (k) { m = b.find(this).parent()[0].label; l.group = m } if (this.selected) { h = d } g[d] = l; d++ }); this.source = g; this.fromSelect = true; this.clearSelection(); this.selectedIndex = h; this.selectedIndexes[this.selectedIndex] = this.selectedIndex; this.refresh() } }, invalidate: function () { this._cachedItemHtml = []; this._renderItems(); this.virtualSize = null; this._updateSize() }, refresh: function (c) { var b = this; if (this.vScrollBar == undefined) { return } this._cachedItemHtml = []; this.visibleItems = new Array(); var d = function (e) { if (e == true) { if (b.selectedIndex != -1) { var f = b.selectedIndex; b.selectedIndex = -1; b._stopEvents = true; b.selectIndex(f, false, true); if (b.selectedIndex == -1) { b.selectedIndex = f } b._stopEvents = false } } }; if (this.itemswrapper != null) { this.itemswrapper.remove(); this.itemswrapper = null } if (a.jqx.dataAdapter && this.source != null && this.source._source) { this.databind(this.source); d(c); return } this.items = this.loadItems(this.source); this._raiseEvent("6"); this._render(false, c == true); d(c) }, _render: function (c, b) { this._addItems(); this._renderItems(); this.vScrollInstance.setPosition(0); this._cachedItemHtml = new Array(); if (c == undefined || c) { if (this.items != undefined && this.items != null) { if (this.selectedIndex >= 0 && this.selectedIndex < this.items.length) { this.selectIndex(this.selectedIndex, true, true, true) } } } if (this.allowDrag && this._enableDragDrop) { this._enableDragDrop(); if (this.isTouchDevice()) { this._removeHandlers(); if (this.overlayContent) { this.overlayContent.remove(); this.overlayContent = null } this._updateTouchScrolling(); this._addHandlers(); return } } this._updateTouchScrolling(); if (this.rendered) { this.rendered() } if (this.ready) { this.ready() } }, _hitTest: function (c, f) { var e = parseInt(this.vScrollInstance.value); var b = this._searchFirstVisibleIndex(f + e, this.renderedVisibleItems); if (this.renderedVisibleItems[b] != undefined && this.renderedVisibleItems[b].isGroup) { return null } if (this.renderedVisibleItems.length > 0) { var d = this.renderedVisibleItems[this.renderedVisibleItems.length - 1]; if (d.height + d.top < f + e) { return null } } b = this._searchFirstVisibleIndex(f + e); return this.visibleItems[b]; return null }, _searchFirstVisibleIndex: function (e, f) { if (e == undefined) { e = parseInt(this.vScrollInstance.value) } var c = 0; if (f == undefined || f == null) { f = this.visibleItems } var b = f.length; while (c <= b) { mid = parseInt((c + b) / 2); var d = f[mid]; if (d == undefined) { break } if (d.initialTop > e && d.initialTop + d.height > e) { b = mid - 1 } else { if (d.initialTop < e && d.initialTop + d.height <= e) { c = mid + 1 } else { return mid; break } } } return 0 }, _renderItems: function () { if (this.items == undefined || this.items.length == 0) { this.visibleItems = new Array(); return } if (this.updatingListBox == true) { return } var N = this.isTouchDevice(); var G = this.vScrollInstance; var h = this.hScrollInstance; var g = parseInt(G.value); var f = parseInt(h.value); if (this.rtl) { if (this.hScrollBar[0].style.visibility != "hidden") { f = h.max - f } } var A = this.items.length; var M = this.host.width(); var K = parseInt(this.content[0].style.width); var b = K + parseInt(h.max); var p = parseInt(this.vScrollBar[0].style.width) + 2; if (this.vScrollBar[0].style.visibility == "hidden") { p = 0 } if (this.hScrollBar[0].style.visibility != "visible") { b = K } var k = this._getVirtualItemsCount(); var L = new Array(); var E = 0; var D = parseInt(this.element.style.height) + 2; if (this.element.style.height.indexOf("%") != -1) { D = this.host.outerHeight() } if (isNaN(D)) { D = 0 } var s = 0; var r = 0; var Q = 0; if (G.value == 0 || this.visibleItems.length == 0) { for (var q = 0; q < this.items.length; q++) { var w = this.items[q]; if (w.visible) { w.top = -g; w.initialTop = -g; if (!w.isGroup && w.visible) { this.visibleItems[r++] = w; w.visibleIndex = r - 1 } this.renderedVisibleItems[Q++] = w; w.left = -f; var c = w.top + w.height; if (c >= 0 && w.top - w.height <= D) { L[E++] = { index: q, item: w } } g -= w.height } } } var l = g > 0 ? this._searchFirstVisibleIndex(this.vScrollInstance.value, this.renderedVisibleItems) : 0; var O = 0; E = 0; var x = this.vScrollInstance.value; var J = 0; while (O < 100 + D) { var w = this.renderedVisibleItems[l]; if (w == undefined) { break } if (w.visible) { w.left = -f; var c = w.top + w.height - x; if (c >= 0 && w.initialTop - x - w.height <= 2 * D) { L[E++] = { index: l, item: w } } } l++; if (w.visible) { O += w.initialTop - x + w.height - O } J++; if (J > this.items.length - 1) { break } } var n = this.toThemeProperty("jqx-listitem-state-normal") + " " + this.toThemeProperty("jqx-item"); var i = this.toThemeProperty("jqx-listitem-state-group"); var P = this.toThemeProperty("jqx-listitem-state-disabled") + " " + this.toThemeProperty("jqx-fill-state-disabled"); var B = 0; var m = this; for (var q = 0; q < this.visualItems.length; q++) { var C = this.visualItems[q]; var I = function () { var y = C[0].firstChild; if (m.checkboxes) { y = C[0].lastChild } if (y != null) { y.style.visibility = "hidden"; y.className = "" } if (m.checkboxes && m.host.jqxCheckBox) { var R = C.find(".chkbox"); R.css({ visibility: "hidden" }) } }; if (q < L.length) { var w = L[q].item; if (w.initialTop - x >= D) { I(); continue } var z = a(C[0].firstChild); if (this.checkboxes) { z = a(C[0].lastChild) } if (z.length == 0) { continue } if (z[0] == null) { continue } z[0].className = ""; z[0].style.display = "block"; z[0].style.visibility = "inherit"; var o = ""; if (!w.isGroup && !this.selectedIndexes[w.index] >= 0) { o = n } else { o = i } if (w.disabled || this.disabled) { o += " " + P } if (this.roundedcorners) { o += " " + this.toThemeProperty("jqx-rc-all") } if (N) { o += " " + this.toThemeProperty("jqx-listitem-state-normal-touch") } z[0].className = o; if (this.renderer) { if (!w.key) { w.key = this.generatekey() } if (!this._cachedItemHtml) { this._cachedItemHtml = new Array() } if (this._cachedItemHtml[w.key]) { if (z[0].innerHTML != this._cachedItemHtml[w.key]) { z[0].innerHTML = this._cachedItemHtml[w.key] } } else { var v = this.renderer(w.index, w.label, w.value); z[0].innerHTML = v; this._cachedItemHtml[w.key] = z[0].innerHTML } } else { if (this.itemHeight !== -1) { var j = 2 + 2 * parseInt(z.css("padding-top")); z[0].style.lineHeight = (w.height - j) + "px"; z.css("vertical-align", "middle") } if (w.html != null && w.html.toString().length > 0) { z[0].innerHTML = w.html } else { if (w.label != null || w.value != null) { if (w.label != null) { if (z[0].innerHTML !== w.label) { z[0].innerHTML = w.label } if (w.label == "") { z[0].innerHTML = this.emptyString; if (this.emptyString == "") { z[0].style.height = (w.height - 8) + "px" } } if (!this.incrementalSearch && !w.disabled) { if (this.searchString != undefined && this.searchString != "") { z[0].innerHTML = this._highlight(w.label, this.searchString) } } } else { if (z[0].innerHTML !== w.value) { z[0].innerHTML = w.value } else { if (w.label == "") { z[0].innerHTML = " " } } } } else { if (w.label == "" || w.label == null) { z[0].innerHTML = ""; z[0].style.height = (w.height - 8) + "px" } } } } C[0].style.left = w.left + "px"; C[0].style.top = w.initialTop - x + "px"; w.element = z[0]; if (w.title) { z[0].title = w.title } if (this.equalItemsWidth && !w.isGroup) { if (s == 0) { var d = parseInt(b); var u = parseInt(z.outerWidth()) - parseInt(z.width()); d -= u; var H = 1; if (H != null) { H = parseInt(H) } else { H = 0 } d -= 2 * H; s = d; if (this.checkboxes && this.host.jqxCheckBox && this.hScrollBar[0].style.visibility == "hidden") { s -= 18 } } if (K > this.virtualSize.width) { z[0].style.width = s + "px"; w.width = s } else { z[0].style.width = -4 + this.virtualSize.width + "px"; w.width = this.virtualSize.width - 4 } } else { if (z.width() < this.host.width()) { z.width(this.host.width() - 2) } } if (this.rtl) { z[0].style.textAlign = "right" } if (this.autoItemsHeight) { z[0].style.whiteSpace = "normal"; z.width(s); w.width = s } B = 0; if (this.checkboxes && this.host.jqxCheckBox && !w.isGroup) { if (B == 0) { B = (w.height - 16) / 2; B++ } var e = a(C.children()[0]); e[0].item = w; if (!this.rtl) { if (z[0].style.left != "18px") { z[0].style.left = "18px" } } else { if (z[0].style.left != "0px") { z[0].style.left = "0px" } } if (this.rtl) { e.css("left", 8 + w.width + "px") } e.css("top", B + "px"); e.css({ display: "block", visibility: "inherit" }); var t = false; if (e.data().jqxCheckBox) { var F = e.data().jqxCheckBox.instance; var t = F.checked } if (a.jqx.ariaEnabled) { if (t) { C[0].setAttribute("aria-selected", true) } else { C[0].removeAttribute("aria-selected") } } if (F) { if (t != w.checked) { F._setState(w.checked); if (w.disabled != F.disabled) { e.jqxCheckBox({ disabled: w.disabled }) } } else { if (w.disabled != F.disabled) { e.jqxCheckBox({ disabled: w.disabled }) } } if ((this.disabled || w.disabled) != F.disabled) { e.jqxCheckBox({ disabled: this.disabled || w.disabled }) } } } else { if (this.checkboxes && this.host.jqxCheckBox) { var e = a(C.children()[0]); e.css({ display: "none", visibility: "inherit" }) } } if (this.selectedIndexes[w.visibleIndex] >= 0 && !w.disabled) { z.addClass(this.toThemeProperty("jqx-listitem-state-selected")); z.addClass(this.toThemeProperty("jqx-fill-state-pressed")); if (a.jqx.ariaEnabled) { C[0].setAttribute("aria-selected", true); this._activeElement = C[0] } } else { if (!this.checkboxes) { if (a.jqx.ariaEnabled) { C[0].removeAttribute("aria-selected") } } } } else { I() } } }, generatekey: function () { var b = function () { return (((1 + Math.random()) * 65536) | 0).toString(16).substring(1) }; return (b() + b() + "-" + b() + "-" + b() + "-" + b() + "-" + b() + b() + b()) }, _calculateVirtualSize: function () { var o = 0; var m = 2; var g = 0; var n = a("<span></span>"); if (this.equalItemsWidth) { n.css("float", "left") } var h = 0; var i = this.host.outerHeight(); a(document.body).append(n); var e = this.items.length; var j = this.host.width(); if (this.autoItemsHeight) { j -= 10; if (this.vScrollBar.css("visibility") != "hidden") { j -= 20 } } if (this.autoItemsHeight || this.renderer || this.groups.length > 1 || (e > 0 && this.items[0].html != null && this.items[0].html != "")) { for (var g = 0; g < e; g++) { var r = this.items[g]; if (r.isGroup && (r.label == "" && r.html == "")) { continue } if (!r.visible) { continue } var d = ""; if (!r.isGroup) { d += this.toThemeProperty("jqx-listitem-state-normal jqx-rc-all") } else { d += this.toThemeProperty("jqx-listitem-state-group jqx-rc-all") } d += " " + this.toThemeProperty("jqx-fill-state-normal"); if (this.isTouchDevice()) { d += " " + this.toThemeProperty("jqx-touch") } n[0].className = d; if (this.autoItemsHeight) { n[0].style.whiteSpace = "normal"; var b = this.checkboxes ? -20 : 0; n[0].style.width = (b + j) + "px" } if (this.renderer) { var k = this.renderer(r.index, r.label, r.value); n[0].innerHTML = k } else { if (r.html != null && r.html.toString().length > 0) { n[0].innerHTML = r.html } else { if (r.label != null || r.value != null) { if (r.label != null) { n[0].innerHTML = r.label; if (r.label == "") { n[0].innerHTML = "Empty" } } else { n[0].innerHTML = r.value } } } } var q = n.outerHeight(); var s = n.outerWidth(); if (this.itemHeight > -1) { q = this.itemHeight } r.height = q; r.width = s; m += q; o = Math.max(o, s); if (m <= i) { h++ } } } else { var m = 0; var l = 0; var c = ""; var t = 0; var f = 0; var p = -1; for (var g = 0; g < e; g++) { var r = this.items[g]; if (r.isGroup && (r.label == "" && r.html == "")) { continue } if (!r.visible) { continue } p++; var d = ""; if (p == 0) { d += this.toThemeProperty("jqx-listitem-state-normal jqx-rc-all"); d += " " + this.toThemeProperty("jqx-fill-state-normal"); d += " " + this.toThemeProperty("jqx-widget"); d += " " + this.toThemeProperty("jqx-listbox"); d += " " + this.toThemeProperty("jqx-widget-content"); if (this.isTouchDevice()) { d += " " + this.toThemeProperty("jqx-touch"); d += " " + this.toThemeProperty("jqx-listitem-state-normal-touch") } n[0].className = d; if (this.autoItemsHeight) { n[0].style.whiteSpace = "normal"; var b = this.checkboxes ? -20 : 0; n[0].style.width = (b + j) + "px" } if (r.html == null || (r.label == "" || r.label == null)) { n[0].innerHTML = "Item" } else { if (r.html != null && r.html.toString().length > 0) { n[0].innerHTML = r.html } else { if (r.label != null || r.value != null) { if (r.label != null) { n[0].innerHTML = r.label } else { n[0].innerHTML = r.value } } } } var q = n.outerHeight(); if (this.itemHeight > -1) { q = this.itemHeight } l = q } if (t != undefined) { f = t } if (r.html != null && r.html.toString().length > 0) { t = Math.max(t, r.html.toString().length); if (f != t) { c = r.html } } else { if (r.label != null) { t = Math.max(t, r.label.length); if (f != t) { c = r.label } } else { if (r.value != null) { t = Math.max(t, r.value.length); if (f != t) { c = r.value } } } } r.height = l; m += l; if (m <= i) { h++ } } n[0].innerHTML = c; o = n.outerWidth() } m += 2; if (h < 10) { h = 10 } n.remove(); return { width: o, height: m, itemsPerPage: h } }, _getVirtualItemsCount: function () { if (this.virtualItemsCount == 0) { var b = parseInt(this.host.height()) / 5; if (b > this.items.length) { b = this.items.length } return b } else { return this.virtualItemsCount } }, _addItems: function (l) { if (this.updatingListBox == true) { return } if (this.items == undefined || this.items.length == 0) { this.virtualSize = { width: 0, height: 0, itemsPerPage: 0 }; this._updatescrollbars(); this.renderedVisibleItems = new Array(); if (this.itemswrapper) { this.itemswrapper.children().remove() } return } if (l == false) { var o = this._calculateVirtualSize(); var p = o.itemsPerPage * 2; if (this.autoHeight) { p = this.items.length } this.virtualItemsCount = Math.min(p, this.items.length); var j = this; var i = o.width; this.virtualSize = o; this._updatescrollbars(); return } var r = this; var k = 0; this.visibleItems = new Array(); this.renderedVisibleItems = new Array(); this._removeHandlers(); if (this.allowDrag && this._enableDragDrop) { this.itemswrapper = null } if (this.itemswrapper == null) { this.content[0].innerHTML = ""; this.itemswrapper = a('<div style="outline: 0 none; overflow:hidden; width:100%; position: relative;"></div>'); this.itemswrapper.height(2 * this.host.height()); this.content.append(this.itemswrapper) } var o = this._calculateVirtualSize(); var p = o.itemsPerPage * 2; if (this.autoHeight) { p = this.items.length } this.virtualItemsCount = Math.min(p, this.items.length); var j = this; var i = o.width; this.virtualSize = o; this.itemswrapper.width(Math.max(this.host.width(), 17 + o.width)); var m = 0; var g = ""; for (var n = m; n < this.virtualItemsCount; n++) { var q = this.items[n]; var b = "listitem" + n + this.element.id; g += "<div role='option' id='" + b + "' class='jqx-listitem-element'>"; if (this.checkboxes && this.host.jqxCheckBox) { g += '<div style="background-color: transparent; padding: 0; margin: 0; position: absolute; float: left; width: 16px; height: 16px;" class="chkbox"></div>' } g += "<span style='-ms-touch-action: none;'></span></div>" } if (r.WinJS) { MSApp.execUnsafeLocalFunction(function () { WinJS.Utilities.setInnerHTMLUnsafe(this.itemswrapper[0], g) }) } else { this.itemswrapper[0].innerHTML = g } var d = this.itemswrapper.children(); for (var n = m; n < this.virtualItemsCount; n++) { var q = this.items[n]; var c = a(d[n]); if (this.allowDrag && this._enableDragDrop) { c.addClass("draggable") } if (this.checkboxes && this.host.jqxCheckBox) { var h = a(c.children()[0]); c.css("float", "left"); var e = a(c[0].firstChild); e.css("float", "left"); h.jqxCheckBox({ locked: true, disabledContainer: true, hasInput: false, checked: q.checked, animationShowDelay: 0, animationHideDelay: 0, disabled: q.disabled, enableContainerClick: false, keyboardCheck: false, hasThreeStates: this.hasThreeStates, theme: this.theme }); q.checkBoxElement = h[0]; q.checkBoxInstance = h.data().jqxCheckBox.instance; var f = function (v, u) { var s = v.owner.element.item; if (s != null) { var t = v.args; if (u) { j.checkIndex(s.index, true) } else { if (s.checked == false) { j.uncheckIndex(s.index, true) } else { if (s.hasThreeStates && j.hasThreeStates) { if (u == false) { j.uncheckIndex(s.index, true) } else { j.indeterminateIndex(s.index, true) } } else { j.uncheckIndex(s.index, true) } } } } j.focused = true }; q.checkBoxInstance.updated = f } c[0].style.height = q.height + "px"; c[0].style.top = k + "px"; k += q.height; this.visualItems[n] = c } this._addHandlers(); this._updatescrollbars(); if (this.autoItemsHeight) { var o = this._calculateVirtualSize(); var p = o.itemsPerPage * 2; if (this.autoHeight) { p = this.items.length } this.virtualItemsCount = Math.min(p, this.items.length); var j = this; var i = o.width; this.virtualSize = o; this._updatescrollbars() } if (a.jqx.browser.msie && a.jqx.browser.version < 8) { this.host.attr("hideFocus", true); this.host.find("div").attr("hideFocus", true) } }, _updatescrollbars: function () { if (!this.virtualSize) { return } var l = this.virtualSize.height; var j = this.virtualSize.width; var f = this.vScrollInstance; var e = this.hScrollInstance; this._arrange(false); var k = false; var m = this.host.outerWidth(); if (l > this.host.outerHeight()) { var b = 0; if (j > m) { b = this.hScrollBar.outerHeight() + 2 } var d = f.max; f.max = 2 + parseInt(l) + b - parseInt(this.host.height()); if (this.vScrollBar[0].style.visibility != "inherit") { this.vScrollBar[0].style.visibility = "inherit"; k = true } if (d != f.max) { f._arrange() } } else { if (this.vScrollBar[0].style.visibility != "hidden") { this.vScrollBar[0].style.visibility = "hidden"; k = true; f.setPosition(0) } } var h = 0; if (this.vScrollBar[0].style.visibility != "hidden") { h = this.scrollBarSize + 6 } var g = this.checkboxes ? 20 : 0; if (this.autoItemsHeight) { this.hScrollBar[0].style.visibility = "hidden" } else { if (j >= m - h - g) { var i = e.max; if (this.vScrollBar[0].style.visibility == "inherit") { e.max = g + h + parseInt(j) - this.host.width() + 4 } else { e.max = g + parseInt(j) - this.host.width() + 6 } if (this.hScrollBar[0].style.visibility != "inherit") { this.hScrollBar[0].style.visibility = "inherit"; k = true } if (i != e.max) { e._arrange() } if (this.vScrollBar[0].style.visibility == "inherit") { f.max = 2 + parseInt(l) + this.hScrollBar.outerHeight() + 2 - parseInt(this.host.height()) } } else { if (this.hScrollBar[0].style.visibility != "hidden") { this.hScrollBar[0].style.visibility = "hidden"; k = true } } } e.setPosition(0); if (k) { this._arrange() } if (this.itemswrapper) { this.itemswrapper.width(Math.max(this.host.width(), 17 + j)); this.itemswrapper.height(2 * this.host.height()) } var c = this.isTouchDevice(); if (c) { if (this.vScrollBar.css("visibility") != "visible" && this.hScrollBar.css("visibility") != "visible") { a.jqx.mobile.setTouchScroll(false, this.element.id) } else { a.jqx.mobile.setTouchScroll(true, this.element.id) } } }, clear: function () { this.source = null; this.clearSelection(); this.refresh() }, clearSelection: function (b) { for (var c = 0; c < this.selectedIndexes.length; c++) { if (this.selectedIndexes[c] && this.selectedIndexes[c] != -1) { this._raiseEvent("1", { index: c, type: "api", item: this.getVisibleItem(c), originalEvent: null }) } this.selectedIndexes[c] = -1 } this.selectedIndex = -1; if (b != false) { this._renderItems() } }, unselectIndex: function (b, c) { if (isNaN(b)) { return } this.selectedIndexes[b] = -1; var e = false; for (var d = 0; d < this.selectedIndexes.length; d++) { var b = this.selectedIndexes[d]; if (b != -1 && b != undefined) { e = true } } if (!e) { this.selectedValue = null; this.selectedIndex = -1 } if (c == undefined || c == true) { this._renderItems(); this._raiseEvent("1", { index: b, type: "api", item: this.getVisibleItem(b), originalEvent: null }) } this._updateInputSelection(); this._raiseEvent("2", { index: b, type: "api", item: this.getItem(b) }) }, getItem: function (c) { if (c == -1 || isNaN(c) || typeof (c) === "string") { if (c === -1) { return null } return this.getItemByValue(c) } var b = null; var d = a.each(this.items, function () { if (this.index == c) { b = this; return false } }); return b }, getVisibleItem: function (b) { if (b == -1 || isNaN(b) || typeof (b) === "string") { if (b === -1) { return null } return this.getItemByValue(b) } return this.visibleItems[b] }, getVisibleItems: function () { return this.visibleItems }, checkIndex: function (b, c, e) { if (!this.checkboxes || !this.host.jqxCheckBox) { return } if (isNaN(b)) { return } if (b < 0 || b >= this.visibleItems.length) { return } if (this.visibleItems[b] != null && this.visibleItems[b].disabled) { return } if (this.disabled) { return } var d = this.getItem(b); if (this.groups.length > 0) { var d = this.getVisibleItem(b) } if (d != null) { var f = a(d.checkBoxElement); d.checked = true; if (c == undefined || c == true) { this._updateCheckedItems() } } if (e == undefined || e == true) { this._raiseEvent(3, { label: d.label, value: d.value, checked: true, item: d }) } }, getCheckedItems: function () { if (!this.checkboxes || !this.host.jqxCheckBox) { return null } var b = new Array(); if (this.items == undefined) { return } a.each(this.items, function () { if (this.checked) { b[b.length] = this } }); return b }, checkAll: function (b) { if (!this.checkboxes || !this.host.jqxCheckBox) { return } if (this.disabled) { return } var c = this; a.each(this.items, function () { var d = this; if (b !== false && d.checked !== true) { c._raiseEvent(3, { label: d.label, value: d.value, checked: true, item: d }) } this.checked = true }); this._updateCheckedItems() }, uncheckAll: function (b) { if (!this.checkboxes || !this.host.jqxCheckBox) { return } if (this.disabled) { return } var c = this; a.each(this.items, function () { var d = this; if (b !== false && d.checked !== false) { this.checked = false; c._raiseEvent(3, { label: d.label, value: d.value, checked: false, item: d }) } this.checked = false }); this._updateCheckedItems() }, uncheckIndex: function (b, c, e) { if (!this.checkboxes || !this.host.jqxCheckBox) { return } if (isNaN(b)) { return } if (b < 0 || b >= this.visibleItems.length) { return } if (this.visibleItems[b] != null && this.visibleItems[b].disabled) { return } if (this.disabled) { return } var d = this.getItem(b); if (this.groups.length > 0) { var d = this.getVisibleItem(b) } if (d != null) { var f = a(d.checkBoxElement); d.checked = false; if (c == undefined || c == true) { this._updateCheckedItems() } } if (e == undefined || e == true) { this._raiseEvent(3, { label: d.label, value: d.value, checked: false, item: d }) } }, indeterminateIndex: function (b, c, e) { if (!this.checkboxes || !this.host.jqxCheckBox) { return } if (isNaN(b)) { return } if (b < 0 || b >= this.visibleItems.length) { return } if (this.visibleItems[b] != null && this.visibleItems[b].disabled) { return } if (this.disabled) { return } var d = this.getItem(b); if (this.groups.length > 0) { var d = this.getVisibleItem(b) } if (d != null) { var f = a(d.checkBoxElement); d.checked = null; if (c == undefined || c == true) { this._updateCheckedItems() } } if (e == undefined || e == true) { this._raiseEvent(3, { checked: null }) } }, getSelectedIndex: function () { return this.selectedIndex }, getSelectedItems: function () { var b = this.getVisibleItems(); var e = this.selectedIndexes; var d = []; for (var c in e) { if (e[c] != -1) { d[d.length] = b[c] } } return d }, getSelectedItem: function () { return this.getItem(this.selectedIndex) }, _updateCheckedItems: function () { var b = this.selectedIndex; this.clearSelection(false); var c = this.getCheckedItems(); this.selectedIndex = b; this._renderItems(); var d = a.data(this.element, "hoveredItem"); if (d != null) { a(d).addClass(this.toThemeProperty("jqx-listitem-state-hover")); a(d).addClass(this.toThemeProperty("jqx-fill-state-hover")) } this._updateInputSelection() }, getItemByValue: function (d) { if (this.visibleItems == null) { return } if (this.itemsByValue) { return this.itemsByValue[a.trim(d).split(" ").join("")] } var b = this.visibleItems; for (var c = 0; c < b.length; c++) { if (b[c].value == d) { return b[c]; break } } }, checkItem: function (c) { if (c != null) { var b = this._getItemByParam(c); return this.checkIndex(b.index, true) } return false }, uncheckItem: function (c) { if (c != null) { var b = this._getItemByParam(c); return this.uncheckIndex(b.index, true) } return false }, indeterminateItem: function (c) { if (c != null) { var b = this._getItemByParam(c); return this.indeterminateIndex(b.index, true) } return false }, val: function (c) { if (this.input && arguments.length == 0) { return this.input.val() } var b = this.getItemByValue(c); if (b != null) { this.selectItem(b) } if (this.input) { return this.input.val() } }, selectItem: function (c) { if (c != null) { if (c.index == undefined) { var b = this.getItemByValue(c); if (b) { c = b } } return this.selectIndex(c.visibleIndex, true) } return false }, unselectItem: function (c) { if (c != null) { if (c.index == undefined) { var b = this.getItemByValue(c); if (b) { c = b } } return this.unselectIndex(c.visibleIndex, true) } return false }, selectIndex: function (j, q, c, d, m, b) { if (isNaN(j)) { return } if (j < -1 || j >= this.visibleItems.length) { return } if (this.visibleItems[j] != null && this.visibleItems[j].disabled) { return } if (this.disabled) { return } if (!this.multiple && !this.multipleextended && this.selectedIndex == j && !d) { return } if (this.checkboxes) { this._updateCheckedItems(); return } this.focused = true; var p = false; if (this.selectedIndex != j) { p = true } var o = this.selectedIndex; if (this.selectedIndex == j && !this.multiple) { o = -1 } if (m == undefined) { m = "none" } var h = this.getItem(j); var r = this.getItem(o); if (this.visibleItems && this.items && this.visibleItems.length != this.items.length) { h = this.getVisibleItem(j); r = this.getVisibleItem(o) } if (d != undefined && d) { this._raiseEvent("1", { index: o, type: m, item: r, originalEvent: b }); this.selectedIndex = j; this.selectedIndexes[o] = -1; this.selectedIndexes[j] = j; if (h) { this.selectedValue = h.value } this._raiseEvent("0", { index: j, type: m, item: h, originalEvent: b }) } else { var l = this; var e = function (s, w, u, v, t, i) { l._raiseEvent("1", { index: w, type: u, item: v, originalEvent: i }); l.selectedIndex = s; l.selectedIndexes[w] = -1; w = s; l.selectedIndexes[s] = s; l._raiseEvent("0", { index: s, type: u, item: t, originalEvent: i }) }; var k = function (s, w, u, v, t, i) { if (l.selectedIndexes[s] == undefined || l.selectedIndexes[s] == -1) { l.selectedIndexes[s] = s; l.selectedIndex = s; l._raiseEvent("0", { index: s, type: u, item: t, originalEvent: i }) } else { w = l.selectedIndexes[s]; v = l.getVisibleItem(w); l.selectedIndexes[s] = -1; l.selectedIndex = -1; l._raiseEvent("1", { index: w, type: u, item: v, originalEvent: i }) } }; if (this.multipleextended) { if (!this._shiftKey && !this._ctrlKey) { if (m != "keyboard" && m != "mouse") { k(j, o, m, r, h, b); l._clickedIndex = j } else { this.clearSelection(false); l._clickedIndex = j; e(j, o, m, r, h, b) } } else { if (this._ctrlKey) { if (m == "keyboard") { this.clearSelection(false); l._clickedIndex = j } k(j, o, m, r, h, b) } else { if (this._shiftKey) { if (l._clickedIndex == undefined) { l._clickedIndex = o } var f = Math.min(l._clickedIndex, j); var n = Math.max(l._clickedIndex, j); this.clearSelection(false); for (var g = f; g <= n; g++) { l.selectedIndexes[g] = g; l._raiseEvent("0", { index: g, type: m, item: this.getVisibleItem(g), originalEvent: b }) } if (m != "keyboard") { l.selectedIndex = l._clickedIndex } else { l.selectedIndex = j } } } } } else { if (this.multiple) { k(j, o, m, r, h, b) } else { if (h) { this.selectedValue = h.value } e(j, o, m, r, h, b) } } } if (c == undefined || c == true) { this._renderItems() } if (q != undefined && q != null && q == true) { this.ensureVisible(j) } this._raiseEvent("2", { index: j, item: h, oldItem: r, type: m }); this._updateInputSelection(); return p }, _updateInputSelection: function () { if (this.input) { if (this.selectedIndex == -1) { this.input.val("") } else { if (this.items) { if (this.items[this.selectedIndex] != undefined) { this.input.val(this.items[this.selectedIndex].value) } } } if (this.multiple || this.multipleextended || this.checkboxes) { var b = !this.checkboxes ? this.getSelectedItems() : this.getCheckedItems(); var d = ""; if (b) { for (var c = 0; c < b.length; c++) { if (undefined != b[c]) { if (c == b.length - 1) { d += b[c].value } else { d += b[c].value + "," } } } this.input.val(d) } } } }, isIndexInView: function (c) { if (isNaN(c)) { return false } if (!this.items) { return false } if (c < 0 || c >= this.items.length) { return false } var d = this.vScrollInstance.value; var e = this.visibleItems[c]; if (e == undefined) { return true } var b = e.initialTop; var f = e.height; if (b - d < 0 || b - d + f >= this.host.outerHeight()) { return false } return true }, _itemsInPage: function () { var b = 0; var c = this; a.each(this.items, function () { if ((this.initialTop + this.height) >= c.content.height()) { return false } b++ }); return b }, _firstItemIndex: function () { if (this.visibleItems != null) { if (this.visibleItems[0].isGroup) { return this._nextItemIndex(0) } else { return 0 } } return -1 }, _lastItemIndex: function () { if (this.visibleItems != null) { if (this.visibleItems[this.visibleItems.length - 1].isGroup) { return this._prevItemIndex(this.visibleItems.length - 1) } else { return this.visibleItems.length - 1 } } return -1 }, _nextItemIndex: function (b) { for (indx = b + 1; indx < this.visibleItems.length; indx++) { if (this.visibleItems[indx]) { if (!this.visibleItems[indx].disabled && !this.visibleItems[indx].isGroup) { return indx } } } return -1 }, _prevItemIndex: function (b) { for (indx = b - 1; indx >= 0; indx--) { if (this.visibleItems[indx]) { if (!this.visibleItems[indx].disabled && !this.visibleItems[indx].isGroup) { return indx } } } return -1 }, _getMatches: function (g, d) { if (g == undefined || g.length == 0) { return -1 } if (d == undefined) { d = 0 } var b = this.getItems(); var f = this; var c = -1; var e = 0; a.each(b, function (h) { var k = ""; if (!this.isGroup) { if (this.label) { k = this.label.toString() } else { if (this.value) { k = this.value.toString() } else { if (this.title) { k = this.title.toString() } else { k = "jqxItem" } } } var j = false; switch (f.searchMode) { case "containsignorecase": j = a.jqx.string.containsIgnoreCase(k, g); break; case "contains": j = a.jqx.string.contains(k, g); break; case "equals": j = a.jqx.string.equals(k, g); break; case "equalsignorecase": j = a.jqx.string.equalsIgnoreCase(k, g); break; case "startswith": j = a.jqx.string.startsWith(k, g); break; case "startswithignorecase": j = a.jqx.string.startsWithIgnoreCase(k, g); break; case "endswith": j = a.jqx.string.endsWith(k, g); break; case "endswithignorecase": j = a.jqx.string.endsWithIgnoreCase(k, g); break } if (j && this.visibleIndex >= d) { c = this.visibleIndex; return false } } }); return c }, findItems: function (e) { var b = this.getItems(); var d = this; var c = 0; var f = new Array(); a.each(b, function (g) { var j = ""; if (!this.isGroup) { if (this.label) { j = this.label } else { if (this.value) { j = this.value } else { if (this.title) { j = this.title } else { j = "jqxItem" } } } var h = false; switch (d.searchMode) { case "containsignorecase": h = a.jqx.string.containsIgnoreCase(j, e); break; case "contains": h = a.jqx.string.contains(j, e); break; case "equals": h = a.jqx.string.equals(j, e); break; case "equalsignorecase": h = a.jqx.string.equalsIgnoreCase(j, e); break; case "startswith": h = a.jqx.string.startsWith(j, e); break; case "startswithignorecase": h = a.jqx.string.startsWithIgnoreCase(j, e); break; case "endswith": h = a.jqx.string.endsWith(j, e); break; case "endswithignorecase": h = a.jqx.string.endsWithIgnoreCase(j, e); break } if (h) { f[c++] = this } } }); return f }, _handleKeyDown: function (n) { var s = n.keyCode; var k = this; var g = k.selectedIndex; var d = k.selectedIndex; var l = false; if (!this.keyboardNavigation || !this.enableSelection) { return } var j = function () { if (k.multiple) { k.clearSelection(false) } }; if (n.altKey) { s = -1 } if (k.incrementalSearch) { var o = -1; if (!k._searchString) { k._searchString = "" } if ((s == 8 || s == 46) && k._searchString.length >= 1) { k._searchString = k._searchString.substr(0, k._searchString.length - 1) } var r = String.fromCharCode(s); var m = (!isNaN(parseInt(r))); var i = false; if ((s >= 65 && s <= 97) || m || s == 8 || s == 32 || s == 46) { if (!n.shiftKey) { r = r.toLocaleLowerCase() } var e = 1 + k.selectedIndex; if (s != 8 && s != 32 && s != 46) { if (k._searchString.length > 0 && k._searchString.substr(0, 1) == r) { e = 1 + k.selectedIndex } else { k._searchString += r } } if (s == 32) { k._searchString += " " } var b = this._getMatches(k._searchString, e); o = b; if (o == k._lastMatchIndex || o == -1) { var b = this._getMatches(k._searchString, 0); o = b } k._lastMatchIndex = o; if (o >= 0) { var h = function () { j(); k.selectIndex(o, false, false, false, "keyboard", n); var t = k.isIndexInView(o); if (!t) { k.ensureVisible(o) } else { k._renderItems() } }; if (k._toSelectTimer) { clearTimeout(k._toSelectTimer) } k._toSelectTimer = setTimeout(function () { h() }, k.incrementalSearchKeyDownDelay) } i = true } if (k._searchTimer != undefined) { clearTimeout(k._searchTimer) } if (s == 27 || s == 13) { k._searchString = "" } k._searchTimer = setTimeout(function () { k._searchString = ""; k._renderItems() }, k.incrementalSearchDelay); if (o >= 0) { return } if (i) { return false } } if (this.checkboxes) { return true } if (s == 33) { var p = k._itemsInPage(); if (k.selectedIndex - p >= 0) { j(); k.selectIndex(d - p, false, false, false, "keyboard", n) } else { j(); k.selectIndex(k._firstItemIndex(), false, false, false, "keyboard", n) } k._searchString = "" } if (s == 32 && this.checkboxes) { var f = this.getItem(g); if (f != null) { k._updateItemCheck(f, g); n.preventDefault() } k._searchString = "" } if (s == 36) { j(); k.selectIndex(k._firstItemIndex(), false, false, false, "keyboard", n); k._searchString = "" } if (s == 35) { j(); k.selectIndex(k._lastItemIndex(), false, false, false, "keyboard", n); k._searchString = "" } if (s == 34) { var p = k._itemsInPage(); if (k.selectedIndex + p < k.visibleItems.length) { j(); k.selectIndex(d + p, false, false, false, "keyboard", n) } else { j(); k.selectIndex(k._lastItemIndex(), false, false, false, "keyboard", n) } k._searchString = "" } if (s == 38) { k._searchString = ""; if (k.selectedIndex > 0) { var c = k._prevItemIndex(k.selectedIndex); if (c != k.selectedIndex && c != -1) { j(); k.selectIndex(c, false, false, false, "keyboard", n) } else { return true } } else { return false } } else { if (s == 40) { k._searchString = ""; if (k.selectedIndex + 1 < k.visibleItems.length) { var c = k._nextItemIndex(k.selectedIndex); if (c != k.selectedIndex && c != -1) { j(); k.selectIndex(c, false, false, false, "keyboard", n) } else { return true } } else { return false } } } if (s == 35 || s == 36 || s == 38 || s == 40 || s == 34 || s == 33) { var q = k.isIndexInView(k.selectedIndex); if (!q) { k.ensureVisible(k.selectedIndex) } else { k._renderItems() } return false } return true }, _updateItemCheck: function (b, c) { if (b.checked == true) { b.checked = (b.hasThreeStates && this.hasThreeStates) ? null : false } else { b.checked = b.checked != null } switch (b.checked) { case true: this.checkIndex(c); break; case false: this.uncheckIndex(c); break; default: this.indeterminateIndex(c); break } }, wheel: function (d, c) { if (c.autoHeight || !c.enableMouseWheel) { d.returnValue = true; return true } if (c.disabled) { return true } var e = 0; if (!d) { d = window.event } if (d.originalEvent && d.originalEvent.wheelDelta) { d.wheelDelta = d.originalEvent.wheelDelta } if (d.wheelDelta) { e = d.wheelDelta / 120 } else { if (d.detail) { e = -d.detail / 3 } } if (e) { var b = c._handleDelta(e); if (b) { if (d.preventDefault) { d.preventDefault() } if (d.originalEvent != null) { d.originalEvent.mouseHandled = true } if (d.stopPropagation != undefined) { d.stopPropagation() } } if (b) { b = false; d.returnValue = b; return b } else { return false } } if (d.preventDefault) { d.preventDefault() } d.returnValue = false }, _handleDelta: function (d) { var c = this.vScrollInstance.value; if (d < 0) { this.scrollDown() } else { this.scrollUp() } var b = this.vScrollInstance.value; if (c != b) { return true } return false }, focus: function () { try { this.focused = true; this.host.focus(); var c = this; setTimeout(function () { c.host.focus() }, 10) } catch (b) { } }, _removeHandlers: function () { var b = this; this.removeHandler(a(document), "keydown.listbox" + this.element.id); this.removeHandler(a(document), "keyup.listbox" + this.element.id); this.removeHandler(this.vScrollBar, "valuechanged"); this.removeHandler(this.hScrollBar, "valuechanged"); if (this._mousewheelfunc) { this.removeHandler(this.host, "mousewheel", this._mousewheelfunc) } else { this.removeHandler(this.host, "mousewheel") } this.removeHandler(this.host, "keydown"); this.removeHandler(this.content, "mouseleave"); this.removeHandler(this.content, "focus"); this.removeHandler(this.content, "blur"); this.removeHandler(this.host, "focus"); this.removeHandler(this.host, "blur"); this.removeHandler(this.content, "mouseenter"); this.removeHandler(this.content, "mouseup"); this.removeHandler(this.content, "mousedown"); this.removeHandler(this.content, "touchend"); if (this._mousemovefunc) { this.removeHandler(this.content, "mousemove", this._mousemovefunc) } else { this.removeHandler(this.content, "mousemove") } this.removeHandler(this.content, "selectstart"); if (this.overlayContent) { this.removeHandler(this.overlayContent, a.jqx.mobile.getTouchEventName("touchend")) } }, _updateSize: function () { if (!this.virtualSize) { this._oldheight = null; this.virtualSize = this._calculateVirtualSize() } var b = this; b._arrange(); if (b.host.height() != b._oldheight || b.host.width() != b._oldwidth) { var c = b.host.width() != b._oldwidth; if (b.autoItemsHeight) { b._render(false) } else { if (b.items) { if (b.items.length > 0 && b.virtualItemsCount * b.items[0].height < b._oldheight) { b._render(false) } else { var d = b.vScrollInstance.value; b._updatescrollbars(); b._renderItems(); if (d < b.vScrollInstance.max) { b.vScrollInstance.setPosition(d) } else { b.vScrollInstance.setPosition(b.vScrollInstance.max) } } } } b._oldwidth = b.host.width(); b._oldheight = b.host.height() } }, _addHandlers: function () { var j = this; this.focused = false; var k = false; var i = 0; var f = null; var i = 0; var b = 0; var g = new Date(); var d = this.isTouchDevice(); this.addHandler(this.vScrollBar, "valuechanged", function (l) { if (a.jqx.browser.msie && a.jqx.browser.version > 9) { setTimeout(function () { j._renderItems() }, 1) } else { j._renderItems() } }); this.addHandler(this.hScrollBar, "valuechanged", function () { j._renderItems() }); if (this._mousewheelfunc) { this.removeHandler(this.host, "mousewheel", this._mousewheelfunc) } this._mousewheelfunc = function (l) { j.wheel(l, j) }; this.addHandler(this.host, "mousewheel", this._mousewheelfunc); this.addHandler(a(document), "keydown.listbox" + this.element.id, function (l) { j._ctrlKey = l.ctrlKey; j._shiftKey = l.shiftKey }); this.addHandler(a(document), "keyup.listbox" + this.element.id, function (l) { j._ctrlKey = l.ctrlKey; j._shiftKey = l.shiftKey }); this.addHandler(this.host, "keydown", function (l) { return j._handleKeyDown(l) }); this.addHandler(this.content, "mouseleave", function (l) { j.focused = false; var m = a.data(j.element, "hoveredItem"); if (m != null) { a(m).removeClass(j.toThemeProperty("jqx-listitem-state-hover")); a(m).removeClass(j.toThemeProperty("jqx-fill-state-hover")); a.data(j.element, "hoveredItem", null) } }); this.addHandler(this.content, "focus", function (l) { if (!j.disabled) { j.host.addClass(j.toThemeProperty("jqx-fill-state-focus")); j.focused = true } }); this.addHandler(this.content, "blur", function (l) { j.focused = false; j.host.removeClass(j.toThemeProperty("jqx-fill-state-focus")) }); this.addHandler(this.host, "focus", function (l) { if (!j.disabled) { j.host.addClass(j.toThemeProperty("jqx-fill-state-focus")); j.focused = true } }); this.addHandler(this.host, "blur", function (l) { if (a.jqx.browser.msie && a.jqx.browser.version < 9 && j.focused) { return } j.host.removeClass(j.toThemeProperty("jqx-fill-state-focus")); j.focused = false }); this.addHandler(this.content, "mouseenter", function (l) { j.focused = true }); var c = a.jqx.utilities.hasTransform(this.host); if (this.enableSelection) { var e = j.isTouchDevice() && this.touchMode !== true; var h = !e ? "mousedown" : "touchend"; if (this.overlayContent) { this.addHandler(this.overlayContent, a.jqx.mobile.getTouchEventName("touchend"), function (n) { if (!j.enableSelection) { return true } if (e) { j._newScroll = new Date(); if (j._newScroll - j._lastScroll < 500) { return true } } var q = a.jqx.mobile.getTouches(n); var r = q[0]; if (r != undefined) { var l = j.host.offset(); var p = parseInt(r.pageX); var o = parseInt(r.pageY); if (j.touchMode == true) { p = parseInt(r._pageX); o = parseInt(r._pageY) } p = p - l.left; o = o - l.top; var m = j._hitTest(p, o); if (m != null && !m.isGroup) { j._newScroll = new Date(); if (j._newScroll - j._lastScroll < 500) { return false } if (j.checkboxes) { j._updateItemCheck(m, m.visibleIndex); return } if (m.html.indexOf("href") != -1) { setTimeout(function () { j.selectIndex(m.visibleIndex, false, true, false, "mouse", n); j.content.trigger("click") }, 100) } else { j.selectIndex(m.visibleIndex, false, true, false, "mouse", n); j.content.trigger("click") } } } }) } else { this.addHandler(this.content, h, function (l) { if (!j.enableSelection) { return true } if (e) { j._newScroll = new Date(); if (j._newScroll - j._lastScroll < 500) { return false } } j.focused = true; if (!j.isTouchDevice()) { j.host.focus() } if (l.target.id != ("listBoxContent" + j.element.id) && j.itemswrapper[0] != l.target) { var p = l.target; var v = a(p).offset(); var o = j.host.offset(); if (c) { var m = a.jqx.mobile.getLeftPos(p); var r = a.jqx.mobile.getTopPos(p); v.left = m; v.top = r; m = a.jqx.mobile.getLeftPos(j.element); r = a.jqx.mobile.getTopPos(j.element); o.left = m; o.top = r } var q = parseInt(v.top) - parseInt(o.top); var t = parseInt(v.left) - parseInt(o.left); var u = j._hitTest(t, q); if (u != null && !u.isGroup) { var n = function (x, w) { if (!j._shiftKey) { j._clickedIndex = x.visibleIndex } if (!j.checkboxes) { j.selectIndex(x.visibleIndex, false, true, false, "mouse", w) } else { j.selectedIndex = x.visibleIndex; t = 20 + w.pageX - v.left; if (j.rtl) { var y = j.hScrollBar.css("visibility") != "hidden" ? j.hScrollInstance.max : j.host.width(); if (t <= j.host.width() - 20) { j._updateItemCheck(x, x.visibleIndex) } } else { if (t + j.hScrollInstance.value >= 20) { j._updateItemCheck(x, x.visibleIndex) } } } }; if (!u.disabled) { if (u.html.indexOf("href") != -1) { setTimeout(function () { n(u, l) }, 100) } else { n(u, l) } } } if (h == "mousedown") { var s = false; if (l.which) { s = (l.which == 3) } else { if (l.button) { s = (l.button == 2) } } if (s) { return true } return false } } return true }) } this.addHandler(this.content, "mouseup", function (l) { j.vScrollInstance.handlemouseup(j, l) }); if (a.jqx.browser.msie) { this.addHandler(this.content, "selectstart", function (l) { return false }) } } var d = this.isTouchDevice(); if (this.enableHover && !d) { this._mousemovefunc = function (l) { if (d) { return true } if (!j.enableHover) { return true } var n = a.jqx.browser.msie == true && a.jqx.browser.version < 9 ? 0 : 1; if (l.target == null) { return true } if (j.disabled) { return true } j.focused = true; var p = j.vScrollInstance.isScrolling(); if (!p && l.target.id != ("listBoxContent" + j.element.id)) { if (j.itemswrapper[0] != l.target) { var r = l.target; var z = a(r).offset(); var q = j.host.offset(); if (c) { var m = a.jqx.mobile.getLeftPos(r); var t = a.jqx.mobile.getTopPos(r); z.left = m; z.top = t; m = a.jqx.mobile.getLeftPos(j.element); t = a.jqx.mobile.getTopPos(j.element); q.left = m; q.top = t } var s = parseInt(z.top) - parseInt(q.top); var u = parseInt(z.left) - parseInt(q.left); var w = j._hitTest(u, s); if (w != null && !w.isGroup && !w.disabled) { var o = a.data(j.element, "hoveredItem"); if (o != null) { a(o).removeClass(j.toThemeProperty("jqx-listitem-state-hover")); a(o).removeClass(j.toThemeProperty("jqx-fill-state-hover")) } a.data(j.element, "hoveredItem", w.element); var v = a(w.element); v.addClass(j.toThemeProperty("jqx-listitem-state-hover")); v.addClass(j.toThemeProperty("jqx-fill-state-hover")) } } } }; this.addHandler(this.content, "mousemove", this._mousemovefunc) } }, _arrange: function (n) { if (n == undefined) { n = true } var c = null; var p = null; var k = this; var i = function (h) { h = k.host.height(); if (h == 0) { h = 200; k.host.height(h) } return h }; if (this.width != null && this.width.toString().indexOf("px") != -1) { c = this.width } else { if (this.width != undefined && !isNaN(this.width)) { c = this.width } } if (this.height != null && this.height.toString().indexOf("px") != -1) { p = this.height } else { if (this.height != undefined && !isNaN(this.height)) { p = this.height } } if (this.width != null && this.width.toString().indexOf("%") != -1) { this.host.css("width", this.width); c = this.host.width() } if (this.height != null && this.height.toString().indexOf("%") != -1) { this.host.css("height", this.height); p = i(p) } if (c != null) { c = parseInt(c); if (parseInt(this.element.style.width) != parseInt(this.width)) { this.host.width(this.width) } } if (!this.autoHeight) { if (p != null) { p = parseInt(p); if (parseInt(this.element.style.height) != parseInt(this.height)) { this.host.height(this.height); i(p) } } } else { if (this.virtualSize) { if (this.hScrollBar.css("visibility") != "hidden") { this.host.height(this.virtualSize.height + parseInt(this.scrollBarSize) + 3); this.height = this.virtualSize.height + parseInt(this.scrollBarSize) + 3; p = this.height } else { this.host.height(this.virtualSize.height); this.height = this.virtualSize.height; p = this.virtualSize.height } } } var b = this.scrollBarSize; if (isNaN(b)) { b = parseInt(b); if (isNaN(b)) { b = "17px" } else { b = b + "px" } } b = parseInt(b); var j = 4; var s = 2; var l = 0; if (this.vScrollBar) { if (this.vScrollBar[0].style.visibility != "hidden") { l = b + j } else { this.vScrollInstance.setPosition(0) } } else { return } if (this.hScrollBar) { if (this.hScrollBar[0].style.visibility != "hidden") { s = b + j } else { this.hScrollInstance.setPosition(0) } } else { return } if (this.autoItemsHeight) { this.hScrollBar[0].style.visibility = "hidden"; s = 0 } if (p == null) { p = 0 } var r = parseInt(p) - j - b; if (r < 0) { r = 0 } if (parseInt(this.hScrollBar[0].style.height) != b) { if (parseInt(b) < 0) { b = 0 } this.hScrollBar[0].style.height = parseInt(b) + "px" } if (this.hScrollBar[0].style.top != r + "px") { this.hScrollBar[0].style.top = r + "px"; this.hScrollBar[0].style.left = "0px" } var q = c - b - j; if (q < 0) { q = 0 } var o = q + "px"; if (this.hScrollBar[0].style.width != o) { this.hScrollBar[0].style.width = o } if (l == 0) { this.hScrollBar.width(c - 2) } if (b != parseInt(this.vScrollBar[0].style.width)) { this.vScrollBar.width(b) } if ((parseInt(p) - s) != parseInt(this.vScrollBar[0].style.height)) { this.vScrollBar.height(parseInt(p) - s + "px") } if (c == null) { c = 0 } var d = parseInt(c) - parseInt(b) - j + "px"; if (d != this.vScrollBar[0].style.left) { if (parseInt(d) >= 0) { this.vScrollBar[0].style.left = d } this.vScrollBar[0].style.top = "0px" } var f = this.vScrollInstance; f.disabled = this.disabled; if (n) { f._arrange() } var e = this.hScrollInstance; e.disabled = this.disabled; if (n) { e._arrange() } if ((this.vScrollBar[0].style.visibility != "hidden") && (this.hScrollBar[0].style.visibility != "hidden")) { this.bottomRight[0].style.visibility = "inherit"; this.bottomRight.css({ left: 1 + parseInt(this.vScrollBar[0].style.left), top: 1 + parseInt(this.hScrollBar[0].style.top) }); if (this.rtl) { this.bottomRight.css({ left: 0 }) } this.bottomRight.width(parseInt(b) + 3); this.bottomRight.height(parseInt(b) + 3) } else { this.bottomRight[0].style.visibility = "hidden" } if (parseInt(this.content[0].style.width) != (parseInt(c) - l)) { var m = parseInt(c) - l; this.content[0].style.width = m + "px" } if (this.rtl) { this.vScrollBar.css({ left: 0 + "px", top: "0px" }); this.hScrollBar.css({ left: this.vScrollBar.width() + 2 + "px" }); if (this.vScrollBar[0].style.visibility != "hidden") { this.content.css("margin-left", 4 + this.vScrollBar.width()) } else { this.content.css("margin-left", 0); this.hScrollBar.css({ left: "0px" }) } } if (parseInt(this.content[0].style.height) != (parseInt(p) - s)) { var g = parseInt(p) - s; if (g < 0) { g = 0 } this.content[0].style.height = g + "px" } if (this.overlayContent) { this.overlayContent.width(parseInt(c) - l); this.overlayContent.height(parseInt(p) - s) } }, ensureVisible: function (e) { if (isNaN(e)) { var f = this.getItemByValue(e); if (f) { e = f.index } } var c = this.isIndexInView(e); if (!c) { if (e < 0) { return } if (this.autoHeight) { var b = a.data(this.vScrollBar[0], "jqxScrollBar").instance; b.setPosition(0) } else { for (indx = 0; indx < this.visibleItems.length; indx++) { var f = this.visibleItems[indx]; if (f.visibleIndex == e && !f.isGroup) { var b = a.data(this.vScrollBar[0], "jqxScrollBar").instance; var g = b.value; var d = this.hScrollBar.css("visibility") === "hidden"; var h = d ? 0 : this.scrollBarSize + 4; if (f.initialTop < g) { b.setPosition(f.initialTop) } else { if (f.initialTop + f.height > g + this.host.height()) { b.setPosition(f.initialTop + f.height + 2 - this.host.height() + h) } } break } } } } this._renderItems() }, scrollTo: function (c, b) { if (this.vScrollBar.css("visibility") != "hidden") { this.vScrollInstance.setPosition(b) } if (this.hScrollBar.css("visibility") != "hidden") { this.hScrollInstance.setPosition(c) } }, scrollDown: function () { if (this.vScrollBar.css("visibility") == "hidden") { return false } var b = this.vScrollInstance; if (b.value + b.largestep <= b.max) { b.setPosition(b.value + b.largestep); return true } else { b.setPosition(b.max); return true } return false }, scrollUp: function () { if (this.vScrollBar.css("visibility") == "hidden") { return false } var b = this.vScrollInstance; if (b.value - b.largestep >= b.min) { b.setPosition(b.value - b.largestep); return true } else { if (b.value != b.min) { b.setPosition(b.min); return true } } return false }, databind: function (h) { this.records = new Array(); var d = h._source ? true : false; var i = new a.jqx.dataAdapter(h, { autoBind: false }); if (d) { i = h; h = h._source } var g = function (j) { if (h.type != undefined) { i._options.type = h.type } if (h.formatdata != undefined) { i._options.formatData = h.formatdata } if (h.contenttype != undefined) { i._options.contentType = h.contenttype } if (h.async != undefined) { i._options.async = h.async } }; var c = function (o, p) { var r = function (s) { if (typeof s === "string") { var u = s; var v = s } else { var v = s[o.valueMember]; var u = s[o.displayMember] } var t = new a.jqx._jqxListBox.item(); t.label = u; t.value = v; t.html = ""; t.visible = true; t.originalItem = s; t.group = ""; t.groupHtml = ""; t.disabled = false; t.hasThreeStates = true; return t }; if (p != undefined) { var j = i._changedrecords[0]; if (j) { a.each(i._changedrecords, function () { var s = this.index; var t = this.record; if (p != "remove") { var u = r(t) } switch (p) { case "update": o.updateAt(u, s); break; case "add": o.insertAt(u, s); break; case "remove": o.removeAt(s); break } }); return } } o.records = i.records; var l = o.records.length; o.items = new Array(); o.itemsByValue = new Array(); for (var k = 0; k < l; k++) { var m = o.records[k]; var n = r(m); n.index = k; o.items[k] = n; var q = n.value; if (n.value == "" || n.value == null) { q = k } o.itemsByValue[a.trim(q).split(" ").join("")] = n } o._render(); o._raiseEvent("6") }; g(this); var f = this; switch (h.datatype) { case "local": case "array": default: if (h.localdata != null) { i.unbindBindingUpdate(this.element.id); i.dataBind(); c(this); i.bindBindingUpdate(this.element.id, function (j) { c(f, j) }) } break; case "json": case "jsonp": case "xml": case "xhtml": case "script": case "text": case "csv": case "tab": if (h.localdata != null) { i.unbindBindingUpdate(this.element.id); i.dataBind(); c(this); i.bindBindingUpdate(this.element.id, function () { c(f) }); return } var e = {}; if (i._options.data) { a.extend(i._options.data, e) } else { if (h.data) { a.extend(e, h.data) } i._options.data = e } var b = function () { c(f) }; i.unbindDownloadComplete(f.element.id); i.bindDownloadComplete(f.element.id, b); i.dataBind() } }, loadItems: function (m) { if (m == null) { this.groups = new Array(); this.items = new Array(); this.visualItems = new Array(); return } var s = this; var k = 0; var d = 0; var b = 0; this.groups = new Array(); this.items = new Array(); this.visualItems = new Array(); var e = new Array(); this.itemsByValue = new Array(); a.map(m, function (v) { if (v == undefined) { return null } var j = new a.jqx._jqxListBox.item(); var w = v.group; var i = v.groupHtml; var x = v.title; if (x == null || x == undefined) { x = "" } if (w == null || w == undefined) { w = "" } if (i == null || i == undefined) { i = "" } if (!s.groups[w]) { s.groups[w] = { items: new Array(), index: -1, caption: w, captionHtml: i }; k++; var t = k + "jqxGroup"; s.groups[t] = s.groups[w]; d++; s.groups.length = d } var u = s.groups[w]; u.index++; u.items[u.index] = j; if (typeof v === "string") { j.label = v; j.value = v } else { if (v.label == null && v.value == null && v.html == null && v.group == null && v.groupHtml == null) { j.label = v.toString(); j.value = v.toString() } else { j.label = v.label || v.value; j.value = v.value || v.label } } if (typeof v != "string") { if (s.displayMember != "") { if (v[s.displayMember]) { j.label = v[s.displayMember] } } if (s.valueMember != "") { j.value = v[s.valueMember] } } j.hasThreeStates = v.hasThreeStates != undefined ? v.hasThreeStates : true; j.originalItem = v; j.title = x; j.html = v.html || ""; if (v.html && v.html != "") { if (x && x != "") { } } j.group = w; j.checked = v.checked || false; j.groupHtml = v.groupHtml || ""; j.disabled = v.disabled || false; j.visible = v.visible != undefined ? v.visible : true; j.index = b; e[b] = j; b++; return j }); var c = new Array(); var o = 0; if (this.fromSelect == undefined || this.fromSelect == false) { for (var h = 0; h < d; h++) { var k = h + 1; var n = k + "jqxGroup"; var q = this.groups[n]; if (q == undefined || q == null) { break } if (h == 0 && q.caption == "" && q.captionHtml == "" && d <= 1) { for (var g = 0; g < q.items.length; g++) { var p = q.items[g].value; if (q.items[g].value == "" || q.items[g].value == null) { p = g } this.itemsByValue[a.trim(p).split(" ").join("")] = q.items[g] } return q.items } else { var l = new a.jqx._jqxListBox.item(); l.isGroup = true; l.label = q.caption; if (q.caption == "" && q.captionHtml == "") { q.caption = this.emptyGroupText; l.label = q.caption } l.html = q.captionHtml; c[o] = l; o++ } for (var f = 0; f < q.items.length; f++) { c[o] = q.items[f]; var p = q.items[f].value; if (q.items[f].value == "" || q.items[f].value == null) { p = o } s.itemsByValue[a.trim(p).split(" ").join("")] = q.items[f]; o++ } } } else { var o = 0; var r = new Array(); a.each(e, function () { if (!r[this.group]) { if (this.group != "") { var i = new a.jqx._jqxListBox.item(); i.isGroup = true; i.label = this.group; c[o] = i; o++; r[this.group] = true } } c[o] = this; var j = this.value; if (this.value == "" || this.value == null) { j = o - 1 } s.itemsByValue[a.trim(j).split(" ").join("")] = this; o++ }) } return c }, _mapItem: function (c) { var b = new a.jqx._jqxListBox.item(); if (this.displayMember) { if (c.label == undefined) { c.label = c[this.displayMember] } if (c.value == undefined) { c.value = c[this.valueMember] } } if (typeof c === "string") { b.label = c; b.value = c } else { if (typeof c === "number") { b.label = c.toString(); b.value = c.toString() } else { b.label = c.label || c.value; b.value = c.value || c.label } } if (b.label == undefined && b.value == undefined && b.html == undefined) { b.label = b.value = c } b.html = c.html || ""; b.group = c.group || ""; b.title = c.title || ""; b.groupHtml = c.groupHtml || ""; b.disabled = c.disabled || false; b.visible = c.visible || true; return b }, addItem: function (c) { var b = this._getItemByParam(c); return this.insertAt(b, this.items ? this.items.length : 0) }, _getItemByParam: function (c) { if (c != null) { if (c.index == undefined) { var b = this.getItemByValue(c); if (b) { c = b } } } return c }, insertItem: function (d, b) { var c = this._getItemByParam(d); return this.insertAt(c, b) }, updateItem: function (c, d) { var b = this._getItemByParam(d); if (b && b.index != undefined) { return this.updateAt(c, b.index) } return false }, updateAt: function (d, c) { if (d != null) { var b = this._mapItem(d); this.itemsByValue[a.trim(b.value).split(" ").join("")] = this.items[c]; this.items[c].value = b.value; this.items[c].label = b.label; this.items[c].html = b.html; this.items[c].disabled = b.disabled } this._cachedItemHtml = []; this._renderItems(); if (this.rendered) { this.rendered() } }, insertAt: function (l, f) { if (l == null) { return false } this._cachedItemHtml = []; if (this.items == undefined || this.items.length == 0) { this.source = new Array(); this.refresh(); var g = this._mapItem(l); g.index = 0; this.items[this.items.length] = g; this._addItems(true); this._renderItems(); if (this.rendered) { this.rendered() } if (this.allowDrag && this._enableDragDrop) { this._enableDragDrop() } var k = g.value; if (g.value == "" || g.value == null) { k = f } this.itemsByValue[a.trim(k).split(" ").join("")] = g; return false } var g = this._mapItem(l); if (f == -1 || f == undefined || f == null || f >= this.items.length) { g.index = this.items.length; this.items[this.items.length] = g } else { var c = new Array(); var j = 0; var e = false; var h = 0; for (var b = 0; b < this.items.length; b++) { if (this.items[b].isGroup == false) { if (h >= f && !e) { c[j++] = g; g.index = f; h++; e = true } } c[j] = this.items[b]; if (!this.items[b].isGroup) { c[j].index = h; h++ } j++ } this.items = c } var k = g.value; if (g.value == "" || g.value == null) { k = f } this.itemsByValue[a.trim(k).split(" ").join("")] = g; this.visibleItems = new Array(); this.renderedVisibleItems = new Array(); var d = a.data(this.vScrollBar[0], "jqxScrollBar").instance; var i = d.value; d.setPosition(0); if ((this.allowDrag && this._enableDragDrop) || (this.virtualSize && this.virtualSize.height < 10 + this.host.height())) { this._addItems(true) } else { this._addItems(false) } this._renderItems(); if (this.allowDrag && this._enableDragDrop) { this._enableDragDrop() } d.setPosition(i); if (this.rendered) { this.rendered() } return true }, removeAt: function (g) { if (g < 0 || g > this.items.length - 1) { return false } var d = this.items[g].height; var k = this.items[g].value; if (k == "" || k == null) { k = g } this.itemsByValue[a.trim(k).split(" ").join("")] = null; this.items.splice(g, 1); var c = new Array(); var j = 0; var f = false; var h = 0; for (var b = 0; b < this.items.length; b++) { c[j] = this.items[b]; if (!this.items[b].isGroup) { c[j].index = h; h++ } j++ } this.items = c; var e = a.data(this.vScrollBar[0], "jqxScrollBar").instance; var e = a.data(this.vScrollBar[0], "jqxScrollBar").instance; var i = e.value; e.setPosition(0); this.visibleItems = new Array(); this.renderedVisibleItems = new Array(); if (this.items.length > 0) { if (this.virtualSize) { this.virtualSize.height -= d; var l = this.virtualSize.itemsPerPage * 2; if (this.autoHeight) { l = this.items.length } this.virtualItemsCount = Math.min(l, this.items.length) } this._updatescrollbars() } else { this._addItems() } this._renderItems(); if (this.allowDrag && this._enableDragDrop) { this._enableDragDrop() } if (this.vScrollBar.css("visibility") != "hidden") { e.setPosition(i) } else { e.setPosition(0) } if (this.rendered) { this.rendered() } return true }, removeItem: function (c) { var b = this._getItemByParam(c); this.removeAt(b.index) }, getItems: function () { return this.items }, disableItem: function (c) { var b = this._getItemByParam(c); this.disableAt(b.index) }, enableItem: function (c) { var b = this._getItemByParam(c); this.enableAt(b.index) }, disableAt: function (b) { if (!this.items) { return false } if (b < 0 || b > this.items.length - 1) { return false } this.items[b].disabled = true; this._renderItems(); return true }, enableAt: function (b) { if (!this.items) { return false } if (b < 0 || b > this.items.length - 1) { return false } this.items[b].disabled = false; this._renderItems(); return true }, destroy: function () { if (this.source && this.source.unbindBindingUpdate) { this.source.unbindBindingUpdate(this.element.id) } this._removeHandlers(); this.vScrollBar.jqxScrollBar("destroy"); this.hScrollBar.jqxScrollBar("destroy"); this.vScrollBar.remove(); this.hScrollBar.remove(); this.content.remove(); a.jqx.utilities.resize(this.host, null, true); var b = a.data(this.element, "jqxListBox"); delete this.hScrollInstance; delete this.vScrollInstance; delete this.vScrollBar; delete this.hScrollBar; delete this.content; delete this.bottomRight; delete this.itemswrapper; delete this.visualItems; delete this.visibleItems; delete this.items; delete this.groups; delete this.renderedVisibleItems; delete this._mousewheelfunc; delete this._mousemovefunc; delete this._cachedItemHtml; delete this.itemsByValue; delete this.source; delete this.events; if (this.input) { this.input.remove(); delete this.input } if (b) { delete b.instance } this.host.removeData(); this.host.removeClass(); this.host.remove(); this.element = null; delete this.element; this.host = null; delete this.set; delete this.get; delete this.call; delete this.host }, _raiseEvent: function (f, c) { if (this._stopEvents == true) { return true } if (c == undefined) { c = { owner: null } } var d = this.events[f]; args = c; args.owner = this; this._updateInputSelection(); var e = new jQuery.Event(d); e.owner = this; e.args = args; if (this.host != null) { var b = this.host.trigger(e) } return b } }) })(jQuery); (function (a) { a.jqx._jqxListBox.item = function () { var b = { group: "", groupHtml: "", selected: false, isGroup: false, highlighted: false, value: null, label: "", html: null, visible: true, disabled: false, element: null, width: null, height: null, initialTop: null, top: null, left: null, title: "", index: -1, checkBoxElement: null, originalItem: null, checked: false, visibleIndex: -1 }; return b } })(jQuery);
    </script>
    <!--<script type="text/javascript" src="http://61.147.119.252:8088/jqwidgets/jqxcombobox.js"></script>-->
    <script>
        /*
jQWidgets v3.0.3 (2013-Oct-01)
Copyright (c) 2011-2013 jQWidgets.
License: http://jqwidgets.com/license/
*/

        (function (a) { a.jqx.jqxWidget("jqxComboBox", "", {}); a.extend(a.jqx._jqxComboBox.prototype, { defineInstance: function () { this.disabled = false; this.width = 200; this.height = 25; this.items = new Array(); this.selectedIndex = -1; this.selectedItems = new Array(); this._selectedItems = new Array(); this.source = null; this.scrollBarSize = a.jqx.utilities.scrollBarSize; this.arrowSize = 18; this.enableHover = true; this.enableSelection = true; this.visualItems = new Array(); this.groups = new Array(); this.equalItemsWidth = true; this.itemHeight = -1; this.visibleItems = new Array(); this.emptyGroupText = "Group"; this.emptyString = ""; if (this.openDelay == undefined) { this.openDelay = 250 } if (this.closeDelay == undefined) { this.closeDelay = 300 } this.animationType = "default"; this.dropDownWidth = "auto"; this.dropDownHeight = "200px"; this.autoDropDownHeight = false; this.enableBrowserBoundsDetection = false; this.dropDownHorizontalAlignment = "left"; this.searchMode = "startswithignorecase"; this.autoComplete = false; this.remoteAutoComplete = false; this.remoteAutoCompleteDelay = 500; this.minLength = 2; this.displayMember = ""; this.valueMember = ""; this.keyboardSelection = true; this.renderer = null; this.autoOpen = false; this.checkboxes = false; this.promptText = ""; this.placeHolder = ""; this.rtl = false; this.listBox = null; this.renderSelectedItem = null; this.search = null; this.popupZIndex = 100000; this.searchString = null; this.multiSelect = false; this.showArrow = true; this.touchMode = "auto"; this.aria = { "aria-disabled": { name: "disabled", type: "boolean" } }; this.events = ["open", "close", "select", "unselect", "change", "checkChange", "bindingComplete"] }, createInstance: function (b) { var c = this; this.host.attr("role", "combobox"); a.jqx.aria(this, "aria-autocomplete", "both"); if (a.jqx._jqxListBox == null || a.jqx._jqxListBox == undefined) { throw new Error("jqxComboBox: Missing reference to jqxlistbox.js.") } a.jqx.aria(this); if (this.promptText != "") { this.placeHolder = this.promptText } this.render() }, render: function () { this.removeHandlers(); this.isanimating = false; this.id = a.jqx.utilities.createId(); this.element.innerHTML = ""; var d = a("<div style='background-color: transparent; -webkit-appearance: none; outline: none; width:100%; height: 100%; padding: 0px; margin: 0px; border: 0px; position: relative;'><div id='dropdownlistWrapper' style='padding: 0; margin: 0; border: none; background-color: transparent; float: left; width:100%; height: 100%; position: relative;'><div id='dropdownlistContent' style='padding: 0; margin: 0; border-top: none; border-bottom: none; float: left; position: absolute;'/><div id='dropdownlistArrow' style='padding: 0; margin: 0; border-left-width: 1px; border-bottom-width: 0px; border-top-width: 0px; border-right-width: 0px; float: right; position: absolute;'/></div></div>"); this.comboStructure = d; if (a.jqx._jqxListBox == null || a.jqx._jqxListBox == undefined) { throw "jqxComboBox: Missing reference to jqxlistbox.js." } this.touch = a.jqx.mobile.isTouchDevice(); if (this.touchMode === true) { this.touch = true } this.host.append(d); this.dropdownlistWrapper = this.host.find("#dropdownlistWrapper"); this.dropdownlistArrow = this.host.find("#dropdownlistArrow"); this.dropdownlistContent = this.host.find("#dropdownlistContent"); this.dropdownlistContent.addClass(this.toThemeProperty("jqx-combobox-content")); this.dropdownlistContent.addClass(this.toThemeProperty("jqx-widget-content")); this.dropdownlistWrapper[0].id = "dropdownlistWrapper" + this.element.id; this.dropdownlistArrow[0].id = "dropdownlistArrow" + this.element.id; this.dropdownlistContent[0].id = "dropdownlistContent" + this.element.id; this.dropdownlistContent.append(a('<input autocomplete="off" style="margin: 0; padding: 0; border: 0;" type="textarea"/>')); this.input = this.dropdownlistContent.find("input"); this.input.addClass(this.toThemeProperty("jqx-combobox-input")); this.input.addClass(this.toThemeProperty("jqx-widget-content")); this._addInput(); if (this.rtl) { this.input.css({ direction: "rtl" }); this.dropdownlistContent.addClass(this.toThemeProperty("jqx-combobox-content-rtl")) } try { var l = "listBox" + this.id; var g = a(a.find("#" + l)); if (g.length > 0) { g.remove() } a.jqx.aria(this, "aria-owns", l); a.jqx.aria(this, "aria-haspopup", true); a.jqx.aria(this, "aria-multiline", false); var b = a("<div style='overflow: hidden; border: none; background-color: transparent; position: absolute;' id='listBox" + this.id + "'><div id='innerListBox" + this.id + "'></div></div>"); b.hide(); b.appendTo(document.body); this.container = b; this.listBoxContainer = a(a.find("#innerListBox" + this.id)); var c = this.width; if (this.dropDownWidth != "auto") { c = this.dropDownWidth } if (this.dropDownHeight == null) { this.dropDownHeight = 200 } var j = this; this.container.width(parseInt(c) + 25); this.container.height(parseInt(this.dropDownHeight) + 25); this.addHandler(this.listBoxContainer, "bindingComplete", function (e) { j._raiseEvent("6") }); var h = true; this.listBoxContainer.jqxListBox({ _checkForHiddenParent: false, checkboxes: this.checkboxes, emptyString: this.emptyString, renderer: this.renderer, rtl: this.rtl, itemHeight: this.itemHeight, selectedIndex: this.selectedIndex, incrementalSearch: false, width: c, scrollBarSize: this.scrollBarSize, autoHeight: this.autoDropDownHeight, height: this.dropDownHeight, displayMember: this.displayMember, valueMember: this.valueMember, source: this.source, theme: this.theme, rendered: function () { j.listBox = a.data(j.listBoxContainer[0], "jqxListBox").instance; if (j.remoteAutoComplete) { if (j.autoDropDownHeight) { j.container.height(j.listBox.virtualSize.height + 25); j.listBoxContainer.height(j.listBox.virtualSize.height); j.listBox._arrange() } else { j.listBox._arrange(); j.listBox.ensureVisible(0); j.listBox._renderItems(); j.container.height(j.listBoxContainer.height() + 25) } if (j.searchString != undefined && j.searchString.length >= j.minLength) { var e = j.listBoxContainer.jqxListBox("items"); if (e) { if (e.length > 0) { if (!j.isOpened()) { j.open() } } else { j.close() } } else { j.close() } } else { j.close() } } else { j.renderSelection("mouse"); if (j.multiSelect) { j.doMultiSelect(false) } } if (j.rendered) { j.rendered() } } }); this.listBoxContainer.css({ position: "absolute", zIndex: this.popupZIndex, top: 0, left: 0 }); this.listBoxContainer.css("border-top-width", "1px"); this.listBoxContainer.addClass(this.toThemeProperty("jqx-popup")); if (a.jqx.browser.msie) { this.listBoxContainer.addClass(this.toThemeProperty("jqx-noshadow")) } this.listBox = a.data(this.listBoxContainer[0], "jqxListBox").instance; this.listBox.enableSelection = this.enableSelection; this.listBox.enableHover = this.enableHover; this.listBox.equalItemsWidth = this.equalItemsWidth; this.listBox._arrange(); this.addHandler(this.listBoxContainer, "unselect", function (e) { if (!j.multiSelect) { j._raiseEvent("3", { index: e.args.index, type: e.args.type, item: e.args.item }) } }); this.addHandler(this.listBoxContainer, "change", function (e) { if (!j.multiSelect) { j._raiseEvent("4", { index: e.args.index, type: e.args.type, item: e.args.item }) } }); if (this.animationType == "none") { this.container.css("display", "none") } else { this.container.hide() } h = false } catch (i) { } var m = this; m.input.attr("disabled", m.disabled); var f = a.jqx.browser.msie && a.jqx.browser.version < 8; if (!f) { m.input.attr("placeholder", m.placeHolder) } this.propertyChangeMap.disabled = function (e, o, n, p) { if (p) { e.host.addClass(m.toThemeProperty("jqx-combobox-state-disabled")); e.host.addClass(m.toThemeProperty("jqx-fill-state-disabled")); e.dropdownlistContent.addClass(m.toThemeProperty("jqx-combobox-content-disabled")) } else { e.host.removeClass(m.toThemeProperty("jqx-combobox-state-disabled")); e.host.removeClass(m.toThemeProperty("jqx-fill-state-disabled")); e.dropdownlistContent.removeClass(m.toThemeProperty("jqx-combobox-content-disabled")) } e.input.attr("disabled", e.disabled); a.jqx.aria(e, "aria-disabled", e.disabled); e.input.attr("disabled", m.disabled) }; if (this.disabled) { this.host.addClass(this.toThemeProperty("jqx-combobox-state-disabled")); this.host.addClass(this.toThemeProperty("jqx-fill-state-disabled")); this.dropdownlistContent.addClass(this.toThemeProperty("jqx-combobox-content-disabled")) } this.host.addClass(this.toThemeProperty("jqx-combobox-state-normal")); this.host.addClass(this.toThemeProperty("jqx-combobox")); this.host.addClass(this.toThemeProperty("jqx-rc-all")); this.host.addClass(this.toThemeProperty("jqx-widget")); this.host.addClass(this.toThemeProperty("jqx-widget-content")); this.dropdownlistArrowIcon = a("<div></div>"); this.dropdownlistArrowIcon.addClass(this.toThemeProperty("jqx-icon-arrow-down")); this.dropdownlistArrowIcon.addClass(this.toThemeProperty("jqx-icon")); this.dropdownlistArrow.append(this.dropdownlistArrowIcon); this.dropdownlistArrow.addClass(this.toThemeProperty("jqx-combobox-arrow-normal")); this.dropdownlistArrow.addClass(this.toThemeProperty("jqx-fill-state-normal")); if (!this.rtl) { this.dropdownlistArrow.addClass(this.toThemeProperty("jqx-rc-r")) } else { this.dropdownlistArrow.addClass(this.toThemeProperty("jqx-rc-l")) } this._setSize(); this._updateHandlers(); this.addHandler(this.input, "keyup.textchange", function (e) { var n = j._search(e); if (j.cinput && j.input) { j.cinput[0].value = j.input[0].value } }); if (a.jqx.browser.msie && a.jqx.browser.version < 8) { if (this.host.parents(".jqx-window").length > 0) { var k = this.host.parents(".jqx-window").css("z-index"); b.css("z-index", k + 10); this.listBoxContainer.css("z-index", k + 10) } } if (this.checkboxes) { this.input.attr("readonly", true); a.jqx.aria(this, "aria-readonly", true) } else { a.jqx.aria(this, "aria-readonly", false) } if (!this.remoteAutoComplete) { this.searchString = "" } }, _addInput: function () { var b = this.host.attr("name"); if (!b) { b = this.element.id } this.cinput = a("<input type='hidden'/>"); this.host.append(this.cinput); this.cinput.attr("name", b) }, _updateInputSelection: function () { if (this.cinput) { if (this.selectedIndex == -1) { this.cinput.val("") } else { var d = this.getSelectedItem(); if (d != null) { this.cinput.val(d.value) } else { this.cinput.val(this.dropdownlistContent.text()) } } if (this.checkboxes || this.multiSelect) { if (!this.multiSelect) { var b = this.getCheckedItems() } else { var b = this.getSelectedItems() } var e = ""; if (b != null) { for (var c = 0; c < b.length; c++) { if (c == b.length - 1) { e += b[c].value } else { e += b[c].value + "," } } } this.cinput.val(e) } } }, _search: function (m) { if (m.keyCode == 9) { return } if (this.searchMode == "none" || this.searchMode == null || this.searchMode == "undefined") { return } if (m.keyCode == 16 || m.keyCode == 17 || m.keyCode == 20) { return false } if (this.checkboxes) { return false } if (this.multiSelect) { var n = a("<span style='visibility: hidden; white-space: nowrap;'>" + this.input.val() + "</span>"); n.addClass(this.toThemeProperty("jqx-widget")); a(document.body).append(n); var j = n.width() + 15; n.remove(); if (j > this.host.width()) { j = this.host.width() } if (j < 25) { j = 25 } this.input.css("width", j + "px"); var f = parseInt(this._findPos(this.host[0])[1]) + parseInt(this.host.outerHeight()) - 1 + "px"; var o = a.jqx.mobile.isSafariMobileBrowser() || a.jqx.mobile.isWindowsPhone(); var c = a.jqx.utilities.hasTransform(this.host); if (c || (o != null && o)) { f = a.jqx.mobile.getTopPos(this.element) + parseInt(this.host.outerHeight()); if (a("body").css("border-top-width") != "0px") { f = parseInt(f) - this._getBodyOffset().top + "px" } } this.container.css("top", f); var i = parseInt(this.host.height()); this.dropdownlistArrow.height(i) } if (!this.isanimating) { if (m.altKey && m.keyCode == 38) { this.hideListBox("altKey"); return false } if (m.altKey && m.keyCode == 40) { if (!this.isOpened()) { this.showListBox("altKey") } return false } } if (m.keyCode == 37 || m.keyCode == 39) { return false } if (m.altKey || m.keyCode == 18) { return } if (m.keyCode >= 33 && m.keyCode <= 40) { return } if (m.ctrlKey || this.ctrlKey) { return } var l = this.input.val(); if (l.length == 0 && !this.autoComplete) { this.listBox.searchString = this.input.val(); this.hideListBox("search"); this.searchString = this.input.val(); return } if (this.remoteAutoComplete) { var s = this; var p = function () { s.listBox.vScrollInstance.value = 0 }; if (l.length >= s.minLength) { if (!m.ctrlKey && !m.altKey) { if (s.searchString != l) { var k = s.listBoxContainer.jqxListBox("source"); if (k == null) { s.listBoxContainer.jqxListBox({ source: s.source }) } if (this._searchTimer) { clearTimeout(this._searchTimer) } if (m.keyCode != 13 && m.keyCode != 27) { this._searchTimer = setTimeout(function () { p(); if (s.autoDropDownHeight) { s.listBox.autoHeight = true } s.searchString = s.input.val(); if (s.search != null) { s.search(s.input.val()) } else { throw "'search' function is not defined" } }, this.remoteAutoCompleteDelay) } } s.searchString = l } } else { if (this._searchTimer) { clearTimeout(this._searchTimer) } p(); s.searchString = ""; s.listBoxContainer.jqxListBox({ source: null }) } return } var s = this; if (l === s.searchString) { return } if (!(m.keyCode == "27" || m.keyCode == "13")) { var b = this._updateItemsVisibility(l); var e = b.matchItems; var d = b.index; if (!this.autoComplete && !this.removeAutoComplete) { if (!this.multiSelect || (this.multiSelect && d >= 0)) { this.listBox.selectIndex(d); var r = this.listBox.isIndexInView(d); if (!r) { this.listBox.ensureVisible(d) } else { this.listBox._renderItems() } } } if (this.autoComplete && e.length === 0) { this.hideListBox("search") } } if (m.keyCode == "13") { var g = this.container.css("display") == "block"; if (g && !this.isanimating) { this.hideListBox("keyboard"); this._oldvalue = this.listBox.selectedValue; return } } else { if (m.keyCode == "27") { var g = this.container.css("display") == "block"; if (g && !this.isanimating) { if (!h.multiSelect) { var q = this.listBox.getVisibleItem(this._oldvalue); if (q) { var h = this; setTimeout(function () { if (h.autoComplete) { h._updateItemsVisibility("") } h.listBox.selectIndex(q.index); h.renderSelection("api") }, h.closeDelay) } else { this.clearSelection() } } else { h.input.val(""); h.listBox.selectedValue = null } this.hideListBox("keyboard"); this.renderSelection("api"); m.preventDefault(); return false } } else { if (!this.isOpened() && !this.opening && !m.ctrlKey) { if (this.listBox.visibleItems && this.listBox.visibleItems.length > 0) { if (this.input.val() != this.searchString && this.searchString != undefined && d != -1) { this.showListBox("search") } } } this.searchString = this.input.val(); if (this.searchString == "") { d = -1 } var q = this.listBox.getVisibleItem(d); if (q != undefined) { this._updateInputSelection() } } } }, val: function (c) { if (!this.input) { return "" } if (typeof c === "object" || arguments.length == 0) { var b = this.getSelectedItem(); if (b) { return b.value } return this.input.val() } else { var b = this.getItemByValue(c); if (b != null) { this.selectItem(b) } else { this.input.val(c) } return this.input.val() } }, focus: function () { var c = this; var b = function () { c.input.focus(); var d = c.input.val(); c._setSelection(0, d.length) }; b(); setTimeout(function () { b() }, 10) }, _setSelection: function (e, b) { try { if ("selectionStart" in this.input[0]) { this.input[0].focus(); this.input[0].setSelectionRange(e, b) } else { var c = this.input[0].createTextRange(); c.collapse(true); c.moveEnd("character", b); c.moveStart("character", e); c.select() } } catch (d) { } }, setContent: function (b) { this.input.val(b) }, _updateItemsVisibility: function (l) { var i = this.getItems(); if (i == undefined) { return { index: -1, matchItem: new Array() } } var j = this; var g = -1; var m = new Array(); var k = 0; a.each(i, function (p) { var r = ""; if (!this.isGroup) { if (this.label) { r = this.label } else { if (this.value) { r = this.value } else { if (this.title) { r = this.title } else { r = "jqxItem" } } } var q = false; switch (j.searchMode) { case "containsignorecase": q = a.jqx.string.containsIgnoreCase(r, l); break; case "contains": q = a.jqx.string.contains(r, l); break; case "equals": q = a.jqx.string.equals(r, l); break; case "equalsignorecase": q = a.jqx.string.equalsIgnoreCase(r, l); break; case "startswith": q = a.jqx.string.startsWith(r, l); break; case "startswithignorecase": q = a.jqx.string.startsWithIgnoreCase(r, l); break; case "endswith": q = a.jqx.string.endsWith(r, l); break; case "endswithignorecase": q = a.jqx.string.endsWithIgnoreCase(r, l); break } if (j.autoComplete && !q) { this.visible = false } if (q && j.autoComplete) { m[k++] = this; this.visible = true; g = this.visibleIndex } if (l == "" && j.autoComplete) { this.visible = true; q = false } if (j.multiSelect) { this.disabled = false; if (j.selectedItems.indexOf(this.value) >= 0) { this.disabled = true; q = false } } if (!j.multiSelect) { if (q && !j.autoComplete) { g = this.visibleIndex; return false } } else { if (q && !j.autoComplete) { if (g === -1) { g = this.visibleIndex } return true } } } }); this.listBox.searchString = l; var f = this; var h = function () { if (!f.multiSelect) { return } var p = 0; var s = false; var r = null; for (var q = 0; q < f.listBox.items.length; q++) { f.listBox.selectedIndexes[q] = -1; if (!f.listBox.items[q].disabled) { if (s == false) { r = f.listBox.items[q]; p = r.visibleIndex; s = true } } } f.listBox.selectedIndex = -1; f.listBox.selectedIndex = p; f.listBox.selectedIndexes[p] = p; if (f.listBox.visibleItems.length > 0) { if (r) { f.listBox.selectedValue = r.value } else { f.listBox.selectedValue = null } } else { f.listBox.selectedValue = null } f.listBox.ensureVisible(0) }; if (!this.autoComplete) { h(); return { index: g, matchItems: m } } this.listBox.renderedVisibleItems = new Array(); var b = this.listBox.vScrollInstance.value; this.listBox.vScrollInstance.value = 0; this.listBox.visibleItems = new Array(); this.listBox._renderItems(); var e = this.listBox.selectedValue; var o = this.listBox.getItemByValue(e); if (!this.multiSelect) { if (o) { if (o.visible) { this.listBox.selectedIndex = o.visibleIndex; for (var d = 0; d < this.listBox.items.length; d++) { this.listBox.selectedIndexes[d] = -1 } this.listBox.selectedIndexes[o.visibleIndex] = o.visibleIndex } else { for (var d = 0; d < this.listBox.items.length; d++) { this.listBox.selectedIndexes[d] = -1 } this.listBox.selectedIndex = -1 } } } else { h() } this.listBox._renderItems(); var n = this.listBox._calculateVirtualSize().height; if (n < b) { b = 0; this.listBox.vScrollInstance.refresh() } if (this.autoDropDownHeight) { this._disableSelection = true; if (this.listBox.autoHeight != this.autoDropDownHeight) { this.listBoxContainer.jqxListBox({ autoHeight: this.autoDropDownHeight }) } this.container.height(n + 25); this.listBox.invalidate(); this._disableSelection = false } else { if (n < parseInt(this.dropDownHeight)) { var c = this.listBox.hScrollBar[0].style.visibility == "hidden" ? 0 : 20; this.listBox.height = c + n; this.container.height(n + 25 + c); this.listBox.invalidate() } else { this.listBox.height = parseInt(this.dropDownHeight); this.container.height(parseInt(this.dropDownHeight) + 25); this.listBox.invalidate() } } this.listBox.vScrollInstance.setPosition(b); return { index: g, matchItems: m } }, findItems: function (e) { var b = this.getItems(); var d = this; var c = 0; var f = new Array(); a.each(b, function (g) { var j = ""; if (!this.isGroup) { if (this.label) { j = this.label } else { if (this.value) { j = this.value } else { if (this.title) { j = this.title } else { j = "jqxItem" } } } var h = false; switch (d.searchMode) { case "containsignorecase": h = a.jqx.string.containsIgnoreCase(j, e); break; case "contains": h = a.jqx.string.contains(j, e); break; case "equals": h = a.jqx.string.equals(j, e); break; case "equalsignorecase": h = a.jqx.string.equalsIgnoreCase(j, e); break; case "startswith": h = a.jqx.string.startsWith(j, e); break; case "startswithignorecase": h = a.jqx.string.startsWithIgnoreCase(j, e); break; case "endswith": h = a.jqx.string.endsWith(j, e); break; case "endswithignorecase": h = a.jqx.string.endsWithIgnoreCase(j, e); break } if (h) { f[c++] = this } } }); return f }, _resetautocomplete: function () { a.each(this.listBox.items, function (b) { this.visible = true }); this.listBox.vScrollInstance.value = 0; this.listBox._addItems(); this.listBox.autoHeight = false; this.listBox.height = this.dropDownHeight; this.container.height(parseInt(this.dropDownHeight) + 25); this.listBoxContainer.height(parseInt(this.dropDownHeight)); this.listBox._arrange(); this.listBox._addItems(); this.listBox._renderItems() }, getItems: function () { var b = this.listBox.items; return b }, getVisibleItems: function () { return this.listBox.getVisibleItems() }, _setSize: function () { if (this.width != null && this.width.toString().indexOf("px") != -1) { this.host.width(this.width) } else { if (this.width != undefined && !isNaN(this.width)) { this.host.width(this.width) } } if (this.height != null && this.height.toString().indexOf("px") != -1) { this.host.height(this.height) } else { if (this.height != undefined && !isNaN(this.height)) { this.host.height(this.height) } } var e = false; if (this.width != null && this.width.toString().indexOf("%") != -1) { e = true; this.host.width(this.width) } if (this.height != null && this.height.toString().indexOf("%") != -1) { e = true; this.host.height(this.height) } if (e) { var c = this; var b = this.host.width(); if (this.dropDownWidth != "auto") { b = this.dropDownWidth } this.listBoxContainer.jqxListBox({ width: b }); this.container.width(parseInt(b) + 25); this._arrange() } var d = function () { if (c.multiSelect) { c.host.height(c.height) } c._arrange(); if (c.multiSelect) { c.host.height("auto") } if (c.dropDownWidth == "auto") { var f = c.host.width(); c.listBoxContainer.jqxListBox({ width: f }); c.container.width(parseInt(f) + 25) } }; a.jqx.utilities.resize(this.host, function () { d() }) }, isOpened: function () { var c = this; var b = a.data(document.body, "openedComboJQXListBox" + this.element.id); if (this.container.css("display") != "block") { return false } if (b != null && b == c.listBoxContainer) { return true } return false }, _updateHandlers: function () { var d = this; var e = false; this.removeHandlers(); if (this.multiSelect) { this.addHandler(this.dropdownlistContent, "click", function (f) { if (f.target.href) { return false } d.input.focus(); setTimeout(function () { d.input.focus() }, 10) }); this.addHandler(this.dropdownlistContent, "focus", function (f) { if (f.target.href) { return false } d.input.focus(); setTimeout(function () { d.input.focus() }, 10) }) } if (!this.touch) { if (this.host.parents()) { this.addHandler(this.host.parents(), "scroll.combobox" + this.element.id, function (f) { var g = d.isOpened(); if (g) { d.close() } }) } this.addHandler(this.host, "mouseenter", function () { if (!d.disabled && d.enableHover) { e = true; d.host.addClass(d.toThemeProperty("jqx-combobox-state-hover")); d.dropdownlistArrowIcon.addClass(d.toThemeProperty("jqx-icon-arrow-down-hover")); d.dropdownlistArrow.addClass(d.toThemeProperty("jqx-combobox-arrow-hover")); d.dropdownlistArrow.addClass(d.toThemeProperty("jqx-fill-state-hover")) } }); this.addHandler(this.host, "mouseleave", function () { if (!d.disabled && d.enableHover) { d.host.removeClass(d.toThemeProperty("jqx-combobox-state-hover")); d.dropdownlistArrowIcon.removeClass(d.toThemeProperty("jqx-icon-arrow-down-hover")); d.dropdownlistArrow.removeClass(d.toThemeProperty("jqx-combobox-arrow-hover")); d.dropdownlistArrow.removeClass(d.toThemeProperty("jqx-fill-state-hover")); e = false } }) } if (d.autoOpen) { this.addHandler(this.host, "mouseenter", function () { var f = d.isOpened(); if (!f && d.autoOpen) { d.open(); d.host.focus() } }); this.addHandler(a(document), "mousemove." + d.id, function (i) { var h = d.isOpened(); if (h && d.autoOpen) { var m = d.host.coord(); var l = m.top; var k = m.left; var j = d.container.coord(); var f = j.left; var g = j.top; canClose = true; if (i.pageY >= l && i.pageY <= l + d.host.height() + 2) { if (i.pageX >= k && i.pageX < k + d.host.width()) { canClose = false } } if (i.pageY >= g && i.pageY <= g + d.container.height() - 20) { if (i.pageX >= f && i.pageX < f + d.container.width()) { canClose = false } } if (canClose) { d.close() } } }) } var c = "mousedown"; if (this.touch) { c = a.jqx.mobile.getTouchEventName("touchstart") } var b = function (h) { if (!d.disabled) { var f = d.container.css("display") == "block"; if (!d.isanimating) { if (f) { d.hideListBox("api"); if (!a.jqx.mobile.isTouchDevice()) { d.input.focus(); setTimeout(function () { d.input.focus() }, 10) } return false } else { if (d.autoDropDownHeight) { d.container.height(d.listBoxContainer.height() + 25); var g = d.listBoxContainer.jqxListBox("autoHeight"); if (!g) { d.listBoxContainer.jqxListBox({ autoHeight: d.autoDropDownHeight }); d.listBox._arrange(); d.listBox.ensureVisible(0); d.listBox._renderItems(); d.container.height(d.listBoxContainer.height() + 25) } } d.showListBox("api"); if (!a.jqx.mobile.isTouchDevice()) { d.focus() } else { return false } } } } }; this.addHandler(this.dropdownlistArrow, c, function (f) { b(f); return false }); this.addHandler(this.dropdownlistArrowIcon, c, function (f) { b(f); return false }); this.addHandler(this.host, "focus", function () { d.focus() }); this.addHandler(this.input, "focus", function (f) { d.focused = true; d.host.addClass(d.toThemeProperty("jqx-combobox-state-focus")); d.host.addClass(d.toThemeProperty("jqx-fill-state-focus")); d.dropdownlistContent.addClass(d.toThemeProperty("jqx-combobox-content-focus")); if (f.stopPropagation) { f.stopPropagation() } if (f.preventDefault) { f.preventDefault() } return false }); this.addHandler(this.input, "blur", function () { d.focused = false; if (!d.isOpened() && !d.opening) { d.host.removeClass(d.toThemeProperty("jqx-combobox-state-focus")); d.host.removeClass(d.toThemeProperty("jqx-fill-state-focus")); d.dropdownlistContent.removeClass(d.toThemeProperty("jqx-combobox-content-focus")) } if (d._searchTimer) { clearTimeout(d._searchTimer) } }); this.addHandler(a(document), "mousedown." + this.id, d.closeOpenedListBox, { me: this, listbox: this.listBox, id: this.id }); if (this.touch) { this.addHandler(a(document), a.jqx.mobile.getTouchEventName("touchstart") + "." + this.id, d.closeOpenedListBox, { me: this, listbox: this.listBox, id: this.id }) } this.addHandler(this.host, "keydown", function (k) { var h = d.container.css("display") == "block"; d.ctrlKey = k.ctrlKey; if (d.host.css("display") == "none") { return true } if (k.keyCode == "13" || k.keyCode == "9") { if (h && !d.isanimating) { if (d.listBox.selectedIndex != -1) { d.renderSelection("mouse"); var f = d.listBox.selectedIndex; var j = d.listBox.getVisibleItem(f); if (j) { d.listBox.selectedValue = j.value } d._setSelection(d.input.val().length, d.input.val().length); d.hideListBox("keyboard") } if (k.keyCode == "13") { d._oldvalue = d.listBox.selectedValue } if (!d.keyboardSelection) { d._raiseEvent("2", { index: d.selectedIndex, type: "keyboard", item: d.getItem(d.selectedIndex) }) } if (k.keyCode == "9") { return true } return false } } if (k.keyCode == 115) { if (!d.isanimating) { if (!d.isOpened()) { d.showListBox("keyboard") } else { if (d.isOpened()) { d.hideListBox("keyboard") } } } return false } if (k.altKey) { if (d.host.css("display") == "block") { if (!d.isanimating) { if (k.keyCode == 38) { if (d.isOpened()) { d.hideListBox("altKey") } } else { if (k.keyCode == 40) { if (!d.isOpened()) { d.showListBox("altKey") } } } } } } if (k.keyCode == "27" || k.keyCode == "9") { if (d.isOpened() && !d.isanimating) { if (k.keyCode == "27") { if (!d.multiSelect) { var j = d.listBox.getVisibleItem(d._oldvalue); if (j) { setTimeout(function () { if (d.autoComplete) { d._updateItemsVisibility("") } d.listBox.selectIndex(j.index); d.renderSelection("api") }, d.closeDelay) } else { d.clearSelection() } } else { d.listBox.selectedValue = null; d.input.val("") } } d.hideListBox("keyboard"); if (k.keyCode == "9") { return true } d.renderSelection("api"); k.preventDefault(); return false } } var g = k.keyCode; if (h && !d.disabled && g != 8) { return d.listBox._handleKeyDown(k) } else { if (!d.disabled && !h) { var g = k.keyCode; if (g == 33 || g == 34 || g == 35 || g == 36 || g == 38 || g == 40) { return d.listBox._handleKeyDown(k) } } } if (g === 8 && d.multiSelect) { if (d.input.val().length === 0) { var i = d.selectedItems[d.selectedItems.length - 1]; d.selectedItems.pop(); d._selectedItems.pop(); if (i) { d._raiseEvent("3", { index: i.index, type: "keyboard", item: i }); d._raiseEvent("4", { index: i.index, type: "keyboard", item: i }) } d.listBox.selectedValue = null; d.doMultiSelect(); return false } } }); this.addHandler(this.listBoxContainer, "checkChange", function (f) { d.renderSelection("mouse"); d._updateInputSelection(); d._raiseEvent(5, { label: f.args.label, value: f.args.value, checked: f.args.checked, item: f.args.item }) }); this.addHandler(this.listBoxContainer, "select", function (f) { if (!d.disabled) { if (f.args.type != "keyboard" || d.keyboardSelection) { d.renderSelection(f.args.type); if (!d.multiSelect) { d._raiseEvent("2", { index: f.args.index, type: f.args.type, item: f.args.item }) } if (f.args.type == "mouse") { d._oldvalue = d.listBox.selectedValue; if (!d.checkboxes) { d.hideListBox("mouse"); if (!d.touch) { d.input.focus() } else { return false } } } } } }); if (this.listBox != null && this.listBox.content != null) { this.addHandler(this.listBox.content, "click", function (f) { if (!d.disabled) { if (d.listBox.itemswrapper) { if (f.target === d.listBox.itemswrapper[0]) { return true } } if (f.target && f.target.className) { if (f.target.className.indexOf("jqx-fill-state-disabled") >= 0) { return true } } d.renderSelection("mouse"); d._oldvalue = d.listBox.selectedValue; if (!d.touch && !d.ishiding) { if (!d.checkboxes) { d.hideListBox("mouse"); d.input.focus() } } if (d.touch === true) { if (!d.checkboxes) { d.hideListBox("mouse") } } } }) } }, removeHandlers: function () { var c = this; if (this.dropdownlistWrapper != null) { this.removeHandler(this.dropdownlistWrapper, "mousedown") } if (this.dropdownlistContent) { this.removeHandler(this.dropdownlistContent, "click"); this.removeHandler(this.dropdownlistContent, "focus") } this.removeHandler(this.host, "keydown"); this.removeHandler(this.host, "focus"); if (this.input != null) { this.removeHandler(this.input, "focus"); this.removeHandler(this.input, "blur") } this.removeHandler(this.host, "mouseenter"); this.removeHandler(this.host, "mouseleave"); this.removeHandler(a(document), "mousemove." + c.id); if (this.listBoxContainer) { this.removeHandler(this.listBoxContainer, "checkChange"); this.removeHandler(this.listBoxContainer, "select") } if (this.dropdownlistArrowIcon && this.dropdownlistArrow) { var b = "mousedown"; if (this.touch) { b = a.jqx.mobile.getTouchEventName("touchstart") } this.removeHandler(this.dropdownlistArrowIcon, b); this.removeHandler(this.dropdownlistArrow, b) } }, getItem: function (b) { var c = this.listBox.getItem(b); return c }, getItemByValue: function (c) { var b = this.listBox.getItemByValue(c); return b }, getVisibleItem: function (b) { var c = this.listBox.getVisibleItem(b); return c }, renderSelection: function (j) { if (j == undefined || j == "none") { return } if (this._disableSelection === true) { return } if (this.listBox == null) { return } if (this.multiSelect) { return } var k = this.listBox.visibleItems[this.listBox.selectedIndex]; if (this.autoComplete && !this.checkboxes) { if (this.listBox.selectedValue !== undefined) { var k = this.getItemByValue(this.listBox.selectedValue) } } if (this.checkboxes) { var f = this.getCheckedItems(); if (f != null && f.length > 0) { k = f[0] } else { k = null } } if (k == null) { var d = a.jqx.browser.msie && a.jqx.browser.version < 8; this.input.val(""); if (!d) { this.input.attr("placeholder", this.placeHolder) } this._updateInputSelection(); return } this.selectedIndex = this.listBox.selectedIndex; var c = a("<span></span>"); if (k.label != undefined && k.label != null && k.label.toString().length > 0) { a.jqx.utilities.html(c, k.label) } else { if (k.value != undefined && k.value != null && k.value.toString().length > 0) { a.jqx.utilities.html(c, k.value) } else { if (k.title != undefined && k.title != null && k.title.toString().length > 0) { a.jqx.utilities.html(c, k.title) } else { a.jqx.utilities.html(c, this.emptyString) } } } var b = c.outerHeight(); if (this.checkboxes) { var g = this.getCheckedItems(); var h = ""; for (var e = 0; e < g.length; e++) { if (e == g.length - 1) { h += g[e].label } else { h += g[e].label + ", " } } this.input.val(h) } else { this.input.val(c.text()) } c.remove(); if (this.renderSelectedItem) { var l = this.renderSelectedItem(this.listBox.selectedIndex, k); if (l != undefined) { this.input.val(l) } } this._updateInputSelection(); if (this.listBox && this.listBox._activeElement) { a.jqx.aria(this, "aria-activedescendant", this.listBox._activeElement.id) } }, dataBind: function () { this.listBoxContainer.jqxListBox({ source: this.source }); this.renderSelection("mouse"); if (this.source == null) { this.clearSelection() } }, clear: function () { this.listBoxContainer.jqxListBox({ source: null }); this.clearSelection() }, clearSelection: function (b) { this.selectedIndex = -1; this.listBox.clearSelection(); this.input.val(""); if (this.multiSelect) { this.selectedItems = new Array(); this._selectedItems = new Array(); this.doMultiSelect(false) } }, unselectIndex: function (b, c) { if (isNaN(b)) { return } this.listBox.unselectIndex(b, c); this.renderSelection("mouse"); if (this.multiSelect) { this.doMultiSelect(false) } }, selectIndex: function (b, d, e, c) { this.listBox.selectIndex(b, d, e, c); this.renderSelection("mouse"); this.selectedIndex = b; if (this.multiSelect) { this.doMultiSelect() } }, selectItem: function (b) { if (this.listBox != undefined) { this.listBox.selectItem(b); this.selectedIndex = this.listBox.selectedIndex; this.renderSelection("mouse"); if (this.multiSelect) { this.doMultiSelect(false) } } }, unselectItem: function (b) { if (this.listBox != undefined) { this.listBox.unselectItem(b); this.renderSelection("mouse"); if (this.multiSelect) { this.doMultiSelect(false) } } }, checkItem: function (b) { if (this.listBox != undefined) { this.listBox.checkItem(b) } }, uncheckItem: function (b) { if (this.listBox != undefined) { this.listBox.uncheckItem(b) } }, indeterminateItem: function (b) { if (this.listBox != undefined) { this.listBox.indeterminateItem(b) } }, getSelectedValue: function () { return this.listBox.selectedValue }, getSelectedIndex: function () { return this.selectedIndex }, getSelectedItem: function () { return this.getVisibleItem(this.selectedIndex) }, getSelectedItems: function () { var c = new Array(); var b = this; a.each(this.selectedItems, function () { var d = b.getItemByValue(this); if (d) { c.push(d) } else { var d = b._selectedItems[this]; if (d) { c.push(d) } } }); return c }, getCheckedItems: function () { return this.listBox.getCheckedItems() }, checkIndex: function (b) { this.listBox.checkIndex(b) }, uncheckIndex: function (b) { this.listBox.uncheckIndex(b) }, indeterminateIndex: function (b) { this.listBox.indeterminateIndex(b) }, checkAll: function () { this.listBox.checkAll() }, uncheckAll: function () { this.listBox.uncheckAll() }, insertAt: function (c, b) { if (c == null) { return false } return this.listBox.insertAt(c, b) }, addItem: function (b) { return this.listBox.addItem(b) }, removeAt: function (c) { var b = this.listBox.removeAt(c); this.renderSelection("mouse"); return b }, removeItem: function (c) { var b = this.listBox.removeItem(c); this.renderSelection("mouse"); return b }, updateItem: function (c, d) { var b = this.listBox.updateItem(c, d); this.renderSelection("mouse"); return b }, updateAt: function (d, c) { var b = this.listBox.updateAt(d, c); this.renderSelection("mouse"); return b }, ensureVisible: function (b) { return this.listBox.ensureVisible(b) }, disableAt: function (b) { return this.listBox.disableAt(b) }, enableAt: function (b) { return this.listBox.enableAt(b) }, disableItem: function (b) { return this.listBox.disableItem(b) }, enableItem: function (b) { return this.listBox.enableItem(b) }, _findPos: function (c) { while (c && (c.type == "hidden" || c.nodeType != 1 || a.expr.filters.hidden(c))) { c = c.nextSibling } if (c) { var b = a(c).coord(true); return [b.left, b.top] } }, testOffset: function (h, f, c) { var g = h.outerWidth(); var j = h.outerHeight(); var i = a(window).width() + a(window).scrollLeft(); var e = a(window).height() + a(window).scrollTop(); if (f.left + g > i) { if (g > this.host.width()) { var d = this.host.coord().left; var b = g - this.host.width(); f.left = d - b + 2 } } if (f.left < 0) { f.left = parseInt(this.host.coord().left) + "px" } f.top -= Math.min(f.top, (f.top + j > e && e > j) ? Math.abs(j + c + 23) : 0); return f }, open: function () { if (!this.isOpened() && !this.opening) { this.showListBox("api") } }, close: function () { if (this.isOpened()) { this.hideListBox("api") } }, _getBodyOffset: function () { var c = 0; var b = 0; if (a("body").css("border-top-width") != "0px") { c = parseInt(a("body").css("border-top-width")); if (isNaN(c)) { c = 0 } } if (a("body").css("border-left-width") != "0px") { b = parseInt(a("body").css("border-left-width")); if (isNaN(b)) { b = 0 } } return { left: b, top: c } }, showListBox: function (k) { if (this.listBox.items && this.listBox.items.length == 0) { return } if (this.autoComplete || this.multiSelect && !this.remoteAutoComplete) { if (k != "search") { this._updateItemsVisibility("") } } if (this.remoteAutoComplete) { this.listBox.clearSelection() } if (k != "search") { this._oldvalue = this.listBox.selectedValue } a.jqx.aria(this, "aria-expanded", true); if (this.dropDownWidth == "auto" && this.width != null && this.width.indexOf && this.width.indexOf("%") != -1) { if (this.listBox.host.width() != this.host.width()) { var p = this.host.width(); this.listBoxContainer.jqxListBox({ width: p }); this.container.width(parseInt(p) + 25) } } var n = this; var h = this.listBoxContainer; var s = this.listBox; var e = a(window).scrollTop(); var f = a(window).scrollLeft(); var l = parseInt(this._findPos(this.host[0])[1]) + parseInt(this.host.outerHeight()) - 1 + "px"; var d, o = parseInt(Math.round(this.host.coord(true).left)); d = o + "px"; var r = a.jqx.mobile.isSafariMobileBrowser() || a.jqx.mobile.isWindowsPhone(); this.ishiding = false; var g = a.jqx.utilities.hasTransform(this.host); if (g || (r != null && r)) { d = a.jqx.mobile.getLeftPos(this.element); l = a.jqx.mobile.getTopPos(this.element) + parseInt(this.host.outerHeight()); if (a("body").css("border-top-width") != "0px") { l = parseInt(l) - this._getBodyOffset().top + "px" } if (a("body").css("border-left-width") != "0px") { d = parseInt(d) - this._getBodyOffset().left + "px" } } this.host.addClass(this.toThemeProperty("jqx-combobox-state-selected")); this.dropdownlistArrowIcon.addClass(this.toThemeProperty("jqx-icon-arrow-down-selected")); this.dropdownlistArrow.addClass(this.toThemeProperty("jqx-combobox-arrow-selected")); this.dropdownlistArrow.addClass(this.toThemeProperty("jqx-fill-state-pressed")); this.host.addClass(this.toThemeProperty("jqx-combobox-state-focus")); this.host.addClass(this.toThemeProperty("jqx-fill-state-focus")); this.dropdownlistContent.addClass(this.toThemeProperty("jqx-combobox-content-focus")); this.container.css("left", d); this.container.css("top", l); s._arrange(); var c = true; var b = false; if (this.dropDownHorizontalAlignment == "right" || this.rtl) { var j = this.container.outerWidth(); var q = Math.abs(j - this.host.width()); if (j > this.host.width()) { this.container.css("left", 25 + parseInt(Math.round(o)) - q + "px") } else { this.container.css("left", 25 + parseInt(Math.round(o)) + q + "px") } } if (this.enableBrowserBoundsDetection) { var i = this.testOffset(h, { left: parseInt(this.container.css("left")), top: parseInt(l) }, parseInt(this.host.outerHeight())); if (parseInt(this.container.css("top")) != i.top) { b = true; h.css("top", 23) } else { h.css("top", 0) } this.container.css("top", i.top); this.container.css("top", i.top); if (parseInt(this.container.css("left")) != i.left) { this.container.css("left", i.left) } } if (this.animationType == "none") { this.container.css("display", "block"); a.data(document.body, "openedComboJQXListBoxParent", n); a.data(document.body, "openedComboJQXListBox" + n.element.id, h); h.css("margin-top", 0); h.css("opacity", 1) } else { this.container.css("display", "block"); var m = h.outerHeight(); h.stop(); if (this.animationType == "fade") { h.css("margin-top", 0); h.css("opacity", 0); h.animate({ opacity: 1 }, this.openDelay, function () { n.isanimating = false; n.opening = false; a.data(document.body, "openedComboJQXListBoxParent", n); a.data(document.body, "openedComboJQXListBox" + n.element.id, h) }) } else { h.css("opacity", 1); if (b) { h.css("margin-top", m) } else { h.css("margin-top", -m) } this.isanimating = true; this.opening = true; h.animate({ "margin-top": 0 }, this.openDelay, function () { n.isanimating = false; n.opening = false; a.data(document.body, "openedComboJQXListBoxParent", n); a.data(document.body, "openedComboJQXListBox" + n.element.id, h) }) } } s._renderItems(); if (!b) { this.host.addClass(this.toThemeProperty("jqx-rc-b-expanded")); h.addClass(this.toThemeProperty("jqx-rc-t-expanded")); this.dropdownlistArrow.addClass(this.toThemeProperty("jqx-rc-b-expanded")) } else { this.host.addClass(this.toThemeProperty("jqx-rc-t-expanded")); h.addClass(this.toThemeProperty("jqx-rc-b-expanded")); this.dropdownlistArrow.addClass(this.toThemeProperty("jqx-rc-t-expanded")) } h.addClass(this.toThemeProperty("jqx-fill-state-focus")); this._raiseEvent("0", s) }, doMultiSelect: function (c) { if (this.checkboxes) { this.multiSelect = false } var e = this; if (!this.multiSelect) { var g = e.dropdownlistContent.find(".jqx-button"); var d = "mousedown"; if (this.touch) { d = a.jqx.mobile.getTouchEventName("touchstart") } this.removeHandler(g, d); this.removeHandler(g.find(".jqx-icon-close"), d); g.remove(); this.selectedItems = new Array(); this._selectedItems = new Array(); return } if (this.validateSelection) { var k = this.validateSelection(this.listBox.selectedValue); if (!k) { return } } var h = this.selectedItems; if (this.listBox.selectedValue) { if (this.selectedItems.indexOf(this.listBox.selectedValue) === -1) { this.selectedItems.push(this.listBox.selectedValue); var j = this.getItemByValue(this.listBox.selectedValue); if (j) { this._selectedItems.push(j); this._raiseEvent("2", { index: j.index, item: j }); this._raiseEvent("4", { index: j.index, item: j }) } } this.listBox.selectedIndex = 0 } var f = this.listBox.items; for (var b = 0; b < f.length; b++) { f[b].disabled = false; if (this.selectedItems.indexOf(f[b].value) >= 0) { f[b].disabled = true } } this.listBox._renderItems(); this.searchString = ""; this.input.val(""); var f = ""; var d = "mousedown"; var g = e.dropdownlistContent.find(".jqx-button"); if (this.touch) { d = a.jqx.mobile.getTouchEventName("touchstart") } this.removeHandler(g, d); this.removeHandler(g.find(".jqx-icon-close"), d); g.remove(); e.input.detach(); e.input.css("width", "25px"); a.each(this.selectedItems, function (i) { var m = e.getItemByValue(this); if (!m || e.remoteAutoComplete) { m = e._selectedItems[i] } var o = a('<div style="overflow: hidden; float: left;"></div>'); o.addClass(e.toThemeProperty("jqx-button")); o.addClass(e.toThemeProperty("jqx-combobox-multi-item")); o.addClass(e.toThemeProperty("jqx-fill-state-normal")); o.addClass(e.toThemeProperty("jqx-rc-all")); if (m) { var p = m.label; if (o[0].innerHTML == "") { o[0].innerHTML = '<a data-value="' + m.value + '" style="float: left;" href="#">' + p + "</a>" } if (e.rtl) { o[0].innerHTML = '<a data-value="' + m.value + '" style="float: right;" href="#">' + p + "</a>" } var n = !e.rtl ? "right" : "left"; var l = '<div style="position: relative; overflow: hidden; float: ' + n + '; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 100%; top: 50%; margin-left: -18px; margin-top: -7px; float: none; width: 16px; height: 16px;" class="' + e.toThemeProperty("jqx-icon-close") + '"></div></div>'; if (a.jqx.browser.msie && a.jqx.browser.version < 8) { l = '<div style="position: relative; overflow: hidden; float: left; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 100%; top: 50%; margin-left: -18px; margin-top: -7px; float: none; width: 16px; height: 16px;" class="' + e.toThemeProperty("jqx-icon-close") + '"></div></div>' } if (e.rtl) { var l = '<div style="position: relative; overflow: hidden; float: ' + n + '; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 0px; top: 50%; margin-top: -7px; float: none; width: 16px; height: 16px;" class="' + e.toThemeProperty("jqx-icon-close") + '"></div></div>'; if (a.jqx.browser.msie && a.jqx.browser.version < 8) { l = '<div style="position: relative; overflow: hidden; float: left; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 0px; top: 50%; margin-top: -7px; float: none; width: 16px; height: 16px;" class="' + e.toThemeProperty("jqx-icon-close") + '"></div></div>' } } o[0].innerHTML += l } else { if (o[0].innerHTML == "") { o[0].innerHTML = '<a href="#"></a>' } } e.dropdownlistContent.append(o) }); e.dropdownlistContent.append(e.input); e.input.val(""); if (c !== false) { e.input.focus(); setTimeout(function () { e.input.focus() }, 10) } var g = e.dropdownlistContent.find(".jqx-button"); if (this.touchMode === true) { d = "mousedown" } this.addHandler(g, d, function (l) { if (l.target.className.indexOf("jqx-icon-close") >= 0) { return true } var m = a(l.target).attr("data-value"); var i = e.getItemByValue(m); if (i) { e.listBox.selectedValue = null; e.listBox.clearSelection() } e.listBox.scrollTo(0, 0); e.open(); if (l.preventDefault) { l.preventDefault() } if (l.stopPropagation) { l.stopPropagation() } return false }); this.addHandler(g.find(".jqx-icon-close"), d, function (m) { var n = a(m.target).parent().parent().find("a").attr("data-value"); var l = e.getItemByValue(n); if (l) { e.listBox.selectedValue = null; var i = e.selectedItems.indexOf(n); if (i >= 0) { e.selectedItems.splice(i, 1); e._selectedItems.splice(i, 1); e._raiseEvent("3", { index: l.index, type: "mouse", item: l }); e._raiseEvent("4", { index: l.index, type: "mouse", item: l }); e.doMultiSelect() } } }); e.dropdownlistArrow.height(this.host.height()); e._updateInputSelection() }, hideListBox: function (h) { var f = this.listBoxContainer; var g = this.listBox; var c = this.container; if (this.container.css("display") == "none") { return } a.jqx.aria(this, "aria-expanded", false); if (h == "keyboard" || h == "mouse") { this.listBox.searchString = "" } if (h == "keyboard" || h == "mouse" && this.multiSelect) { this.doMultiSelect() } var d = this; a.data(document.body, "openedComboJQXListBox" + this.element.id, null); if (this.animationType == "none") { this.opening = false; this.container.css("display", "none") } else { if (!this.ishiding) { var b = f.outerHeight(); f.css("margin-top", 0); f.stop(); this.opening = false; this.isanimating = true; var e = -b; if (parseInt(this.container.coord().top) < parseInt(this.host.coord().top)) { e = b } if (this.animationType == "fade") { f.css({ opacity: 1 }); f.animate({ opacity: 0 }, this.closeDelay, function () { d.isanimating = false; c.css("display", "none"); d.ishiding = false }) } else { f.animate({ "margin-top": e }, this.closeDelay, function () { d.isanimating = false; c.css("display", "none"); d.ishiding = false }) } } } this.ishiding = true; this.host.removeClass(this.toThemeProperty("jqx-combobox-state-selected")); this.dropdownlistArrowIcon.removeClass(this.toThemeProperty("jqx-icon-arrow-down-selected")); this.dropdownlistArrow.removeClass(this.toThemeProperty("jqx-combobox-arrow-selected")); this.dropdownlistArrow.removeClass(this.toThemeProperty("jqx-fill-state-pressed")); if (!this.focused) { this.host.removeClass(this.toThemeProperty("jqx-combobox-state-focus")); this.host.removeClass(this.toThemeProperty("jqx-fill-state-focus")); this.dropdownlistContent.removeClass(this.toThemeProperty("jqx-combobox-content-focus")) } this.host.removeClass(this.toThemeProperty("jqx-rc-b-expanded")); f.removeClass(this.toThemeProperty("jqx-rc-t-expanded")); this.host.removeClass(this.toThemeProperty("jqx-rc-t-expanded")); f.removeClass(this.toThemeProperty("jqx-rc-b-expanded")); f.removeClass(this.toThemeProperty("jqx-fill-state-focus")); this.dropdownlistArrow.removeClass(this.toThemeProperty("jqx-rc-t-expanded")); this.dropdownlistArrow.removeClass(this.toThemeProperty("jqx-rc-b-expanded")); this._raiseEvent("1", g) }, closeOpenedListBox: function (e) { var d = e.data.me; var b = a(e.target); var c = e.data.listbox; if (c == null) { return true } if (a(e.target).ischildof(e.data.me.host)) { return } var f = d; var g = false; a.each(b.parents(), function () { if (this.className != "undefined") { if (this.className.indexOf) { if (this.className.indexOf("jqx-listbox") != -1) { g = true; return false } if (this.className.indexOf("jqx-combobox") != -1) { if (d.element.id == this.id) { g = true } return false } } } }); if (c != null && !g) { d.hideListBox("api"); d.input.blur() } return true }, loadFromSelect: function (b) { this.listBox.loadFromSelect(b) }, refresh: function (b) { this._setSize(); this._arrange(); if (this.listBox) { this.renderSelection() } }, _arrange: function () { var d = parseInt(this.host.width()); var j = parseInt(this.host.height()); var e = this.arrowSize; var f = this.arrowSize; var h = 1; if (!this.showArrow) { f = 0; e = 0; this.dropdownlistArrow.hide(); h = 0; this.host.css("cursor", "arrow") } var b = d - f - 1 * h; if (b > 0) { this.dropdownlistContent.width(b + "px") } if (this.rtl) { this.dropdownlistContent.width(-1 + b + "px") } this.dropdownlistContent.height(j); this.dropdownlistContent.css("left", 0); this.dropdownlistContent.css("top", 0); this.dropdownlistArrow.width(f + 1); this.dropdownlistArrow.height(j); this.dropdownlistArrow.css("left", 1 + b + "px"); this.input.css("width", "100%"); var c = this.input.height(); if (c == 0) { c = parseInt(this.input.css("font-size")) + 3 } this.input.addClass(this.toThemeProperty("jqx-rc-all")); var i = parseInt(j) / 2 - parseInt(c) / 2; if (i > 0) { this.input.css("margin-top", i) } if (this.rtl) { this.dropdownlistArrow.css("left", "0px"); this.dropdownlistContent.css("left", this.dropdownlistArrow.width()); if (a.jqx.browser.msie && a.jqx.browser.version <= 8) { this.dropdownlistContent.css("left", 1 + this.dropdownlistArrow.width()) } } if (this.multiSelect) { this.input.css("float", "left"); this.input.width(25); this.dropdownlistWrapper.parent().css("height", "auto"); this.dropdownlistContent.css("height", "auto"); this.dropdownlistWrapper.css("height", "auto"); this.dropdownlistContent.css("position", "relative"); this.dropdownlistContent.css("cursor", "text"); this.host.css("height", "auto"); this.host.css("min-height", this.height); this.dropdownlistContent.css("min-height", this.height); var j = parseInt(this.host.height()); this.dropdownlistArrow.height(j); var g = parseInt(this.host.css("min-height")); var i = parseInt(g) / 2 - parseInt(c) / 2; if (i > 0) { this.input.css("margin-top", i) } } }, destroy: function () { if (this.source && this.source.unbindBindingUpdate) { this.source.unbindBindingUpdate(this.element.id); this.source.unbindBindingUpdate(this.listBoxContainer[0].id); this.source.unbindDownloadComplete(this.element.id); this.source.unbindDownloadComplete(this.listBoxContainer[0].id) } a.jqx.utilities.resize(this.host, null, true); this.removeHandler(this.listBoxContainer, "select"); this.removeHandler(this.listBoxContainer, "unselect"); this.removeHandler(this.listBoxContainer, "change"); this.removeHandler(this.listBoxContainer, "bindingComplete"); this.removeHandler(this.dropdownlistWrapper, "selectstart"); this.removeHandler(this.dropdownlistWrapper, "mousedown"); this.removeHandler(this.host, "keydown"); this.removeHandler(this.listBoxContainer, "select"); this.removeHandler(this.listBox.content, "click"); this.removeHandlers(); this.removeHandler(this.input, "keyup.textchange"); this.listBoxContainer.jqxListBox("destroy"); this.listBoxContainer.remove(); this.host.removeClass(); this.removeHandler(a(document), "mousedown." + this.id, this.closeOpenedListBox); if (this.touch) { this.removeHandler(a(document), a.jqx.mobile.getTouchEventName("touchstart") + "." + this.id) } this.cinput.remove(); delete this.cinput; this.dropdownlistArrow.remove(); delete this.dropdownlistArrow; this.dropdownlistArrowIcon.remove(); delete this.dropdownlistArrowIcon; delete this.dropdownlistWrapper; delete this.listBoxContainer; delete this.input; delete this.dropdownlistContent; delete this.comboStructure; this.container.remove(); delete this.listBox; delete this.container; var b = a.data(this.element, "jqxComboBox"); if (b) { delete b.instance } this.host.removeData(); this.host.remove(); delete this.host; delete this.set; delete this.get; delete this.call; delete this.element }, _raiseEvent: function (f, c) { if (c == undefined) { c = { owner: null } } var d = this.events[f]; args = c; args.owner = this; var e = new jQuery.Event(d); e.owner = this; if (f == 2 || f == 3 || f == 4 || f == 5) { e.args = c } var b = this.host.trigger(e); return b }, propertyChangedHandler: function (b, c, f, e) { if (b.isInitialized == undefined || b.isInitialized == false) { return } if (c === "touchMode") { b.listBoxContainer.jqxListBox({ touchMode: e }); b.touch = a.jqx.mobile.isTouchDevice(); if (b.touchMode === true) { b.touch = true } b._updateHandlers() } if (c == "multiSelect") { if (e) { b.doMultiSelect(false) } else { b.doMultiSelect(false); b.dropdownlistWrapper.parent().css("height", "100%"); b.dropdownlistContent.css("height", "100"); b.dropdownlistWrapper.css("height", "100"); b.dropdownlistContent.css("position", "relative"); b.host.css("min-height", null); b._setSize(); b._arrange() } } if (c == "showArrow") { b._arrange(); if (b.multiSelect) { b.doMultiSelect(false) } } if (c == "popupZIndex") { b.listBoxContainer.css({ zIndex: b.popupZIndex }) } if (c == "promptText") { b.placeHolder = e } if (c == "autoOpen") { b._updateHandlers() } if (c == "renderer") { b.listBox.renderer = b.renderer } if (c == "itemHeight") { b.listBox.itemHeight = e } if (c == "source") { b.input.val(""); b.listBoxContainer.jqxListBox({ source: b.source }); b.renderSelection("mouse"); if (b.source == null) { b.clearSelection() } if (b.multiSelect) { b.selectedItems = new Array(); b._selectedItems = new Array(); b.doMultiSelect(false) } } if (c == "rtl") { if (e) { b.dropdownlistArrow.css("float", "left"); b.dropdownlistContent.css("float", "right") } else { b.dropdownlistArrow.css("float", "right"); b.dropdownlistContent.css("float", "left") } b.listBoxContainer.jqxListBox({ rtl: b.rtl }) } if (c == "displayMember" || c == "valueMember") { b.listBoxContainer.jqxListBox({ displayMember: b.displayMember, valueMember: b.valueMember }); b.renderSelection("mouse") } if (c == "autoDropDownHeight") { b.listBoxContainer.jqxListBox({ autoHeight: b.autoDropDownHeight }); if (b.autoDropDownHeight) { b.container.height(b.listBoxContainer.height() + 25) } else { b.listBoxContainer.jqxListBox({ height: b.dropDownHeight }); b.container.height(parseInt(b.dropDownHeight) + 25) } } if (c == "dropDownHeight") { if (!b.autoDropDownHeight) { b.listBoxContainer.jqxListBox({ height: b.dropDownHeight }); b.container.height(parseInt(b.dropDownHeight) + 25) } } if (c == "dropDownWidth" || c == "scrollBarSize") { var d = b.width; if (b.dropDownWidth != "auto") { d = b.dropDownWidth } b.listBoxContainer.jqxListBox({ width: d, scrollBarSize: b.scrollBarSize }); b.container.width(parseInt(d) + 25) } if (c == "autoComplete") { b._resetautocomplete() } if (c == "checkboxes") { b.listBoxContainer.jqxListBox({ checkboxes: b.checkboxes }); if (b.checkboxes) { b.input.attr("readonly", true); a.jqx.aria(b, "aria-readonly", true) } else { a.jqx.aria(b, "aria-readonly", false) } } if (c == "theme" && e != null) { b.listBoxContainer.jqxListBox({ theme: e }); b.listBoxContainer.addClass(b.toThemeProperty("jqx-popup")); if (a.jqx.browser.msie) { b.listBoxContainer.addClass(b.toThemeProperty("jqx-noshadow")) } b.dropdownlistContent.removeClass(); b.dropdownlistContent.addClass(b.toThemeProperty("jqx-combobox-content")); b.dropdownlistContent.addClass(b.toThemeProperty("jqx-widget-content")); b.input.removeClass(); b.input.addClass(b.toThemeProperty("jqx-combobox-input")); b.input.addClass(this.toThemeProperty("jqx-widget-content")); b.host.removeClass(); b.host.addClass(b.toThemeProperty("jqx-combobox-state-normal")); b.host.addClass(b.toThemeProperty("jqx-rc-all")); b.host.addClass(b.toThemeProperty("jqx-widget")); b.host.addClass(b.toThemeProperty("jqx-widget-content")); b.dropdownlistArrow.removeClass(); b.dropdownlistArrowIcon.addClass(b.toThemeProperty("jqx-icon-arrow-down")); b.dropdownlistArrow.addClass(b.toThemeProperty("jqx-combobox-arrow-normal")); b.dropdownlistArrow.addClass(b.toThemeProperty("jqx-fill-state-normal")) } if (c == "width" || c == "height") { b._setSize(); if (c == "width") { if (b.dropDownWidth == "auto") { var d = b.host.width(); b.listBoxContainer.jqxListBox({ width: d }); b.container.width(parseInt(d) + 25) } } b._arrange() } if (c == "selectedIndex") { b.listBox.selectIndex(e); b.renderSelection("mouse") } } }) })(jQuery);
    </script>
    <!--<script type="text/javascript" src="http://61.147.119.252:8088/jqwidgets/jqxmenu.js"></script>-->
    <script>
        /*
jQWidgets v3.0.3 (2013-Oct-01)
Copyright (c) 2011-2013 jQWidgets.
License: http://jqwidgets.com/license/
*/

        (function (a) { a.jqx.jqxWidget("jqxMenu", "", {}); a.extend(a.jqx._jqxMenu.prototype, { defineInstance: function () { this.items = new Array(); this.mode = "horizontal"; this.width = null; this.height = null; this.easing = "easeInOutSine"; this.animationShowDuration = 200; this.animationHideDuration = 200; this.autoCloseInterval = 0; this.animationHideDelay = 100; this.animationShowDelay = 100; this.menuElements = new Array(); this.autoSizeMainItems = false; this.autoCloseOnClick = true; this.autoCloseOnMouseLeave = true; this.enableRoundedCorners = true; this.disabled = false; this.autoOpenPopup = true; this.enableHover = true; this.autoOpen = true; this.autoGenerate = true; this.clickToOpen = false; this.showTopLevelArrows = false; this.touchMode = "auto"; this.source = null; this.popupZIndex = 20000; this.rtl = false; this.events = ["shown", "closed", "itemclick", "initialized"] }, createInstance: function (d) { var c = this; this.host.css("display", "block"); this.host.attr("role", "menubar"); this.propertyChangeMap.disabled = function (h, k, j, l) { if (c.disabled) { c.host.addClass(c.toThemeProperty("jqx-fill-state-disabled")); c.host.addClass(c.toThemeProperty("jqx-menu-disabled")) } else { c.host.removeClass(c.toThemeProperty("jqx-fill-state-disabled")); c.host.removeClass(c.toThemeProperty("jqx-menu-disabled")) } }; var b = false; var f = this; if (f.width != null && f.width.toString().indexOf("%") != -1) { b = true } if (f.height != null && f.height.toString().indexOf("%") != -1) { b = true } a.jqx.utilities.resize(this.host, function () { f.refresh() }); if (this.disabled) { this.host.addClass(this.toThemeProperty("jqx-fill-state-disabled")); this.host.addClass(this.toThemeProperty("jqx-menu-disabled")) } this.host.css("outline", "none"); if (this.source) { if (this.source != null) { var e = this.loadItems(this.source); this.element.innerHTML = e } } if (this.element.innerHTML.indexOf("UL")) { var g = this.host.find("ul:first"); if (g.length > 0) { this._createMenu(g[0]) } } this.host.data("autoclose", {}); this._render(); this.setSize(); var f = this; if (a.jqx.browser.msie && a.jqx.browser.version < 8) { this.host.attr("hideFocus", true) } }, focus: function () { try { this.host.focus() } catch (b) { } }, loadItems: function (c, e) { if (c == null) { return } if (c.length == 0) { return "" } var b = this; this.items = new Array(); var d = "<ul>"; if (e) { d = '<ul style="width:' + e + ';">' } a.map(c, function (f) { if (f == undefined) { return null } d += b._parseItem(f) }); d += "</ul>"; return d }, _parseItem: function (f) { var c = ""; if (f == undefined) { return null } var b = f.label; if (!f.label && f.html) { b = f.html } if (!b) { b = "Item" } if (typeof f === "string") { b = f } var e = false; if (f.selected != undefined && f.selected) { e = true } var d = false; if (f.disabled != undefined && f.disabled) { d = true } c += "<li"; if (d) { c += ' item-disabled="true" ' } if (f.label && !f.html) { c += ' item-label="' + b + '" ' } if (f.value != null) { c += ' item-value="' + f.value + '" ' } if (f.id != undefined) { c += ' id="' + f.id + '" ' } c += ">" + b; if (f.items) { if (f.subMenuWidth) { c += this.loadItems(f.items, f.subMenuWidth) } else { c += this.loadItems(f.items) } } c += "</li>"; return c }, setSize: function () { if (this.width != null && this.width.toString().indexOf("%") != -1) { this.host.width(this.width) } else { if (this.width != null && this.width.toString().indexOf("px") != -1) { this.host.width(this.width) } else { if (this.width != undefined && !isNaN(this.width)) { this.host.width(this.width) } } } if (this.height != null && this.height.toString().indexOf("%") != -1) { this.host.height(this.height) } else { if (this.height != null && this.height.toString().indexOf("px") != -1) { this.host.height(this.height) } else { if (this.height != undefined && !isNaN(this.height)) { this.host.height(this.height) } } } if (this.height === null) { this.host.height("auto") } }, isTouchDevice: function () { if (this._isTouchDevice != undefined) { return this._isTouchDevice } var b = a.jqx.mobile.isTouchDevice(); if (this.touchMode == true) { b = true } else { if (this.touchMode == false) { b = false } } if (b) { this.host.addClass(this.toThemeProperty("jqx-touch")); a(".jqx-menu-item").addClass(this.toThemeProperty("jqx-touch")) } this._isTouchDevice = b; return b }, refresh: function (b) { if (!b) { this.setSize() } }, _closeAll: function (f) { var d = f != null ? f.data : this; var b = d.items; a.each(b, function () { var e = this; if (e.hasItems == true) { if (e.isOpen) { d._closeItem(d, e) } } }); if (d.mode == "popup") { if (f != null) { var c = d._isRightClick(f); if (!c) { d.close() } } } }, closeItem: function (e) { if (e == null) { return false } var b = e; var c = document.getElementById(b); var d = this; a.each(d.items, function () { var f = this; if (f.isOpen == true && f.element == c) { d._closeItem(d, f); if (f.parentId) { d.closeItem(f.parentId) } } }); return true }, openItem: function (e) { if (e == null) { return false } var b = e; var c = document.getElementById(b); var d = this; a.each(d.items, function () { var f = this; if (f.isOpen == false && f.element == c) { d._openItem(d, f); if (f.parentId) { d.openItem(f.parentId) } } }); return true }, _getClosedSubMenuOffset: function (c) { var b = a(c.subMenuElement); var f = -b.outerHeight(); var e = -b.outerWidth(); var d = c.level == 0 && this.mode == "horizontal"; if (d) { e = 0 } else { f = 0 } switch (c.openVerticalDirection) { case "up": case "center": f = b.outerHeight(); break } switch (c.openHorizontalDirection) { case this._getDir("left"): if (d) { e = 0 } else { e = b.outerWidth() } break; case "center": if (d) { e = 0 } else { e = b.outerWidth() } break } return { left: e, top: f } }, _closeItem: function (l, o, g, c) { if (l == null || o == null) { return false } var j = a(o.subMenuElement); var b = o.level == 0 && this.mode == "horizontal"; var f = this._getClosedSubMenuOffset(o); var m = f.top; var e = f.left; $menuElement = a(o.element); var k = j.closest("div.jqx-menu-popup"); if (k != null) { var h = l.animationHideDelay; if (c == true) { h = 0 } if (j.data("timer").show != null) { clearTimeout(j.data("timer").show); j.data("timer").show = null } var n = function () { o.isOpen = false; if (!a.jqx.browser.msie && this.animationtype == "fade") { } if (b) { if (!a.jqx.browser.msie) { } j.stop().animate({ top: m }, l.animationHideDuration, function () { a(o.element).removeClass(l.toThemeProperty("jqx-fill-state-pressed")); a(o.element).removeClass(l.toThemeProperty("jqx-menu-item-top-selected")); var p = a(o.arrow); if (p.length > 0 && l.showTopLevelArrows) { p.removeClass(); if (o.openVerticalDirection == "down") { p.addClass(l.toThemeProperty("jqx-menu-item-arrow-down")) } else { p.addClass(l.toThemeProperty("jqx-menu-item-arrow-up")) } } a.jqx.aria(a(o.element), "aria-expanded", false); k.css({ display: "none" }); if (l.animationHideDuration == 0) { j.css({ top: m }) } l._raiseEvent("1", o) }) } else { if (!a.jqx.browser.msie) { } j.stop().animate({ left: e }, l.animationHideDuration, function () { if (l.animationHideDuration == 0) { j.css({ left: e }) } if (o.level > 0) { a(o.element).removeClass(l.toThemeProperty("jqx-fill-state-pressed")); a(o.element).removeClass(l.toThemeProperty("jqx-menu-item-selected")); var p = a(o.arrow); if (p.length > 0) { p.removeClass(); if (o.openHorizontalDirection != "left") { p.addClass(l.toThemeProperty("jqx-menu-item-arrow-" + l._getDir("right"))) } else { p.addClass(l.toThemeProperty("jqx-menu-item-arrow-" + l._getDir("left"))) } } } else { a(o.element).removeClass(l.toThemeProperty("jqx-fill-state-pressed")); a(o.element).removeClass(l.toThemeProperty("jqx-menu-item-top-selected")); var p = a(o.arrow); if (p.length > 0) { p.removeClass(); if (o.openHorizontalDirection != "left") { p.addClass(l.toThemeProperty("jqx-menu-item-arrow-top-" + l._getDir("right"))) } else { p.addClass(l.toThemeProperty("jqx-menu-item-arrow-top-" + l._getDir("left"))) } } } a.jqx.aria(a(o.element), "aria-expanded", false); k.css({ display: "none" }); l._raiseEvent("1", o) }) } }; if (h > 0) { j.data("timer").hide = setTimeout(function () { n() }, h) } else { n() } if (g != undefined && g) { var d = j.children(); a.each(d, function () { if (l.menuElements[this.id] && l.menuElements[this.id].isOpen) { var p = a(l.menuElements[this.id].subMenuElement); l._closeItem(l, l.menuElements[this.id], true, true) } }) } } }, getSubItems: function (j, h) { if (j == null) { return false } var g = this; var c = new Array(); if (h != null) { a.extend(c, h) } var d = j; var f = this.menuElements[d]; var b = a(f.subMenuElement); var e = b.find(".jqx-menu-item"); a.each(e, function () { c[this.id] = g.menuElements[this.id]; var k = g.getSubItems(this.id, c); a.extend(c, k) }); return c }, disable: function (g, d) { if (g == null) { return } var c = g; var f = this; if (this.menuElements[c]) { var e = this.menuElements[c]; e.disabled = d; var b = a(e.element); e.element.disabled = d; a.each(b.children(), function () { this.disabled = d }); if (d) { b.addClass(f.toThemeProperty("jqx-menu-item-disabled")); b.addClass(f.toThemeProperty("jqx-fill-state-disabled")) } else { b.removeClass(f.toThemeProperty("jqx-menu-item-disabled")); b.removeClass(f.toThemeProperty("jqx-fill-state-disabled")) } } }, _setItemProperty: function (g, c, f) { if (g == null) { return } var b = g; var e = this; if (this.menuElements[b]) { var d = this.menuElements[b]; if (d[c]) { d[c] = f } } }, setItemOpenDirection: function (d, c, e) { if (d == null) { return } var k = d; var g = this; var f = a.jqx.browser.msie && a.jqx.browser.version < 8; if (this.menuElements[k]) { var j = this.menuElements[k]; if (c != null) { j.openHorizontalDirection = c; if (j.hasItems && j.level > 0) { var h = a(j.element); if (h != undefined) { var b = a(j.arrow); if (j.arrow == null) { b = a('<span id="arrow' + h[0].id + '"></span>'); if (!f) { b.prependTo(h) } else { b.appendTo(h) } j.arrow = b[0] } b.removeClass(); if (j.openHorizontalDirection == "left") { b.addClass(g.toThemeProperty("jqx-menu-item-arrow-" + g._getDir("left"))) } else { b.addClass(g.toThemeProperty("jqx-menu-item-arrow-" + g._getDir("right"))) } b.css("visibility", "visible"); if (!f) { b.css("display", "block"); b.css("float", "right") } else { b.css("display", "inline-block"); b.css("float", "none") } } } } if (e != null) { j.openVerticalDirection = e; var b = a(j.arrow); var h = a(j.element); if (!g.showTopLevelArrows) { return } if (h != undefined) { if (j.arrow == null) { b = a('<span id="arrow' + h[0].id + '"></span>'); if (!f) { b.prependTo(h) } else { b.appendTo(h) } j.arrow = b[0] } b.removeClass(); if (j.openVerticalDirection == "down") { b.addClass(g.toThemeProperty("jqx-menu-item-arrow-down")) } else { b.addClass(g.toThemeProperty("jqx-menu-item-arrow-up")) } b.css("visibility", "visible"); if (!f) { b.css("display", "block"); b.css("float", "right") } else { b.css("display", "inline-block"); b.css("float", "none") } } } } }, _getSiblings: function (c) { var d = new Array(); var b = 0; for (i = 0; i < this.items.length; i++) { if (this.items[i] == c) { continue } if (this.items[i].parentId == c.parentId && this.items[i].hasItems) { d[b++] = this.items[i] } } return d }, _openItem: function (t, s, r) { if (t == null || s == null) { return false } if (s.isOpen) { return false } if (s.disabled) { return false } if (t.disabled) { return false } var m = t.popupZIndex; if (r != undefined) { m = r } var e = t.animationHideDuration; t.animationHideDuration = 0; t._closeItem(t, s, true, true); t.animationHideDuration = e; this.host.focus(); var f = [5, 5]; var u = a(s.subMenuElement); if (u != null) { u.stop() } if (u.data("timer").hide != null) { clearTimeout(u.data("timer").hide) } var p = u.closest("div.jqx-menu-popup"); var h = a(s.element); var j = s.level == 0 ? this._getOffset(s.element) : h.position(); if (s.level > 0 && this.hasTransform) { var q = parseInt(h.coord().top) - parseInt(this._getOffset(s.element).top); j.top += q } if (s.level == 0 && this.mode == "popup") { j = h.coord() } var k = s.level == 0 && this.mode == "horizontal"; var b = k ? j.left : this.menuElements[s.parentId] != null && this.menuElements[s.parentId].subMenuElement != null ? parseInt(a(a(this.menuElements[s.parentId].subMenuElement).closest("div.jqx-menu-popup")).outerWidth()) - f[0] : parseInt(u.outerWidth()); p.css({ visibility: "visible", display: "block", left: b, top: k ? j.top + h.outerHeight() : j.top, zIndex: m }); u.css("display", "block"); if (this.mode != "horizontal" && s.level == 0) { var d = this._getOffset(this.element); p.css("left", -1 + d.left + this.host.outerWidth()); u.css("left", -u.outerWidth()) } else { var c = this._getClosedSubMenuOffset(s); u.css("left", c.left); u.css("top", c.top) } p.css({ height: parseInt(u.outerHeight()) + parseInt(f[1]) + "px" }); var o = 0; var g = 0; switch (s.openVerticalDirection) { case "up": if (k) { u.css("top", u.outerHeight()); o = f[1]; var l = parseInt(u.parent().css("padding-bottom")); if (isNaN(l)) { l = 0 } if (l > 0) { p.addClass(this.toThemeProperty("jqx-menu-popup-clear")) } u.css("top", u.outerHeight() - l); p.css({ display: "block", top: j.top - p.outerHeight(), zIndex: m }) } else { o = f[1]; u.css("top", u.outerHeight()); p.css({ display: "block", top: j.top - p.outerHeight() + f[1] + h.outerHeight(), zIndex: m }) } break; case "center": if (k) { u.css("top", 0); p.css({ display: "block", top: j.top - p.outerHeight() / 2 + f[1], zIndex: m }) } else { u.css("top", 0); p.css({ display: "block", top: j.top + h.outerHeight() / 2 - p.outerHeight() / 2 + f[1], zIndex: m }) } break } switch (s.openHorizontalDirection) { case this._getDir("left"): if (k) { p.css({ left: j.left - (p.outerWidth() - h.outerWidth() - f[0]) }) } else { g = 0; u.css("left", p.outerWidth()); p.css({ left: j.left - (p.outerWidth()) + 2 * s.level }) } break; case "center": if (k) { p.css({ left: j.left - (p.outerWidth() / 2 - h.outerWidth() / 2 - f[0] / 2) }) } else { p.css({ left: j.left - (p.outerWidth() / 2 - h.outerWidth() / 2 - f[0] / 2) }); u.css("left", p.outerWidth()) } break } if (k) { if (parseInt(u.css("top")) == o) { s.isOpen = true; return } } else { if (parseInt(u.css("left")) == g) { s.isOpen == true; return } } a.each(t._getSiblings(s), function () { t._closeItem(t, this, true, true) }); var n = a.data(t.element, "animationHideDelay"); t.animationHideDelay = n; if (this.autoCloseInterval > 0) { if (this.host.data("autoclose") != null && this.host.data("autoclose").close != null) { clearTimeout(this.host.data("autoclose").close) } if (this.host.data("autoclose") != null) { this.host.data("autoclose").close = setTimeout(function () { t._closeAll() }, this.autoCloseInterval) } } u.data("timer").show = setTimeout(function () { if (p != null) { if (k) { u.stop(); u.css("left", g); if (!a.jqx.browser.msie) { } h.addClass(t.toThemeProperty("jqx-fill-state-pressed")); h.addClass(t.toThemeProperty("jqx-menu-item-top-selected")); var v = a(s.arrow); if (v.length > 0 && t.showTopLevelArrows) { v.removeClass(); if (s.openVerticalDirection == "down") { v.addClass(t.toThemeProperty("jqx-menu-item-arrow-down-selected")) } else { v.addClass(t.toThemeProperty("jqx-menu-item-arrow-up-selected")) } } if (t.animationShowDuration == 0) { u.css({ top: o }); s.isOpen = true; t._raiseEvent("0", s); a.jqx.aria(a(s.element), "aria-expanded", true) } else { u.animate({ top: o }, t.animationShowDuration, t.easing, function () { s.isOpen = true; a.jqx.aria(a(s.element), "aria-expanded", true); t._raiseEvent("0", s) }) } } else { u.stop(); u.css("top", o); if (!a.jqx.browser.msie) { } if (s.level > 0) { h.addClass(t.toThemeProperty("jqx-fill-state-pressed")); h.addClass(t.toThemeProperty("jqx-menu-item-selected")); var v = a(s.arrow); if (v.length > 0) { v.removeClass(); if (s.openHorizontalDirection != "left") { v.addClass(t.toThemeProperty("jqx-menu-item-arrow-" + t._getDir("right") + "-selected")) } else { v.addClass(t.toThemeProperty("jqx-menu-item-arrow-" + t._getDir("left") + "-selected")) } } } else { h.addClass(t.toThemeProperty("jqx-fill-state-pressed")); h.addClass(t.toThemeProperty("jqx-menu-item-top-selected")); var v = a(s.arrow); if (v.length > 0) { v.removeClass(); if (s.openHorizontalDirection != "left") { v.addClass(t.toThemeProperty("jqx-menu-item-arrow-" + t._getDir("right") + "-selected")) } else { v.addClass(t.toThemeProperty("jqx-menu-item-arrow-" + t._getDir("left") + "-selected")) } } } if (!a.jqx.browser.msie) { } if (t.animationShowDuration == 0) { u.css({ left: g }); t._raiseEvent("0", s); s.isOpen = true; a.jqx.aria(a(s.element), "aria-expanded", true) } else { u.animate({ left: g }, t.animationShowDuration, t.easing, function () { t._raiseEvent("0", s); s.isOpen = true; a.jqx.aria(a(s.element), "aria-expanded", true) }) } } } }, this.animationShowDelay) }, _getDir: function (b) { switch (b) { case "left": return !this.rtl ? "left" : "right"; case "right": return this.rtl ? "left" : "right" } return "left" }, _applyOrientation: function (j, d) { var g = this; var f = 0; this.host.removeClass(g.toThemeProperty("jqx-menu-horizontal")); this.host.removeClass(g.toThemeProperty("jqx-menu-vertical")); this.host.removeClass(g.toThemeProperty("jqx-menu")); this.host.removeClass(g.toThemeProperty("jqx-widget")); this.host.addClass(g.toThemeProperty("jqx-widget")); this.host.addClass(g.toThemeProperty("jqx-menu")); if (j != undefined && d != undefined && d == "popup") { if (this.host.parent().length > 0 && this.host.parent().parent().length > 0 && this.host.parent().parent()[0] == document.body) { var h = a.data(document.body, "jqxMenuOldHost" + this.element.id); if (h != null) { var e = this.host.closest("div.jqx-menu-wrapper"); e.remove(); e.appendTo(h); this.host.css("display", "block"); this.host.css("visibility", "visible"); e.css("display", "block"); e.css("visibility", "visible") } } } else { if (j == undefined && d == undefined) { a.data(document.body, "jqxMenuOldHost" + this.element.id, this.host.parent()[0]) } } if (this.autoOpenPopup) { if (this.mode == "popup") { this.addHandler(a(document), "contextmenu." + this.element.id, function (k) { return false }); this.addHandler(a(document), "mousedown.menu" + this.element.id, function (k) { g._openContextMenu(k) }) } else { this.removeHandler(a(document), "contextmenu." + this.element.id); this.removeHandler(a(document), "mousedown.menu" + this.element.id) } } else { this.removeHandler(a(document), "contextmenu." + this.element.id); this.removeHandler(a(document), "mousedown.menu" + this.element.id) } if (this.rtl) { this.host.addClass(this.toThemeProperty("jqx-rtl")) } switch (this.mode) { case "horizontal": this.host.addClass(g.toThemeProperty("jqx-widget-header")); this.host.addClass(g.toThemeProperty("jqx-menu-horizontal")); a.each(this.items, function () { var m = this; $element = a(m.element); var l = a(m.arrow); l.removeClass(); if (m.hasItems && m.level > 0) { var l = a('<span style="border: none; background-color: transparent;" id="arrow' + $element[0].id + '"></span>'); l.prependTo($element); l.css("float", g._getDir("right")); l.addClass(g.toThemeProperty("jqx-menu-item-arrow-" + g._getDir("right"))); m.arrow = l[0] } if (m.level == 0) { a(m.element).css("float", g._getDir("left")); if (!m.ignoretheme && m.hasItems && g.showTopLevelArrows) { var l = a('<span style="border: none; background-color: transparent;" id="arrow' + $element[0].id + '"></span>'); var k = a.jqx.browser.msie && a.jqx.browser.version < 8; if (m.arrow == null) { if (!k) { l.prependTo($element) } else { l.appendTo($element) } } else { l = a(m.arrow) } if (m.openVerticalDirection == "down") { l.addClass(g.toThemeProperty("jqx-menu-item-arrow-down")) } else { l.addClass(g.toThemeProperty("jqx-menu-item-arrow-up")) } l.css("visibility", "visible"); if (!k) { l.css("display", "block"); l.css("float", "right") } else { l.css("display", "inline-block") } m.arrow = l[0] } else { if (!m.ignoretheme && m.hasItems && !g.showTopLevelArrows) { if (m.arrow != null) { var l = a(m.arrow); l.remove(); m.arrow = null } } } f = Math.max(f, $element.height()) } }); break; case "vertical": case "popup": this.host.addClass(g.toThemeProperty("jqx-menu-vertical")); a.each(this.items, function () { var l = this; $element = a(l.element); if (l.hasItems && !l.ignoretheme) { if (l.arrow) { a(l.arrow).remove() } var k = a('<span style="border: none; background-color: transparent;" id="arrow' + $element[0].id + '"></span>'); k.prependTo($element); k.css("float", "right"); if (l.level == 0) { k.addClass(g.toThemeProperty("jqx-menu-item-arrow-top-" + g._getDir("right"))) } else { k.addClass(g.toThemeProperty("jqx-menu-item-arrow-" + g._getDir("right"))) } l.arrow = k[0] } $element.css("float", "none") }); if (this.mode == "popup") { this.host.addClass(g.toThemeProperty("jqx-widget-content")); this.host.wrap('<div class="jqx-menu-wrapper" style="z-index:' + this.popupZIndex + '; border: none; background-color: transparent; padding: 0px; margin: 0px; position: absolute; top: 0; left: 0; display: block; visibility: visible;"></div>'); var e = this.host.closest("div.jqx-menu-wrapper"); this.host.addClass(g.toThemeProperty("jqx-popup")); e[0].id = "menuWrapper" + this.element.id; e.appendTo(a(document.body)) } else { this.host.addClass(g.toThemeProperty("jqx-widget-header")) } if (this.mode == "popup") { var b = this.host.height(); this.host.css("position", "absolute"); this.host.css("top", "0"); this.host.css("left", "0"); this.host.height(b); this.host.css("display", "none") } break } var c = this.isTouchDevice(); if (this.autoCloseOnClick) { this.removeHandler(a(document), "mousedown.menu" + this.element.id, g._closeAfterClick); this.addHandler(a(document), "mousedown.menu" + this.element.id, g._closeAfterClick, g); if (c) { this.removeHandler(a(document), a.jqx.mobile.getTouchEventName("touchstart") + ".menu" + this.element.id, g._closeAfterClick, g); this.addHandler(a(document), a.jqx.mobile.getTouchEventName("touchstart") + ".menu" + this.element.id, g._closeAfterClick, g) } } }, _getBodyOffset: function () { var c = 0; var b = 0; if (a("body").css("border-top-width") != "0px") { c = parseInt(a("body").css("border-top-width")); if (isNaN(c)) { c = 0 } } if (a("body").css("border-left-width") != "0px") { b = parseInt(a("body").css("border-left-width")); if (isNaN(b)) { b = 0 } } return { left: b, top: c } }, _getOffset: function (c) { var e = a.jqx.mobile.isSafariMobileBrowser(); var h = a(c).coord(true); var g = h.top; var f = h.left; if (a("body").css("border-top-width") != "0px") { g = parseInt(g) + this._getBodyOffset().top } if (a("body").css("border-left-width") != "0px") { f = parseInt(f) + this._getBodyOffset().left } var d = a.jqx.mobile.isWindowsPhone(); if (this.hasTransform || (e != null && e) || d) { var b = { left: a.jqx.mobile.getLeftPos(c), top: a.jqx.mobile.getTopPos(c) }; return b } else { return { left: f, top: g } } }, _isRightClick: function (c) { var b; if (!c) { var c = window.event } if (c.which) { b = (c.which == 3) } else { if (c.button) { b = (c.button == 2) } } return b }, _openContextMenu: function (d) { var c = this; var b = c._isRightClick(d); if (b) { c.open(parseInt(d.clientX) + 5, parseInt(d.clientY) + 5) } }, close: function () { var c = this; var d = a.data(this.element, "contextMenuOpened" + this.element.id); if (d) { var b = this.host; a.each(c.items, function () { var e = this; if (e.hasItems) { c._closeItem(c, e) } }); a.each(c.items, function () { var e = this; if (e.isOpen == true) { $submenu = a(e.subMenuElement); var f = $submenu.closest("div.jqx-menu-popup"); f.hide(this.animationHideDuration) } }); this.host.hide(this.animationHideDuration); a.data(c.element, "contextMenuOpened" + this.element.id, false); c._raiseEvent("1", c) } }, open: function (e, d) { if (this.mode == "popup") { var c = 0; if (this.host.css("display") == "block") { this.close(); c = this.animationHideDuration } var b = this; if (e == undefined || e == null) { e = 0 } if (d == undefined || d == null) { d = 0 } setTimeout(function () { b.host.show(b.animationShowDuration); b.host.css("visibility", "visible"); a.data(b.element, "contextMenuOpened" + b.element.id, true); b._raiseEvent("0", b); b.host.css("z-index", 9999); if (e != undefined && d != undefined) { b.host.css({ left: e, top: d }) } }, c) } }, _renderHover: function (c, e, b) { var d = this; if (!e.ignoretheme) { this.addHandler(c, "mouseenter", function () { if (!e.disabled && !e.separator && d.enableHover && !d.disabled) { if (e.level > 0) { c.addClass(d.toThemeProperty("jqx-fill-state-hover")); c.addClass(d.toThemeProperty("jqx-menu-item-hover")) } else { c.addClass(d.toThemeProperty("jqx-fill-state-hover")); c.addClass(d.toThemeProperty("jqx-menu-item-top-hover")) } } }); this.addHandler(c, "mouseleave", function () { if (!e.disabled && !e.separator && d.enableHover && !d.disabled) { if (e.level > 0) { c.removeClass(d.toThemeProperty("jqx-fill-state-hover")); c.removeClass(d.toThemeProperty("jqx-menu-item-hover")) } else { c.removeClass(d.toThemeProperty("jqx-fill-state-hover")); c.removeClass(d.toThemeProperty("jqx-menu-item-top-hover")) } } }) } }, _closeAfterClick: function (c) { var b = c != null ? c.data : this; var d = false; if (b.autoCloseOnClick) { a.each(a(c.target).parents(), function () { if (this.className.indexOf) { if (this.className.indexOf("jqx-menu") != -1) { d = true; return false } } }); if (!d) { c.data = b; b._closeAll(c) } } }, _autoSizeHorizontalMenuItems: function () { var c = this; if (c.autoSizeMainItems && this.mode == "horizontal") { var b = this.maxHeight; if (parseInt(b) > parseInt(this.host.height())) { b = parseInt(this.host.height()) } b = parseInt(this.host.height()); a.each(this.items, function () { var m = this; $element = a(m.element); if (m.level == 0 && b > 0) { var d = $element.children().length > 0 ? parseInt($element.children().height()) : $element.height(); var g = c.host.find("ul:first"); var h = parseInt(g.css("padding-top")); var n = parseInt(g.css("margin-top")); var k = b - 2 * (n + h); var j = parseInt(k) / 2 - d / 2; var e = parseInt(j); var l = parseInt(j); $element.css("padding-top", e); $element.css("padding-bottom", l); if (parseInt($element.outerHeight()) > k) { var f = 1; $element.css("padding-top", e - f); e = e - f } } }) } a.each(this.items, function () { var f = this; $element = a(f.element); if (f.hasItems && f.level > 0) { if (f.arrow) { var e = a(f.arrow); var d = a(f.element).height(); if (d > 15) { e.css("margin-top", (d - 15) / 2) } } } }) }, _render: function (g, b) { var h = this.popupZIndex; var c = [5, 5]; var f = this; a.data(f.element, "animationHideDelay", f.animationHideDelay); var d = this.isTouchDevice(); var e = d && a.jqx.mobile.isWindowsPhone(); a.data(document.body, "menuel", this); this.hasTransform = a.jqx.utilities.hasTransform(this.host); this._applyOrientation(g, b); if (f.enableRoundedCorners) { this.host.addClass(f.toThemeProperty("jqx-rc-all")) } a.each(this.items, function () { var q = this; var m = a(q.element); m.attr("role", "menuitem"); if (f.enableRoundedCorners) { m.addClass(f.toThemeProperty("jqx-rc-all")) } f.removeHandler(m, "click"); f.addHandler(m, "click", function (v) { if (q.disabled) { return } f._raiseEvent("2", { item: q.element, event: v }); if (!f.autoOpen) { if (q.level > 0) { if (f.autoCloseOnClick && !d && !f.clickToOpen) { v.data = f; f._closeAll(v) } } } else { if (f.autoCloseOnClick && !d && !f.clickToOpen) { if (q.closeOnClick) { v.data = f; f._closeAll(v) } } } if (d && f.autoCloseOnClick) { v.data = f; if (!q.hasItems) { f._closeAll(v) } } if (v.target.tagName != "A" && v.target.tagName != "a") { var t = q.anchor != null ? a(q.anchor) : null; if (t != null && t.length > 0) { var s = t.attr("href"); var u = t.attr("target"); if (s != null) { if (u != null) { window.open(s, u) } else { window.location = s } } } } }); f.removeHandler(m, "mouseenter"); f.removeHandler(m, "mouseleave"); if (!e) { f._renderHover(m, q, d) } if (q.subMenuElement != null) { var n = a(q.subMenuElement); n.wrap('<div class="jqx-menu-popup ' + f.toThemeProperty("jqx-menu-popup") + '" style="border: none; background-color: transparent; z-index:' + h + '; padding: 0px; margin: 0px; position: absolute; top: 0; left: 0; display: block; visibility: hidden;"><div style="background-color: transparent; border: none; position:absolute; overflow:hidden; left: 0; top: 0; right: 0; width: 100%; height: 100%;"></div></div>'); n.css({ overflow: "hidden", position: "absolute", left: 0, display: "inherit", top: -n.outerHeight() }); n.data("timer", {}); if (q.level > 0) { n.css("left", -n.outerWidth()) } else { if (f.mode == "horizontal") { n.css("left", 0) } } h++; var p = a(q.subMenuElement).closest("div.jqx-menu-popup").css({ width: parseInt(a(q.subMenuElement).outerWidth()) + parseInt(c[0]) + "px", height: parseInt(a(q.subMenuElement).outerHeight()) + parseInt(c[1]) + "px" }); var r = m.closest("div.jqx-menu-popup"); if (r.length > 0) { var j = n.css("margin-left"); var l = n.css("margin-right"); var k = n.css("padding-left"); var o = n.css("padding-right"); p.appendTo(r); n.css("margin-left", j); n.css("margin-right", l); n.css("padding-left", k); n.css("padding-right", o) } else { var j = n.css("margin-left"); var l = n.css("margin-right"); var k = n.css("padding-left"); var o = n.css("padding-right"); p.appendTo(a(document.body)); n.css("margin-left", j); n.css("margin-right", l); n.css("padding-left", k); n.css("padding-right", o) } if (!f.clickToOpen) { if (d) { f.removeHandler(m, a.jqx.mobile.getTouchEventName("touchstart")); f.addHandler(m, a.jqx.mobile.getTouchEventName("touchstart"), function (s) { clearTimeout(n.data("timer").hide); if (n != null) { n.stop() } if (q.level == 0 && !q.isOpen) { s.data = f; f._closeAll(s) } if (!q.isOpen) { f._openItem(f, q) } else { f._closeItem(f, q, true) } return false }) } if (!e) { f.addHandler(m, "mouseenter", function () { if (f.autoOpen || (q.level > 0 && !f.autoOpen)) { clearTimeout(n.data("timer").hide) } if (q.parentId && q.parentId != 0) { if (f.menuElements[q.parentId]) { var s = f.menuElements[q.parentId].isOpen; if (!s) { return } } } if (f.autoOpen || (q.level > 0 && !f.autoOpen)) { f._openItem(f, q) } return false }); f.addHandler(m, "mousedown", function () { if (!f.autoOpen && q.level == 0) { clearTimeout(n.data("timer").hide); if (n != null) { n.stop() } if (!q.isOpen) { f._openItem(f, q) } else { f._closeItem(f, q, true) } } }); f.addHandler(m, "mouseleave", function (t) { if (f.autoCloseOnMouseLeave) { clearTimeout(n.data("timer").hide); var w = a(q.subMenuElement); var s = { left: parseInt(t.pageX), top: parseInt(t.pageY) }; var v = { left: parseInt(w.coord().left), top: parseInt(w.coord().top), width: parseInt(w.outerWidth()), height: parseInt(w.outerHeight()) }; var u = true; if (v.left - 5 <= s.left && s.left <= v.left + v.width + 5) { if (v.top <= s.top && s.top <= v.top + v.height) { u = false } } if (u) { f._closeItem(f, q, true) } } }); f.removeHandler(p, "mouseenter"); f.addHandler(p, "mouseenter", function () { clearTimeout(n.data("timer").hide) }); f.removeHandler(p, "mouseleave"); f.addHandler(p, "mouseleave", function (s) { if (f.autoCloseOnMouseLeave) { clearTimeout(n.data("timer").hide); clearTimeout(n.data("timer").show); if (n != null) { n.stop() } f._closeItem(f, q, true) } }) } } else { f.removeHandler(m, "mousedown"); f.addHandler(m, "mousedown", function (s) { clearTimeout(n.data("timer").hide); if (n != null) { n.stop() } if (q.level == 0 && !q.isOpen) { s.data = f; f._closeAll(s) } if (!q.isOpen) { f._openItem(f, q) } else { f._closeItem(f, q, true) } }) } } }); this._autoSizeHorizontalMenuItems(); this._raiseEvent("3", this) }, createID: function () { var b = Math.random() + ""; b = b.replace(".", ""); b = "99" + b; b = b / 1; while (this.items[b]) { b = Math.random() + ""; b = b.replace(".", ""); b = b / 1 } return "menuItem" + b }, _createMenu: function (c, f) { if (c == null) { return } if (f == undefined) { f = true } if (f == null) { f = true } var o = this; var t = a(c).find("li"); var q = 0; for (var j = 0; j < t.length; j++) { var m = t[j]; var r = a(m); if (m.className.indexOf("jqx-menu") == -1 && this.autoGenerate == false) { continue } var p = m.id; if (!p) { p = this.createID() } if (f) { m.id = p; this.items[q] = new a.jqx._jqxMenu.jqxMenuItem(); this.menuElements[p] = this.items[q] } q += 1; var s = 0; var v = this; var h = r.children(); h.each(function () { if (!f) { this.className = ""; if (v.autoGenerate) { a(v.items[q - 1].subMenuElement)[0].className = ""; a(v.items[q - 1].subMenuElement).addClass(v.toThemeProperty("jqx-widget-content")); a(v.items[q - 1].subMenuElement).addClass(v.toThemeProperty("jqx-menu-dropdown")); a(v.items[q - 1].subMenuElement).addClass(v.toThemeProperty("jqx-popup")) } } if (this.className.indexOf("jqx-menu-dropdown") != -1) { if (f) { v.items[q - 1].subMenuElement = this } return false } else { if (v.autoGenerate && (this.tagName == "ul" || this.tagName == "UL")) { if (f) { v.items[q - 1].subMenuElement = this } this.className = ""; a(this).addClass(v.toThemeProperty("jqx-widget-content")); a(this).addClass(v.toThemeProperty("jqx-menu-dropdown")); a(this).addClass(v.toThemeProperty("jqx-popup")); a(this).attr("role", "menu"); if (v.rtl) { a(this).addClass(v.toThemeProperty("jqx-rc-l")) } else { a(this).addClass(v.toThemeProperty("jqx-rc-r")) } a(this).addClass(v.toThemeProperty("jqx-rc-b")); return false } } }); var u = r.parents(); u.each(function () { if (this.className.indexOf("jqx-menu-item") != -1) { s = this.id; return false } else { if (v.autoGenerate && (this.tagName == "li" || this.tagName == "LI")) { s = this.id; return false } } }); var e = false; var d = m.getAttribute("type"); var b = m.getAttribute("ignoretheme"); if (b) { if (b == "true" || b == true) { b = true } } else { b = false } if (!d) { d = m.type } else { if (d == "separator") { var e = true } } if (!e) { if (s) { d = "sub" } else { d = "top" } } var g = this.items[q - 1]; if (f) { g.id = p; g.parentId = s; g.type = d; g.separator = e; g.element = t[j]; var l = r.children("a"); g.level = r.parents("li").length; g.anchor = l.length > 0 ? l : null } g.ignoretheme = b; var n = this.menuElements[s]; if (n != null) { if (n.ignoretheme) { g.ignoretheme = n.ignoretheme; b = n.ignoretheme } } if (this.autoGenerate) { if (d == "separator") { r.removeClass(); r.addClass(this.toThemeProperty("jqx-menu-item-separator")); r.attr("role", "separator") } else { if (!b) { r[0].className = ""; if (this.rtl) { r.addClass(this.toThemeProperty("jqx-rtl")) } if (g.level > 0) { r.addClass(this.toThemeProperty("jqx-item")); r.addClass(this.toThemeProperty("jqx-menu-item")) } else { r.addClass(this.toThemeProperty("jqx-item")); r.addClass(this.toThemeProperty("jqx-menu-item-top")) } } } } if (f && !b) { g.hasItems = r.find("li").length > 0; if (g.hasItems) { if (g.element) { a.jqx.aria(a(g.element), "aria-haspopup", true); if (!g.subMenuElement.id) { g.subMenuElement.id = a.jqx.utilities.createId() } a.jqx.aria(a(g.element), "aria-owns", g.subMenuElement.id) } } } } }, destroy: function () { a.jqx.utilities.resize(this.host, null, true); var d = this.host.closest("div.jqx-menu-wrapper"); d.remove(); var b = this; this.removeHandler(a(document), "mousedown.menu" + this.element.id, b._closeAfterClick); this.removeHandler(a(document), "mouseup.menu" + this.element.id, b._closeAfterClick); a.data(document.body, "jqxMenuOldHost" + this.element.id, null); if (a(window).off) { a(window).off("resize.menu" + b.element.id) } a.each(this.items, function () { var g = this; var f = a(g.element); b.removeHandler(f, "click"); b.removeHandler(f, "selectstart"); b.removeHandler(f, "mouseenter"); b.removeHandler(f, "mouseleave"); b.removeHandler(f, "mousedown"); b.removeHandler(f, "mouseleave"); var e = a(g.subMenuElement); var h = e.closest("div.jqx-menu-popup"); h.remove(); delete this.subMenuElement; delete this.element }); a.data(document.body, "menuel", null); delete this.menuElements; this.items = new Array(); delete this.items; var c = a.data(this.element, "jqxMenu"); if (c) { delete c.instance } this.host.removeClass(); this.host.remove(); delete this.host; delete this.element }, _raiseEvent: function (f, c) { if (c == undefined) { c = { owner: null } } var d = this.events[f]; args = c; args.owner = this; var e = new jQuery.Event(d); if (f == "2") { args = c.item; args.owner = this; a.extend(e, c.event); e.type = "itemclick" } e.owner = this; e.args = args; var b = this.host.trigger(e); return b }, propertyChangedHandler: function (b, d, g, f) { if (this.isInitialized == undefined || this.isInitialized == false) { return } if (f == g) { return } if (d == "touchMode") { this._isTouchDevice = null; b._render(f, g) } if (d == "source") { if (b.source != null) { var c = b.loadItems(b.source); b.element.innerHTML = c; var e = b.host.find("ul:first"); if (e.length > 0) { b.refresh(); b._createMenu(e[0]); b._render() } } } if (d == "autoCloseOnClick") { if (f == false) { b.removeHandler(a(document), "mousedown.menu" + this.element.id, b._closeAll) } else { b.addHandler(a(document), "mousedown.menu" + this.element.id, b, b._closeAll) } } else { if (d == "mode" || d == "width" || d == "height" || d == "showTopLevelArrows") { b.refresh(); if (d == "mode") { b._render(f, g) } else { b._applyOrientation() } } else { if (d == "theme") { a.jqx.utilities.setTheme(g, f, b.host) } } } } }) })(jQuery); (function (a) { a.jqx._jqxMenu.jqxMenuItem = function (e, d, c) { var b = { id: e, parentId: d, parentItem: null, anchor: null, type: c, disabled: false, level: 0, isOpen: false, hasItems: false, element: null, subMenuElement: null, arrow: null, openHorizontalDirection: "right", openVerticalDirection: "down", closeOnClick: true }; return b } })(jQuery);
    </script>
    <!--<script type="text/javascript" src="http://61.147.119.252:8088/jqwidgets/jqxpanel.js"></script>-->
    <script>
        /*
jQWidgets v3.0.3 (2013-Oct-01)
Copyright (c) 2011-2013 jQWidgets.
License: http://jqwidgets.com/license/
*/

        (function (a) { a.jqx.jqxWidget("jqxPanel", "", {}); a.extend(a.jqx._jqxPanel.prototype, { defineInstance: function () { this.width = null; this.height = null; this.disabled = false; this.scrollBarSize = a.jqx.utilities.scrollBarSize; this.sizeMode = "fixed"; this.autoUpdate = false; this.autoUpdateInterval = 500; this.touchMode = "auto"; this.horizontalScrollBarMax = null; this.verticalScrollBarMax = null; this.touchModeStyle = "auto"; this.rtl = false; this.events = ["layout", ] }, createInstance: function (b) { this.render() }, render: function () { var b = this; this.host.addClass(this.toThemeProperty("jqx-panel")); this.host.addClass(this.toThemeProperty("jqx-widget")); this.host.addClass(this.toThemeProperty("jqx-widget-content")); this.host.addClass(this.toThemeProperty("jqx-rc-all")); var c = a("<div id='panelWrapper' style='overflow: hidden; width: 100%; height: 100%; background-color: transparent; -webkit-appearance: none; outline: none; align:left; border: 0px; padding: 0px; margin: 0px; left: 0px; top: 0px; valign:top; position: relative;'><div id='panelContent' style='-webkit-appearance: none; -moz-box-sizing: border-box; box-sizing: border-box; width: 100%; height: 100%; outline: none; border: none; padding: 0px; position: absolute; margin: 0px; align:left; valign:top; left: 0px; top: 0px;'/><div id='verticalScrollBar' style='align:left; valign:top; left: 0px; top: 0px; position: absolute;'/><div id='horizontalScrollBar' style='align:left; valign:top; left: 0px; top: 0px; position: absolute;'/><div id='bottomRight' style='align:left; valign:top; left: 0px; top: 0px; position: absolute;'/></div>"); if (!this.host.jqxButton) { throw new Error("jqxPanel: Missing reference to jqxbuttons.js.") } if (!this.host.jqxScrollBar) { throw new Error("jqxPanel: Missing reference to jqxscrollbar.js.") } var d = this.host.children(); this._rtl = false; if (d.length > 0 && d.css("direction") == "rtl") { this.rtl = true; this._rtl = true } this.host.wrapInner(c); var g = this.host.find("#verticalScrollBar"); g[0].id = this.element.id + "verticalScrollBar"; this.vScrollBar = g.jqxScrollBar({ vertical: true, rtl: this.rtl, touchMode: this.touchMode, theme: this.theme }); var f = this.host.find("#horizontalScrollBar"); f[0].id = this.element.id + "horizontalScrollBar"; this.hScrollBar = f.jqxScrollBar({ vertical: false, rtl: this.rtl, touchMode: this.touchMode, theme: this.theme }); this.content = this.host.find("#panelContent"); this.wrapper = this.host.find("#panelWrapper"); this.content.addClass(this.toThemeProperty("jqx-widget-content")); this.wrapper[0].id = this.wrapper[0].id + this.element.id; this.content[0].id = this.content[0].id + this.element.id; this.bottomRight = this.host.find("#bottomRight").addClass(this.toThemeProperty("jqx-panel-bottomright")); this.bottomRight[0].id = "bottomRight" + this.element.id; this.vScrollBar.css("visibility", "inherit"); this.hScrollBar.css("visibility", "inherit"); this.vScrollInstance = a.data(this.vScrollBar[0], "jqxScrollBar").instance; this.hScrollInstance = a.data(this.hScrollBar[0], "jqxScrollBar").instance; var e = this; this.propertyChangeMap.disabled = function (h, j, i, k) { e.vScrollBar.jqxScrollBar({ disabled: e.disabled }); e.hScrollBar.jqxScrollBar({ disabled: e.disabled }) }; this.vScrollBar.jqxScrollBar({ disabled: this.disabled }); this.hScrollBar.jqxScrollBar({ disabled: this.disabled }); this._addHandlers(); if (this.width == null) { this.width = this.content.width() } if (this.height == null) { this.height = this.content.height() } this._arrange(); this.contentWidth = e.content[0].scrollWidth; this.contentHeight = e.content[0].scrollHeight; if (this.autoUpdate) { e._autoUpdate() } this.propertyChangeMap.autoUpdate = function (h, j, i, k) { if (e.autoUpdate) { e._autoUpdate() } else { clearInterval(e.autoUpdateId); e.autoUpdateId = null } }; this.addHandler(a(window), "unload", function () { if (e.autoUpdateId != null) { clearInterval(e.autoUpdateId); e.autoUpdateId = null; e.destroy() } }); this._updateTouchScrolling(); this._render() }, hiddenParent: function () { return a.jqx.isHidden(this.host) }, _updateTouchScrolling: function () { var b = this; if (this.touchMode == true) { a.jqx.mobile.setMobileSimulator(this.element) } var c = this.isTouchDevice(); if (c) { a.jqx.mobile.touchScroll(this.element, b.vScrollInstance.max, function (f, e) { if (b.vScrollBar.css("visibility") != "hidden") { var d = b.vScrollInstance.value; b.vScrollInstance.setPosition(d + e) } if (b.hScrollBar.css("visibility") != "hidden") { var d = b.hScrollInstance.value; b.hScrollInstance.setPosition(d + f) } }, this.element.id, this.hScrollBar, this.vScrollBar); this._arrange() } this.vScrollBar.jqxScrollBar({ touchMode: this.touchMode }); this.hScrollBar.jqxScrollBar({ touchMode: this.touchMode }) }, isTouchDevice: function () { var b = a.jqx.mobile.isTouchDevice(); if (this.touchMode == true) { b = true } else { if (this.touchMode == false) { b = false } } if (b && this.touchModeStyle != false) { this.scrollBarSize = a.jqx.utilities.touchScrollBarSize } return b }, append: function (b) { if (b != null) { this.content.append(b); this._arrange() } }, setcontent: function (b) { this.content[0].innerHTML = b; this._arrange(); var c = this; setTimeout(function () { c._arrange() }, 100) }, prepend: function (b) { if (b != null) { this.content.prepend(b); this._arrange() } }, clearcontent: function () { this.content.text(""); this.content.children().remove(); this._arrange() }, remove: function (b) { if (b != null) { a(b).remove(); this._arrange() } }, _autoUpdate: function () { var b = this; this.autoUpdateId = setInterval(function () { var d = b.content[0].scrollWidth; var c = b.content[0].scrollHeight; var e = false; if (b.contentWidth != d) { b.contentWidth = d; e = true } if (b.contentHeight != c) { b.contentHeight = c; e = true } if (e) { b._arrange() } }, this.autoUpdateInterval) }, _addHandlers: function () { var b = this; this.addHandler(this.vScrollBar, "valuechanged", function (c) { b._render(b) }); this.addHandler(this.hScrollBar, "valuechanged", function (c) { b._render(b) }); this.addHandler(this.host, "mousewheel", function (c) { b.wheel(c, b) }); this.addHandler(this.wrapper, "scroll", function (c) { if (b.wrapper[0].scrollTop != 0) { b.wrapper[0].scrollTop = 0 } if (b.wrapper[0].scrollLeft != 0) { b.wrapper[0].scrollLeft = 0 } }); this.addHandler(this.host, "mouseleave", function (c) { b.focused = false }); this.addHandler(this.host, "focus", function (c) { b.focused = true }); this.addHandler(this.host, "blur", function (c) { b.focused = false }); this.addHandler(this.host, "mouseenter", function (c) { b.focused = true }); a.jqx.utilities.resize(this.host, function () { if (a.jqx.isHidden(b.host)) { return } b._arrange(false) }) }, _removeHandlers: function () { var b = this; this.removeHandler(this.vScrollBar, "valuechanged"); this.removeHandler(this.hScrollBar, "valuechanged"); this.removeHandler(this.host, "mousewheel"); this.removeHandler(this.host, "mouseleave"); this.removeHandler(this.host, "focus"); this.removeHandler(this.host, "blur"); this.removeHandler(this.host, "mouseenter"); this.removeHandler(this.wrapper, "scroll"); this.removeHandler(a(window), "resize." + this.element.id) }, wheel: function (d, c) { var e = 0; if (d.originalEvent && a.jqx.browser.msie && d.originalEvent.wheelDelta) { e = d.originalEvent.wheelDelta / 120 } if (!d) { d = window.event } if (d.wheelDelta) { e = d.wheelDelta / 120 } else { if (d.detail) { e = -d.detail / 3 } } if (e) { var b = c._handleDelta(e); if (!b) { if (d.preventDefault) { d.preventDefault() } } if (!b) { return b } else { return false } } if (d.preventDefault) { d.preventDefault() } d.returnValue = false }, scrollDown: function () { if (this.vScrollBar.css("visibility") == "hidden") { return false } var b = this.vScrollInstance; if (b.value + b.largestep <= b.max) { b.setPosition(b.value + b.largestep); return true } else { if (b.value + b.largestep != b.max) { b.setPosition(b.max); return true } } return false }, scrollUp: function () { if (this.vScrollBar.css("visibility") == "hidden") { return false } var b = this.vScrollInstance; if (b.value - b.largestep >= b.min) { b.setPosition(b.value - b.largestep); return true } else { if (b.value - b.largestep != b.min) { b.setPosition(b.min); return true } } return false }, _handleDelta: function (d) { if (this.focused) { var c = this.vScrollInstance.value; if (d < 0) { this.scrollDown() } else { this.scrollUp() } var b = this.vScrollInstance.value; if (c != b) { return false } } return true }, _render: function (c) { if (c == undefined) { c = this } var b = c.vScrollInstance.value; var d = c.hScrollInstance.value; if (this.rtl) { if (this.hScrollBar[0].style.visibility != "hidden") { if (this._rtl == false) { d = c.hScrollInstance.max - d } else { d = -c.hScrollInstance.value } } } c.content.css({ left: -d + "px", top: -b + "px" }) }, scrollTo: function (c, b) { if (c == undefined || b == undefined) { return } this.vScrollInstance.setPosition(b); this.hScrollInstance.setPosition(c) }, getScrollHeight: function () { return this.vScrollInstance.max }, getVScrollPosition: function () { return this.vScrollInstance.value }, getScrollWidth: function () { return this.hScrollInstance.max }, getHScrollPosition: function () { return this.hScrollInstance.value }, _getScrollSize: function () { var b = this.scrollBarSize; if (isNaN(b)) { b = parseInt(b); if (isNaN(b)) { b = "17px" } else { b = b + "px" } } if (this.isTouchDevice()) { b = a.jqx.utilities.touchScrollBarSize } b = parseInt(b); return b }, _getScrollArea: function () { var c = 0; this.content.css("margin-right", "0px"); this.content.css("max-width", "9999999px"); if (a.jqx.browser.msie && a.jqx.browser.version < 10) { c = parseInt(this.content.css("left")); this.content.css("left", 0) } this.content.css("overflow", "auto"); if (this.rtl) { this.content.css("direction", "rtl") } var b = parseInt(this.content[0].scrollWidth); a.each(this.content.children(), function () { b = Math.max(b, this.scrollWidth); b = Math.max(b, a(this).outerWidth()) }); if (a.jqx.browser.msie && a.jqx.browser.version < 10) { this.content.css("left", c) } var d = parseInt(this.content[0].scrollHeight); this.content.css("overflow", "visible"); if (a.jqx.browser.msie && a.jqx.browser.version < 9) { var d = parseInt(this.content[0].scrollHeight); switch (this.sizeMode) { case "wrap": var d = parseInt(this.content[0].scrollHeight); var b = parseInt(this.content[0].scrollWidth); break; case "horizontalWrap": case "horizontalwrap": break; case "verticalWrap": case "verticalwrap": var d = parseInt(this.content[0].scrollHeight); break } } if (this.rtl) { this.content.css("direction", "ltr") } return { width: b, height: d } }, _arrange: function (h) { if (h !== false) { if (this.width != null) { this.host.width(this.width) } if (this.height != null) { this.host.height(this.height) } } var b = this._getScrollSize(); var d = this.host.width(); var l = this.host.height(); var e = this._getScrollArea(); var c = e.width; var k = e.height; var i = k - parseInt(Math.round(this.host.height())); var g = c - parseInt(Math.round(this.host.width())); if (this.horizontalScrollBarMax != undefined) { g = this.horizontalScrollBarMax } if (this.verticalScrollBarMax != undefined) { i = this.verticalScrollBarMax } var j = function (o, p) { var n = 5; if (p > n) { o.vScrollBar.jqxScrollBar({ max: p }); o.vScrollBar.css("visibility", "inherit") } else { o.vScrollBar.jqxScrollBar("setPosition", 0); o.vScrollBar.css("visibility", "hidden") } }; var m = function (o, n) { if (n > 0) { if (a.jqx.browser.msie && a.jqx.browser.version < 8) { if (n - 10 <= b) { o.hScrollBar.css("visibility", "hidden"); o.hScrollBar.jqxScrollBar("setPosition", 0) } else { o.hScrollBar.jqxScrollBar({ max: n + 4 }); o.hScrollBar.css("visibility", "inherit") } } else { o.hScrollBar.jqxScrollBar({ max: n + 4 }); o.hScrollBar.css("visibility", "inherit") } } else { o.hScrollBar.css("visibility", "hidden"); o.hScrollBar.jqxScrollBar("setPosition", 0) } }; switch (this.sizeMode) { case "wrap": this.host.width(c); this.host.height(k); this.vScrollBar.css("visibility", "hidden"); this.hScrollBar.css("visibility", "hidden"); return; case "horizontalWrap": case "horizontalwrap": this.host.width(c); this.hScrollBar.css("visibility", "hidden"); j(this, i); this._arrangeScrollbars(b, d, l); return; case "verticalWrap": case "verticalwrap": this.host.height(k); this.vScrollBar.css("visibility", "hidden"); m(this, g); this._arrangeScrollbars(b, d, l); return } j(this, i); var f = 2; if (this.vScrollBar.css("visibility") != "hidden") { if (this.horizontalScrollBarMax == undefined) { g += b + f } } m(this, g); if (this.hScrollBar.css("visibility") != "hidden") { this.vScrollBar.jqxScrollBar({ max: i + b + f }) } this._arrangeScrollbars(b, d, l) }, _arrangeScrollbars: function (b, d, j) { var i = this.vScrollBar[0].style.visibility != "hidden"; var f = this.hScrollBar[0].style.visibility != "hidden"; var h = 2; var g = 2; this.hScrollBar.height(b); this.hScrollBar.css({ top: j - b - h - g + "px", left: "0px" }); this.hScrollBar.width(d - h + "px"); this.vScrollBar.width(b); this.vScrollBar.height(parseInt(j) - h + "px"); this.vScrollBar.css({ left: parseInt(d) - parseInt(b) - h - g + "px", top: "0px" }); if (this.rtl) { this.vScrollBar.css({ left: "0px" }); var c = i ? parseInt(b) + "px" : 0; if (this.content.children().css("direction") != "rtl") { var e = false; if (a.jqx.browser.msie && a.jqx.browser.version < 8) { e = true } if (!e) { this.content.css("padding-left", c) } } } else { if (this.vScrollBar.css("visibility") != "hidden") { this.content.css("max-width", this.host.width() - this.vScrollBar.outerWidth()) } } if ((this.vScrollBar.css("visibility") != "hidden") && (this.hScrollBar.css("visibility") != "hidden")) { this.bottomRight.css("visibility", "inherit"); this.bottomRight.css({ left: 1 + parseInt(this.vScrollBar.css("left")), top: 1 + parseInt(this.hScrollBar.css("top")) }); this.bottomRight.width(parseInt(b) + 3); this.bottomRight.height(parseInt(b) + 3); if (this.rtl) { this.bottomRight.css({ left: "0px" }); this.hScrollBar.css({ left: b + g + "px" }) } this.hScrollBar.width(d - (1 * b) - h - g + "px"); this.vScrollBar.height(parseInt(j) - h - b - g + "px") } else { this.bottomRight.css("visibility", "hidden") } this.hScrollInstance.refresh(); this.vScrollInstance.refresh() }, destroy: function () { a.jqx.utilities.resize(this.host, null, true); this._removeHandlers(); this.removeHandler(a(window), "unload"); this.vScrollBar.jqxScrollBar("destroy"); this.hScrollBar.jqxScrollBar("destroy"); this.host.remove() }, _raiseevent: function (g, d, f) { if (this.isInitialized != undefined && this.isInitialized == true) { var c = this.events[g]; var e = new jQuery.Event(c); e.previousValue = d; e.currentValue = f; e.owner = this; var b = this.host.trigger(e); return b } }, beginUpdateLayout: function () { this.updating = true }, resumeUpdateLayout: function () { this.updating = false; this.vScrollInstance.value = 0; this.hScrollInstance.value = 0; this._arrange(); this._render() }, propertyChangedHandler: function (c, d, b, e) { if (!c.isInitialized) { return } if (d == "rtl") { this.vScrollBar.jqxScrollBar({ rtl: e }); this.hScrollBar.jqxScrollBar({ rtl: e }); c._arrange() } if (!c.updating) { if (d == "scrollBarSize" || d == "width" || d == "height") { if (b != e) { c._arrange() } } } if (d == "touchMode") { if (e != "auto") { c._updateTouchScrolling() } } if (d == "theme") { c.host.removeClass(); c.host.addClass(this.toThemeProperty("jqx-panel")); c.host.addClass(this.toThemeProperty("jqx-widget")); c.host.addClass(this.toThemeProperty("jqx-widget-content")); c.host.addClass(this.toThemeProperty("jqx-rc-all")); c.vScrollBar.jqxScrollBar({ theme: this.theme }); c.hScrollBar.jqxScrollBar({ theme: this.theme }); c.bottomRight.removeClass(); c.bottomRight.addClass(this.toThemeProperty("jqx-panel-bottomright")); c.content.removeClass(); c.content.addClass(this.toThemeProperty("jqx-widget-content")) } }, invalidate: function () { if (a.jqx.isHidden(this.host)) { return } this.refresh() }, refresh: function (b) { this._arrange() } }) })(jQuery);
    </script>
    <!--<script type="text/javascript" src="http://61.147.119.252:8088/jqwidgets/jqxdockpanel.js"></script>-->
    <script>
        /*
jQWidgets v3.0.3 (2013-Oct-01)
Copyright (c) 2011-2013 jQWidgets.
License: http://jqwidgets.com/license/
*/

        (function (a) { a.jqx.jqxWidget("jqxDockPanel", "", {}); a.extend(a.jqx._jqxDockPanel.prototype, { defineInstance: function () { this.width = null; this.height = null; this.lastchildfill = true; this.disabled = false; this.events = ["layout"] }, createInstance: function (c) { var b = this; this.host.addClass(this.toThemeProperty("jqx-dockpanel")); this.host.addClass(this.toThemeProperty("jqx-rc-all")); if (this.width != null && this.width.toString().indexOf("px") != -1) { this.host.width(this.width) } else { if (this.width != undefined && !isNaN(this.width)) { this.host.width(this.width) } } if (this.height != null && this.height.toString().indexOf("px") != -1) { this.host.height(this.height) } else { if (this.height != undefined && !isNaN(this.height)) { this.host.height(this.height) } } this.childrenCount = a(this.host).children().length; this.host.wrapInner('<div style="overflow: hidden; width: 100%; height: 100%;" class="innerContainer"></div>'); this.$wrapper = this.host.find(".innerContainer"); this.$wrapper.css("position", "relative"); this.sizeCache = new Array(); this.performLayout(); a(window).resize(function () { b.refresh() }) }, render: function () { this.sizeCache = new Array(); this.performLayout() }, performLayout: function () { if (this.disabled) { return } var e = this.childrenCount; var d = 0; var c = 0; var b = 0; var h = 0; var f = this; var g = { width: this.host.width(), height: this.host.height() }; if (this.sizeCache.length < this.$wrapper.children().length) { a.each(this.$wrapper.children(), function (i) { var k = a(this); k.css("position", "absolute"); var j = { width: k.css("width"), height: k.css("height") }; f.sizeCache[i] = j }) } a.each(this.$wrapper.children(), function (j) { var l = this.getAttribute("dock"); if (l == undefined) { l = "left" } if (j == e - 1 && f.lastchildfill) { l = "fill" } var k = a(this); k.css("position", "absolute"); k.css("width", f.sizeCache[j].width); k.css("height", f.sizeCache[j].height); var i = { width: k.outerWidth(), height: k.outerHeight() }; var m = { x: b, y: h, width: Math.max(0, g.width - (b + d)), height: Math.max(0, g.height - (h + c)) }; if (j < e) { switch (l) { case "left": b += i.width; m.width = i.width; break; case "top": h += i.height; m.height = i.height; break; case "right": d += i.width; m.x = Math.max(0, (g.width - d)); m.width = i.width; break; case "bottom": c += i.height; m.y = Math.max(0, (g.height - c)); m.height = i.height; break } } k.css("left", m.x); k.css("top", m.y); k.css("width", m.width); k.css("height", m.height) }); this._raiseevent(0) }, destroy: function () { this.host.remove() }, _raiseevent: function (g, d, f) { if (this.isInitialized != undefined && this.isInitialized == true) { var c = this.events[g]; var e = new jQuery.Event(c); e.previousValue = d; e.currentValue = f; e.owner = this; var b = this.host.trigger(e); return b } }, propertyChangedHandler: function (c, d, b, e) { if (!this.isInitialized) { return } }, refresh: function () { this.performLayout() } }) })(jQuery);
    </script>
    <!--<script type="text/javascript" src="http://61.147.119.252:8088/jqwidgets/jqxtabs.js"></script>-->
    <script>
        /*
jQWidgets v3.0.3 (2013-Oct-01)
Copyright (c) 2011-2013 jQWidgets.
License: http://jqwidgets.com/license/
*/

        (function (a) { a.jqx.jqxWidget("jqxTabs", "", {}); a.extend(a.jqx._jqxTabs.prototype, { defineInstance: function () { this.scrollAnimationDuration = 200; this.enabledHover = true; this.disabled = false; this.collapsible = false; this.animationType = "none"; this.enableScrollAnimation = true; this.contentTransitionDuration = 450; this.toggleMode = "click"; this.selectedItem = 0; this.height = "auto"; this.width = "auto"; this.position = "top"; this.selectionTracker = false; this.scrollable = true; this.scrollPosition = "right"; this.scrollStep = 70; this.autoHeight = true; this.headerHeight = null; this.showCloseButtons = false; this.canCloseAllTabs = true; this.closeButtonSize = 16; this.arrowButtonSize = 16; this.keyboardNavigation = true; this.reorder = false; this.selectionTrackerAnimationDuration = 300; this._isTouchDevice = false; this.roundedCorners = true; this._headerExpandingBalance = 0; this._dragStarted = false; this._tabCaptured = false; this._lastUnorderedListPosition = 0; this._selectedItem = 0; this._titleList = []; this._contentList = []; this._contentWrapper = null; this._unorderedList = null; this._scrollTimeout = null; this.isCollapsed = false; this.touchMode = false; this.initTabContent = null; this.enableDropAnimation = false; this._currentEvent = null; this._needScroll = true; this._isAnimated = {}; this._events = ["created", "selected", "add", "removed", "enabled", "disabled", "selecting", "unselecting", "unselected", "dragStart", "dragEnd", "locked", "unlocked", "collapsed", "expanded", "tabclick"]; this._initTabContentList = []; this._invalidArgumentExceptions = { invalidScrollAnimationDuration: "The scroll animation duration is not valid!", invalidWidth: "Width you've entered is invalid!", invalidHeight: "Height you've entered is invalid!", invalidAnimationType: "You've entered invalid animation type!", invalidcontentTransitionDuration: "You've entered invalid value for contentTransitionDuration!", invalidToggleMode: "You've entered invalid value for toggleMode!", invalidPosition: "You've entered invalid position!", invalidScrollPosition: "You've entered invalid scroll position!", invalidScrollStep: "You've entered invalid scroll step!", invalidStructure: "Invalid structure!", invalidArrowSize: "Invalid scroll button size!", invalidCloseSize: "Invalid close button size!" }; this.aria = { "aria-disabled": { name: "disabled", type: "boolean" } }; this.rtl = false }, createInstance: function () { a.jqx.aria(this); this.host.addClass(this.toThemeProperty("jqx-tabs")); this.host.addClass(this.toThemeProperty("jqx-widget")); this.host.addClass(this.toThemeProperty("jqx-widget-content")); this.host.attr("role", "tablist"); this._unorderedList = this.host.children("ul"); this._titleList = this.host.children("ul").children("li"); this._contentList = this.host.children("div"); this._selectedItem = this.selectedItem; this._isTouchDevice = a.jqx.mobile.isTouchDevice(); this._needScroll = this.scrollable; if (this.selectionTracker) { this.selectionTracker = this._seletionTrackerBrowserCheck() } if (this._isTouchDevice) { this.reorder = false; this.keyboardNavigation = false } var b = this.length(); while (b) { b--; this._titleList[b] = a(this._titleList[b]); this._titleList[b].attr("role", "tab"); this._contentList[b] = a(this._contentList[b]); this._contentList[b].attr("role", "tabpanel") } this._validateProperties(); this._refresh(); this._moveSelectionTrack(this._selectedItem, 0); if (this.disabled) { this.disable() } this.element.tabIndex = 0; this._raiseEvent(0); this._enableWindowResize() }, _hiddenParent: function () { var c = this; if (c.host.css("display") == "none") { return true } var b = false; a.each(c.host.parents(), function () { if (a(this).css("display") == "none") { b = true; return false } }); return b }, _enableWindowResize: function () { var b = this; a.jqx.utilities.resize(this.host, function () { b.refresh() }) }, refresh: function (b) { if (true != b || b == undefined) { this._performResize() } }, _seletionTrackerBrowserCheck: function () { var b = "Browser CodeName: " + navigator.appCodeName + ""; b += "Browser Name: " + navigator.appName + ""; b += "Browser Version: " + navigator.appVersion + ""; b += "Platform: " + navigator.platform + ""; b += "User-agent header: " + navigator.userAgent + ""; if (b.indexOf("IEMobile") != -1) { return false } if (b.indexOf("Windows Phone OS") != -1) { return false } if (a.jqx.browser.msie && a.jqx.browser.version <= 7) { return false } return true }, render: function () { this._refresh() }, _uiRefresh: function (b) { this._unorderedListLeftBackup = this._unorderedList.css("left"); if (b) { this._render() } this._addStyles(); this._performLayout(); this._prepareTabs(); this._removeEventHandlers(); this._addEventHandlers(); if (this._unorderedListLeftBackup === "auto") { this._unorderedListLeftBackup = this._getArrowsDisplacement() } this._unorderedList.css("left", this._unorderedListLeftBackup); if (this.rtl) { if (this.scrollable && this._rightArrow && this._rightArrow.css("visibility") != "hidden") { var d = 2 * this.arrowButtonSize; var c = this.host.width() - parseInt(this._unorderedList.width() + d + +parseInt(this._unorderedList.css("margin-left")), 10); this._unorderedList.css("left", c + "px") } } }, _refresh: function () { this._uiRefresh(true) }, _addStyles: function () { this._unorderedList.addClass(this.toThemeProperty("jqx-tabs-title-container")); this._unorderedList.css({ outline: "none", "white-space": "nowrap", "margin-top": "0px", "margin-bottom": "0px", padding: "0px", background: "transparent", border: "none", "border-style": "none", "text-indent": "0px" }); var b = this.length(); while (b) { b--; this._titleList[b].removeClass(); this._titleList[b].css("padding", ""); this._titleList[b].addClass("jqx-reset"); this._titleList[b].addClass("jqx-disableselect"); this._titleList[b].addClass(this.toThemeProperty("jqx-tabs-title")); this._titleList[b].addClass(this.toThemeProperty("jqx-item")); if (this.position == "bottom") { this._titleList[b].addClass(this.toThemeProperty("jqx-tabs-title-bottom")) } if (this._titleList[b].disabled) { this._titleList[b].addClass(this.toThemeProperty("jqx-tabs-title-disable")); this._titleList[b].addClass(this.toThemeProperty("jqx-fill-state-disabled")) } this._titleList[b].removeClass(this.toThemeProperty("jqx-rc-b")); this._titleList[b].removeClass(this.toThemeProperty("jqx-rc-t")); this._contentList[b].removeClass(this.toThemeProperty("jqx-rc-b")); this._contentList[b].removeClass(this.toThemeProperty("jqx-rc-t")); switch (this.position) { case "top": this._titleList[b].addClass(this.toThemeProperty("jqx-rc-t")); this._contentList[b].addClass(this.toThemeProperty("jqx-rc-b")); break; case "bottom": this._titleList[b].addClass(this.toThemeProperty("jqx-rc-b")); this._contentList[b].addClass(this.toThemeProperty("jqx-rc-t")); break } } if (this.selectionTracker) { this._selectionTracker.removeClass(this.toThemeProperty("jqx-rc-b")); this._selectionTracker.removeClass(this.toThemeProperty("jqx-rc-t")); switch (this.position) { case "top": this._selectionTracker.addClass(this.toThemeProperty("jqx-rc-t")); break; case "bottom": this._selectionTracker.addClass(this.toThemeProperty("jqx-rc-b")); break } } }, _raiseEvent: function (d, g) { var f = new a.Event(this._events[d]); f.owner = this; f.args = g; if (d === 6 || d === 7) { f.cancel = false; this._currentEvent = f } var b = ""; try { b = this.host.trigger(f); if (d == 1) { var e = this; if (this.selectionTracker || this.animationType != "none") { setTimeout(function () { if (!e._initTabContentList[e.selectedItem]) { if (e.initTabContent) { e.initTabContent(e.selectedItem); e._initTabContentList[e.selectedItem] = true } } var h = new a.Event("loadContent"); h.owner = this; if (e._contentList.length > 0 && e._contentList[e.selectedItem]) { e._contentList[e.selectedItem].find("div").trigger(h) } }, 50 + e.selectionTrackerAnimationDuration) } else { var f = new a.Event("loadContent"); if (!e._initTabContentList[e.selectedItem]) { if (e.initTabContent) { e.initTabContent(e.selectedItem); e._initTabContentList[e.selectedItem] = true } } f.owner = this; if (this._contentList.length > 0 && this._contentList[this.selectedItem]) { this._contentList[this.selectedItem].find("div").trigger(f) } } } } catch (c) { } return b }, _getArrowsDisplacement: function () { if (!this._needScroll) { return 0 } var d; var c = this.arrowButtonSize; var b = this.arrowButtonSize; if (this.scrollPosition === "left") { d = c + b } else { if (this.scrollPosition === "both") { d = c } else { d = 0 } } return d }, _scrollRight: function (e, h) { this._unorderedList.stop(); this._unlockAnimation("unorderedList"); var f = parseInt(this._unorderedList.width() + parseInt(this._unorderedList.css("margin-left")), 10), i = parseInt(this.host.width(), 10), g, j, b = parseInt(this._unorderedList.css("left"), 10), c = this._getArrowsDisplacement(), d = 0, k = undefined; if (this.scrollable) { g = parseInt(this._leftArrow.outerWidth(), 10); j = parseInt(this._rightArrow.outerWidth(), 10) } else { g = 0; j = 0 } e = (this.enableScrollAnimation) ? e : 0; if (parseInt(this._headerWrapper.width(), 10) > parseInt(this._unorderedList.css("margin-left")) + parseInt(this._unorderedList.width(), 10)) { d = c } else { if (Math.abs(b) + this.scrollStep < Math.abs(i - f) + g + j + c) { d = b - this.scrollStep; k = b - this.scrollStep + parseInt(this._titleList[this._selectedItem].position().left) } else { d = i - f - (2 * this.arrowButtonSize - c); if (d < parseInt(this._unorderedList.css("left"), 10) - 4 && d > parseInt(this._unorderedList.css("left"), 10) + 4) { k = i - f - g - j + parseInt(this._titleList[this._selectedItem].position().left) } } } this._performScrollAnimation(d, k, e) }, _scrollLeft: function (f, g) { this._unorderedList.stop(); this._unlockAnimation("unorderedList"); var b = parseInt(this._unorderedList.css("left")), c = this._getArrowsDisplacement(), e = 0, d = undefined; f = (this.enableScrollAnimation) ? f : 0; if (parseInt(this._headerWrapper.width()) >= parseInt(this._unorderedList.width())) { e = c } else { if (b + this.scrollStep < c) { e = b + this.scrollStep; d = b + this.scrollStep + parseInt(this._titleList[this._selectedItem].position().left) } else { e = c; if (e < parseInt(this._unorderedList.css("left")) - 4 && e > parseInt(this._unorderedList.css("left")) + 4) { d = parseInt(this._titleList[this._selectedItem].position().left) } } } this._performScrollAnimation(e, d, f) }, _performScrollAnimation: function (e, d, c) { var b = this; if (d !== undefined) { this._moveSelectionTrack(this._selectedItem, 0, d) } this._lockAnimation("unorderedList"); this._unorderedList.animate({ left: e }, c, function () { b._moveSelectionTrack(b.selectedItem, 0); b._unlockAnimation("unorderedList") }) }, _addKeyboardHandlers: function () { var b = this; if (this.keyboardNavigation) { this.addHandler(this.host, "keydown", function (e) { if (!b._activeAnimation()) { var f = b._selectedItem; var d = b.selectionTracker; var c = b.getContentAt(f); if (a(e.target).ischildof(c)) { return true } switch (e.keyCode) { case 37: if (b.rtl) { b.next() } else { b.previous() } return false; case 39: if (b.rtl) { b.previous() } else { b.next() } return false; case 36: b.first(); return false; case 35: b.last(); return false; case 27: if (b._tabCaptured) { b._cancelClick = true; b._uncapture(null, b.selectedItem); b._tabCaptured = false } break } b.selectionTracker = d } return true }) } }, _addScrollHandlers: function () { var b = this; this.addHandler(this._leftArrow, "mousedown", function () { b._startScrollRepeat(true, b.scrollAnimationDuration) }); this.addHandler(this._rightArrow, "mousedown", function () { b._startScrollRepeat(false, b.scrollAnimationDuration) }); this.addHandler(this._rightArrow, "mouseleave", function () { clearTimeout(b._scrollTimeout) }); this.addHandler(this._leftArrow, "mouseleave", function () { clearTimeout(b._scrollTimeout) }); this.addHandler(a(document), "mouseup.tab" + this.element.id, this._mouseUpScrollDocumentHandler, this); this.addHandler(a(document), "mouseleave.tab" + this.element.id, this._mouseLeaveScrollDocumentHandler, this) }, _mouseLeaveScrollDocumentHandler: function (c) { var b = c.data; clearTimeout(b._scrollTimeout) }, _mouseUpScrollDocumentHandler: function (c) { var b = c.data; clearTimeout(b._scrollTimeout) }, _mouseUpDragDocumentHandler: function (c) { var b = c.data; if (b._tabCaptured && b._dragStarted) { b._uncapture(c) } b._tabCaptured = false }, _addReorderHandlers: function () { var b = this; this.addHandler(a(document), "mousemove.tab" + this.element.id, this._moveElement, this); this.addHandler(a(document), "mouseup.tab" + this.element.id, this._mouseUpDragDocumentHandler, this) }, _addEventHandlers: function () { var e = this.length(); while (e) { e--; this._addEventListenerAt(e) } if (this.keyboardNavigation) { this._addKeyboardHandlers() } if (this.scrollable) { this._addScrollHandlers() } if (this.reorder && !this._isTouchDevice) { this._addReorderHandlers() } var d = this; try { if (document.referrer != "" || window.frameElement) { if (window.top != null && window.top != window.self) { var c = function (g) { if (d._tabCaptured) { d._cancelClick = true; d._uncapture(null, d.selectedItem); d._tabCaptured = false } }; var f = null; if (window.parent && document.referrer) { f = document.referrer } if (f && f.indexOf(document.location.host) != -1) { if (window.top.document) { this.addHandler(a(window.top.document), "mouseup", c) } } } } } catch (b) { } }, focus: function () { try { this.host.focus() } catch (b) { } }, _getFocusedItem: function (f, e) { var i = this.length(); while (i) { i--; var h = this._titleList[i], g = parseInt(h.outerWidth(true)), d = parseInt(h.offset().left), c = parseInt(this._unorderedList.offset().left), j = parseInt(this.host.offset().left), b = d; if ((b <= f && b + g >= f) && (h !== this._capturedElement) && (!this._titleList[i].locked) && (this._titleList[i].disabled !== true)) { return i } } return -1 }, _uncapture: function (e) { var d = this.selectionTracker; this._unorderedListLeftBackup = this._unorderedList.css("left"); this._dragStarted = false; this._tabCaptured = false; var b = this._indexOf(this._capturedElement); if (!this._capturedElement) { return } switch (this.position) { case "top": this._capturedElement.css("bottom", 0); break; case "bottom": this._capturedElement.css("top", 0); break } if (e) { var c = this._getFocusedItem(e.clientX, e.clientY) } if (c === -1 || !e) { this._capturedElement.css("left", 0) } else { this._raiseEvent(10, { item: b, dropIndex: c }); this._reorderItems(c, b) } a.each(this._titleList, function () { this.css("position", "static") }); this._reorderHeaderElements(); this._unorderedList.css({ position: "relative", top: "0px" }); this._prepareTabs(); if (c === -1 || !e) { this._selectedItem = b; this._moveSelectionTrack(b, 0); this._addSelectStyle(this._selectedItem, true) } else { this._moveSelectionTrack(this._selectedItem, 0); this._addSelectStyle(this._selectedItem, true) } if (document.selection) { document.selection.clear() } this._unorderedList.css("left", this._unorderedListLeftBackup); this.selectionTracker = d }, _reorderItems: function (c, b) { var d = this._titleList[this.selectedItem]; var e = this._contentList[b]; if (typeof this._capturedElement === "undefined") { this._capturedElement = this._titleList[b] } this._titleList[b].remove(); if (b < c) { this._titleList[b].insertAfter(this._titleList[c]) } else { this._titleList[b].insertBefore(this._titleList[c]) } this._reorderElementArrays(c, b); this._getSelectedItem(d); this._removeEventHandlers(); this._addEventHandlers() }, _reorderElementArrays: function (d, b) { var e = this._titleList[this.selectedItem]; var f = this._contentList[b]; if (b < d) { for (var c = b; c <= d; c++) { this._titleList[c] = this._titleList[c + 1]; this._contentList[c] = this._contentList[c + 1] } this._contentList[d] = f; this._titleList[d] = this._capturedElement } else { for (var c = b; c >= d; c--) { this._titleList[c] = this._titleList[c - 1]; this._contentList[c] = this._contentList[c - 1] } this._contentList[d] = f; this._titleList[d] = this._capturedElement } }, getSelectedItem: function () { return this.selectedItem }, _getSelectedItem: function (c) { var b = this.length(); while (b) { b--; if (this._titleList[b] === c) { this._selectedItem = this.selectedItem = b; break } } }, _moveElement: function (c, b) { var b = c.data; if (b._tabCaptured) { if (document.selection) { document.selection.clear() } if (!b._dragStarted) { unorderedListLeft = -parseInt(b._unorderedList.css("left"), 10); if (c.clientX + unorderedListLeft > b._startX + 3 || c.clientX + unorderedListLeft < b._startX - 3) { b._prepareTabForDragging(); b._dragStarted = true } } else { b._performDrag(c); clearTimeout(b._scrollTimeout) } } }, _performDrag: function (c) { var b = this.getZoomFactor(); unorderedListLeft = -parseInt(this._unorderedList.css("left"), 10); this._capturedElement.css("left", unorderedListLeft + c.clientX / b - this._startX / b); this._lastX = c.clientX / b; this._moveSelectionTrack(this.selectedItem, 0) }, getZoomFactor: function () { var c = 1; if (document.body.getBoundingClientRect) { var d = document.body.getBoundingClientRect(); var e = d.right - d.left; var b = document.body.offsetWidth; c = Math.round((e / b) * 100) / 100 } return c }, _prepareTabForDragging: function () { this._capturedElement.css({ position: "relative", left: "0px", top: "0px", "z-index": "300" }); this.selectedItem = this._indexOf(this._capturedElement); switch (this.position) { case "top": this._capturedElement.css("bottom", parseInt(this._capturedElement.css("top"))); break; case "bottom": this._capturedElement.css("top", parseInt(this._capturedElement.css("top"))); break } this._raiseEvent(9, { item: this._indexOf(this._capturedElement) }) }, _dragScroll: function (d) { var c = parseInt(this._unorderedList.css("left")); var b = this; var e = parseInt(this._capturedElement.css("left")); if (d.clientX <= this._headerWrapper.offset().left) { this._scrollLeft(this.scrollAnimationDuration); this._capturedElement.css("left", parseInt(this._capturedElement.css("left")) + this._lastUnorderedListPosition - c) } else { if (d.clientX > this._headerWrapper.offset().left + parseInt(this._headerWrapper.width(), 10)) { this._scrollRight(this.scrollAnimationDuration); this._capturedElement.css("left", parseInt(this._capturedElement.css("left")) + this._lastUnorderedListPosition - c) } else { this._unorderedList.stop(); this._unlockAnimation("unorderedList"); clearTimeout(this._scrollTimeout) } } var b = this; this._scrollTimeout = setTimeout(function () { b._dragScroll(d) }, this.scrollAnimationDuration); this._lastUnorderedListPosition = c }, _captureElement: function (c, b) { if (!this._tabCaptured && !this._titleList[b].locked && this._titleList[b].disabled !== true && !this._activeAnimation()) { unorderedListLeft = -parseInt(this._unorderedList.css("left"), 10); this._startX = unorderedListLeft + c.clientX; this._startY = c.clientY; this._lastX = c.clientX; this._lastY = c.clientY; this._tabCaptured = true; this._capturedElement = this._titleList[b] } }, _titleInteractionTrigger: function (b) { if (this._headerExpandingBalance > 0) { this._removeOppositeBorder() } if (this._selectedItem !== b) { this.select(this._titleList[b], "toggle"); this._titleList[b].collapsed = false; if (!this.collapsible) { if (this.height !== "auto") { this._contentWrapper.css("visibility", "visible") } else { this._contentWrapper.css("display", "block") } } } else { if (this.collapsible) { if (this.isCollapsed) { this.expand() } else { this.collapse() } } } }, collapse: function () { var c = this._selectedItem, b = this; this.isCollapsed = true; if (b.height !== "auto") { b._contentWrapper.css("visibility", "hidden") } else { b._contentWrapper.hide() } b._raiseEvent(13, { item: c }); if (this.position == "top") { b._headerWrapper.addClass(this.toThemeProperty("jqx-tabs-header-collapsed")); b.host.addClass(this.toThemeProperty("jqx-tabs-collapsed")) } else { b._headerWrapper.addClass(this.toThemeProperty("jqx-tabs-header-collapsed-bottom")); b.host.addClass(this.toThemeProperty("jqx-tabs-collapsed-bottom")) } }, expand: function () { var c = this._selectedItem, b = this; this.isCollapsed = false; this._select(c, b.contentTransitionDuration, null, false, true); if (b.height !== "auto") { b._contentWrapper.css("visibility", "visible") } else { b._contentWrapper.show() } b._raiseEvent(14, { item: c }); if (this.position == "top") { b._headerWrapper.removeClass(this.toThemeProperty("jqx-tabs-header-collapsed")); b.host.removeClass(this.toThemeProperty("jqx-tabs-collapsed")) } else { b._headerWrapper.removeClass(this.toThemeProperty("jqx-tabs-header-collapsed-bottom")); b.host.removeClass(this.toThemeProperty("jqx-tabs-collapsed-bottom")) } }, _addSelectHandler: function (c) { var b = this; this.addHandler(this._titleList[c], "selectstart", function (d) { return false }); this.addHandler(this._titleList[c], this.toggleMode, function (d) { return function () { b._raiseEvent("15", { item: d }); if (!b._tabCaptured && !b._cancelClick) { b._titleInteractionTrigger(d) } return true } }(c)) }, _addDragDropHandlers: function (c) { var b = this; this.addHandler(this._titleList[c], "mousedown", function (d) { b._captureElement(d, c); return false }); this.addHandler(this._titleList[c], "mouseup", function (d) { if (b._tabCaptured && b._dragStarted) { b._cancelClick = true; b._uncapture(d, c) } else { b._cancelClick = false } b._tabCaptured = false; return false }) }, _removeHoverStates: function () { var b = this; a.each(this._titleList, function () { this.removeClass(b.toThemeProperty("jqx-tabs-title-hover-top")); this.removeClass(b.toThemeProperty("jqx-tabs-title-hover-bottom")) }) }, _addHoverHandlers: function (c) { var b = this; var d = this._titleList[c]; this.addHandler(d, "mouseenter", function (f) { if (c != b._selectedItem) { if (b.position == "top") { d.addClass(b.toThemeProperty("jqx-tabs-title-hover-top")) } else { d.addClass(b.toThemeProperty("jqx-tabs-title-hover-bottom")) } d.addClass(b.toThemeProperty("jqx-fill-state-hover")); if (b.showCloseButtons) { var e = d.children(0).children(b.toThemeProperty(".jqx-tabs-close-button", true)); e.addClass(b.toThemeProperty("jqx-tabs-close-button-hover", true)) } } }); this.addHandler(d, "mouseleave", function (f) { if (c != b._selectedItem) { if (b.position == "top") { d.removeClass(b.toThemeProperty("jqx-tabs-title-hover-top")) } else { d.removeClass(b.toThemeProperty("jqx-tabs-title-hover-bottom")) } d.removeClass(b.toThemeProperty("jqx-fill-state-hover")); if (b.showCloseButtons) { var e = d.children(0).children(b.toThemeProperty(".jqx-tabs-close-button", true)); e.removeClass(b.toThemeProperty("jqx-tabs-close-button-hover", true)) } } }) }, _addEventListenerAt: function (d) { var c = this; if (this._titleList[d].disabled) { return } if (this.reorder && !this._isTouchDevice) { this._addDragDropHandlers(d) } this._addSelectHandler(d); if (this.enabledHover) { this._addHoverHandlers(d) } var b = this._titleList[d].find(this.toThemeProperty(".jqx-tabs-close-button", true)); this.removeHandler(b, "click"); this.addHandler(b, "click", function (e) { c.removeAt(d); return false }) }, _removeEventHandlers: function () { var b = this; var c = this.length(); while (c) { c--; this._removeEventListenerAt(c) } if (this.scrollable) { this.removeHandler(this._leftArrow, "mousedown"); this.removeHandler(this._rightArrow, "mousedown") } this.removeHandler(a(document), "mousemove.tab" + this.element.id, this._moveElement); this.removeHandler(a(document), "mouseup.tab" + this.element.id, this._mouseUpScrollDocumentHandler); this.removeHandler(a(document), "mouseup.tab" + this.element.id, this._mouseUpDragDocumentHandler); this.removeHandler(this.host, "keydown") }, _removeEventListenerAt: function (d) { var c = this; this.removeHandler(this._titleList[d], this.toggleMode); this.removeHandler(this._titleList[d], "mouseenter"); this.removeHandler(this._titleList[d], "mouseleave"); this.removeHandler(this._titleList[d], "mousedown"); this.removeHandler(this._titleList[d], "mouseup"); var b = this._titleList[d].children(0).children(this.toThemeProperty(".jqx-tabs-close-button", true)); this.removeHandler(b, "click") }, _moveSelectionTrack: function (l, c, b) { var m = this; if (l == -1) { return } if (this._titleList.length == 0) { return } if (l >= this._titleList.length) { return } if (this.selectionTracker) { this._selectionTracker.stop(); this._unlockAnimation("selectionTracker"); if (b === undefined) { var h = parseInt(this._titleList[l].position().left); if (!isNaN(parseInt(this._unorderedList.css("left")))) { h += parseInt(this._unorderedList.css("left")) } if (!isNaN(parseInt(this._unorderedList.css("margin-left")))) { h += parseInt(this._unorderedList.css("margin-left")) } if (!isNaN(parseInt(this._titleList[l].css("margin-left")))) { h += parseInt(this._titleList[l].css("margin-left")) } if (!isNaN(parseInt(this._titleList[l].css("margin-right")))) { } } else { var h = b } var g = 0; var e = 0; if (this.position === "top") { g = parseInt(this._headerWrapper.height()) - parseInt(this._titleList[l].outerHeight()); if (!this.autoHeight) { e += parseInt(this._titleList[l].css("margin-top")) } } this._lockAnimation("selectionTracker"); var k = parseInt(this._titleList[l].css("padding-left")) + parseInt(this._titleList[l].css("padding-right")); var f = this.position == "top" ? 0 : 1; var j = parseInt(this._headerWrapper.css("padding-top")); var i = parseInt(this._titleList[l].css("padding-top")) + parseInt(this._titleList[l].css("padding-bottom")); this._selectionTracker.css("visibility", "visible"); this._moveSelectionTrackerContainer.css("visibility", "visible"); var d = parseInt(this._titleList[l].css("margin-top")); if (isNaN(d)) { d = 0 } this._selectionTracker.animate({ top: j + d - f, left: h + "px", height: parseInt(this._titleList[l].height() + i), width: this._titleList[l].width() + k }, c, function () { m._unlockAnimation("selectionTracker"); m._selectionTracker.css("visibility", "hidden"); m._addSelectStyle(l, true); m._moveSelectionTrackerContainer.css("visibility", "hidden") }) } }, destroy: function () { this.host.remove() }, _switchTabs: function (b, d) { if (b !== d && !this._activeAnimation() && !this._tabCaptured) { var c = this; this._raiseEvent(7, { item: d }); this._raiseEvent(6, { item: b }); if (this._currentEvent) { if (this._currentEvent.cancel) { this._currentEvent = null; return } } this._unselect(d, null, true); this._select(b, c.contentTransitionDuration, null, true); return true } return false }, _activeAnimation: function () { for (child in this._isAnimated) { if (this._isAnimated.hasOwnProperty(child)) { if (this._isAnimated[child]) { return true } } } return false }, _indexOf: function (c) { var b = this.length(); while (b) { b--; if (this._titleList[b][0] === c[0] || this._contentList[b][0] === c[0]) { return b } } return -1 }, _validateProperties: function () { try { if (this.scrollAnimationDuration < 0 || isNaN(this.scrollAnimationDuration)) { throw new Error(this._invalidArgumentExceptions.invalidScrollAnimationDuration) } if (parseInt(this.width) < 0 && this.width !== "auto") { throw new Error(this._invalidArgumentExceptions.invalidWidth) } if (parseInt(this.height) < 0 && this.height !== "auto") { throw new Error(this._invalidArgumentExceptions.invalidHeight) } if (this.animationType !== "none" && this.animationType !== "fade") { throw new Error(this._invalidArgumentExceptions.invalidAnimationType) } if (this.contentTransitionDuration < 0 || isNaN(this.contentTransitionDuration)) { throw new Error(this._invalidArgumentExceptions.invalidcontentTransitionDuration) } if (this.toggleMode !== "click" && this.toggleMode !== "dblclick" && this.toggleMode !== "mouseenter" && this.toggleMode !== "none") { throw new Error(this._invalidArgumentExceptions.invalidToggleMode) } if (this.position !== "top" && this.position !== "bottom") { throw new Error(this._invalidArgumentExceptions.invalidPosition) } if (this.scrollPosition !== "left" && this.scrollPosition !== "right" && this.scrollPosition !== "both") { throw new Error(this._invalidArgumentExceptions.invalidScrollPosition) } if (this.scrollStep < 0 || isNaN(this.scrollStep)) { throw new Error(this._invalidArgumentExceptions.invalidScrollStep) } if (this._titleList.length !== this._contentList.length || this._titleList.length == 0) { throw new Error(this._invalidArgumentExceptions.invalidStructure) } if (this.arrowButtonSize < 0 || isNaN(this.arrowButtonSize)) { throw new Error(this._invalidArgumentExceptions.invalidArrowSize) } if (this.closeButtonSize < 0 || isNaN(this.closeButtonSize)) { throw new Error(this._invalidArgumentExceptions.invalidCloseSize) } } catch (b) { alert(b) } }, _startScrollRepeat: function (d, c) { var b = this; if (d) { this._scrollLeft(c) } else { this._scrollRight(c) } if (this._scrollTimeout) { clearTimeout(this._scrollTimeout) } this._scrollTimeout = setTimeout(function () { b._startScrollRepeat(d, b.scrollAnimationDuration) }, c) }, _performLayout: function () { var b = this.length(); while (b) { b--; if (this.position === "top" || this.position === "bottom") { if (this.rtl) { this._titleList[b].css("float", "right") } else { this._titleList[b].css("float", "left") } } } this._fitToSize(); this._performHeaderLayout(); this._fitToSize() }, updatetabsheader: function () { this._performHeaderLayout() }, _performResize: function () { var b = this; this._fitToSize(); this._positionArrows(this._totalItemsWidth); if (this._totalItemsWidth > this.host.width()) { this._unorderedList.width(this._totalItemsWidth) } else { this._unorderedList.width(this.host.width() - 2) } this._fitToSize() }, _addArrows: function () { if (this._leftArrow && this._rightArrow) { this._leftArrow.remove(); this._rightArrow.remove() } this._leftArrow = a('<div><span style="display: block; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-tabs-arrow-left") + '"></span></div>'); this._rightArrow = a('<div><span style="display: block; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-tabs-arrow-right") + '"></span></div>'); this._leftArrow.addClass(this.toThemeProperty("jqx-tabs-arrow-background")); this._rightArrow.addClass(this.toThemeProperty("jqx-tabs-arrow-background")); this._leftArrow.addClass(this.toThemeProperty("jqx-widget-header")); this._rightArrow.addClass(this.toThemeProperty("jqx-widget-header")); this._headerWrapper.append(this._leftArrow); this._headerWrapper.append(this._rightArrow); this._leftArrow.width(this.arrowButtonSize); this._leftArrow.height("100%"); this._rightArrow.width(this.arrowButtonSize); this._rightArrow.height("100%"); this._leftArrow.css({ "z-index": "30" }); this._rightArrow.css({ "z-index": "30" }); this._leftArrow.css("display", "none"); this._rightArrow.css("display", "none") }, _tabsWithVisibleCloseButtons: function () { if (!this.showCloseButtons) { return 0 } var c = this.length(); var b = this; a.each(this._titleList, function () { var d = this.attr("hasclosebutton"); if (d != undefined && d != null) { if (d == "false" || d == false) { c-- } } }); return c }, _calculateTitlesSize: function () { var g = 0; var d = 0; var c = this.length(); if (this.rtl && a.jqx.browser.msie && a.jqx.browser.version < 8) { this._measureItem = a("<span style='position: relative; visibility: hidden;'></span>"); a(document.body).append(this._measureItem) } while (c) { c--; if (this._measureItem) { this._measureItem.html(this._titleList[c].html()); this._titleList[c].width(this._measureItem.width()) } this._titleList[c].css("position", "static"); this._titleList[c].find(this.toThemeProperty(".jqx-tabs-close-button", true)).css("display", "none"); d += parseInt(this._titleList[c].outerWidth(true)); if (g < this._titleList[c].outerHeight(true)) { g = Math.round(parseInt(this._titleList[c].outerHeight(true))) } if (this._titleList[c].height() == 0) { var f = this._titleList[c].clone(); a(document.body).append(f); g = Math.round(parseInt(f.outerHeight(true))); f.remove() } var b = this._titleList[c].attr("hasCloseButton"); if (b != undefined && b != null) { var e = false; if (this.hiddenCloseButtons) { if (this.hiddenCloseButtons[c] == 1) { this._titleList[c].find(this.toThemeProperty(".jqx-tabs-close-button", true)).css("display", "none"); e = true } } if (!e) { if (b == "true" || b == true) { d += this.closeButtonSize; this._titleList[c].find(this.toThemeProperty(".jqx-tabs-close-button", true)).css("display", "block") } else { if (b == "false" || b == false) { this._titleList[c].find(this.toThemeProperty(".jqx-tabs-close-button", true)).css("display", "none") } } } } else { if (this.showCloseButtons && (this.canCloseAllTabs || this._tabsWithVisibleCloseButtons() > 1)) { var e = false; if (this.hiddenCloseButtons) { if (this.hiddenCloseButtons[c] == 1) { this._titleList[c].find(this.toThemeProperty(".jqx-tabs-close-button", true)).css("display", "none"); e = true } } if (!e) { d += this.closeButtonSize; this._titleList[c].find(this.toThemeProperty(".jqx-tabs-close-button", true)).css("display", "block") } } } this._titleList[c].height(this._titleList[c].height()) } if (this._measureItem) { this._measureItem.remove() } return { height: g, width: 10 + d } }, _reorderHeaderElements: function () { if (this.selectionTracker) { this._moveSelectionTrackerContainer.css({ position: "absolute", height: "100%", top: "0px", left: "0px", width: "100%" }) } this._headerWrapper.css({ position: "relative", left: "0px", top: "0px" }); if (this.scrollable) { this._rightArrow.css({ width: this.arrowButtonSize, position: "absolute", top: "0px" }); this._leftArrow.css({ width: this.arrowButtonSize, position: "absolute", top: "0px" }); var c = this.theme && this.theme.indexOf("ui-") != -1 ? 3 : 0; if (c > 0) { this._rightArrow.addClass(this.toThemeProperty("jqx-rc-r")); this._leftArrow.addClass(this.toThemeProperty("jqx-rc-l")) } var b = this.scrollPosition; if (this.rtl) { if (b == "left") { b = "right" } if (b == "right") { b = "left" } } switch (b) { case "both": this._rightArrow.css("right", "0px"); this._leftArrow.css("left", "0px"); break; case "left": this._rightArrow.css("left", this.arrowButtonSize + "px"); this._leftArrow.css("left", "0px"); break; case "right": this._rightArrow.css("right", -c + "px"); this._leftArrow.css("right", (this.arrowButtonSize - c) + "px"); break } } }, _positionArrows: function (b) { if (b >= parseInt(this._headerWrapper.width()) && this.scrollable) { this._needScroll = true; if (this._unorderedList.position().left === 0) { this._unorderedListLeftBackup = this._getArrowsDisplacement() + "px" } this._leftArrow.css("display", "block"); this._rightArrow.css("display", "block") } else { this._needScroll = false; this._leftArrow.css("display", "none"); this._rightArrow.css("display", "none"); this._unorderedList.css("left", 0) } }, _performHeaderLayout: function () { this._removeSelectStyle(); var b = this._calculateTitlesSize(); var d = b.height; var c = b.width; this._headerWrapper.height(d); this._unorderedList.height(d); if (this.headerHeight != null && this.headerHeight != "auto") { this._headerWrapper.height(this.headerHeight); this._unorderedList.height(this.headerHeight) } if (c > this.host.width()) { this._unorderedList.width(c) } else { this._unorderedList.width(this.host.width()) } if (a.jqx.browser.msie && a.jqx.browser.version < 8) { this._unorderedList.css("position", "relative"); this._headerWrapper.css("overflow", "hidden") } this._reorderHeaderElements(); c = c + parseInt(this._unorderedList.css("margin-left")); this._totalItemsWidth = c; this._positionArrows(c); this._unorderedList.css({ position: "relative", top: "0px" }); this._verticalAlignElements(); this._moveSelectionTrack(this._selectedItem, 0); this._addSelectStyle(this.selectedItem) }, _verticalAlignElements: function () { var k = this.length(); var p = this._maxHeightTab(); while (k) { k--; var b = this._titleList[k].find(".jqx-tabs-titleContentWrapper"), l = b.height(), o = this._titleList[k].find(this.toThemeProperty(".jqx-tabs-close-button", true)), m = parseInt(this._titleList[k].css("padding-top")); if (!m) { m = 0 } if (this.autoHeight) { var h = this._titleList[k].outerHeight(true) - this._titleList[k].height(); var c = parseInt(this._titleList[k].css("padding-top")); var q = parseInt(this._titleList[k].css("padding-bottom")); var j = parseInt(this._titleList[k].css("border-top-width")); var f = parseInt(this._titleList[k].css("border-bottom-width")); this._titleList[k].height(this._unorderedList.outerHeight() - c - q - j - f) } else { if (this.position === "top") { var i = parseInt(this._unorderedList.height()) - parseInt(this._titleList[k].outerHeight(true)); if (parseInt(this._titleList[k].css("margin-top")) !== i && i !== 0) { this._titleList[k].css("margin-top", i) } } else { this._titleList[k].height(this._titleList[k].height()) } } this._titleList[k].children(0).height("100%"); var e = parseInt(this._titleList[k].height()); var g = parseInt(e) / 2 - parseInt(o.height()) / 2; o.css("margin-top", 1 + g); var n = parseInt(e) / 2 - parseInt(b.height()) / 2; b.css("margin-top", n) } if (this.scrollable) { var h = parseInt(this._headerWrapper.outerHeight()) - this.arrowButtonSize; var d = h / 2; this._rightArrow.children(0).css("margin-top", d); this._rightArrow.height("100%"); this._leftArrow.height("100%"); this._leftArrow.children(0).css("margin-top", d) } }, _getImageUrl: function (c) { var b = c.css("background-image"); b = b.replace('url("', ""); b = b.replace('")', ""); b = b.replace("url(", ""); b = b.replace(")", ""); return b }, _fitToSize: function () { var c = false; var e = false; var d = this; if (d.width != null && d.width.toString().indexOf("%") != -1) { c = true } if (d.height != null && d.height.toString().indexOf("%") != -1) { e = true } if (c) { this.host.css("width", this.width); this._contentWrapper.css("width", "100%") } if (e) { this.host.css("height", this.height); this._contentWrapper.css("width", "100%"); this._contentWrapper.css("height", "auto"); var b = this.host.height() - this._headerWrapper.outerHeight(); this._contentWrapper.height(b) } if (!c) { this.host.width(this.width); if (this.width != "auto") { this._contentWrapper.css("width", "100%") } } if (!e) { if (this.height !== "auto") { this.host.height(this.height); var b = this.host.height() - this._headerWrapper.outerHeight(); this._contentWrapper.height(b) } else { this._contentWrapper.css("height", "auto") } } }, _maxHeightTab: function () { var c = this.length(); var d = -1; var b = -1; while (c) { c--; if (d < parseInt(this._titleList[c].outerHeight(true))) { b = c } } return b }, _addSelectionTracker: function () { if (this._moveSelectionTrackerContainer) { this._moveSelectionTrackerContainer.remove() } this._moveSelectionTrackerContainer = a('<div class="' + this.toThemeProperty("jqx-tabs-selection-tracker-container") + '">'); var b = this.toThemeProperty("jqx-tabs-selection-tracker-" + this.position); this._selectionTracker = a('<div class="' + b + '">'); this._selectionTracker.css("color", "inherit"); this._moveSelectionTrackerContainer.append(this._selectionTracker); this._headerWrapper.append(this._moveSelectionTrackerContainer); this._selectionTracker.css({ position: "absolute", "z-index": "10", left: "0px", top: "0px", display: "inline-block" }) }, _addContentWrapper: function () { var d = "none"; var b = this._contentWrapper == undefined; this._contentWrapper = this._contentWrapper || a('<div class="' + this.toThemeProperty("jqx-tabs-content") + '" style="float:' + d + ';">'); this._contentWrapper.addClass(this.toThemeProperty("jqx-widget-content")); var c = this.length(); while (c) { c--; this._contentList[c].addClass(this.toThemeProperty("jqx-tabs-content-element")) } if (b) { this.host.find(".jqx-tabs-content-element").wrapAll(this._contentWrapper); this._contentWrapper = this.host.find(".jqx-tabs-content") } if (this.roundedCorners) { if (this.position == "top") { this._contentWrapper.addClass(this.toThemeProperty("jqx-rc-b")) } else { this._contentWrapper.addClass(this.toThemeProperty("jqx-rc-t")) } this.host.addClass(this.toThemeProperty("jqx-rc-all")) } }, _addHeaderWrappers: function () { var b = this.length(); this._unorderedList.remove(); this._headerWrapper = this._headerWrapper || a('<div class="jqx-tabs-headerWrapper" style="outline: none;">'); this._headerWrapper.remove(); if (this.position == "top") { this._headerWrapper.prependTo(this.host) } else { this._headerWrapper.appendTo(this.host) } this._unorderedList.appendTo(this._headerWrapper); this._headerWrapper.addClass(this.toThemeProperty("jqx-tabs-header")); this._headerWrapper.addClass(this.toThemeProperty("jqx-widget-header")); if (this.position == "bottom") { this._headerWrapper.addClass(this.toThemeProperty("jqx-tabs-header-bottom")) } else { this._headerWrapper.removeClass(this.toThemeProperty("jqx-tabs-header-bottom")) } if (this.roundedCorners) { if (this.position == "top") { this._headerWrapper.addClass(this.toThemeProperty("jqx-rc-t")); this._headerWrapper.removeClass(this.toThemeProperty("jqx-rc-b")) } else { this._headerWrapper.removeClass(this.toThemeProperty("jqx-rc-t")); this._headerWrapper.addClass(this.toThemeProperty("jqx-rc-b")) } } while (b) { b--; if (this._titleList[b].children(".jqx-tabs-titleWrapper").length <= 0) { var c = a('<div class="jqx-tabs-titleWrapper" style="outline: none; position: relative;">'); c.append(this._titleList[b].html()); this._titleList[b].empty(); c.appendTo(this._titleList[b]) } this._titleList[b].children(".jqx-tabs-titleWrapper").css("z-index", "15") } }, _render: function () { this._addCloseButtons(); this._addHeaderWrappers(); this._addContentWrapper(); if (this.selectionTracker) { this._addSelectionTracker() } this._addArrows() }, _addCloseButton: function (c) { var f = c; if (this._titleList[f].find(this.toThemeProperty(".jqx-tabs-close-button", true)).length <= 0 && this._titleList[f].find(".jqx-tabs-titleContentWrapper").length <= 0) { var d = a('<div class="jqx-tabs-titleContentWrapper"></div>'); var g = "left"; if (this.rtl) { g = "right" } d.css("float", g); d.addClass("jqx-disableselect"); d.append(this._titleList[f].html()); this._titleList[f].html(""); var b = a('<div class="' + this.toThemeProperty("jqx-tabs-close-button") + '"></div>'); b.css({ height: this.closeButtonSize, width: this.closeButtonSize, "float": g, "font-size": "1px" }); var e = this; this._titleList[f].append(d); this._titleList[f].append(b); if (!this.showCloseButtons) { b.css("display", "none") } else { if (this.hiddenCloseButtons) { if (this.hiddenCloseButtons[c] == 1) { b.css("display", "none") } } } } }, _addCloseButtons: function () { var b = this.length(); while (b) { b--; this._addCloseButton(b) } }, _prepareTabs: function () { var c = this.length(); var b = this.selectionTracker; this.selectionTracker = false; while (c) { c--; if (this._selectedItem !== c) { this._unselect(c, null, false) } } this._select(this._selectedItem, 0, null, false); this.selectionTracker = b; if (this.initTabContent) { if (!this._initTabContentList[this.selectedItem]) { if (!this._hiddenParent()) { this.initTabContent(this.selectedItem); this._initTabContentList[this.selectedItem] = true } } } }, _isValidIndex: function (b) { return (b >= 0 && b < this.length()) }, _removeSelectStyle: function () { var c = this.length(); while (c) { c--; var b = null; if (this.showCloseButtons) { var b = this._titleList[c].children(0).children(this.toThemeProperty(".jqx-tabs-close-button", true)); b.removeClass(this.toThemeProperty("jqx-tabs-close-button-selected")) } if (this.position == "top") { this._titleList[c].removeClass(this.toThemeProperty("jqx-tabs-title-selected-top")) } else { this._titleList[c].removeClass(this.toThemeProperty("jqx-tabs-title-selected-bottom")) } this._titleList[c].removeClass(this.toThemeProperty("jqx-fill-state-pressed")) } }, _addSelectStyle: function (c, e) { var d = this.length(); this._removeSelectStyle(); if (!this.selectionTracker || (e != undefined && e)) { if (c >= 0 && this._titleList[c] != undefined) { var b = null; if (this.showCloseButtons) { var b = this._titleList[c].children(0).children(this.toThemeProperty(".jqx-tabs-close-button", true)); if (this.hiddenCloseButtons) { if (this.hiddenCloseButtons[c] == 1) { b = null } } } this._titleList[c].removeClass(this.toThemeProperty("jqx-fill-state-hover")); if (this.position == "top") { this._titleList[c].removeClass(this.toThemeProperty("jqx-tabs-title-hover-top")); this._titleList[c].addClass(this.toThemeProperty("jqx-tabs-title-selected-top")) } else { this._titleList[c].removeClass(this.toThemeProperty("jqx-tabs-title-hover-bottom")); this._titleList[c].addClass(this.toThemeProperty("jqx-tabs-title-selected-bottom")) } this._titleList[c].addClass(this.toThemeProperty("jqx-fill-state-pressed")); if (b != null) { b.addClass(this.toThemeProperty("jqx-tabs-close-button-selected")) } } } }, _addItemTo: function (g, c, e) { if (c < g.length) { var b = undefined, f = undefined; for (var d = c; d + 1 < g.length; d++) { if (b === undefined) { b = g[d + 1]; g[d + 1] = g[d] } else { f = g[d + 1]; g[d + 1] = b; b = f } } if (b === undefined) { b = g[c] } g[c] = e; g.push(b) } else { g.push(e) } }, _select: function (d, g, h, b, f) { if (!this._tabCaptured) { this.host.attr("hideFocus", "true"); var c = this; if (f == undefined) { this._addSelectStyle(d) } else { this._addSelectStyle(d, f) } if (this.isCollapsed && this.collapsible) { this._contentList[d].css("display", "none"); this._selectCallback(d, h, b); return } switch (this.animationType) { case "none": if (!c.selectionTracker) { for (var e = 0; e < this._contentList.length; e++) { if (d != e && this._contentList[e].css("display") == "block") { this._contentList[e].css("display", "none"); a.jqx.aria(this._titleList[e], "aria-selected", false); a.jqx.aria(this._contentList[e], "aria-hidden", true) } } this._contentList[d].css("display", "block"); a.jqx.aria(this._titleList[d], "aria-selected", true); a.jqx.aria(this._contentList[d], "aria-hidden", false); a.jqx.aria(this, "aria-activedescendant", this._titleList[d][0].id) } else { setTimeout(function () { c._contentList[d].css("display", "block"); a.jqx.aria(c._titleList[d], "aria-selected", true); a.jqx.aria(c._contentList[d], "aria-hidden", false); a.jqx.aria(c, "aria-activedescendant", c._titleList[d][0].id) }, this.selectionTrackerAnimationDuration) } this._selectCallback(d, h, b); break; case "fade": this._lockAnimation("contentListSelect"); c._selectCallback(d, h, b); this._contentList[d].fadeIn(g, function () { c._unlockAnimation("contentListSelect"); a.jqx.aria(c._titleList[d], "aria-selected", true); a.jqx.aria(c._contentList[d], "aria-hidden", false); a.jqx.aria(c, "aria-activedescendant", c._titleList[d][0].id) }); break } } }, _selectCallback: function (c, d, b) { this._selectedItem = c; this.selectedItem = this._selectedItem; if (d) { d() } if (b) { this._raiseEvent(1, { item: c }) } }, _unselect: function (d, e, b) { if (d >= 0) { if (!this._tabCaptured) { var c = this; this._contentList[d].stop(); if (this.animationType == "fade") { this._contentList[d].css("display", "none"); a.jqx.aria(c._titleList[d], "aria-selected", false); a.jqx.aria(c._contentList[d], "aria-hidden", true) } else { if (this.selectionTracker) { setTimeout(function () { c._contentList[d].css("display", "none"); a.jqx.aria(c._titleList[d], "aria-selected", false); a.jqx.aria(c._contentList[d], "aria-hidden", true) }, this.selectionTrackerAnimationDuration) } else { this._contentList[d].css("display", "none"); a.jqx.aria(c._titleList[d], "aria-selected", false); a.jqx.aria(c._contentList[d], "aria-hidden", true) } } this._unselectCallback(d, e, b); if (!this.selectionTracker) { this._titleList[d].removeClass(this.toThemeProperty("jqx-tabs-title-selected")); this._titleList[d].removeClass(this.toThemeProperty("jqx-fill-state-pressed")) } } } }, _unselectCallback: function (c, d, b) { if (b) { this._raiseEvent(8, { item: c }) } if (d) { d() } }, disable: function () { var b = this.length(); while (b) { b--; this.disableAt(b) } }, enable: function () { var b = this.length(); while (b) { b--; this.enableAt(b) } }, getEnabledTabsCount: function () { var b = 0; a.each(this._titleList, function () { if (!this.disabled) { b++ } }); return b }, getDisabledTabsCount: function () { var b = 0; a.each(this._titleList, function () { if (this.disabled) { b++ } }); return b }, removeAt: function (d) { if (this._isValidIndex(d) && (this.canCloseAllTabs || this.length() > 1)) { this._removeHoverStates(); var b = this, c = this._titleList[this._selectedItem], e = parseInt(this._titleList[d].outerWidth(true)), i = this.getTitleAt(d); this._unorderedList.width(parseInt(this._unorderedList.width()) - e); this._titleList[d].remove(); this._contentList[d].remove(); var h = 0; this._titleList.splice(d, 1); this._contentList.splice(d, 1); this._addStyles(); this._performHeaderLayout(); this._removeEventHandlers(); this._addEventHandlers(); this._raiseEvent(3, { item: d, title: i }); this._isAnimated = {}; if (this.selectedItem > 0) { this._selectedItem = -1; var g = this._getPreviousIndex(this.selectedItem); this.select(g) } else { this._selectedItem = -1; var g = this._getNextIndex(this.selectedItem); this.select(g) } if (parseInt(this._unorderedList.css("left")) > this._getArrowsDisplacement()) { this._unorderedList.css("left", this._getArrowsDisplacement()) } if (parseInt(this._unorderedList.width()) <= parseInt(this._headerWrapper.width())) { var f = (this.enableScrollAnimation) ? this.scrollAnimationDuration : 0; this._lockAnimation("unorderedList"); this._unorderedList.animate({ left: 0 }, f, function () { b._unlockAnimation("unorderedList") }) } } }, removeFirst: function () { this.removeAt(0) }, removeLast: function () { this.removeAt(this.length() - 1) }, disableAt: function (b) { if (!this._titleList[b].disabled || this._titleList[b].disabled === undefined) { if (this.selectedItem == b) { var c = this.next(); if (!c) { c = this.previous() } } this._titleList[b].disabled = true; this.removeHandler(this._titleList[b], this.toggleMode); if (this.enabledHover) { this._titleList[b].off("mouseenter").off("mouseleave") } this._removeEventListenerAt(b); this._titleList[b].addClass(this.toThemeProperty("jqx-tabs-title-disable")); this._titleList[b].addClass(this.toThemeProperty("jqx-fill-state-disabled")); this._raiseEvent(5, { item: b }) } }, enableAt: function (b) { if (this._titleList[b].disabled) { this._titleList[b].disabled = false; this._addEventListenerAt(b); this._titleList[b].removeClass(this.toThemeProperty("jqx-tabs-title-disable")); this._titleList[b].removeClass(this.toThemeProperty("jqx-fill-state-disabled")); this._raiseEvent(4, { item: b }) } }, addAt: function (d, g, f) { if (d >= 0 || d <= this.length()) { this._removeHoverStates(); var b = a("<li>" + g + "</li>"); var e = a("<div>" + f + "</div>"); b.addClass(this.toThemeProperty("jqx-tabs-title")); b.addClass(this.toThemeProperty("jqx-item")); e.addClass(this.toThemeProperty("jqx-tabs-content-element")); if (this.position == "bottom") { b.addClass(this.toThemeProperty("jqx-tabs-title-bottom")) } var c = false; if (this._titleList.length == 0) { this._unorderedList.append(b) } else { if (d < this.length() && d >= 0) { this._titleList[d].before(b) } else { this._titleList[this.length() - 1].after(b) } } e.appendTo(this._contentWrapper); this._addItemTo(this._titleList, d, b); this._addItemTo(this._contentList, d, e); if (this._selectedItem > d) { this._selectedItem++ } this._switchTabs(d, this._selectedItem); this._selectedItem = d; if (this.showCloseButtons && this._titleList.length > 0) { this._addCloseButton(d) } this._uiRefresh(c); this._raiseEvent(2, { item: d }); this._moveSelectionTrack(this._selectedItem, 0) } }, addFirst: function (c, b) { this.addAt(0, c, b) }, addLast: function (c, b) { this.addAt(this.length(), c, b) }, val: function (b) { if (arguments.length == 0 || typeof (b) == "object") { return this._selectedItem } this.select(b); return this._selectedItem }, select: function (c, b) { if (typeof (c) === "object") { c = this._indexOf(c) } var e = c >= 0 && c < this._titleList.length ? this._titleList[c].attr("canselect") : true; if (e == undefined || e == "true" || e == true) { if (c !== this._selectedItem && this._isValidIndex(c)) { if (!this._activeAnimation() && !this._titleList[c].disabled) { var d = this._switchTabs(c, this._selectedItem); if (d) { this.ensureVisible(c) } } } } }, previous: function (c) { var b = this._selectedItem; if (c != undefined && !isNaN(c)) { b = c } while (b > 0 && b < this._titleList.length) { b--; if (!this._titleList[b].disabled) { this.select(b); return true } } return false }, _getPreviousIndex: function (c) { if (c != undefined && !isNaN(c)) { var b = c; while (c > 0 && c <= this._titleList.length) { c--; if (!this._titleList[c].disabled) { return c; break } } return b } else { return 0 } }, _getNextIndex: function (c) { if (c != undefined && !isNaN(c)) { var b = c; while (c >= 0 && c < this._titleList.length) { if (!this._titleList[c].disabled) { return c; break } c++ } return b } else { return 0 } }, next: function (c) { var b = this._selectedItem; if (c != undefined && !isNaN(c)) { b = c } while (b >= 0 && b < this._titleList.length - 1) { b++; if (!this._titleList[b].disabled) { this.select(b); return true } } return false }, first: function () { var b = 0; if (this._titleList[b].disabled) { this.next(b) } else { this.select(b) } }, last: function () { var b = this._titleList.length - 1; if (this._titleList[b].disabled) { this.previous(b) } else { this.select(b) } }, length: function () { return this._titleList.length }, lockAt: function (b) { if (this._isValidIndex(b) && (!this._titleList[b].locked || this._titleList[b].locked === undefined)) { this._titleList[b].locked = true; this._raiseEvent(11, { item: b }) } }, unlockAt: function (b) { if (this._isValidIndex(b) && this._titleList[b].locked) { this._titleList[b].locked = false; this._raiseEvent(12, { item: b }) } }, lockAll: function () { var b = this.length(); while (b) { b--; this.lockAt(b) } }, unlockAll: function () { var b = this.length(); while (b) { b--; this.unlockAt(b) } }, showCloseButtonAt: function (c) { if (this._isValidIndex(c)) { if (!this.showCloseButtons) { this.showCloseButtons = true; this.updatetabsheader() } var b = this._titleList[c].find(this.toThemeProperty(".jqx-tabs-close-button", true)); b.css("display", "block"); if (!this.hiddenCloseButtons) { this.hiddenCloseButtons = new Array() } this.hiddenCloseButtons[c] = 0 } }, hideCloseButtonAt: function (c) { if (this._isValidIndex(c)) { var b = this._titleList[c].find(this.toThemeProperty(".jqx-tabs-close-button", true)); b.css("display", "none"); if (!this.hiddenCloseButtons) { this.hiddenCloseButtons = new Array() } this.hiddenCloseButtons[c] = 1 } }, hideAllCloseButtons: function () { var b = this.length(); while (b) { b--; this.hideCloseButtonAt(b) } }, showAllCloseButtons: function () { var b = this.length(); while (b) { b--; this.showCloseButtonAt(b) } }, getTitleAt: function (b) { if (this._titleList[b]) { return this._titleList[b].text() } return null }, getContentAt: function (b) { if (this._contentList[b]) { return this._contentList[b] } return null }, setTitleAt: function (b, c) { if (this._titleList[b]) { this._titleList[b].text(c); if (this.showCloseButtons) { this._addCloseButton(b); this._removeEventHandlers(); this._addEventHandlers() } this.render() } }, setContentAt: function (b, c) { if (this._contentList[b]) { this._contentList[b].html(c) } }, ensureVisible: function (d) { var k = this; if (d == undefined || d == -1 || d == null) { d = this.selectedItem } if (!this._isValidIndex(d)) { return false } var j = parseInt(this._titleList[d].position().left) + parseInt(this._unorderedList.css("margin-left")); var f = parseInt(this._unorderedList.css("left")); var i = parseInt(this._headerWrapper.outerWidth(true)); var e = parseInt(this._titleList[d].outerWidth(true)); var h = f - this._getArrowsDisplacement(); var b = i - this._getArrowsDisplacement() - h; var g, c; if (j < -h) { g = -j + this._getArrowsDisplacement(); c = this._getArrowsDisplacement() } else { if (j + e > b - this._getArrowsDisplacement()) { g = -j + i - e - ((this.scrollable) ? (2 * this.arrowButtonSize - this._getArrowsDisplacement()) : 0); c = i - e - this._getArrowsDisplacement() } else { this._moveSelectionTrack(d, this.selectionTrackerAnimationDuration); return true } } this._lockAnimation("unorderedList"); this._unorderedList.animate({ left: g }, this.scrollAnimationDuration, function () { k._unlockAnimation("unorderedList"); k._moveSelectionTrack(k._selectedItem, 0); return true }); this._moveSelectionTrack(d, this.selectionTrackerAnimationDuration, c); return true }, isVisibleAt: function (d) { var k = this; if (d == undefined || d == -1 || d == null) { d = this.selectedItem } if (!this._isValidIndex(d)) { return false } var j = parseInt(this._titleList[d].position().left) + parseInt(this._unorderedList.css("margin-left")); var f = parseInt(this._unorderedList.css("left")); var i = parseInt(this._headerWrapper.outerWidth(true)); var e = parseInt(this._titleList[d].outerWidth(true)); var h = f - this._getArrowsDisplacement(); var b = i - this._getArrowsDisplacement() - h; var g, c; if (j < -h) { return false } else { if (j + e > b) { return false } else { return true } } return true }, isDisabled: function (b) { return this._titleList[b].disabled }, _lockAnimation: function (b) { if (this._isAnimated) { this._isAnimated[b] = true } }, _unlockAnimation: function (b) { if (this._isAnimated) { this._isAnimated[b] = false } }, propertyChangedHandler: function (b, c, e, d) { this._validateProperties(); switch (c) { case "touchMode": if (d) { b.enabledHover = false; b.keyboardNavigation = false } break; case "width": case "height": b._performResize(); return; case "disabled": if (d) { this.disable() } else { this.enable() } return; case "showCloseButtons": if (d) { this.showAllCloseButtons() } else { this.hideAllCloseButtons() } this._moveSelectionTrack(this._selectedItem, this.selectionTrackerAnimationDuration); return; case "selectedItem": if (this._isValidIndex(d)) { this.select(d) } return; case "scrollStep": case "contentTransitionDuration": case "scrollAnimationDuration": case "enableScrollAnimation": return; case "selectionTracker": if (d) { this._refresh(); this.select(this._selectedItem) } else { if (this._selectionTracker != null) { this._selectionTracker.remove() } } return; case "scrollable": if (d) { this._refresh(); this.select(this._selectedItem) } else { this._leftArrow.remove(); this._rightArrow.remove(); this._performHeaderLayout() } return; case "autoHeight": this._performHeaderLayout(); return; case "theme": a.jqx.utilities.setTheme(e, d, this.host); return } this._unorderedList.css("left", "0px"); this._refresh(); this.select(this._selectedItem); this._addSelectStyle(this._selectedItem, true) } }) }(jQuery));
    </script>
    <!--<script type="text/javascript" src="http://61.147.119.252:8088/jqwidgets/jqxwindow.js"></script>-->
    <script>
        /*
jQWidgets v3.0.3 (2013-Oct-01)
Copyright (c) 2011-2013 jQWidgets.
License: http://jqwidgets.com/license/
*/

        (function (a) { a.jqx.jqxWidget("jqxWindow", "", {}); a.extend(a.jqx._jqxWindow.prototype, { defineInstance: function () { this.height = "auto"; this.width = 200; this.minHeight = 50; this.maxHeight = 600; this.minWidth = 50; this.maxWidth = 800; this.showCloseButton = true; this.disabled = false; this.autoOpen = true; this.keyboardCloseKey = "esc"; this.title = ""; this.content = ""; this.draggable = true; this.resizable = true; this.animationType = "fade"; this.closeAnimationDuration = 250; this.showAnimationDuration = 250; this.isModal = false; this.position = "center"; this.closeButtonSize = 16; this.closeButtonAction = "hide"; this.modalOpacity = 0.3; this.dragArea = null; this.okButton = null; this.cancelButton = null; this.dialogResult = { OK: false, Cancel: false, None: true }; this.collapsed = false; this.showCollapseButton = false; this.collapseAnimationDuration = 150; this.collapseButtonSize = 16; this.rtl = false; this.keyboardNavigation = true; this.headerHeight = null; this._events = ["created", "closed", "moving", "moved", "open", "collapse", "expand", "open", "close", "resize"]; this.initContent = null; this.enableResize = true; this.restricter = null; this.closing = null; this._invalidArgumentExceptions = { invalidHeight: "Invalid height!", invalidWidth: "Invalid width!", invalidMinHeight: "Invalid minHeight!", invalidMaxHeight: "Invalid maxHeight!", invalidMinWidth: "Invalid minWidth!", invalidMaxWidth: "Invalid maxWidth", invalidKeyCode: "Invalid keyCode!", invalidAnimationType: "Invalid animationType!", invalidCloseAnimationDuration: "Invalid closeAnimationDuration!", invalidShowAnimationDuration: "Invalid showAnimationDuration!", invalidPosition: "Invalid position!", invalidCloseButtonSize: "Invalid closeButtonSize!", invalidCollapseButtonSize: "Invalid collapseButtonSize!", invalidCloseButtonAction: "Invalid cluseButtonAction!", invalidModalOpacity: "Invalid modalOpacity!", invalidDragArea: "Invalid dragArea!", invalidDialogResult: "Invalid dialogResult!", invalidIsModal: "You can have just one modal window!" }; this._enableResizeCollapseBackup; this._enableResizeBackup; this._heightBeforeCollapse; this._minHeightBeforeCollapse; this._mouseDown = false; this._isDragging = false; this._rightContentWrapper = null; this._leftContentWrapper = null; this._headerContentWrapper = null; this._closeButton = null; this._collapseButton = null; this._title = null; this._content = null; this._mousePosition = {}; this._windowPosition = {}; this._modalBackground = null; this._SCROLL_WIDTH = 21; this._visible = true; this.modalBackgroundZIndex = 12990; this.modalZIndex = 18000; this.zIndex = 9001; this._touchEvents = { mousedown: a.jqx.mobile.getTouchEventName("touchstart"), mouseup: a.jqx.mobile.getTouchEventName("touchend"), mousemove: a.jqx.mobile.getTouchEventName("touchmove"), mouseenter: "mouseenter", mouseleave: "mouseleave", click: a.jqx.mobile.getTouchEventName("touchstart") } }, createInstance: function () { this.host.attr("role", "dialog"); this.host.detach(); a(document.body).append(this.host); var f = this; var g = function () { var i = parseInt(a(f.restricter).css("padding-top")); var h = parseInt(a(f.restricter).css("padding-left")); var k = parseInt(a(f.restricter).css("padding-bottom")); var m = parseInt(a(f.restricter).css("padding-right")); var l = a(f.restricter).coord(); f.dragArea = { left: h + l.left, top: i + l.top, width: m + a(f.restricter).width(), height: k + a(f.restricter).height() } }; if (this.restricter) { g() } if (this.restricter) { this.addHandler(a(window), "resize." + this.element.id, function () { g() }); this.addHandler(a(window), "orientationchanged." + this.element.id, function () { g() }); this.addHandler(a(window), "orientationchange." + this.element.id, function () { g() }) } this._isTouchDevice = a.jqx.mobile.isTouchDevice(); this._validateProperties(); this._createStructure(); this._refresh(); if (!this.autoOpen) { this.host.css("display", "none") } if (a.jqx.browser.msie) { this.host.addClass(this.toThemeProperty("jqx-noshadow")) } if (!this.isModal) { this._fixWindowZIndex() } this._setStartupSettings(); this._positionWindow(); this._raiseEvent(0); if (this.autoOpen) { this._performLayout(); var e = this; if (e.initContent) { e.initContent(); e._contentInitialized = true } if (this.isModal) { this._fixWindowZIndex("modal-show") } } }, refresh: function () { this._performLayout() }, _setStartupSettings: function () { if (this.disabled) { this.disable() } if (this.collapsed) { this.collapsed = false; this.collapse(0) } if (!this.autoOpen) { this.hide(null, 0.001, true); this._visible = false } if (this.title !== null && this.title !== "") { this.setTitle(this.title) } if (this.content !== null && this.content !== "") { this.setContent(this.content) } this.title = this._headerContentWrapper.html(); this.content = this._content.html() }, _fixWindowZIndex: function (m) { var e = a.data(document.body, "jqxwindows-list") || [], n = this.zIndex, h; if (!this.isModal) { if (this._indexOf(this.host, e) < 0) { e.push(this.host) } a.data(document.body, "jqxwindows-list", e); if (e.length > 1) { var f = e[e.length - 2]; n = parseInt(f.css("z-index"), 10) + 1 } } else { if (e) { e = this._removeFromArray(this.host, e); a.data(document.body, "jqxwindows-list", e) } var g = a.data(document.body, "jqxwindows-modallist"); if (!g) { if (m == "modal-show") { var k = new Array(); k.push(this.host); a.data(document.body, "jqxwindows-modallist", k); g = k } else { a.data(document.body, "jqxwindows-modallist", new Array()); g = new Array() } } else { if (m == "modal-show") { g.push(this.host) } else { var i = g.indexOf(this.host); if (i != -1) { g.splice(i, 1) } } } n = this.modalZIndex; var l = this; a.each(g, function (q) { if (this.data()) { if (this.data().jqxWindow) { var o = this.data().jqxWindow.instance; o._modalBackground.css("z-index", n); o.host.css("z-index", n + 1); n += 2 } } }); a.data(document.body, "jqxwindow-modal", this.host); return } this.host.css("z-index", n); this._sortByStyle("z-index", e) }, _validateProperties: function () { try { this._validateSize(); this._validateAnimationProperties(); this._validateInteractionProperties(); this._validateModalProperties(); if (!this.position) { throw new Error(this._invalidArgumentExceptions.invalidPosition) } if (isNaN(this.closeButtonSize) || parseInt(this.closeButtonSize) < 0) { throw new Error(this._invalidArgumentExceptions.invalidCloseButtonSize) } if (isNaN(this.collapseButtonSize) || parseInt(this.collapseButtonSize) < 0) { throw new Error(this._invalidArgumentExceptions.invalidCollapseButtonSize) } } catch (e) { alert(e) } }, _validateModalProperties: function () { if (this.modalOpacity < 0 || this.modalOpacity > 1) { throw new Error(this._invalidArgumentExceptions.invalidModalOpacity) } if (this.isModal && !this._singleModalCheck()) { throw new Error(this._invalidArgumentExceptions.invalidIsModal) } }, _validateSize: function () { this._validateSizeLimits(); if (this.height !== "auto" && isNaN(parseInt(this.height))) { throw new Error(this._invalidArgumentExceptions.invalidHeight) } if (this.width !== "auto" && isNaN(parseInt(this.width))) { throw new Error(this._invalidArgumentExceptions.invalidWidth) } if (this.height !== "auto" && this.height < this.minHeight) { this.height = this.minHeight } if (this.width < this.minWidth) { this.width = this.minWidth } if (this.height !== "auto" && this.height > this.maxHeight) { this.height = this.maxHeight } if (this.width > this.maxWidth) { this.width = this.maxWidth } if (this.dragArea === null) { return } if (this.dragArea && ((this.dragArea.height !== null && this.host.height() > this.dragArea.height) || (parseInt(this.height, 10) > this.dragArea.height)) || (this.dragArea.width !== null && this.width > this.dragArea.width) || (this.maxHeight > this.dragArea.height || this.maxWidth > this.dragArea.width)) { } }, _validateSizeLimits: function () { if (isNaN(parseInt(this.minHeight))) { throw new Error(this._invalidArgumentExceptions.invalidMinHeight) } if (isNaN(parseInt(this.maxHeight))) { throw new Error(this._invalidArgumentExceptions.invalidMaxHeight) } if (isNaN(parseInt(this.minWidth))) { throw new Error(this._invalidArgumentExceptions.invalidMinWidth) } if (isNaN(parseInt(this.maxWidth))) { throw new Error(this._invalidArgumentExceptions.invalidMaxWidth) } if (this.minHeight > this.maxHeight) { throw new Error(this._invalidArgumentExceptions.invalidMinHeight) } if (this.minWidth > this.maxWidth) { throw new Error(this._invalidArgumentExceptions.invalidMinWidth) } }, _validateAnimationProperties: function () { if (this.animationType !== "fade" && this.animationType !== "slide" && this.animationType !== "combined" && this.animationType !== "none") { throw new Error(this._invalidArgumentExceptions.invalidAnimationType) } if (isNaN(parseInt(this.closeAnimationDuration), 10) || this.closeAnimationDuration < 0) { throw new Error(this._invalidArgumentExceptions.invalidCloseAnimationDuration) } if (isNaN(parseInt(this.showAnimationDuration), 10) || this.showAnimationDuration < 0) { throw new Error(this._invalidArgumentExceptions.invalidShowAnimationDuration) } }, _validateInteractionProperties: function () { if (parseInt(this.keyCode, 10) < 0 || parseInt(this.keyCode, 10) > 130 && this.keyCode !== "esc") { throw new Error(this._invalidArgumentExceptions.invalidKeyCode) } if (this.dragArea !== null && (typeof this.dragArea.width === "undefined" || typeof this.dragArea.height === "undefined" || typeof this.dragArea.left === "undefined" || typeof this.dragArea.top === "undefined")) { throw new Error(this._invalidArgumentExceptions.invalidDragArea) } if (!this.dialogResult || (!this.dialogResult.OK && !this.dialogResult.Cancel && !this.dialogResult.None)) { throw new Error(this._invalidArgumentExceptions.invalidDialogResult) } if (this.closeButtonAction !== "hide" && this.closeButtonAction !== "close") { throw new Error(this._invalidArgumentExceptions.invalidCloseButtonAction) } }, _singleModalCheck: function () { var e = a.data(document.body, "jqxwindows-list") || [], f = e.length; while (f) { f -= 1; if (a(e[f].attr("id")).length > 0) { if (a(e[f].attr("id")).jqxWindow("isModal")) { return false } } } return true }, _createStructure: function () { var e = this.host.children("DIV"); if (e.length === 1) { this._header = a("<div>" + this.host.attr("caption") + "</div>"); this.host.prepend(this._header); this.host.attr("caption", ""); this._content = a(e[0]) } else { if (e.length === 2) { this._header = a(e[0]); this._content = a(e[1]) } else { throw new Error("Invalid structure!") } } }, _refresh: function () { this._render(); this._addStyles(); this._performLayout(); this._removeEventHandlers(); this._addEventHandlers(); this._initializeResize() }, _render: function () { this._addHeaderWrapper(); this._addCloseButton(); this._addCollapseButton(); this._removeModal(); this._makeModal() }, _addHeaderWrapper: function () { if (!this._headerContentWrapper) { this._header.wrapInner('<div style="float:left;"></div>'); this._headerContentWrapper = this._header.children(0); if (this.headerHeight !== null) { this._header.height(this.headerHeight) } } }, _addCloseButton: function () { if (!this._closeButton) { this._closeButtonWrapper = a('<div class="' + this.toThemeProperty("jqx-window-close-button-background") + '"></div>'); this._closeButton = a('<div style="width: 100%; height: 100%;" class="' + this.toThemeProperty("jqx-window-close-button") + '"></div>'); this._closeButtonWrapper.append(this._closeButton); this._header.append(this._closeButtonWrapper) } }, _addCollapseButton: function () { if (!this._collapseButton) { this._collapseButtonWrapper = a('<div class="' + this.toThemeProperty("jqx-window-collapse-button-background") + '"></div>'); this._collapseButton = a('<div style="width: 100%; height: 100%;" class="' + this.toThemeProperty("jqx-window-collapse-button") + '"></div>'); this._collapseButtonWrapper.append(this._collapseButton); this._header.append(this._collapseButtonWrapper) } }, _removeModal: function () { if (!this.isModal && typeof this._modalBackground === "object" && this._modalBackground !== null && this._modalBackground.length >= 1) { a("." + this.toThemeProperty("jqx-window-modal")).remove(); this._modalBackground = null } }, focus: function () { try { this.host.focus(); var f = this; setTimeout(function () { f.host.focus() }, 10) } catch (e) { } }, _makeModal: function () { if (this.isModal && (!this._modalBackground || this._modalBackground.length < 1)) { var g = a.data(document.body, "jqxwindows-list"); if (g) { this._removeFromArray(this.host, g); a.data(document.body, "jqxwindows-list", g) } this._modalBackground = a("<div></div>"); this._modalBackground.addClass(this.toThemeProperty("jqx-window-modal")); this._setModalBackgroundStyles(); a(document.body).append(this._modalBackground); this.addHandler(this._modalBackground, this._getEvent("click"), function () { return false }); var f = this; var e = function (i, k) { var h = a(i).parents().get(); for (j = 0; j < h.length; j++) { if (a(h[j]).is(k)) { return true } } return false }; this.addHandler(this._modalBackground, "mouseup", function (h) { f._stopResizing(f); h.preventDefault() }); this.addHandler(this._modalBackground, "mousedown", function (i) { var h = f._getTabbables(); if (h.length > 0) { h[0].focus(1); setTimeout(function () { h[0].focus(1) }, 100) } i.preventDefault(); return false }); this.addHandler(a(document), "keydown.window" + this.element.id, function (k) { if (k.keyCode !== 9) { return } var i = f._getTabbables(); var l = null; var h = null; if (i.length > 0) { l = i[0]; h = i[i.length - 1] } if (k.target == f.element) { return } if (l == null) { return } if (!e(k.target, f.host)) { l.focus(1); return false } if (k.target === h && !k.shiftKey) { l.focus(1); return false } else { if (k.target === l && k.shiftKey) { h.focus(1); return false } } }) } }, _addStyles: function () { this.host.addClass(this.toThemeProperty("jqx-rc-all")); this.host.addClass(this.toThemeProperty("jqx-window")); this.host.addClass(this.toThemeProperty("jqx-popup")); if (a.jqx.browser.msie) { this.host.addClass(this.toThemeProperty("jqx-noshadow")) } this.host.addClass(this.toThemeProperty("jqx-widget")); this.host.addClass(this.toThemeProperty("jqx-widget-content")); this._header.addClass(this.toThemeProperty("jqx-window-header")); this._content.addClass(this.toThemeProperty("jqx-window-content")); this._header.addClass(this.toThemeProperty("jqx-widget-header")); this._content.addClass(this.toThemeProperty("jqx-widget-content")); this._header.addClass(this.toThemeProperty("jqx-disableselect")); this._header.addClass(this.toThemeProperty("jqx-rc-t")); this._content.addClass(this.toThemeProperty("jqx-rc-b")); this.element.tabIndex = 0; this.host.find("DIV").css("tab-index", 0); this.host.attr("hideFocus", "true").css("outline", "none") }, _performHeaderLayout: function () { this._handleHeaderButtons(); this._header.css("position", "relative"); if (this.rtl) { this._headerContentWrapper.css("direction", "rtl"); this._headerContentWrapper.css("float", "right") } else { this._headerContentWrapper.css("direction", "ltr"); this._headerContentWrapper.css("float", "left") } this._performHeaderCloseButtonLayout(); this._performHeaderCollapseButtonLayout(); this._centerElement(this._headerContentWrapper, this._header, "y", "margin"); if (this.headerHeight) { this._centerElement(this._closeButtonWrapper, this._header, "y", "margin"); this._centerElement(this._collapseButtonWrapper, this._header, "y", "margin") } }, _handleHeaderButtons: function () { if (!this._closeButtonWrapper) { return } if (!this.showCloseButton) { this._closeButtonWrapper.css("visibility", "hidden") } else { this._closeButtonWrapper.css("visibility", "visible"); this._closeButtonWrapper.width(this.closeButtonSize); this._closeButtonWrapper.height(this.closeButtonSize) } if (!this.showCollapseButton) { this._collapseButtonWrapper.css("visibility", "hidden") } else { this._collapseButtonWrapper.css("visibility", "visible"); this._collapseButtonWrapper.width(this.collapseButtonSize); this._collapseButtonWrapper.height(this.collapseButtonSize) } }, _performHeaderCloseButtonLayout: function () { if (!this._closeButtonWrapper) { return } var e = parseInt(this._header.css("padding-right"), 10); if (!isNaN(e)) { this._closeButtonWrapper.width(this._closeButton.width()); if (!this.rtl) { this._closeButtonWrapper.css("margin-right", e); this._closeButtonWrapper.css("margin-left", "0px") } else { this._closeButtonWrapper.css("margin-left", e); this._closeButtonWrapper.css("margin-right", "0px") } } if (!this.rtl) { this._closeButtonWrapper.css({ position: "absolute", right: "0px", left: "" }) } else { this._closeButtonWrapper.css({ position: "absolute", left: "0px", right: "" }) } }, _performHeaderCollapseButtonLayout: function () { if (!this._closeButtonWrapper) { return } var e = parseInt(this._header.css("padding-right"), 10); if (!isNaN(e)) { this._collapseButtonWrapper.width(this.collapseButtonSize); this._collapseButtonWrapper.height(this.collapseButtonSize); if (!this.rtl) { this._collapseButtonWrapper.css("margin-right", e); this._collapseButtonWrapper.css("margin-left", "0px") } else { this._collapseButtonWrapper.css("margin-left", e); this._collapseButtonWrapper.css("margin-right", "0px") } } if (!this.rtl) { this._collapseButtonWrapper.css({ position: "absolute", right: (this.showCloseButton) ? this._closeButton.outerWidth(true) : 0, left: "" }) } else { this._collapseButtonWrapper.css({ position: "absolute", left: (this.showCloseButton) ? this._closeButton.outerWidth(true) : 0, right: "" }) } this._centerElement(this._collapseButton, this._collapseButton.parent(), "y") }, _performWidgetLayout: function () { var e; if (this.width !== "auto") { this.host.css("width", this.width) } if (!this.collapsed) { if (this.height !== "auto") { this.host.height(this.height) } else { this.host.height(this.host.height()) } this.host.css("min-height", this.minHeight) } this._setChildrenLayout(); e = this._validateMinSize(); this.host.css({ "max-height": this.maxHeight, "min-width": this.minWidth, "max-width": this.maxWidth }); if (!e) { this._setChildrenLayout() } }, _setChildrenLayout: function () { this._header.width(this.host.width() - (this._header.outerWidth(true) - this._header.width())); this._content.width(this.host.width() - (this._content.outerWidth(true) - this._content.width())); this._content.height(this.host.height() - this._header.outerHeight(true) - (this._content.outerHeight(true) - this._content.height())) }, _validateMinSize: function () { var f = true; if (this.minHeight < this._header.height()) { this.minHeight = this._header.height(); f = false } var h = this._header.children(0).outerWidth(true), e = this._header.children(1).outerWidth(true), g = h + e; if (this.minWidth < 100) { this.minWidth = Math.min(g, 100); f = false } return f }, _centerElement: function (h, f, e, g) { if (typeof f.left === "number" && typeof f.top === "number" && typeof f.height === "number" && typeof f.width === "number") { this._centerElementInArea(h, f, e) } else { this._centerElementInParent(h, f, e, g) } }, _centerElementInParent: function (e, m, h, f) { h = h.toLowerCase(); if (f) { f += "-" } else { f = "" } if (h.indexOf("y") >= 0) { var g = e.outerHeight(true), k = m.height(), i = (Math.max(0, k - g)) / 2; e.css(f + "top", i + "px") } if (h.indexOf("x") >= 0) { var o = e.outerWidth(true); var n = m.width(); var l = (Math.max(0, n - o)) / 2; e.css(f + "left", l + "px") } }, _centerElementInArea: function (f, e, h) { h = h.toLowerCase(); if (h.indexOf("y") >= 0) { var g = f.outerHeight(true); var k = e.height; var i = (k - g) / 2; f.css("top", i + e.top + "px") } if (h.indexOf("x") >= 0) { var n = f.outerWidth(true); var m = e.width; var l = (m - n) / 2; f.css("left", l + e.left + "px") } }, _removeEventHandlers: function () { this.removeHandler(this._header, this._getEvent("mousedown")); this.removeHandler(this._header, this._getEvent("mousemove")); this.removeHandler(this._header, "focus"); this.removeHandler(a(document), this._getEvent("mousemove") + "." + this.host.attr("id")); this.removeHandler(a(document), this._getEvent("mouseup") + "." + this.host.attr("id")); this.removeHandler(this.host, "keydown"); this.removeHandler(this._closeButton, this._getEvent("click")); this.removeHandler(this._closeButton, this._getEvent("mouseenter")); this.removeHandler(this._closeButton, this._getEvent("mouseleave")); this.removeHandler(this._collapseButton, this._getEvent("click")); this.removeHandler(this._collapseButton, this._getEvent("mouseenter")); this.removeHandler(this._collapseButton, this._getEvent("mouseleave")); this.removeHandler(this.host, this._getEvent("mousedown")); this.removeHandler(a(this.okButton), this._getEvent("click"), this._setDialogResultHandler); this.removeHandler(a(this.cancelButton), this._getEvent("click"), this._setDialogResultHandler); this.removeHandler(this._header, this._getEvent("mouseenter")); this.removeHandler(this._header, this._getEvent("mouseleave")); this.removeHandler(this.host, "resizing", this._windowResizeHandler) }, _removeFromArray: function (e, g) { var f = this._indexOf(e, g); if (f >= 0) { return g.splice(this._indexOf(e, g), 1) } else { return g } }, _sortByStyle: function (e, l) { for (var h = 0; h < l.length; h++) { for (var f = l.length - 1; f > h; f--) { var m = l[f], k = l[f - 1], g; if (parseInt(m.css(e), 10) < parseInt(k.css(e), 10)) { g = m; l[f] = k; l[f - 1] = g } } } }, _initializeResize: function () { if (this.resizable) { var e = this; this.initResize({ target: this.host, alsoResize: e._content, maxWidth: e.maxWidth, minWidth: e.minWidth, maxHeight: e.maxHeight, minHeight: e.minHeight, indicatorSize: 10, resizeParent: e.dragArea }) } }, _removeResize: function () { this.removeResize() }, _getEvent: function (e) { if (this._isTouchDevice) { return this._touchEvents[e] } else { return e } }, _addEventHandlers: function () { this._addDragDropHandlers(); this._addCloseHandlers(); this._addCollapseHandlers(); this._addFocusHandlers(); this._documentResizeHandlers(); this._closeButtonHover(); this._collapseButtonHover(); this._addDialogButtonsHandlers(); this._addHeaderHoverEffect(); this._addResizeHandlers(); var e = this; this.addHandler(this._header, this._getEvent("mousemove"), function (f) { e._addHeaderCursorHandlers(e) }) }, _addResizeHandlers: function () { var e = this; this.addHandler(this.host, "resizing", this._windowResizeHandler, { self: this }) }, _windowResizeHandler: function (f) { var e = f.data.self; e._header.width(e.host.width() - (e._header.outerWidth(true) - e._header.width())); e.width = f.args.width; e.height = f.args.height }, _addHeaderHoverEffect: function () { var e = this; this.addHandler(this._header, this._getEvent("mouseenter"), function () { a(this).addClass(e.toThemeProperty("jqx-window-header-hover")) }); this.addHandler(this._header, this._getEvent("mouseleave"), function () { a(this).removeClass(e.toThemeProperty("jqx-window-header-hover")) }) }, _addDialogButtonsHandlers: function () { if (this.okButton) { this.addHandler(a(this.okButton), this._getEvent("click"), this._setDialogResultHandler, { self: this, result: "ok" }) } if (this.cancelButton) { this.addHandler(a(this.cancelButton), this._getEvent("click"), this._setDialogResultHandler, { self: this, result: "cancel" }) } }, _documentResizeHandlers: function () { var e = this; if (this.isModal) { a(window).resize(function () { if (typeof e._modalBackground === "object" && e._modalBackground !== null) { if (e.isOpen()) { e._modalBackground.hide() } e._modalBackground.width(e._getDocumentSize().width); e._modalBackground.height(e._getDocumentSize().height); if (e.isOpen()) { e._modalBackground.show() } } }) } }, _setDialogResultHandler: function (f) { var e = f.data.self; e._setDialogResult(f.data.result); e.closeWindow() }, _setDialogResult: function (e) { this.dialogResult.OK = false; this.dialogResult.None = false; this.dialogResult.Cancel = false; e = e.toLowerCase(); switch (e) { case "ok": this.dialogResult.OK = true; break; case "cancel": this.dialogResult.Cancel = true; break; default: this.dialogResult.None = true } }, _getDocumentSize: function () { var e = a.jqx.browser.msie && a.jqx.browser.version < 9; var f = e ? 4 : 0; var g = f; if (document.body.scrollHeight > document.body.clientHeight && e) { f = this._SCROLL_WIDTH } if (document.body.scrollWidth > document.body.clientWidth && e) { g = this._SCROLL_WIDTH } return { width: a(document).width() - f, height: a(document).height() - g } }, _closeButtonHover: function () { var e = this; this.addHandler(this._closeButton, this._getEvent("mouseenter"), function () { e._closeButton.addClass(e.toThemeProperty("jqx-window-close-button-hover")) }); this.addHandler(this._closeButton, this._getEvent("mouseleave"), function () { e._closeButton.removeClass(e.toThemeProperty("jqx-window-close-button-hover")) }) }, _collapseButtonHover: function () { var e = this; this.addHandler(this._collapseButton, this._getEvent("mouseenter"), function () { e._collapseButton.addClass(e.toThemeProperty("jqx-window-collapse-button-hover")) }); this.addHandler(this._collapseButton, this._getEvent("mouseleave"), function () { e._collapseButton.removeClass(e.toThemeProperty("jqx-window-collapse-button-hover")) }) }, _setModalBackgroundStyles: function () { if (this.isModal) { this._modalBackground.fadeTo(0, this.modalOpacity); this._modalBackground.css({ position: "absolute", top: "0px", left: "0px", width: this._getDocumentSize().width, height: this._getDocumentSize().height, "z-index": this.modalBackgroundZIndex }); if (!this.autoOpen) { this._modalBackground.css("display", "none") } } }, _addFocusHandlers: function () { var e = this; this.addHandler(this.host, this._getEvent("mousedown"), function () { if (!e.isModal) { e.bringToFront() } }) }, _indexOf: function (f, g) { for (var e = 0; e < g.length; e++) { if (g[e][0] === f[0]) { return e } } return -1 }, _addCloseHandlers: function () { var e = this; this.addHandler(this._closeButton, this._getEvent("click"), function (f) { return e._closeWindow(f) }); if (this.keyboardCloseKey !== "none") { if (typeof this.keyboardCloseKey !== "number" && this.keyboardCloseKey.toLowerCase() === "esc") { this.keyboardCloseKey = 27 } } this.addHandler(this.host, "keydown", function (f) { if (f.keyCode === e.keyboardCloseKey && e.keyboardCloseKey != null && e.keyboardCloseKey != "none") { e._closeWindow(f) } else { e._handleKeys(f) } }, { self: this }); this.addHandler(this.host, "keyup", function (f) { if (!e.keyboardNavigation) { return } if (e._moved) { var i = e.host.coord(); var h = i.left; var g = i.top; e._raiseEvent(3, h, g, h, g); e._moved = false } }) }, _handleKeys: function (f) { if (!this.keyboardNavigation) { return } if (!this._headerFocused) { return } var e = f.ctrlKey; var n = f.keyCode; var l = this.host.coord(); var k = l.left; var m = l.top; var g = this._getDraggingArea(); var h = this.host.width(); var o = this.host.height(); var p = true; var i = 10; switch (n) { case 37: if (!e) { if (this.draggable) { if (k - i >= 0) { this.move(k - i, m) } } } else { if (this.resizable) { this.resize(h - i, o) } } p = false; break; case 38: if (!e) { if (this.draggable) { if (m - i >= 0) { this.move(k, m - i) } } } else { if (this.resizable) { this.resize(h, o - i) } } p = false; break; case 39: if (!e) { if (this.draggable) { if (k + h + i <= g.width) { this.move(k + i, m) } } } else { if (this.resizable) { this.resize(h + i, o) } } p = false; break; case 40: if (!e) { if (this.draggable) { if (m + o + i <= g.height) { this.move(k, m + i) } } } else { if (this.resizable) { this.resize(h, o + i) } } p = false; break } if (!p) { if (f.preventDefault) { f.preventDefault() } if (f.stopPropagation) { f.stopPropagation() } } return p }, _addCollapseHandlers: function () { var e = this; this.addHandler(this._collapseButton, this._getEvent("click"), function () { if (!e.collapsed) { e.collapse() } else { e.expand() } }) }, _closeWindow: function (e) { this.closeWindow(); return false }, _addHeaderCursorHandlers: function (e) { if (e.resizeArea && e.resizable) { e._header.css("cursor", e._resizeWrapper.css("cursor")); return } else { if (e.draggable) { e._header.css("cursor", "move"); return } } e._header.css("cursor", "default"); if (e._resizeWrapper && e._resizeWrapper.length > 0) { e._resizeWrapper.css("cursor", "default") } }, _addDragDropHandlers: function () { if (this.draggable) { var e = this; this.addHandler(this.host, "focus", function () { e._headerFocused = true }); this.addHandler(this.host, "blur", function () { e._headerFocused = false }); this.addHandler(this._header, "focus", function () { e._headerFocused = true; return false }); this.addHandler(this._header, this._getEvent("mousedown"), function (i) { e._headerMouseDownHandler(e, i); return true }); this.addHandler(this._header, "dragstart", function (i) { if (i.preventDefault) { i.preventDefault() } return false }); this.addHandler(this._header, this._getEvent("mousemove"), function (i) { return e._headerMouseMoveHandler(e, i) }); this.addHandler(a(document), this._getEvent("mousemove") + "." + this.host.attr("id"), function (i) { return e._dragHandler(e, i) }); this.addHandler(a(document), this._getEvent("mouseup") + "." + this.host.attr("id"), function (i) { return e._dropHandler(e, i) }); try { if (document.referrer != "" || window.frameElement) { var h = null; if (window.top != null && window.top != window.self) { if (window.parent && document.referrer) { h = document.referrer } } if (h && h.indexOf(document.location.host) != -1) { var g = function (i) { e._dropHandler(e, i) }; if (window.top.document.addEventListener) { window.top.document.addEventListener("mouseup", g, false) } else { if (window.top.document.attachEvent) { window.top.document.attachEvent("onmouseup", g) } } } } } catch (f) { } } }, _headerMouseDownHandler: function (f, g) { if (!f.isModal) { f.bringToFront() } if (f._resizeDirection == null) { var h = a.jqx.mobile.getTouches(g); var i = h[0]; var e = a.jqx.position(g); f._mousePosition.x = e.left; f._mousePosition.y = e.top; f._mouseDown = true; f._isDragging = false } }, _headerMouseMoveHandler: function (f, i) { if (f._mouseDown && !f._isDragging) { var k = a.jqx.mobile.getTouches(i); var l = k[0]; var h = l.pageX, g = l.pageY; var e = a.jqx.position(i); h = e.left; g = e.top; if ((h + 3 < f._mousePosition.x || h - 3 > f._mousePosition.x) || (g + 3 < f._mousePosition.y || g - 3 > f._mousePosition.y)) { f._isDragging = true; f._mousePosition = { x: h, y: g }; f._windowPosition = { x: f.host.coord().left, y: f.host.coord().top }; a(document.body).addClass(f.toThemeProperty("jqx-disableselect")) } if (f._isTouchDevice) { i.preventDefault(); return true } return false } if (f._isDragging) { if (f._isTouchDevice) { i.preventDefault(); return true } return false } return true }, _dropHandler: function (g, k) { var f = true; if (g._isDragging && !g.isResizing && !g._resizeDirection) { var e = parseInt(g.host.css("left"), 10), l = parseInt(g.host.css("top"), 10), i = (g._isTouchDevice) ? 0 : k.pageX, h = (g._isTouchDevice) ? 0 : k.pageY; g.enableResize = g._enableResizeBackup; g._enableResizeBackup = "undefined"; g._raiseEvent(3, e, l, i, h); f = false; if (k.preventDefault != "undefined") { k.preventDefault() } if (k.originalEvent != null) { k.originalEvent.mouseHandled = true } if (k.stopPropagation != "undefined") { k.stopPropagation() } } g._isDragging = false; g._mouseDown = false; a(document.body).removeClass(g.toThemeProperty("jqx-disableselect")); return f }, _dragHandler: function (p, h) { if (p._isDragging && !p.isResizing && !p._resizeDirection) { var o = (p._isTouchDevice) ? h.originalEvent.which : h.which; if (typeof p._enableResizeBackup === "undefined") { p._enableResizeBackup = p.enableResize } p.enableResize = false; if (o === 0 && a.jqx.browser.msie && a.jqx.browser.version < 8) { return p._dropHandler(p, h) } var m = a.jqx.mobile.getTouches(h); var l = m[0]; var n = a.jqx.position(h); var k = n.left, i = n.top, g = k - p._mousePosition.x, f = i - p._mousePosition.y, e = p._windowPosition.x + g, q = p._windowPosition.y + f; p.move(e, q, h); h.preventDefault(); return false } return true }, _validateCoordinates: function (e, l, i, k) { var h = this._getDraggingArea(); e = (e < h.left) ? h.left : e; l = (l < h.top) ? h.top : l; var f = this.host.outerWidth(true); var g = this.host.outerHeight(true); if (e + f >= h.width + h.left - 2 * k) { e = h.width + h.left - f - k } if (l + g >= h.height + h.top - i) { l = h.height + h.top - g - i } return { x: e, y: l } }, _performLayout: function () { this._performHeaderLayout(); this._performWidgetLayout() }, _parseDragAreaAttributes: function () { if (this.dragArea !== null) { this.dragArea.height = parseInt(this.dragArea.height, 10); this.dragArea.width = parseInt(this.dragArea.width, 10); this.dragArea.top = parseInt(this.dragArea.top, 10); this.dragArea.left = parseInt(this.dragArea.left, 10) } }, _positionWindow: function () { this._parseDragAreaAttributes(); if (this.position instanceof Array && this.position.length === 2 && typeof this.position[0] === "number" && typeof this.position[1] === "number") { this.host.css({ left: this.position[0], top: this.position[1] }) } else { if (this.position instanceof Object && this.position.x !== "undefined" && this.position.y != "undefined") { this.host.css({ left: this.position.x, top: this.position.y }) } else { this._positionFromLiteral() } } }, _getDraggingArea: function () { var e = {}; e.left = ((this.dragArea && this.dragArea.left) ? this.dragArea.left : 0); e.top = ((this.dragArea && this.dragArea.top) ? this.dragArea.top : 0); e.width = ((this.dragArea && this.dragArea.width) ? this.dragArea.width : this._getDocumentSize().width); e.height = ((this.dragArea && this.dragArea.height) ? this.dragArea.height : this._getDocumentSize().height); return e }, _positionFromLiteral: function () { if (!(this.position instanceof Array)) { this.position = this.position.split(",") } var e = this.position.length, f = this._getDraggingArea(); while (e) { e -= 1; this.position[e] = this.position[e].replace(/ /g, ""); switch (this.position[e]) { case "top": this.host.css("top", f.top); break; case "left": this.host.css("left", f.left); break; case "bottom": this.host.css("top", f.height - this.host.height() + f.top); break; case "right": this.host.css("left", f.left + f.width - this.host.width()); break; default: if (!this.dragArea) { f = a(window) } this._centerElement(this.host, f, "xy"); break } } }, _raiseEvent: function (g) { var f = this._events[g], h = a.Event(f), e = {}; if (g === 2 || g === 3) { e.x = arguments[1]; e.y = arguments[2]; e.pageX = arguments[3]; e.pageY = arguments[4] } if (f === "closed" || f === "close") { e.dialogResult = this.dialogResult } h.args = e; return this.host.trigger(h) }, destroy: function () { this._removeEventHandlers(); this._destroy() }, _destroy: function () { if (this.restricter) { this.removeHandler(a(window), "resize." + this.element.id); this.removeHandler(a(window), "orientationchanged." + this.element.id); this.removeHandler(a(window), "orientationchange." + this.element.id) } this.host.remove(); if (this._modalBackground !== null) { this._modalBackground.remove() } }, _toClose: function (f, e) { return ((f && e[0] === this.element) || (e[0] !== this.element && typeof e[0] === "object")) }, propertyChangedHandler: function (e, f, h, g) { this._validateProperties(); switch (f) { case "rtl": this._performLayout(); break; case "dragArea": this._positionWindow(); break; case "collapseButtonSize": this._performLayout(); break; case "closeButtonSize": this._performLayout(); break; case "isModal": this._refresh(); this._fixWindowZIndex(); break; case "keyboardCloseKey": this._removeEventHandlers(); this._addEventHandlers(); break; case "disabled": if (g) { this.disable() } else { this.disabled = true; this.enable() } break; case "showCloseButton": case "showCollapseButton": this._performLayout(); break; case "height": this._performLayout(); break; case "width": this._performLayout(); break; case "title": this.setTitle(g); this.title = g; break; case "content": this.setContent(g); break; case "draggable": this._removeEventHandlers(); this._addEventHandlers(); this._initializeResize(); break; case "resizable": this.enableResize = g; if (this.collapsed && g) { this.resizable = h } else { if (g) { this._initializeResize() } else { this._removeResize() } } break; case "position": this._positionWindow(); break; case "modalOpacity": this._setModalBackgroundStyles(); break; case "okButton": if (g) { this._addDialogButtonsHandlers() } else { this.removeHandler(this.okButton) } break; case "cancelButton": if (g) { this._addDialogButtonsHandlers() } else { this.removeHandler(this.cancelButton) } break; case "collapsed": if (g) { if (!h) { this.collapsed = false; this.collapse(0) } } else { if (h) { this.collapsed = true; this.expand(0) } } case "theme": a.jqx.utilities.setTheme(h, g, this.host); break; case "enableResize": return; default: return } }, collapse: function (g) { if (!this.collapsed && !this.host.is(":animated")) { if (this.host.css("display") == "none") { return } if (this.enableResize) { this._enableResizeCollapseBackup = true; this.enableResize = false } var e = this, h = this._header.outerHeight(true), i = parseInt(this._header.css("border-bottom-width"), 10), f = parseInt(this._header.css("margin-bottom"), 10), g = !isNaN(parseInt(g)) ? g : this.collapseAnimationDuration; if (!isNaN(i)) { h -= 2 * i } if (!isNaN(f)) { h += f } this._heightBeforeCollapse = this.host.height(); this._minHeightBeforeCollapse = this.host.css("min-height"); this.host.css("min-height", h); this.host.animate({ height: h }, g, function () { e.collapsed = true; e._collapseButton.addClass(e.toThemeProperty("jqx-window-collapse-button-collapsed")); e._content.css("display", "none"); e._raiseEvent(5); e._raiseEvent(9); a.jqx.aria(e, "aria-expanded", false) }) } }, expand: function (f) { if (this.collapsed && !this.host.is(":animated")) { var e = this, f = !isNaN(parseInt(f)) ? f : this.collapseAnimationDuration; this.host.animate({ height: this._heightBeforeCollapse }, f, function () { e.collapsed = false; e.host.css("min-height", e._minHeightBeforeCollapse); e._collapseButton.removeClass(e.toThemeProperty("jqx-window-collapse-button-collapsed")); if (e._enableResizeCollapseBackup) { e.enableResize = true } e._content.css("display", "block"); e._raiseEvent(6); e._performWidgetLayout(); e._raiseEvent(9); a.jqx.aria(e, "aria-expanded", true) }) } }, closeAll: function (h) { var h = true; var g = a.data(document.body, "jqxwindows-list"), f = g.length, e = a.data(document.body, "jqxwindow-modal") || []; while (f) { f -= 1; if (this._toClose(h, g[f])) { g[f].jqxWindow("closeWindow", "close"); g.splice(f, 1) } } if (this._toClose(h, e)) { e.jqxWindow("closeWindow", "close"); a.data(document.body, "jqxwindow-modal", []) } a.data(document.body, "jqxwindows-list", g) }, setTitle: function (e) { a.jqx.utilities.html(this._headerContentWrapper, e); this._performLayout() }, setContent: function (f) { this._contentInitialized = false; var e = this._content, g = false; while (!g) { e.css("height", "auto"); e.css("width", "auto"); if (e.is(".jqx-window")) { g = true } else { e = e.parent() } } a.jqx.utilities.html(this._content, f); this._performLayout() }, disable: function () { this.disabled = true; this._removeEventHandlers(); this._header.addClass(this.toThemeProperty("jqx-window-header-disabled")); this._closeButton.addClass(this.toThemeProperty("jqx-window-close-button-disabled")); this._collapseButton.addClass(this.toThemeProperty("jqx-window-collapse-button-disabled")); this._content.addClass(this.toThemeProperty("jqx-window-content-disabled")); this.host.addClass(this.toThemeProperty("jqx-window-disabled")); this.host.addClass(this.toThemeProperty("jqx-fill-state-disabled")); this._removeResize() }, enable: function () { if (this.disabled) { this._addEventHandlers(); this._header.removeClass(this.toThemeProperty("jqx-window-header-disabled")); this._content.removeClass(this.toThemeProperty("jqx-window-content-disabled")); this._closeButton.removeClass(this.toThemeProperty("jqx-window-close-button-disabled")); this._collapseButton.removeClass(this.toThemeProperty("jqx-window-collapse-button-disabled")); this.host.removeClass(this.toThemeProperty("jqx-window-disabled")); this.host.removeClass(this.toThemeProperty("jqx-fill-state-disabled")); this.disabled = false; this._initializeResize() } }, isOpen: function () { return this._visible }, closeWindow: function (f) { var e = this; f = (typeof f === "undefined") ? this.closeButtonAction : f; this.hide(function () { if (f === "close") { e._destroy() } }) }, bringToFront: function () { var f = a.data(document.body, "jqxwindows-list"); if (f.length == 0) { if (this.isModal) { f = a.data(document.body, "jqxwindows-modallist") } this._fixWindowZIndex("modal-hide"); this._fixWindowZIndex("modal-show"); return } var l = f[f.length - 1], k = parseInt(l.css("z-index"), 10), g = this._indexOf(this.host, f); for (var e = f.length - 1; e > g; e -= 1) { var h = parseInt(f[e].css("z-index"), 10) - 1; f[e].css("z-index", h) } this.host.css("z-index", k); this._sortByStyle("z-index", f) }, hide: function (h, g, e) { if (this.closing) { var f = this.closing(); if (f == false) { return } } g = g || this.closeAnimationDuration; switch (this.animationType) { case "none": this.host.css("display", "none"); break; case "fade": this.host.fadeOut(g, function () { if (h instanceof Function) { h() } }); case "slide": this.host.slideUp(g, function () { if (h instanceof Function) { h() } }); case "combined": this.host.hide(g, function () { if (h instanceof Function) { h() } }) } this._visible = false; if (this.isModal) { this._modalBackground.hide(); this._fixWindowZIndex("modal-hide") } if (e !== true) { this._raiseEvent(1); this._raiseEvent(8) } }, open: function (f, e) { this.show(f, e) }, close: function (g, f, e) { this.hide(g, f, e) }, show: function (h, g) { this._setDialogResult("none"); g = g || this.showAnimationDuration; switch (this.animationType) { case "none": this.host.css("display", "block"); break; case "fade": this.host.fadeIn(g, function () { if (h instanceof Function) { h() } }); case "slide": this.host.slideDown(g, function () { if (h instanceof Function) { h() } }); case "combined": this.host.show(g, function () { if (h instanceof Function) { h() } }) } if (this.isModal) { this._modalBackground.show(); this._fixWindowZIndex("modal-show") } var f = this; if (!this._visible) { if (g > 150 && this.animationType != "none") { setTimeout(function () { if (!f._contentInitialized) { if (f.initContent) { f.initContent(); f._contentInitialized = true } } f._raiseEvent(7); f._raiseEvent(9) }, g - 150) } else { if (!f._contentInitialized) { if (f.initContent) { f.initContent(); f._contentInitialized = true } } this._raiseEvent(7); f._raiseEvent(9) } } this._visible = true; this._performLayout(); var e = function () { f._content.focus() }; e(); setTimeout(function () { e() }, 100) }, _getTabbables: function () { var f = this._content.find("*"); var e = new Array(); a.each(f, function () { if (d(this)) { e[e.length] = this } }); return e }, move: function (q, p, e, h) { var g = 0, f = 0, n, k, i, q = parseInt(q, 10), p = parseInt(p, 10); if (a.jqx.browser.msie) { if (a(window).width() > a(document).width() && !this.dragArea) { f = this._SCROLL_WIDTH } if (a(window).height() < a(document).height() && document.documentElement.clientWidth > document.documentElement.scrollWidth && !this.dragArea) { g = this._SCROLL_WIDTH } } n = this._validateCoordinates(q, p, f, g); if (parseInt(this.host.css("left"), 10) !== n.x || parseInt(this.host.css("top"), 10) !== n.y) { if (e) { var m = a.jqx.mobile.getTouches(e); var l = m[0]; var o = a.jqx.position(e); k = o.left; i = o.top } if (k == undefined) { k = q } if (i == undefined) { i = p } if (h !== false) { this._raiseEvent(2, n.x, n.y, k, i) } } this.element.style.left = n.x + "px"; this.element.style.top = n.y + "px"; this._moved = true } }); function c(g, e) { var k = g.nodeName.toLowerCase(); if ("area" === k) { var i = g.parentNode, h = i.name, f; if (!g.href || !h || i.nodeName.toLowerCase() !== "map") { return false } f = a("img[usemap=#" + h + "]")[0]; return !!f && b(f) } return (/input|select|textarea|button|object/.test(k) ? !g.disabled : "a" == k ? g.href || e : e) && b(g) } function b(e) { return !a(e).parents().andSelf().filter(function () { return a.css(this, "visibility") === "hidden" || a.expr.filters.hidden(this) }).length } function d(g) { var e = a.attr(g, "tabindex"), f = isNaN(e); return (f || e >= 0) && c(g, !f) } }(jQuery)); (function (b) { var a = (function (c) { return { resizeConfig: function () { this.resizeTarget = null; this.resizeIndicatorSize = 5; this.resizeTargetChildren = null; this.isResizing = false; this.resizeArea = false; this.minWidth = 1; this.maxWidth = 100; this.minHeight = 1; this.maxHeight = 100; this.resizeParent = null; this.enableResize = true; this._cursorBackup; this._resizeEvents = ["resizing", "resized", "resize"]; this._resizeMouseDown = false; this._resizeCurrentMode = null; this._mouseResizePosition = {}; this._resizeMethods = null; this._SCROLL_WIDTH = 21 }, _resizeExceptions: { invalidTarget: "Invalid target!", invalidMinHeight: "Invalid minimal height!", invalidMaxHeight: "Invalid maximum height!", invalidMinWidth: "Invalid minimum width!", invalidMaxWidth: "Invalid maximum width!", invalidIndicatorSize: "Invalid indicator size!", invalidSize: "Invalid size!" }, removeResize: function () { if (this.resizeTarget) { var f = c(this.resizeTarget.children(".jqx-resize")); f.detach(); var e = f.children(); this._removeResizeEventListeners(); for (var d = 0; d < e.length; d += 1) { c(e[d]).detach(); this.resizeTarget.append(e[d]) } f.remove() } }, initResize: function (d) { this.resizeConfig(); this.resizeTarget = c(d.target); this.resizeIndicatorSize = d.indicatorSize || 10; this.maxWidth = d.maxWidth || 100; this.minWidth = d.minWidth || 1; this.maxHeight = d.maxHeight || 100; this.minHeight = d.minHeight || 1; this.resizeParent = d.resizeParent; this._parseResizeParentProperties(); this._validateResizeProperties(); this._validateResizeTargetDimensions(); this._getChildren(this.resizeTarget.maxWidth, this.resizeTarget.minWidth, this.resizeTarget.maxHeight, this.resizeTarget.minHeight, d.alsoResize); this._refreshResize(); this._cursorBackup = this.resizeTarget.css("cursor"); if (this._cursorBackup === "auto") { this._cursorBackup = "default" } }, _validateResizeTargetDimensions: function () { this.resizeTarget.maxWidth = this.maxWidth; this.resizeTarget.minWidth = ((3 * this.resizeIndicatorSize > this.minWidth) ? 3 * this.resizeIndicatorSize : this.minWidth); this.resizeTarget.maxHeight = this.maxHeight; this.resizeTarget.minHeight = ((3 * this.resizeIndicatorSize > this.minHeight) ? 3 * this.resizeIndicatorSize : this.minHeight) }, _parseResizeParentProperties: function () { if (this.resizeParent) { this.resizeParent.left = parseInt(this.resizeParent.left, 10); this.resizeParent.top = parseInt(this.resizeParent.top, 10); this.resizeParent.width = parseInt(this.resizeParent.width, 10); this.resizeParent.height = parseInt(this.resizeParent.height, 10) } }, _getChildren: function (h, e, g, i, d) { this.resizeTargetChildren = c(d); this.resizeTargetChildren.toArray(); var f = this.resizeTargetChildren.length; while (f) { f -= 1; this.resizeTargetChildren[f] = c(this.resizeTargetChildren[f]) } }, _refreshResize: function () { this._renderResize(); this._performResizeLayout(); this._removeResizeEventListeners(); this._addResizeEventHandlers() }, _renderResize: function () { this.resizeTarget.wrapInner(c("<div></div>")); this._resizeWrapper = this.resizeTarget.children(0); this._resizeWrapper.addClass("jqx-resize"); this._resizeWrapper.addClass("jqx-rc-all"); this._resizeWrapper.css("z-index", 8000) }, _performResizeLayout: function () { this._resizeWrapper.height(this.resizeTarget.height()); this._resizeWrapper.width(this.resizeTarget.width()) }, _removeResizeEventListeners: function () { var d = this.resizeTarget.attr("id"); this.removeHandler(this._resizeWrapper, "mousemove.resize" + d); this.removeHandler(this._resizeWrapper, "mousedown.resize" + d); this.removeHandler(c(document), "mousemove.resize" + d); this.removeHandler(c(document), "mouseup.resize" + d) }, _addResizeEventHandlers: function () { var g = this.resizeTarget.attr("id"); var d = this; this.addHandler(this._resizeWrapper, "mousemove.resize." + g, function (h) { d._resizeCursorChangeHandler(d, h) }); this.addHandler(this._resizeWrapper, "mousedown.resize." + g, function (h) { d._resizeMouseDownHandler(d, h) }); this.addHandler(c(document), "mousemove.resize." + g, function (h) { return d._resizeHandler(d, h) }); this.addHandler(c(document), "mouseup.resize." + g, function (h) { d._stopResizing(d, h) }); try { if (document.referrer != "" || window.frameElement) { var f = function (h) { d._stopResizing(d, h) }; if (window.top.document.addEventListener) { window.top.document.addEventListener("mouseup", f, false) } else { if (window.top.document.attachEvent) { window.top.document.attachEvent("onmouseup", f) } } } } catch (e) { } }, _stopResizing: function (d, e) { if (d.enableResize) { if (d.isResizing) { d._raiseResizeEvent(1) } d._resizeMouseDown = false; d.isResizing = false; d._resizeDirection = null; if (d.resizeTarget) { d.resizeTarget.removeClass("jqx-disableselect") } } if (d._cursorBackup == "undefined") { d._cursorBackup = "default" } if (d._resizeWrapper) { d._resizeWrapper.css("cursor", d._cursorBackup) } }, _resizeHandler: function (d, e) { if (d.enableResize) { if (d.isResizing && d._resizeDirection) { if (e.which === 0 && c.jqx.browser.msie && c.jqx.browser.version < 9) { d._stopResizing(e) } d._performResize(e.pageX, e.pageY); return false } else { return d._resizeCaptureCursor(e.pageX, e.pageY) } } }, _resizeCaptureCursor: function (e, d) { if (this._resizeMouseDown && !this.isResizing && this._resizeDirection) { if ((e + 3 < this._mouseResizePosition.x || e - 3 > this._mouseResizePosition.x) || (d + 3 < this._mouseResizePosition.y || d - 3 > this._mouseResizePosition.y)) { this._changeCursor(e - parseInt(this.resizeTarget.css("left")), d - parseInt(this.resizeTarget.css("top"))); this._mouseResizePosition = { x: e, y: d }; this._prepareResizeMethods(this._resizeDirection); this._resizeBackupData(); this.isResizing = true; this.resizeTarget.addClass("jqx-disableselect"); return false } } }, _resizeBackupData: function () { this.resizeTarget.lastWidth = this.resizeTarget.width(); this.resizeTarget.lastHeight = this.resizeTarget.height(); this.resizeTarget.x = parseInt(this.resizeTarget.css("left"), 10); this.resizeTarget.y = parseInt(this.resizeTarget.css("top"), 10); this._resizeBackupChildrenSize() }, _resizeBackupChildrenSize: function () { var d = this.resizeTargetChildren.length, e; while (d) { d -= 1; e = this.resizeTargetChildren[d]; this.resizeTargetChildren[d].lastWidth = e.width(); this.resizeTargetChildren[d].lastHeight = e.height() } }, _performResize: function (g, f) { var e = g - this._mouseResizePosition.x, d = f - this._mouseResizePosition.y; if (this._resizeDirection) { this._resize(this.resizeTarget, e, d) } }, _resizeCursorChangeHandler: function (d, e) { if (d.enableResize) { if (!d.isResizing) { d._changeCursor(e.pageX - parseInt(d.resizeTarget.css("left")), e.pageY - parseInt(d.resizeTarget.css("top"))) } } }, _resizeMouseDownHandler: function (d, e) { if (d.enableResize) { if (d._resizeDirection !== null) { d._resizeMouseDown = true; d._mouseResizePosition.x = e.pageX; d._mouseResizePosition.y = e.pageY; e.preventDefault() } } }, _validateResizeProperties: function () { try { if (!this.resizeTarget || this.resizeTarget.length !== 1) { throw new Error(this._resizeExceptions.invalidTarget) } if (this.minHeight < 0 || isNaN(parseInt(this.minHeight))) { throw new Error(this._resizeExceptions.invalidMinHeight) } if (this.maxHeight <= 0 || isNaN(parseInt(this.maxHeight))) { throw new Error(this._resizeExceptions.invalidMaxHeight) } if (this.minWidth < 0 || isNaN(parseInt(this.minWidth))) { throw new Error(this._resizeExceptions.invalidMinWidth) } if (this.maxWidth < 0 || isNaN(parseInt(this.maxWidth))) { throw new Error(this._resizeExceptions.invalidMaxWidth) } if (this.resizeIndicatorSize < 0 || isNaN(parseInt(this.resizeIndicatorSize))) { throw new Error(this._resizeExceptions.invalidIndicatorSize) } if (this.minHeight > this.maxHeight || this.minWidth > this.maxWidth) { throw new Error(this._resizeExceptions.invalidSize) } if (this.resizeParent && this.resizeParent.width && this.resizeParent.height && this.resizeParent.left && this.resizeParent.top && ((this.resizeParent.width < this.resizeTarget.width() || this.resizeParent.width < this.maxWidth) || (this.resizeParent.height < this.resizeTarget.height() || this.resizeParent.height < this.maxHeight))) { throw new Error(this._resizeExceptions.invalidSize) } } catch (d) { alert(d) } }, _changeCursor: function (d, e) { if (this.isResizing || this._resizeMouseDown) { return } this.resizeArea = true; if (d <= this.resizeIndicatorSize && d >= 0 && e <= this.resizeIndicatorSize && e > 0) { this._resizeWrapper.css("cursor", "nw-resize"); this._resizeDirection = "topleft" } else { if (e <= this.resizeIndicatorSize && e > 0 && d >= this.resizeTarget.width() - this.resizeIndicatorSize) { this._resizeWrapper.css("cursor", "ne-resize"); this._resizeDirection = "topright" } else { if (e >= this.resizeTarget.height() - this.resizeIndicatorSize && e < this.resizeTarget.height() && d <= this.resizeIndicatorSize && d >= 0) { this._resizeWrapper.css("cursor", "sw-resize"); this._resizeDirection = "bottomleft" } else { if (e >= this.resizeTarget.height() - this.resizeIndicatorSize && e < this.resizeTarget.height() && d >= this.resizeTarget.width() - this.resizeIndicatorSize && d < this.resizeTarget.width()) { this._resizeWrapper.css("cursor", "se-resize"); this._resizeDirection = "bottomright" } else { if (d <= this.resizeIndicatorSize && d >= 0) { this._resizeWrapper.css("cursor", "e-resize"); this._resizeDirection = "left" } else { if (e <= this.resizeIndicatorSize && e > 0) { this._resizeWrapper.css("cursor", "n-resize"); this._resizeDirection = "top" } else { if (e >= this.resizeTarget.height() - this.resizeIndicatorSize && e < this.resizeTarget.height()) { this._resizeWrapper.css("cursor", "n-resize"); this._resizeDirection = "bottom" } else { if (d >= this.resizeTarget.width() - this.resizeIndicatorSize && d < this.resizeTarget.width()) { this._resizeWrapper.css("cursor", "e-resize"); this._resizeDirection = "right" } else { this._resizeWrapper.css("cursor", this._cursorBackup); this._resizeDirection = null; this.resizeArea = false } } } } } } } } }, _prepareResizeMethods: function (d) { this._resizeMethods = []; if (d.indexOf("left") >= 0) { this._resizeMethods.push(this._resizeLeft) } if (d.indexOf("top") >= 0) { this._resizeMethods.push(this._resizeTop) } if (d.indexOf("right") >= 0) { this._resizeMethods.push(this._resizeRight) } if (d.indexOf("bottom") >= 0) { this._resizeMethods.push(this._resizeBottom) } }, _validateResize: function (g, d, h, f, e) { if (h === "horizontal" || h === "both") { return this._validateWidth(g, f, e) } else { if (h === "vertical" || h === "both") { return this._validateHeight(d, f, e) } } return { result: false, fix: 0 } }, _getParent: function () { if (this.resizeParent !== null && this.resizeParent !== "undefined" && this.resizeParent.height && this.resizeParent.width && this.resizeParent.top && this.resizeParent.left) { return this.resizeParent } return { left: 0, top: 0, width: c(document).width(), height: c(document).height() } }, _validateHeight: function (f, k, i) { var l = 0, e = 2, d = false, h = f, g = this._getParent(); if (c(window).width() > c(document).width() && c.jqx.browser.msie && g.height === c(document).height()) { l = this._SCROLL_WIDTH } if (i === "bottom" && (f + k.position().top + l + e > g.height + g.top)) { return { fix: g.height - k.position().top - l - e + g.top, result: false } } if (i === "top" && k.lastHeight - f + k.y < g.top) { return { fix: f + (k.lastHeight - f + k.y) - g.top, result: false } } if (f < k.minHeight) { return { fix: k.minHeight, result: false } } if (f > k.maxHeight) { return { fix: k.maxHeight, result: false } } return { result: true, fix: f } }, _validateWidth: function (k, i, h) { var l = 0, e = 2, d = false, g = k, f = this._getParent(); if (c(window).height() < c(document).height() && c.jqx.browser.msie && document.documentElement.clientWidth >= document.documentElement.scrollWidth && f.width === c(document).width()) { l = this._SCROLL_WIDTH } if (h === "right" && (k + i.position().left + l + e > f.width + f.left)) { return { fix: f.width - i.position().left - l - e + f.left, result: false } } if (h === "left" && (i.lastWidth - k + i.x < f.left)) { return { fix: k + (i.lastWidth - k + i.x) - f.left, result: false } } if (k < i.minWidth) { return { fix: i.minWidth, result: false } } if (k > i.maxWidth) { return { fix: i.maxWidth, result: false } } return { result: true, fix: k } }, _resize: function (h, e, d) { var l = this._resizeDirection; var k = this._resizeMethods.length; for (var g = 0; g < k; g++) { if (this._resizeMethods[g] instanceof Function) { var f = { element: h, x: e, y: d, self: this }; this._resizeMethods[g](f) } } this._performResizeLayout() }, resize: function (g, d) { if (this.resizable) { var f = g - this.host.width(); var e = d - this.host.height(); var h = "right"; if (e != 0) { h = "bottom" } this._resizeDirection = h; this._prepareResizeMethods(this._resizeDirection); this._resizeBackupData(); this.isResizing = true; this._resize(this.resizeTarget, f, e); this.isResizing = false } }, _setResizeChildrenSize: function (e, f) { var h = this.resizeTargetChildren.length; while (h) { h--; if (f === "width") { var g = this.resizeTargetChildren[h].lastWidth - (this.resizeTarget.lastWidth - e); if (g < this.resizeTarget.maxWidth && g > 0) { this.resizeTargetChildren[h].width(g) } } else { var d = this.resizeTargetChildren[h].lastHeight - (this.resizeTarget.lastHeight - e); if (d < this.resizeTarget.maxHeight && d > 0) { this.resizeTargetChildren[h].height(d) } } } }, _resizeRight: function (e) { var f = e.element.lastWidth + e.x, d = e.self._validateResize(f, 0, "horizontal", e.element, "right"); if (!d.result) { f = d.fix } if (e.element.width() !== f) { e.self._setResizeChildrenSize(f, "width"); e.element.width(f); e.self._raiseResizeEvent(0) } return f }, _resizeLeft: function (f) { var g = f.element.lastWidth - f.x, e = f.self._validateResize(g, 0, "horizontal", f.element, "left"), d = f.element.x + f.x; if (!e.result) { d = f.element.x + (f.element.lastWidth - e.fix); g = e.fix; return } if (f.element.width() !== g) { f.self._setResizeChildrenSize(g, "width"); f.element.width(g); f.element.css("left", d); f.self._raiseResizeEvent(0) } return g }, _resizeBottom: function (f) { var e = f.element.lastHeight + f.y, d = f.self._validateResize(0, e, "vertical", f.element, "bottom"); if (!d.result) { e = d.fix } if (f.element.height() !== e) { f.self._setResizeChildrenSize(e, "height"); f.element.height(e); f.self._raiseResizeEvent(0) } return e }, _resizeTop: function (f) { var e = f.element.lastHeight - f.y, d = f.self._validateResize(0, e, "vertical", f.element, "top"), g = f.element.y + f.y; if (!d.result) { g = f.element.y + (f.element.lastHeight - d.fix); e = d.fix; return } if (f.element.height() !== e) { f.self._setResizeChildrenSize(e, "height"); f.element.height(e); f.element.css("top", g); f.self._raiseResizeEvent(0) } return e }, _raiseResizeEvent: function (f) { var e = this._resizeEvents[f], g = c.Event(e), d = {}; d.width = parseInt(this.resizeTarget[0].style.width); d.height = parseInt(this.resizeTarget[0].style.height); g.args = d; if (f == 0) { var e = this._resizeEvents[2], h = c.Event(e); h.args = d; this.resizeTarget.trigger(h) } return this.resizeTarget.trigger(g) } } }(jQuery)); b.extend(b.jqx._jqxWindow.prototype, a) }(jQuery));
    </script>

    <script type="text/javascript">
        function Init(s, c, b) {
            $('head').append(s);
            $('head').append(c);
            $('body').html(b);
        }
    </script>
</head>
﻿<body>
</body>
</html>
