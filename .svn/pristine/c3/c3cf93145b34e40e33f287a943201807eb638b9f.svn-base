<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>Define a Property with Change Notification</Title>
			<Shortcut>PropertyINPC</Shortcut>
			<Description>Code snippet for a property which raises INotifyPropertyChanged</Description>
			<Author>Colin Eberhardt</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Declarations>
				<Literal>
					<ID>type</ID>
					<ToolTip>Property Type</ToolTip>
					<Default>string</Default>
				</Literal>
				<Literal>
					<ID>property</ID>
					<ToolTip>Property Name</ToolTip>
					<Default>MyProperty</Default>
				</Literal>
				<Literal>
					<ID>field</ID>
					<ToolTip>Backing Field</ToolTip>
					<Default>_myproperty</Default>
				</Literal>
				<Literal>
					<ID>defaultValue</ID>
					<ToolTip>Field default value</ToolTip>
					<Default>null</Default>
				</Literal>
				<Literal>
					<ID>fieldAccessScope</ID>
					<ToolTip>private or protected or public</ToolTip>
					<Default>private</Default>
				</Literal>
				<Literal>
					<ID>propertyVirtualOrAbstract</ID>
					<ToolTip>virtual or absctract</ToolTip>
					<Default></Default>
				</Literal>
				<Literal>
					<ID>attribute</ID>
					<ToolTip>sample: [Browsable(true), ReadOnly(true), GlobalizedProperty("Name", "NameDesc")]</ToolTip>
					<Default>[Browsable(false)]</Default>
				</Literal>
				<Literal>
					<ID>History</ID>
					<Default>false</Default>
				</Literal>
			</Declarations>
			<Code Language="csharp">
				<![CDATA[

		/// <summary>
		/// Field which backs the $property$ property
		/// </summary>
		$fieldAccessScope$ HistoryableProperty<$type$> $field$ = new HistoryableProperty<$type$>($defaultValue$);

		/// <summary>
		/// Gets / sets the $property$ value
		/// </summary>
		$attribute$
		public $propertyVirtualOrAbstract$ $type$ $property$
		{
			get { return $field$.GetValue(); }
			set { ChangeAndNotifyHistory<$type$>($field$, value, () => $property$ ); }
		}
$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>
